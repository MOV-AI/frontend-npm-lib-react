{"version":3,"sources":["webpack://MovaiReact/webpack/universalModuleDefinition","webpack://MovaiReact/webpack/bootstrap","webpack://MovaiReact/external \"react\"","webpack://MovaiReact/external \"@babel/runtime/helpers/esm/defineProperty\"","webpack://MovaiReact/external \"@babylonjs/core\"","webpack://MovaiReact/external \"@babel/runtime/helpers/esm/assertThisInitialized\"","webpack://MovaiReact/external \"prop-types\"","webpack://MovaiReact/external \"@babel/runtime/helpers/esm/getPrototypeOf\"","webpack://MovaiReact/external \"@babel/runtime/helpers/esm/classCallCheck\"","webpack://MovaiReact/external \"@babel/runtime/helpers/esm/createClass\"","webpack://MovaiReact/external \"monet\"","webpack://MovaiReact/external \"@babel/runtime/helpers/esm/extends\"","webpack://MovaiReact/external \"@babel/runtime/helpers/esm/possibleConstructorReturn\"","webpack://MovaiReact/external \"@babel/runtime/helpers/esm/inherits\"","webpack://MovaiReact/external \"@babel/runtime/helpers/esm/get\"","webpack://MovaiReact/external \"mov-fe-lib-core\"","webpack://MovaiReact/external \"@babel/runtime/helpers/esm/toConsumableArray\"","webpack://MovaiReact/external \"@babel/runtime/helpers/esm/classPrivateFieldGet\"","webpack://MovaiReact/external \"@material-ui/core/styles\"","webpack://MovaiReact/external \"@babel/runtime/helpers/esm/slicedToArray\"","webpack://MovaiReact/external \"@babel/runtime/regenerator\"","webpack://MovaiReact/external \"@material-ui/core\"","webpack://MovaiReact/external \"@babel/runtime/helpers/esm/asyncToGenerator\"","webpack://MovaiReact/external \"@material-ui/core/MenuItem\"","webpack://MovaiReact/external \"@babel/runtime/helpers/esm/objectWithoutProperties\"","webpack://MovaiReact/external \"@material-ui/core/IconButton\"","webpack://MovaiReact/external \"@material-ui/core/Typography\"","webpack://MovaiReact/external \"@material-ui/core/FormControl\"","webpack://MovaiReact/external \"lodash/get\"","webpack://MovaiReact/external \"react-dom\"","webpack://MovaiReact/external \"@material-ui/core/Input\"","webpack://MovaiReact/external \"@material-ui/core/Menu\"","webpack://MovaiReact/external \"@material-ui/icons/Search\"","webpack://MovaiReact/external \"@babylonjs/gui/2D\"","webpack://MovaiReact/external \"@material-ui/core/Select\"","webpack://MovaiReact/external \"clsx\"","webpack://MovaiReact/external \"@material-ui/core/Grid\"","webpack://MovaiReact/external \"@material-ui/icons/ChevronRight\"","webpack://MovaiReact/external \"@material-ui/core/InputLabel\"","webpack://MovaiReact/external \"@material-ui/core/Button\"","webpack://MovaiReact/external \"react-resize-detector\"","webpack://MovaiReact/external \"@material-ui/icons/Settings\"","webpack://MovaiReact/external \"lodash/isEqual\"","webpack://MovaiReact/external \"@material-ui/core/colors\"","webpack://MovaiReact/external \"@material-ui/core/InputAdornment\"","webpack://MovaiReact/external \"@material-ui/core/ListItemText\"","webpack://MovaiReact/external \"@material-ui/core/Checkbox\"","webpack://MovaiReact/external \"@material-ui/pickers\"","webpack://MovaiReact/external \"react-virtualized\"","webpack://MovaiReact/external \"@material-ui/icons/Clear\"","webpack://MovaiReact/external \"lodash/capitalize\"","webpack://MovaiReact/external \"@material-ui/core/TableCell\"","webpack://MovaiReact/external \"@material-ui/core/FormHelperText\"","webpack://MovaiReact/external \"@material-ui/core/Divider\"","webpack://MovaiReact/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://MovaiReact/./node_modules/css-loader/dist/runtime/api.js","webpack://MovaiReact/external \"@material-ui/core/Drawer\"","webpack://MovaiReact/external \"@material-ui/icons/ExpandMore\"","webpack://MovaiReact/external \"@material-ui/core/Collapse\"","webpack://MovaiReact/external \"material-table\"","webpack://MovaiReact/external \"@material-ui/icons/AddBox\"","webpack://MovaiReact/external \"@material-ui/icons/ArrowDownward\"","webpack://MovaiReact/external \"@material-ui/icons/Check\"","webpack://MovaiReact/external \"@material-ui/icons/ChevronLeft\"","webpack://MovaiReact/external \"@material-ui/icons/DeleteOutline\"","webpack://MovaiReact/external \"@material-ui/icons/Edit\"","webpack://MovaiReact/external \"@material-ui/icons/FilterList\"","webpack://MovaiReact/external \"@material-ui/icons/FirstPage\"","webpack://MovaiReact/external \"@material-ui/icons/LastPage\"","webpack://MovaiReact/external \"@material-ui/icons/Remove\"","webpack://MovaiReact/external \"@material-ui/icons/SaveAlt\"","webpack://MovaiReact/external \"@material-ui/icons/ViewColumn\"","webpack://MovaiReact/external \"@material-ui/core/Tabs\"","webpack://MovaiReact/external \"@material-ui/core/Tab\"","webpack://MovaiReact/external \"@material-ui/core/TextField\"","webpack://MovaiReact/external \"@material-ui/core/FormControlLabel\"","webpack://MovaiReact/external \"@material-ui/core/Switch\"","webpack://MovaiReact/external \"@material-ui/core/InputBase\"","webpack://MovaiReact/external \"@material-ui/core/Breadcrumbs\"","webpack://MovaiReact/external \"@material-ui/icons/NavigateNext\"","webpack://MovaiReact/external \"earcut\"","webpack://MovaiReact/external \"lodash\"","webpack://MovaiReact/external \"@babylonjs/core/Maths/math\"","webpack://MovaiReact/external \"lodash.isequal\"","webpack://MovaiReact/external \"@material-ui/core/utils\"","webpack://MovaiReact/external \"@babel/runtime/helpers/esm/taggedTemplateLiteral\"","webpack://MovaiReact/external \"styled-components\"","webpack://MovaiReact/external \"@material-ui/icons/Close\"","webpack://MovaiReact/external \"@material-ui/core/styles/colorManipulator\"","webpack://MovaiReact/external \"@material-ui/icons/Label\"","webpack://MovaiReact/external \"@material-ui/core/Chip\"","webpack://MovaiReact/external \"@material-ui/icons/Add\"","webpack://MovaiReact/external \"@material-ui/icons/Today\"","webpack://MovaiReact/external \"@date-io/date-fns\"","webpack://MovaiReact/external \"@babel/runtime/helpers/esm/typeof\"","webpack://MovaiReact/external \"lodash/isEmpty\"","webpack://MovaiReact/./src/Components/LoginForm/movai_red.svg","webpack://MovaiReact/external \"@material-ui/core/Paper\"","webpack://MovaiReact/external \"@babylonjs/core/Debug/debugLayer\"","webpack://MovaiReact/external \"@babylonjs/inspector\"","webpack://MovaiReact/external \"@babylonjs/loaders\"","webpack://MovaiReact/./src/Components/Snackbar/Snackbar.css?c276","webpack://MovaiReact/./src/Components/Snackbar/Snackbar.css","webpack://MovaiReact/external \"fontsource-roboto\"","webpack://MovaiReact/external \"fontsource-open-sans\"","webpack://MovaiReact/./src/Components/Logs/Logs.css?4c9f","webpack://MovaiReact/./src/Components/Logs/Logs.css","webpack://MovaiReact/./src/Components/Button.js","webpack://MovaiReact/./src/Components/Modal/AbstractModal.js","webpack://MovaiReact/./src/Components/Modal/ConfirmAlertModal.js","webpack://MovaiReact/./src/Components/Drawer.js","webpack://MovaiReact/./src/Components/Collapse.js","webpack://MovaiReact/./src/Components/VerticalBar.js","webpack://MovaiReact/./src/Components/ContextMenu.js","webpack://MovaiReact/./src/Components/Table.js","webpack://MovaiReact/./src/Components/Tabs.js","webpack://MovaiReact/./src/Components/Text.js","webpack://MovaiReact/./src/Components/Toggle.js","webpack://MovaiReact/./src/Components/SearchInput.js","webpack://MovaiReact/./src/Components/Breadcrumb.js","webpack://MovaiReact/./src/Components/Viewer/BaseViewer/BaseViewer.js","webpack://MovaiReact/./src/Components/Viewer/Utils/Clipboard.js","webpack://MovaiReact/./src/Components/Viewer/Math/Vec2.js","webpack://MovaiReact/./src/Components/Viewer/Math/Vec3.js","webpack://MovaiReact/./src/Components/Viewer/Utils/AnnotationManager.js","webpack://MovaiReact/./src/Components/Viewer/NodeItem/NodeItem.js","webpack://MovaiReact/./src/Components/Viewer/Math/Mat3.js","webpack://MovaiReact/./src/Components/Viewer/Util3d/GizmoManagerBuilder.js","webpack://MovaiReact/./src/Components/Viewer/Util3d/CameraBuilder.js","webpack://MovaiReact/./src/Components/Viewer/Util3d/PositionalLightBuilder.js","webpack://MovaiReact/./src/Components/Viewer/Util3d/ReferentialBuilder.js","webpack://MovaiReact/./src/Components/Viewer/Util3d/GroundBuilder.js","webpack://MovaiReact/./src/Components/Viewer/Util3d/DirectionalLightBuilder.js","webpack://MovaiReact/./src/Components/Viewer/NodeItem/Box.js","webpack://MovaiReact/./src/Components/Viewer/Util3d/Util3d.js","webpack://MovaiReact/./src/Components/Viewer/NodeItem/GlobalRef.js","webpack://MovaiReact/./src/Components/Viewer/Actions/Action.js","webpack://MovaiReact/./src/Components/Viewer/NodeItem/AssetNodeItem.js","webpack://MovaiReact/./src/Components/Viewer/NodeItem/Map.js","webpack://MovaiReact/./src/Components/Viewer/Utils/DefaultScene.js","webpack://MovaiReact/./src/Components/Viewer/Actions/MouseKeysAction.js","webpack://MovaiReact/./src/Components/Viewer/Utils/Utils.js","webpack://MovaiReact/./src/Components/Viewer/NodeItem/KeyPoint.js","webpack://MovaiReact/./src/Components/Viewer/MainView/MeshSelector.js","webpack://MovaiReact/./src/Components/Viewer/Util3d/SelectionPlaceHolder.js","webpack://MovaiReact/./src/Components/Viewer/TreeObject/TreeObject.js","webpack://MovaiReact/./src/Components/Viewer/Utils/Constants.js","webpack://MovaiReact/./src/Components/Viewer/Graph/Graph.js","webpack://MovaiReact/./src/Components/Viewer/NodeItem/Path.js","webpack://MovaiReact/./src/Components/Viewer/NodeItem/GraphItem.js","webpack://MovaiReact/./src/Components/Viewer/Actions/DragObjectsAction.js","webpack://MovaiReact/./src/Components/Viewer/Actions/AddKeyPointAction.js","webpack://MovaiReact/./src/Components/Viewer/NodeItem/BoxRegion.js","webpack://MovaiReact/./src/Components/Viewer/Actions/BoxRegionAction.js","webpack://MovaiReact/./src/Components/Viewer/Actions/DrawPathAction.js","webpack://MovaiReact/./src/Components/Viewer/NodeItem/PolygonRegion.js","webpack://MovaiReact/./src/Components/Viewer/Actions/PolygonRegionAction.js","webpack://MovaiReact/./src/Components/Viewer/Actions/OrbitAction.js","webpack://MovaiReact/./src/Components/Viewer/Actions/DrawGraphAction.js","webpack://MovaiReact/./src/Components/Viewer/Actions/MeasureAction.js","webpack://MovaiReact/./src/Components/Viewer/MainView/MainViewActions.js","webpack://MovaiReact/./src/Components/Viewer/AssetsManager/MapLoader.js","webpack://MovaiReact/./src/Components/Viewer/AssetsManager/AssetsManager.js","webpack://MovaiReact/./src/Components/Viewer/Actions/AddMapAction.js","webpack://MovaiReact/./src/Components/Viewer/NodeItem/Robot.js","webpack://MovaiReact/./src/Components/Viewer/NodeItem/PointCloud.js","webpack://MovaiReact/./src/Components/Viewer/Utils/MeshCache.js","webpack://MovaiReact/./src/Components/Viewer/Utils/MeshLoader.js","webpack://MovaiReact/./src/Components/Viewer/Actions/RobotAction.js","webpack://MovaiReact/./src/Components/Viewer/NodeItem/Mesh.js","webpack://MovaiReact/./src/Components/Viewer/Actions/AddMeshAction.js","webpack://MovaiReact/./src/Components/Viewer/Utils/AssetsTypesFactory.js","webpack://MovaiReact/./src/Components/Viewer/NodeItem/Wall.js","webpack://MovaiReact/./src/Components/Viewer/MainView/NodeItemFactoryMap.js","webpack://MovaiReact/./src/Components/Viewer/MainView/MainViewRetriever.js","webpack://MovaiReact/./src/Components/Viewer/Utils/SceneServerUtils.js","webpack://MovaiReact/./src/Components/Viewer/TreeObject/TreeNode.js","webpack://MovaiReact/./src/Components/Viewer/Utils/TreeServerUtils.js","webpack://MovaiReact/./src/Components/Viewer/Utils/Animator.js","webpack://MovaiReact/./src/Components/Viewer/Utils/DefaultMouseEvents.js","webpack://MovaiReact/./src/Components/Viewer/SceneViewer.js","webpack://MovaiReact/./src/Components/Select.js","webpack://MovaiReact/./src/Components/Snackbar/Alert/svg-icons/CreateSVGIcon.js","webpack://MovaiReact/./src/Components/Snackbar/Alert/svg-icons/svgIcons.js","webpack://MovaiReact/./src/Components/Snackbar/Alert/Alert.js","webpack://MovaiReact/./src/Components/Snackbar/Snackbar.js","webpack://MovaiReact/./src/styles/Themes.js","webpack://MovaiReact/./src/styles/Style.js","webpack://MovaiReact/./src/Components/Logs/LogsFilterBar/FiltersIcon/FiltersIcon.js","webpack://MovaiReact/./src/Components/Logs/LogsFilterBar/LogsFilterBar.js","webpack://MovaiReact/./src/Components/Logs/utils/Utils.js","webpack://MovaiReact/./src/Components/Logs/LogsTable/LogsTable.js","webpack://MovaiReact/./src/Components/Logs/Logs.js","webpack://MovaiReact/./src/Components/LoginForm/LoginForm.js","webpack://MovaiReact/./src/Components/ProfileMenu.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","memo","isOldIE","Boolean","document","all","atob","getTarget","target","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","e","stylesInDom","getIndexByIdentifier","identifier","result","length","modulesToDom","list","options","idCountMap","identifiers","item","id","base","count","concat","index","obj","css","media","sourceMap","references","updater","push","addStyle","insertStyleElement","style","createElement","attributes","nonce","keys","forEach","setAttribute","insert","Error","appendChild","textStore","replaceText","replacement","filter","join","applyToSingletonTag","remove","styleSheet","cssText","cssNode","createTextNode","childNodes","removeChild","insertBefore","applyToTag","removeAttribute","btoa","unescape","encodeURIComponent","JSON","stringify","firstChild","singleton","singletonCounter","update","styleIndex","parentNode","removeStyleElement","newObj","lastIdentifiers","newList","toString","newLastIdentifiers","_i","_index","splice","useSourceMap","this","map","content","cssMapping","sourceMapping","base64","data","sourceURLs","sources","source","sourceRoot","cssWithMappingToString","mediaQuery","dedupe","alreadyImportedModules","api","default","locals","___CSS_LOADER_API_IMPORT___","Button","props","className","onClick","color","variant","size","startIcon","disabled","children","propTypes","PropTypes","func","string","isRequired","element","node","bool","defaultProps","console","log","undefined","margin","position","overflow","display","flexDirection","AbstractModal","submit","onSubmit","cancel","onCancel","onKeyPress","open","onClose","alignItems","justifyContent","width","height","minWidth","minHeight","flexGrow","padding","fontWeight","title","paddingLeft","alignSelf","cancelColor","cancelText","submitColor","submitText","ConfirmAlertModal","message","Drawer","anchor","ANCHOR","left","right","top","bottom","Collapse","React","useState","setOpen","useEffect","clickLambda","button","iconStyle","divided","in","useStyles","makeStyles","theme","container","backgroundColor","logoArea","textAlign","navigationArea","accountArea","unsetAccountAreaPadding","VerticalBar","classes","upperElement","navigationList","lowerElement","array","ContextMenu","anchorEl","setAnchorEl","handleClose","cloneElement","evt","currentTarget","keepMounted","menuList","reduce","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","Table","columns","icons","actions","components","localization","actionsColumnIndex","draggable","grouping","search","toolbar","searchFieldAlignment","paging","TabPanel","selectedTab","other","component","role","hidden","aria-labelledby","any","tabPanel","overflowY","Tabs","setSelectedTab","onChange","event","newSelectedTab","indicatorColor","textColor","tabList","tab","label","a11yProps","scrollable","number","Text","fontFamily","fontStyle","fontSize","marginLeft","marginRight","marginBottom","colorSwitchBase","grey","green","colorBar","colorChecked","Toggle","control","checked","toggle","onToggle","switchBase","track","labelPlacement","SearchInput","searchInput","enableTimeout","timer","clearTimeout","setTimeout","handleSearch","time","placeholder","searchIcon","setSearchInput","inputRoot","input","inputInput","inputProps","handleChange","Component","withStyles","borderRadius","shape","fade","palette","common","white","spacing","breakpoints","up","pointerEvents","transition","transitions","withTheme","marginTop","link","cursor","textDecoration","lastLabel","Breadcrumb","separator","aria-label","pathList","function","FLEX_STYLE","BaseViewer","antialias","engineOptions","adaptToDeviceRatio","sceneOptions","onRender","onSceneReady","is2render","sceneFactory","rest","reactCanvas","useRef","loaded","setLoaded","scene","setScene","setSize","engine","Engine","current","nScene","runRenderLoop","render","renderScene","Scene","isReady","onReadyObservable","addOnce","setUpScene","dispose","getEngine","focus","handleWidth","handleHeight","onResize","resize","preserveDrawingBuffer","stencil","Clipboard","Clip","write","read","Vec2","x","y","vec","z","op","a","b","acc","v","Math","sqrt","dot","scale","lambda","fromArray","biLambda","fold","initial","vector3","Vec3","constructor","Array","vec3","operation","ans","f","Vector3","binary","initialValue","max","Number","MAX_VALUE","min","some","isNaN","isFinite","babylon","of","random","u","identityMatrix","e1","e2","e3","pivot","add","normalize","w","sub","AnnotationManager","annotations","instance","observersBySceneId","retrieveAnnotationsFromDb","sceneId","_uid","MasterDB","subscribe","Scope","Name","actionMap","del","annotation","delAnnotation","set","addAnnotation","Annotation","k","names2delete","annotationType","names","includes","labels","annotationObj","Type","type","toLowerCase","Label","getInstance","getAnnotations","NodeItem","mesh","keyValueMap","TYPE","mainView","copy","getCopyFunction","getNodeFromTree","onDeleteNode","getMouseContextActions","nodeItem","getType","ofBabylon","toArray","quaternion","Maybe","fromNull","rotationQuaternion","orLazy","q","Quaternion","RotationYawPitchRoll","rotation","material","flatMap","diffuseColor","g","orSome","isVisible","isEnabled","info","toDict","Color3","schema","jsonSchema","properties","oldName","uiSchema","toHexString","setAnnotations2Form","form","pos","parseFloat","FromArray","quat","FromHexString","emissiveColor","isForceUpdate","mousePosFromRoot","someMainView","getSceneMemory","rootItem","getRootNode","copyDict","getUID","newPosArray","copiedNodeItem","ofDict","parent","addNodeItem2Tree","GlobalRef","NAME","delVertex","graphVertex","childrenWithDelVertex","_children","childMesh","dict","someDict","toBabylon","babylonQuaternion","babylonColor","_capitalize","scopeList","Mat3","v1","v2","v3","mat3","prodVec","dotVec","mat","equals","babylonMat","arrayMat","Matrix","GetAsMatrix3x3","GizmoManagerBuilder","_scene","_isPosition","_isRotation","_isBoundingBox","_isScale","_usePointerToAttachGizmos","gizmoManager","GizmoManager","positionGizmoEnabled","rotationGizmoEnabled","boundingBoxGizmoEnabled","scaleGizmoEnabled","usePointerToAttachGizmos","CameraBuilder","_sphericalCoordinates","_target","_name","floor","sphericalCoordinates","values","ArcRotateCamera","PositionalLightBuilder","_position","_intensity","intensity","light","PointLight","ReferentialBuilder","_isPickable","_boxParams","_size","isPickable","boxParams","axisX","Mesh","CreateLines","Zero","axisY","axisZ","localOrigin","MeshBuilder","CreateBox","GroundBuilder","_width","_height","_textureSrc","textureSrc","ground","CreateGround","translate","Space","WORLD","StandardMaterial","ambientTexture","Texture","uScale","vScale","DirectionalLightBuilder","_direction","direction","DirectionalLight","Box","DEFAULT_SIZE","maybeDict","orUndefined","boxMesh","Util3d","createBox","mapDict2Mesh","localPosition","meshParent","meshParentPos","meshParentRotMat","getRotationMatrix","meshParentScaling","scaling","mul","getGlobalCoordinates","positionInWorld","forwardCoordinates","worldPosition","withTranslation","ZERO","getLocalCoordFromGlobal","inverseScaling","getLocalCoordFromWorld","localRotationMatrix","maybeQuaternion","toRotationMatrix","orElseRun","ofBabylonMatrix","Red","normals","getVerticesData","VertexBuffer","NormalKind","positions","PositionKind","lines","scaleInPlace","normalLines","CreateLineSystem","uArray","subtract","Dot","faces","updatable","vertexData","VertexData","indices","applyToMesh","polygon","triangulation","earcut","len","i3","vec3Poly","orientation","edge","arrayOfPoints","randomDigits","parentView","rootMesh","arrayOfVector3","transform","isArray","Gray","segments","surface","orthogonalBasisFromVector","sign","Cross","theta","PI","cos","sin","zeroIndex","uIndex","meshFromPositionAndFaces","convertToFlatShadedMesh","diameter","sphere","CreateSphere","getMaterialFromColor","box","points","radius","CreateTube","path","sideOrientation","DOUBLESIDE","cap","CAP_ALL","pickInfo","pick","pointerX","pointerY","hit","pickedPoint","none","pickedMesh","curve","distance","orientations","atan2","nbPoints","closed","Curve3","CreateCatmullRomSpline","getPoints","splineObj","getCurveOrientations","THETA","ROS_ORIGIN","rosOrigin","getRosOrigin","globalRefMesh","referentialBuilder","build","rotationMatrix","abs","Action","memory","attachedMesh","camera","attachControl","canvas","closeContextDial","setContextActionIndex","AssetNodeItem","assetName","Map","DefaultScene","RotationGizmo","UtilityLayerRenderer","xGizmo","dragBehavior","detach","scaleRatio","yGizmo","COLLISION_RADIUS","cameraBuilder","inertia","collisionRadius","panningInertia","checkCollisions","panningSensibility","lowerRadiusLimit","directionalLightBuilder","wireframe","clearColor","Black","collisionsEnabled","getUniqueId","advancedTexture","AdvancedDynamicTexture","CreateFullscreenUI","text","TextBlock","addControl","MouseKeysAction","selectOneAction","predicateActionList","defaultAction","predicate","action","predicateAction","KeyPoint","CreatePolyhedron","custom","TRIANGULAR_ANTIPRISM","axis","category","vertex","face","MeshSelector","placeHolderInstance","meshSelectionSet","Set","isSubtractive","has","meshes","filteredSet","SelectionPlaceHolder","arrayOfMeshes","angleByMeshName","uniqBy","getAngleFromMesh","placeHolderPosition","pointAverage","createPlaceHolderIn","isDisposed","Identity","getShaderMaterial","that","addGizmo2Mesh","clear","ofMainView","highlightMeshesInScene","highlightNodesInTree","isSelectionPlaceHolder","HEIGHT","observers","Observable","getPlaceHolderObs","placeHolder","updatedPointMesh","is2updateServer","displacement","filteredMeshes","dTheta","localDisplacement","newPos","handleTranslation","baseCoord","toVec2","rV","prod","finalV","finalTheta","handleRotation","handleMotion","updateNodeInServer","obs","notifyObservers","vertexObs","VERTEX","frag","FRAG","Effect","ShadersStore","shaderMaterial","ShaderMaterial","fragment","uniforms","backFaceCulling","T","Date","getTime","onBindObservable","dt","setFloat","compareTreesRecursive","treeA","treeB","nodeEquality","nodeA","nodeB","expand","expanded","filterTree","tree","nod","flatten","TreeObject","getNodeRecursive","answer","isSome","childPredicate","getParentNodeRecursive","nodeMap","mapRecursive","newTree","mappedNode","forEachRecursive","Constants","RADIUS","POINTS_DENSITY","CLOUD_FUNCTION_NAME","Graph","j","edgeKey","addVertex","edgeProps","ijKey","jiKey","getNeighbors","getEdge","split","Path","localPath","keyPoints","splinePath","weight","selectedKeyPointIndex","selectedMesh","newSchema","selectedKeyPoint","formPosition","newPosInWorldCoordinates","localPos","updatePathEdgeWithForm","getGraph","graphItem","graph","edgeIds","edgeData","copiedPath","kp","isPathOnGraph","updateGraph","spline","getSplineFromCurve","createTubeFromPoints","splineObj2redis","createPlaceHolderKeyPoints","path2return","point","getMeshOnClick","getMeshObserver","newPoints","keyPointUpdateFunction","defaultKeyPointUpdate","oldMesh","average","newMesh","rotMat3","scaleVec3","averageInParentCoord","visibility","oldKeyPoints","keyPointMesh","copyPosition","getUndoManager","doIt","getUndoDeleteKeyPoint","UndoManager","actionBuilder","doAction","copyPoints","createNewMeshFromOldUsingNewPoints","onAddNewPointKeyPointUpdate","undoAction","getUndoAddKeyPointInBetween","nextIndex","numberOfPoints","oldPoints","specialIndex","oldKpMeshes","pathItem","isTopologyChange","delVertexFromMesh","edgeMeshes","addEdge","keypoints","childrenCopy","kChild","getConeMesh","curveMesh","getSphereMesh","keyPoint","setProperties","toForm","getKeyPointObserverFunction","setContextActions","pathTreeNode","icon","deleteKeyPoint","addKeyPointInBetween","getKeyPointActions","createOrientedCone","createSphere","every","GraphItem","graphItemInstances","graphPlaceHolder","getGraphPlaceHolder","graphFormMapper","getDefaultFormMapper","edgeMesh","getUndoDeleteEdge","vLocal","getToFormEdge","meshByEdgeId","vertexGenerator","vertices","getVertices","edges","getEdges","getVertex","String","ids","key2Edge","belongsSrcMesh","belongsTrgMesh","belongsSrc","exportBelongToData","belongsTrg","doMeshesBelong2SamePath","ofForm","edgeIndexes","lodashGet","delVertexRecursively","iMesh","jMesh","iIndex","jIndex","hasEdge","buildVertex","buildEdge","getVertexIdFromMesh","delEdge","_","maybeV","newPosition","iData","jData","nodeTree","vertexMesh","vertexIndex","vId","builder","addObs2VertexMesh","vData","getVertexMeshObs","updateVertexPosition","sort","iVertexD","jVertexD","EdgeData","doVerticesBelong2SamePath","getEdgeMesh","edgeGlobalCoord","getGlobalCoord","Yellow","getEdgeMouseCtxActions","addObserver2EdgeMesh","addOnClickEdge","getEdgeObs","getOnClickEdge","getUndoDelLineEdge","edgeVertexD","isMeshBelong2Path","iParentNodeItem","jParentNodeItem","vertexCounter","MIN_VALUE","getMeshesFromEdgeData","dataEdge","importFeatures","vertexPosition","One","ind","vertexDataI","vertexDataJ","DragObjectsAction","setSelectedAction","buttons","maybeSelectedMesh","pickMesh","currentMesh","dragDownMesh","dragDownWithoutMesh","getGroundPosition","groundPos","dragMoveMesh","dragMoveWithoutMesh","dragUpMesh","dragUpWithoutMesh","destroySelectionDiv","corners","code","getDeleteButtonAction","ctrlKey","getCopyAction","getPasteAction","setMouseContextActions","getPasteOnClick","pasteAction","paste","setPropertiesWithName","clickPointInWorld","movePointInWorld","startDivPos","detachControl","addSelectedMesh","handleMeshRightClick","updateMouseVars","selectMeshUpdateUI","meshSelector","selectionPlaceHolder","selectedMeshes","addGizmo2Name","getMouseCoordsFromRoot","mousePosRoot","handleRightClickWithoutMesh","shiftKey","createSelectionDiv","selector","newMousePosInWorld","updateSelectionDiv","selectPlaceHolder","bigDisplacement","addIt","getUndoAbleAction","addArray","selectObjectsInside","groundPosInGlobal","isOne","maybeNode","contextActions","getContextActions","forceUpdate","copiedMesh","nodeCopyActionPairs","nodeActionPairs","copiedItems","copyAction","toGlobalCoord","absolutePosition","maybe","copiedMeshes","copiedNames","invertDisplacement","findMouseInDom","outerDiv","ID","body","ReactDOM","getElementById","newMouse","oldMouse","minX","minY","maxX","maxY","zIndex","clientX","clientY","rayCastCorners","pickPoints","insideBoxDragAbleMeshes","getObjectTree","isItemInsideBox","floorPoint","orNull","isMeshInsideBox","planeP","isPointInsideBox","epsilon","vi","vii","acos","SelectDiv","border","borderColor","AddKeyPointAction","maybeMousePos","mousePos","oldMousePos","tempMesh","createKeyPoint","TEMP_KEY_POINT_NAME","is2addInServer","setPositionWithLocalVector","Axis","Z","deleteNodeFromTreeUsingName","BoxRegion","lower","scaleX","scaleY","worldCorners","oldDimensions","dimensions","isEqual","ofFormDimensions","newLowerPositionInWorldCoordinates","newLocalDimensions","localLowerPosition","notify","createBoxRegionMesh","VISIBILITY","FACES","boxRegion","middlePoint","X","Y","h","boxRegionMesh","boxRegionTreeNode","newBox","pointAverageVec3","createNewMeshFromOldUsingNewBox","corner","BoxRegionAction","createBoxRegion","TEMP_BOX_REGION_NAME","region","localRegion","centeredRegion","boxRegionItem","DrawPathAction","mouseCurve","getUndoAbleClickAction","getDrawPathContextAction","localCurve","centeredCurve","TEMP_PATH_NAME","getUndoAbleEnterAction","kps","finalKps","createCurve","reducedKps","slice","keyPointMeshes","addEdgesInKeyPoints","deleteEdgeInKeyPoints","pathName","createGraphItemIfNone","positiveMod","Utils","mod","PolygonRegion","localPolygon","createExtrudedPolygonMesh","reverseOrientation","triangleIndex","polygonRegionMesh","lowerTriangulation","triangulatePolygon","upperTriangulation","stitchTriangulation","computeOrientation","modi","stitchingBoundaries","polygonTreeNode","getAbsolutePosition","polygonMesh","PolygonRegionAction","TEMP_POLYGON_REGION_NAME","getDrawPolygonContextAction","polygonRegionItem","createPolygonRegion","OrbitAction","DrawGraphAction","mousePosConsumer","maybeMesh","isConnectableMesh","possibleMesh","Green","onPointerDownLine","resetPreview","cata","firstMousePos","onPointerMoveLine","deletePreviewMeshes","firstClickedMesh","previewMeshes","parentName","meshI","meshJ","belongsToPath","nameI","nameJ","clickedMesh","belongs2SamePath","getUndoAbleLineEdge","createEdge","deleteEdge","edgeEmbedding","Blue","graphNode","MeasureAction","currentMousePos","ruler","addTextGUI","calculateDistance","start","end","startVec","endVec","toFixed","removeControl","ACTIONS","measure","drawGraph","drawRegion","addKeyPoint","drawBoxRegion","drawPath","dragObjects","orbit","MapLoader","yamlSrc","cachedMap","fetch","getMapUrl","response","parseYaml","image","resolution","origin","imageSize","yamlTxt","actionDict","parse","getImageSize","src","Promise","resolve","reject","img","Image","onload","naturalWidth","naturalHeight","AssetsManager","assets","assetsActionMap","retrieveAssetsFromDb","RobotName","getRobotNameUpdate","getRobotNameSub","finishSub","File","FileLabel","getMapUpdater","getMapSubscriber","getMeshUpdater","getMeshSubscriber","place","finishInitialSubscribers","subs","afterLoad","isLoading","delAsset","robots","dataGetter","after","getMapFileData","fileName","addMap","filename","loader","ASSETS_TYPES","addAsset","ofNull","maybeGet","getMeshFileData","observer","assetKey","asset","AssetsTypesFactory","signalObservers","re","rej","localRobot","Robot","robotTree","child","addRobot","deleteRobot","prop","AddMapAction","mapLoader","load","href","download","firstTimeLoad","groundBuilder","originPos","rootNode","inverseCoordinates","setTarget","is2sendServer","setEnabled","createMeshGround","getUndoAction","oldMapName","newMapName","switchMaps","getAssetsActionMap","meshTree","robot","oldTimeInMillis","robotAnimator","requestAnimationFrameId","requestAnimationFrame","updateRobot","timeSinceLastUpdate","isOnline","speed","qSpeed","newOri","db","Database","unsubscribe","Parameter","cancelAnimationFrame","newRobotTf","lastPosition","lastOrientation","newOrientation","dtReciprocal","TIME_2_BE_OFFLINE_IN_SEC","toOffline","toOnline","thetaX","boundingSphere","getBoundingInfo","center","tfSphereMesh","ONES","addRotation","spherePlaceHolder","createRobotMeshTreeRecursive","robotMesh","RobotBuilder","vel","rotate","LOCAL","tf","_get","updateRobotMeshTree","robot2Animate","biasedCoin","someNaNOrInfinite","setOnOffLine","_meshTree","_parentMesh","_id","_keyValueMap","_assetName","parentMesh","PointCloud","pointCloudSubscribe","front_lidar","Value","updatePointCloud","colors","fill","pointCloudMesh","disableLighting","pointsCloud","pointSize","MeshCache","meshCacheBySceneId","meshCache","cloneMesh","clone","MeshLoader","meshName","mapFunction","hasKey","assetsManager","meshTask","addMeshTask","MESH_URL","onSuccess","task","loadedMeshes","put","onError","exception","onFinish","RobotAction","robotAnimatorFactory","getDefaultAnimator","createRobotMeshTree","cloudPoint","parentObj","treeNode","actionMemoryClone","loadRobot","ROBOT_MESH_NAME","transformMesh","then","createRobotFromMesh","getParentMesh","isImport","getRobot","animate","getCloudPoint","AddMeshAction","getIsImport","finalName","getFinalNameFromMemory","loadMesh","actionMemory","createNormals","meshItem","renderMenus","getMeshUrl","addMesh","addMesh2Scene","getSocketAnimator","Wall","localWall","createWallMesh","centeredWall","tangent","normal","wallMesh","wallNode","newWall","locallyTranslate","wall","NODE_ITEM_FACTORY_MAP","MainViewRetriever","serverScene","errors","importSceneRecursive","importDefaultScene","nodeDict","nodeItemClass","isAsset","importAsset","assetType","assetActionMap","retrievedAction","cause","solution","arrayTree","sortArrayTree","importNodeItem","SceneServerUtils","sceneName","successCallback","DEFAULT_SUCCESS","failCallback","DEFAULT_FAILURE","cloudFunction","successFailIf","failureLocation","error","success","TreeNode","TreeNodeBuilder","_title","_item","_expanded","_isVisible","TreeServerUtils","objectTree","getNode","childName","getParentNode","is2delInServer","deleteNodeInServer","getParentFromChild","node2Add","maybeParentNode","addNodeItem2Server","Animator","state","next","doWhile","requestAnimeId","stop","play","AnimatorBuilder","_state","_next","_end","DefaultMouseEvents","mousePosClick","mousePosMove","sceneMemory","mouseLocationText","currentLocal","setMouseLocationTxt","panCamera","vBabylon","getBabylonCoordinates","initialState","nextState","vdt","animateCamera","filterActions","SceneViewer","undoManager","ofScene","newObjectTree","focusObject","isPanned","_absolutePosition","cameraSpeed","targetPos","beta","isRotated","onPointerDown","onPointerUp","onPointerMove","afterLoading","retrieveScene","errorList","importScene","setState","assetManager","getAssets","loadAssets","retrieveSceneFromServer","setCameraToTarget","getRenderingCanvas","addCanvasEventListeners","createMouseLocationText","createCamera","createLight","createGizmo","highlightLayer","layer","HighlightLayer","lastHlMeshes","prevProps","propVar","loadScene","addEventListener","resetErrorList","maxHeight","createScene","getErrorSolutionList","masterProps","augmentProps","formControl","Select","noneOption","hiddenLabel","labelId","CreateSVGIcon","viewBox","xmlns","xmlnsXlink","svgIcons","Close","ErrorOutline","InfoOutlined","ReportProblemOutlined","SuccessOutlined","defaultIconMapping","warning","Alert","closeText","iconMapping","severity","clsx","capitalize","oneOf","filledSuccess","filledInfo","filledWarning","filledError","opacity","ReactConfirmAlert","close","closeOnClickOutside","onClickOutside","isClickOutside","overlay","removeBodyClass","removeElementReconfirm","closeOnEscape","onKeypressEscape","isKeyCodeEscape","keyCode","keyboardClose","autoClose","autoHideDuration","removeEventListener","willUnmount","customUI","closable","dom","handleClickOverlay","renderCustomUI","elevation","unmountComponentAtNode","classList","snackbar","divTarget","createElementReconfirm","themeFactory","particular","typography","h1","h2","h3","h4","h5","h6","body1","cursorDefault","cursorPointer","Themes","dark","createMuiTheme","bottomNavigation","background","globalStats","subTextColor","upperTextColor","primary","main","secondary","overrides","MuiButton","outlined","contained","containedPrimary","containedSecondary","MuiButtonGroup","groupedContainedPrimary","groupedOutlined","groupedText","MuiIconButton","MuiListItem","MuiFormControlLabel","MuiInputBase","font","MuiFilledInput","underline","Roboto","OpenSans","localStorage","getItem","setItem","Style","createGlobalStyle","S","StyledMenu","paper","boxShadow","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","autoFocus","FilterIcon","otherFilters","Fragment","handleClick","isActive","iconActive","buttonApplyFilters","checkbox","limitText","filterBarContainer","flexWrap","flex","searchText","addTagText","toggleContainer","datePicker","tagsContainer","tagsList","chip","maxWidth","filtersButton","columnsFilter","iconButton","LogsFilterBar","tagText","setTagText","handleRobotChange","arrayEvent","selectedId","updateRobotSelection","paddingTop","paddingRight","fillRule","clipRule","multiple","selectedRobots","renderValue","selected","selectedNames","isSelected","MenuProps","robotIndex","messageRegex","handleMessageRegex","InputProps","startAdornment","endAdornment","levels","handleLevels","levelsList","level","elem","indexOf","advancedMode","FiltersIcon","tags","onKeyUp","handleAddTag","onDelete","handleDeleteTag","selectedFromDate","selectedToDate","utils","DateFnsUtils","ampm","newDate","handleDateChange","format","handleAdvancedMode","limit","handleLimit","InputLabelProps","shrink","handleColumns","columnList","column","PaperProps","ITEM_HEIGHT","arePropsEqual","nextProps","_isEqual","selectToDate","colorCoding","INFO","WARNING","DEBUG","ERROR","CRITICAL","findsUniqueKey","keyName","getRequestLevels","levelsArray","res","getRequestTags","tagsArray","_isEmpty","tag","getRequestMessage","binaryIndexOf","criteria","currentIndex","minIndex","maxIndex","comparison","filterByFromToDates","logsData","fromDate","toDate","lowerIndex","upperIndex","dateList","MuiVirtualizedTable","onRowClick","rowData","tableRow","flexContainer","tableRowHover","cellData","columnIndex","rowHeight","tableCell","noClick","align","numeric","headerHeight","tableProps","gridStyle","table","rowClassName","getRowClassName","dataKey","headerRenderer","headerProps","cellRenderer","PureComponent","arrayOf","VirtualizedTable","boxSizing","flip","flexColumn","LogsTable","rowCount","rowGetter","Logs","robotsData","ip","setSelectedRobots","robotId","findIndex","logsTimeout","getLogs","robotState","robotStates","off","getRobotLogData","dataArrays","prevState","finalArray","dataArray","robotSelected","timeoutHandle","dynamicURL","divElement","clientHeight","updateSelectedRobots","tagToDelete","filteredTags","keyToChange","simpleLevelsList","advancedLevelsList","timestamp","battery","temp","okay","serverTime","toLocaleDateString","getJustDateFromServer","Time","toLocaleTimeString","getJustTimeFromServer","Level","Module","Message","LoginForm","username","password","remember","errorMessage","capsLockOn","Authentication","login","apiResponse","setLoggedIn","getModifierState","logo","justify","defaultLogo","alt","gutterBottom","htmlFor","aria-describedby","checkCapsLock","sendCreds","logs","loggedIn","menuItemSpacing","profileMenuFooter","ProfileMenu","aria-controls","aria-haspopup","welcomeLabel","userName","extraItems","darkThemeLabel","handleToggleTheme","isDarkTheme","handleLogout","logoutLabel","version"],"mappings":"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","file":"dist/index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MovaiReact\"] = factory();\n\telse\n\t\troot[\"MovaiReact\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 105);\n","module.exports = require(\"react\");","module.exports = require(\"@babel/runtime/helpers/esm/defineProperty\");","module.exports = require(\"@babylonjs/core\");","module.exports = require(\"@babel/runtime/helpers/esm/assertThisInitialized\");","module.exports = require(\"prop-types\");","module.exports = require(\"@babel/runtime/helpers/esm/getPrototypeOf\");","module.exports = require(\"@babel/runtime/helpers/esm/classCallCheck\");","module.exports = require(\"@babel/runtime/helpers/esm/createClass\");","module.exports = require(\"monet\");","module.exports = require(\"@babel/runtime/helpers/esm/extends\");","module.exports = require(\"@babel/runtime/helpers/esm/possibleConstructorReturn\");","module.exports = require(\"@babel/runtime/helpers/esm/inherits\");","module.exports = require(\"@babel/runtime/helpers/esm/get\");","module.exports = require(\"mov-fe-lib-core\");","module.exports = require(\"@babel/runtime/helpers/esm/toConsumableArray\");","module.exports = require(\"@babel/runtime/helpers/esm/classPrivateFieldGet\");","module.exports = require(\"@material-ui/core/styles\");","module.exports = require(\"@babel/runtime/helpers/esm/slicedToArray\");","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"@material-ui/core\");","module.exports = require(\"@babel/runtime/helpers/esm/asyncToGenerator\");","module.exports = require(\"@material-ui/core/MenuItem\");","module.exports = require(\"@babel/runtime/helpers/esm/objectWithoutProperties\");","module.exports = require(\"@material-ui/core/IconButton\");","module.exports = require(\"@material-ui/core/Typography\");","module.exports = require(\"@material-ui/core/FormControl\");","module.exports = require(\"lodash/get\");","module.exports = require(\"react-dom\");","module.exports = require(\"@material-ui/core/Input\");","module.exports = require(\"@material-ui/core/Menu\");","module.exports = require(\"@material-ui/icons/Search\");","module.exports = require(\"@babylonjs/gui/2D\");","module.exports = require(\"@material-ui/core/Select\");","module.exports = require(\"clsx\");","module.exports = require(\"@material-ui/core/Grid\");","module.exports = require(\"@material-ui/icons/ChevronRight\");","module.exports = require(\"@material-ui/core/InputLabel\");","module.exports = require(\"@material-ui/core/Button\");","module.exports = require(\"react-resize-detector\");","module.exports = require(\"@material-ui/icons/Settings\");","module.exports = require(\"lodash/isEqual\");","module.exports = require(\"@material-ui/core/colors\");","module.exports = require(\"@material-ui/core/InputAdornment\");","module.exports = require(\"@material-ui/core/ListItemText\");","module.exports = require(\"@material-ui/core/Checkbox\");","module.exports = require(\"@material-ui/pickers\");","module.exports = require(\"react-virtualized\");","module.exports = require(\"@material-ui/icons/Clear\");","module.exports = require(\"lodash/capitalize\");","module.exports = require(\"@material-ui/core/TableCell\");","module.exports = require(\"@material-ui/core/FormHelperText\");","module.exports = require(\"@material-ui/core/Divider\");","\"use strict\";\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce = typeof __webpack_nonce__ !== 'undefined' ? __webpack_nonce__ : null;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && typeof btoa !== 'undefined') {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}","module.exports = require(\"@material-ui/core/Drawer\");","module.exports = require(\"@material-ui/icons/ExpandMore\");","module.exports = require(\"@material-ui/core/Collapse\");","module.exports = require(\"material-table\");","module.exports = require(\"@material-ui/icons/AddBox\");","module.exports = require(\"@material-ui/icons/ArrowDownward\");","module.exports = require(\"@material-ui/icons/Check\");","module.exports = require(\"@material-ui/icons/ChevronLeft\");","module.exports = require(\"@material-ui/icons/DeleteOutline\");","module.exports = require(\"@material-ui/icons/Edit\");","module.exports = require(\"@material-ui/icons/FilterList\");","module.exports = require(\"@material-ui/icons/FirstPage\");","module.exports = require(\"@material-ui/icons/LastPage\");","module.exports = require(\"@material-ui/icons/Remove\");","module.exports = require(\"@material-ui/icons/SaveAlt\");","module.exports = require(\"@material-ui/icons/ViewColumn\");","module.exports = require(\"@material-ui/core/Tabs\");","module.exports = require(\"@material-ui/core/Tab\");","module.exports = require(\"@material-ui/core/TextField\");","module.exports = require(\"@material-ui/core/FormControlLabel\");","module.exports = require(\"@material-ui/core/Switch\");","module.exports = require(\"@material-ui/core/InputBase\");","module.exports = require(\"@material-ui/core/Breadcrumbs\");","module.exports = require(\"@material-ui/icons/NavigateNext\");","module.exports = require(\"earcut\");","module.exports = require(\"lodash\");","module.exports = require(\"@babylonjs/core/Maths/math\");","module.exports = require(\"lodash.isequal\");","module.exports = require(\"@material-ui/core/utils\");","module.exports = require(\"@babel/runtime/helpers/esm/taggedTemplateLiteral\");","module.exports = require(\"styled-components\");","module.exports = require(\"@material-ui/icons/Close\");","module.exports = require(\"@material-ui/core/styles/colorManipulator\");","module.exports = require(\"@material-ui/icons/Label\");","module.exports = require(\"@material-ui/core/Chip\");","module.exports = require(\"@material-ui/icons/Add\");","module.exports = require(\"@material-ui/icons/Today\");","module.exports = require(\"@date-io/date-fns\");","module.exports = require(\"@babel/runtime/helpers/esm/typeof\");","module.exports = require(\"lodash/isEmpty\");","module.exports = \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' version='1.0' width='400.000000' height='400.000000' preserveAspectRatio='xMidYMid meet'%3E%3Crect id='backgroundrect' width='100%25' height='100%25' x='0' y='0' fill='none' stroke='none'/%3E %3Cg class='currentLayer' style=''%3E%3Ctitle%3ELayer 1%3C/title%3E%3Cg transform='translate(0,400) scale(0.10000000149011612,-0.10000000149011612) ' fill='%23d31b1b' stroke='none' id='svg_1' class='' fill-opacity='1'%3E %3Cpath d='M1770 3990 c-682 -83 -1271 -501 -1570 -1115 -103 -211 -167 -437 -191 -673 -14 -129 -6 -404 14 -522 85 -495 339 -929 729 -1242 232 -187 539 -332 836 -393 957 -199 1909 314 2272 1224 204 512 180 1116 -64 1606 -115 232 -229 387 -412 565 -296 286 -639 460 -1059 536 -106 19 -443 27 -555 14z m-998 -1105 c3 -3 -23 -48 -57 -99 -113 -172 -182 -338 -226 -546 -32 -149 -33 -448 -1 -593 31 -145 70 -258 134 -387 65 -132 64 -140 -28 -140 -66 0 -100 13 -143 53 -74 70 -71 38 -71 748 0 555 2 642 16 690 43 144 129 236 248 265 54 13 119 18 128 9z m2621 -21 c99 -34 192 -157 216 -288 14 -78 15 -1256 1 -1307 -13 -48 -82 -125 -124 -139 -55 -18 -166 -12 -166 9 0 4 25 57 55 118 195 391 215 839 55 1247 -41 105 -117 247 -176 327 -18 25 -30 49 -26 54 10 11 109 -2 165 -21z m-251 -61 c128 -170 217 -370 265 -594 13 -63 18 -129 18 -264 0 -199 -13 -285 -66 -448 -33 -101 -114 -277 -128 -277 -26 0 -31 80 -32 549 0 267 -4 495 -8 505 -6 16 -20 4 -87 -77 -43 -53 -81 -96 -84 -96 -3 -1 -16 41 -29 92 -27 106 -74 215 -132 304 -32 48 -38 66 -31 80 34 61 243 273 271 273 4 0 23 -21 43 -47z m-2206 15 c52 -39 95 -82 171 -170 l74 -88 -42 -61 c-23 -34 -54 -89 -69 -123 -35 -76 -80 -219 -80 -252 0 -13 -4 -24 -8 -24 -4 0 -43 43 -87 95 -43 52 -83 95 -87 95 -4 0 -8 -224 -9 -497 0 -492 -5 -565 -34 -565 -16 0 -94 166 -130 279 -52 159 -69 294 -62 493 8 230 47 384 147 585 56 112 154 255 174 255 7 0 26 -10 42 -22z m458 -511 l133 -157 -20 -58 c-13 -39 -19 -85 -19 -147 -1 -150 44 -260 151 -365 107 -105 214 -150 361 -150 241 0 443 162 500 399 16 69 8 222 -15 278 l-17 43 132 157 c73 87 136 159 140 161 24 9 119 -186 148 -303 11 -44 22 -104 25 -134 l4 -54 -329 -388 c-343 -405 -362 -424 -466 -455 -101 -31 -258 -12 -341 41 -48 29 -83 69 -607 691 -52 62 -94 121 -94 131 0 52 33 202 60 271 33 86 99 204 112 200 5 -2 68 -74 142 -161z m376 -444 c85 -102 167 -194 182 -204 62 -45 81 -30 292 224 76 92 142 165 146 162 13 -8 20 -110 10 -167 -27 -170 -153 -299 -324 -334 -130 -27 -257 9 -356 102 -61 57 -116 162 -125 239 -8 57 1 165 13 164 4 0 77 -84 162 -186z' id='svg_2' fill='%23d31b1b' fill-opacity='1'/%3E %3C/g%3E%3C/g%3E%3C/svg%3E\"","module.exports = require(\"@material-ui/core/Paper\");","module.exports = require(\"@babylonjs/core/Debug/debugLayer\");","module.exports = require(\"@babylonjs/inspector\");","module.exports = require(\"@babylonjs/loaders\");","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!./Snackbar.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"body.react-confirm-alert-body-element {\\n  overflow: hidden;\\n}\\n\\n.react-confirm-alert-blur {\\n  filter: url(#gaussian-blur);\\n  filter: blur(2px);\\n  -webkit-filter: blur(2px);\\n}\\n\\n.react-confirm-alert-overlay {\\n  position: fixed;\\n  top: calc(100vh - 300px);\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  z-index: 99;\\n  display: -webkit-flex;\\n  display: -moz-flex;\\n  display: -ms-flex;\\n  display: -o-flex;\\n  display: flex;\\n  justify-content: flex-start;\\n  -ms-align-items: center;\\n  align-items: flex-end;\\n  opacity: 1;\\n}\\n\\n.react-confirm-alert-body {\\n  width: 400px;\\n  padding: 30px;\\n}\\n\\n.react-confirm-alert-svg {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n}\\n\\n.react-confirm-alert-body > h1 {\\n  margin-top: 0;\\n}\\n\\n.react-confirm-alert-body > h3 {\\n  margin: 0;\\n  font-size: 16px;\\n}\\n\\n.react-confirm-alert-button-group {\\n  display: -webkit-flex;\\n  display: -moz-flex;\\n  display: -ms-flex;\\n  display: -o-flex;\\n  display: flex;\\n  justify-content: flex-start;\\n  margin-top: 20px;\\n}\\n\\n.react-confirm-alert-button-group > button {\\n  outline: none;\\n  background: #333;\\n  border: none;\\n  display: inline-block;\\n  padding: 6px 18px;\\n  color: #eee;\\n  margin-right: 10px;\\n  border-radius: 5px;\\n  font-size: 12px;\\n  cursor: pointer;\\n}\\n\\n.icon-container {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\n.icon-container:hover {\\n  cursor: pointer;\\n}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","module.exports = require(\"fontsource-roboto\");","module.exports = require(\"fontsource-open-sans\");","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!./Logs.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".flow-action {\\n  display: flex;\\n  background: transparent;\\n  width: 35px;\\n  height: 35px;\\n  margin: 6px;\\n  border-radius: 50%;\\n  justify-content: center;\\n  align-items: center;\\n  transition: background-color 0.5s;\\n}\\n\\n.flow-action:hover {\\n  background: rgba(11, 106, 138, 0.2);\\n  cursor: pointer;\\n}\\n\\n.robot-logs-container {\\n  display: flex;\\n  flex-direction: column;\\n  height: 1px;\\n  flex-grow: 1;\\n}\\n\\n.tree-grow-overflow {\\n  flex-grow: 0.5;\\n  overflow-y: auto;\\n  min-height: 0;\\n  height: 100%;\\n}\\n\\n.logs-grow-overflow {\\n  flex-grow: 1;\\n  overflow-y: auto;\\n  min-height: 0;\\n  height: 100%;\\n}\\n\\n.saving {\\n  /* font-size: 40px; */\\n  margin: 0;\\n}\\n\\n.saving span {\\n  font-size: 15px;\\n  animation-name: blink;\\n  animation-duration: 1.4s;\\n  animation-iteration-count: infinite;\\n  animation-fill-mode: both;\\n}\\n\\n.saving span:nth-child(2) {\\n  animation-delay: 0.2s;\\n}\\n\\n.saving span:nth-child(3) {\\n  animation-delay: 0.4s;\\n}\\n\\n@keyframes blink {\\n  0% {\\n    opacity: 0.2;\\n  }\\n  20% {\\n    opacity: 1;\\n  }\\n  100% {\\n    opacity: 0.2;\\n  }\\n}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import React from \"react\";\nimport MaterialButton from \"@material-ui/core/Button\";\nimport PropTypes from \"prop-types\";\n\nconst Button = props => {\n  return (\n    <MaterialButton\n      className={props.className}\n      style={props.style}\n      onClick={props.onClick}\n      color={props.color}\n      variant={props.variant}\n      size={props.size}\n      startIcon={props.startIcon}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </MaterialButton>\n  );\n};\n\nButton.propTypes = {\n  style: PropTypes.object,\n  onClick: PropTypes.func,\n  color: PropTypes.string,\n  variant: PropTypes.string.isRequired,\n  size: PropTypes.string,\n  startIcon: PropTypes.element,\n  children: PropTypes.node.isRequired,\n  disabled: PropTypes.bool\n};\nButton.defaultProps = {\n  style: {},\n  onClick: () => console.log(\"Click MOV.AI button\"),\n  color: \"default\", // default, inherit, primary or secondary\n  variant: \"contained\", // text, outlined, contained\n  size: \"medium\", // small, medium, large\n  startIcon: undefined,\n  children: <div></div>,\n  disabled: false\n};\n\nexport default Button;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"../Button\";\nimport {\n  Card,\n  Typography,\n  CardContent,\n  Divider,\n  // Button,\n  CardActions,\n  Modal\n} from \"@material-ui/core\";\n\nconst style = {\n  margin: \"auto\",\n  position: \"absolute\",\n  overflow: \"auto\",\n  display: \"flex\",\n  flexDirection: \"column\"\n};\n\nconst AbstractModal = props => {\n  const onKeyPress = e => {\n    if (e.key === \"Enter\") {\n      submit();\n    }\n  };\n\n  const submit = () => {\n    props.onSubmit();\n  };\n\n  const cancel = () => {\n    props.onCancel();\n  };\n\n  return (\n    <Modal\n      onKeyPress={onKeyPress}\n      open={props.open}\n      onClose={cancel}\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      }}\n    >\n      <Card\n        style={{\n          ...style,\n          width: props.width,\n          height: props.height,\n          minWidth: \"260px\",\n          minHeight: \"280px\"\n        }}\n      >\n        <CardContent\n          style={{\n            flexGrow: 1,\n            display: \"flex\",\n            flexDirection: \"column\",\n            minHeight: 0\n          }}\n        >\n          <Typography\n            variant=\"h5\"\n            style={{\n              padding: \"12px 0px 12px 6px\",\n              fontWeight: 600\n            }}\n          >\n            {props.title}\n          </Typography>\n          <div\n            style={{\n              paddingLeft: \"6px\",\n              flexGrow: 1,\n              overflow: \"auto\",\n              minHeight: 0\n            }}\n          >\n            {props.children}\n          </div>\n        </CardContent>\n        <Divider />\n        <CardActions style={{ alignSelf: \"flex-end\" }}>\n          <Button onClick={cancel} variant=\"outlined\" color={props.cancelColor}>\n            {props.cancelText}\n          </Button>\n          <Button color={props.submitColor} onClick={submit}>\n            {props.submitText}\n          </Button>\n        </CardActions>\n      </Card>\n    </Modal>\n  );\n};\n\nAbstractModal.propTypes = {\n  onSubmit: PropTypes.func,\n  onCancel: PropTypes.func,\n  open: PropTypes.bool,\n  title: PropTypes.string,\n  submitText: PropTypes.string,\n  submitColor: PropTypes.string,\n  cancelText: PropTypes.string,\n  cancelColor: PropTypes.string,\n  width: PropTypes.string,\n  height: PropTypes.string\n};\n\nAbstractModal.defaultProps = {\n  onSubmit: () => {},\n  onCancel: () => {},\n  open: false,\n  title: \"New\",\n  submitText: \"Confirm\",\n  submitColor: \"primary\",\n  cancelText: \"Cancel\",\n  cancelColor: \"inherit\",\n  width: \"25%\",\n  height: \"25%\"\n};\n\nexport default AbstractModal;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport AbstractModal from \"./AbstractModal\";\n\nconst ConfirmAlertModal = props => {\n  return (\n    <AbstractModal\n      onSubmit={props.onSubmit}\n      onCancel={props.onCancel}\n      open={props.open}\n      title={props.title}\n      submitText={props.submitText}\n      submitColor={props.submitColor}\n      cancelText={props.cancelText}\n      cancelColor={props.cancelColor}\n    >\n      <div>{props.message}</div>\n      <div>{props.children}</div>\n    </AbstractModal>\n  );\n};\n\nConfirmAlertModal.propTypes = {\n  title: PropTypes.string,\n  message: PropTypes.string,\n  onSubmit: PropTypes.func,\n  onCancel: PropTypes.func,\n  open: PropTypes.bool,\n  submitText: PropTypes.string,\n  submitColor: PropTypes.string,\n  cancelText: PropTypes.string,\n  cancelColor: PropTypes.string\n};\n\nConfirmAlertModal.defaultProps = {\n  title: \"Insert Text here\",\n  message: \"Are you sure?\",\n  onSubmit: () => {},\n  onCancel: () => {},\n  open: false,\n  submitText: \"Delete\",\n  submitColor: \"secondary\",\n  cancelText: \"Cancel\",\n  cancelColor: \"primary\"\n};\n\nexport default ConfirmAlertModal;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport MaterialDrawer from \"@material-ui/core/Drawer\";\n\nconst Drawer = props => {\n  return (\n    <MaterialDrawer\n      style={props.style}\n      anchor={props.anchor}\n      open={props.open}\n      onClose={props.onClose}\n    >\n      {props.children}\n    </MaterialDrawer>\n  );\n};\n\nDrawer.propTypes = {\n  style: PropTypes.object,\n  anchor: PropTypes.string,\n  open: PropTypes.bool,\n  children: PropTypes.object\n};\n\nDrawer.defaultProps = {\n  style: {},\n  anchor: \"left\",\n  open: false,\n  children: <div></div>\n};\n\nDrawer.ANCHOR = { left: \"left\", right: \"right\", top: \"top\", bottom: \"bottom\" };\n\nexport default Drawer;\n","import React from \"react\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport PropTypes from \"prop-types\";\nimport MaterialCollapse from \"@material-ui/core/Collapse\";\nimport { Divider, ListItem, List } from \"@material-ui/core\";\n\nconst Collapse = props => {\n  const [open, setOpen] = React.useState(props.open);\n\n  React.useEffect(() => {\n    if (props.open !== open) {\n      setOpen(props.open);\n    }\n  }, [props.open]);\n\n  const handleClickFactory = clickLambda => () => {\n    setOpen(!open);\n    clickLambda();\n  };\n\n  return (\n    <List>\n      <ListItem button onClick={handleClickFactory(props.onClick)}>\n        {open ? (\n          <ExpandMore style={{ ...props.iconStyle }} />\n        ) : (\n          <ChevronRightIcon style={{ ...props.iconStyle }} />\n        )}\n        <div style={{ width: \"100%\" }}>{props.item}</div>\n      </ListItem>\n      {props.divided ? <Divider /> : []}\n      <MaterialCollapse\n        className={props.className}\n        style={props.style}\n        in={open}\n      >\n        {props.children}\n      </MaterialCollapse>\n    </List>\n  );\n};\n\nCollapse.propTypes = {\n  item: PropTypes.object,\n  onClick: PropTypes.func,\n  open: PropTypes.bool,\n  divided: PropTypes.bool,\n  iconStyle: PropTypes.object\n};\n\nCollapse.defaultProps = {\n  item: <div></div>,\n  onClick: () => {},\n  open: false,\n  divided: false,\n  style: {},\n  iconStyle: {}\n};\n\nexport default Collapse;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    height: \"100%\",\n    backgroundColor: props => props.backgroundColor,\n    width: props => props.width,\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  logoArea: {\n    padding: \"17px\",\n    textAlign: \"center\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  navigationArea: {\n    flexGrow: 1,\n    display: \"flex\",\n    flexDirection: \"column\",\n    //justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  accountArea: {\n    padding: props => (props.unsetAccountAreaPadding ? \"unset\" : \"17px\"),\n    textAlign: \"center\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n}));\n\nconst VerticalBar = props => {\n  const classes = useStyles(props);\n  return (\n    <div className={classes.container}>\n      <div className={classes.logoArea}>{props.upperElement}</div>\n      <div className={classes.navigationArea}>\n        {props.navigationList.map((element, index) => {\n          return (\n            <div key={index} style={{ padding: \"15px 0px\" }}>\n              {element}\n            </div>\n          );\n        })}\n      </div>\n      <div className={classes.accountArea}>{props.lowerElement}</div>\n    </div>\n  );\n};\n\nVerticalBar.propTypes = {\n  upperElement: PropTypes.node.isRequired,\n  navigationList: PropTypes.array,\n  lowerElement: PropTypes.node.isRequired,\n  width: PropTypes.string,\n  backgroundColor: PropTypes.string,\n  unsetAccountAreaPadding: PropTypes.bool\n};\nVerticalBar.defaultProps = {\n  upperElement: <div></div>,\n  navigationList: [<div></div>],\n  lowerElement: <div></div>,\n  width: \"68px\",\n  backgroundColor: \"#424242\",\n  unsetAccountAreaPadding: false\n};\n\nexport default VerticalBar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nconst ContextMenu = props => {\n  const { style } = props;\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div style={style}>\n      {React.cloneElement(props.element, {\n        onClick: evt => {\n          if (props.element.props.onClick !== undefined) {\n            props.element.props.onClick(); // If user defined a onClick\n          }\n          handleClick(evt); // opens the contextMenu\n        }\n      })}\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {props.menuList.reduce((result, item, index) => {\n          if (item && typeof item !== \"function\") {\n            result.push(\n              <MenuItem\n                onClick={() => {\n                  item.onClick();\n                  if (item.onClose || item.onClose === undefined) {\n                    handleClose();\n                  }\n                }}\n                key={index}\n              >\n                {item.element}\n              </MenuItem>\n            );\n          }\n          return result;\n        }, [])}\n      </Menu>\n    </div>\n  );\n};\n\nContextMenu.propTypes = {\n  element: PropTypes.node.isRequired,\n  navigationList: PropTypes.array,\n  lowerElement: PropTypes.node.isRequired,\n  width: PropTypes.string,\n  backgroundColor: PropTypes.string\n};\nContextMenu.defaultProps = {\n  element: <div>Ahaha</div>,\n  menuList: [\n    {\n      onClick: () => console.log(\"clicked 1\"),\n      element: \"Profile\",\n      onClose: true\n    }\n  ],\n  lowerElement: <div></div>,\n  width: \"68px\",\n  backgroundColor: \"#424242\",\n  style: {}\n};\n\nexport default ContextMenu;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport MaterialTable from \"material-table\";\n\nimport { forwardRef } from \"react\";\n\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n};\n\n// More information in: https://material-table.com/#/docs/all-props\n\nconst Table = (props) => {\n  return (\n    <MaterialTable\n      style={props.style}\n      title={props.title}\n      columns={props.columns}\n      data={props.data}\n      icons={tableIcons}\n      actions={props.actions}\n      options={props.options}\n      components={props.components}\n      localization={props.localization}\n    />\n  );\n};\n\nTable.propTypes = {\n  style: PropTypes.object,\n  title: PropTypes.string,\n  columns: PropTypes.array,\n  data: PropTypes.array,\n  actions: PropTypes.array,\n  options: PropTypes.object,\n  components: PropTypes.object,\n  localization: PropTypes.object,\n};\nTable.defaultProps = {\n  style: {},\n  title: \"\",\n  columns: [],\n  data: [],\n  actions: [],\n  options: {\n    actionsColumnIndex: -1,\n    draggable: false,\n    grouping: false,\n    search: false,\n    toolbar: false,\n    searchFieldAlignment: \"left\",\n    paging: false,\n  },\n  components: {},\n};\n\nexport default Table;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MaterialTabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\n\nfunction TabPanel(props) {\n  const { children, selectedTab, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={selectedTab !== index}\n      id={`tabpanel-${index}`}\n      aria-labelledby={`tab-${index}`}\n      {...other}\n    >\n      {selectedTab === index && children}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  selectedTab: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `tab-${index}`,\n    \"aria-controls\": `tabpanel-${index}`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    height: \"100%\"\n  },\n  tabPanel: {\n    flexGrow: 1,\n    minHeight: 0,\n    height: \"calc(100% - 48px)\",\n    overflowY: \"auto\"\n  }\n}));\n\nexport default function Tabs(props) {\n  const classes = useStyles();\n  const [selectedTab, setSelectedTab] = React.useState(props.selectedTab);\n\n  React.useEffect(() => {\n    if (props.selectedTab !== selectedTab) {\n      setSelectedTab(props.selectedTab);\n    }\n  }, [props.selectedTab]);\n\n  const handleChange = (event, newSelectedTab) => {\n    setSelectedTab(newSelectedTab);\n  };\n\n  return (\n    <div className={classes.root}>\n      <MaterialTabs\n        value={selectedTab}\n        onChange={handleChange}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n      >\n        {props.tabList.map((tab, index) => (\n          <Tab key={index} label={tab.label} {...a11yProps(index)} />\n        ))}\n      </MaterialTabs>\n      {props.tabList.map((tab, index) => (\n        <TabPanel\n          key={index}\n          selectedTab={selectedTab}\n          index={index}\n          className={props.scrollable ? classes.tabPanel : undefined}\n        >\n          {tab.component}\n        </TabPanel>\n      ))}\n    </div>\n  );\n}\n\nTabs.propTypes = {\n  tabList: PropTypes.array,\n  selectedTab: PropTypes.number,\n  scrollable: PropTypes.bool\n};\n\nTabs.defaultProps = {\n  tabList: [\n    { label: \"Tab 1\", component: <div>Component 1</div> },\n    {\n      label: \"Tab 2\",\n      component: (\n        <div>\n          Lorem Ipsum is simply dummy text of the printing and typesetting\n          industry. Lorem Ipsum has been the industry standard dummy text ever\n          since the 1500s, when an unknown printer took a galley of type and\n          scrambled it to make a type specimen book. It has survived not only\n          five centuries, but also the leap into electronic typesetting,\n          remaining essentially unchanged. It was popularised in the 1960s with\n          the release of Letraset sheets containing Lorem Ipsum passages, and\n          more recently with desktop publishing software like Aldus PageMaker\n          including versions of Lorem Ipsum.\n        </div>\n      )\n    },\n    { label: \"Tab 3\", component: <div>Component 3</div> }\n  ],\n  selectedTab: 0,\n  scrollable: true\n};\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PropTypes from \"prop-types\";\n\nconst Text = props => {\n  return <TextField {...props}></TextField>;\n};\n\nText.propTypes = {};\nText.defaultProps = {};\n\nexport default Text;\n","import React from \"react\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { green, grey } from \"@material-ui/core/colors\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles(theme => ({\n  label: {\n    fontFamily: \"Roboto\",\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fontSize: \"14px\",\n    marginLeft: 0,\n    marginRight: 0,\n    marginBottom: 0\n  },\n  colorSwitchBase: {\n    color: grey[300],\n    \"&$colorChecked\": {\n      color: green[500],\n      \"& + $colorBar\": {\n        backgroundColor: green[500]\n      }\n    }\n  },\n  colorBar: {},\n  colorChecked: {}\n}));\n\nconst Toggle = props => {\n  const classes = useStyles();\n  return (\n    <FormControlLabel\n      control={\n        <Switch\n          checked={props.toggle}\n          onChange={props.onToggle}\n          color={props.color}\n          disabled={props.disabled}\n          hidden={props.hidden}\n          size={props.size}\n          classes={{\n            switchBase: classes.colorSwitchBase,\n            checked: classes.colorChecked,\n            track: classes.colorBar\n          }}\n        />\n      }\n      labelPlacement={props.labelPlacement}\n      label={props.label}\n      classes={{ label: classes.label }}\n      style={{ ...props.style, marginLeft: 0, marginRight: 0, marginBottom: 0 }}\n    />\n  );\n};\n\nToggle.propTypes = {\n  toggle: PropTypes.bool,\n  onToggle: PropTypes.func,\n  label: PropTypes.string,\n  color: PropTypes.string,\n  labelPlacement: PropTypes.string, // 'end', 'start', 'top', 'bottom'\n  style: PropTypes.object\n};\nToggle.defaultProps = {\n  color: \"primary\" // or secondary\n};\n\nexport default Toggle;\n","import React, { Component } from \"react\";\nimport { fade, withStyles } from \"@material-ui/core/styles\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport PropTypes from \"prop-types\";\n\nconst styles = theme => ({\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(3),\n      width: \"auto\"\n    }\n  },\n  searchIcon: {\n    width: theme.spacing(7),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  inputRoot: {\n    color: \"inherit\"\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 7),\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: 200\n    }\n  }\n});\n\nclass SearchInput extends Component {\n  searchInput = undefined;\n  timer = undefined;\n\n  handleChange = evt => {\n    this.searchInput = evt.target.value;\n    if (this.props.enableTimeout) {\n      if (this.timer) {\n        clearTimeout(this.timer);\n      }\n      this.timer = setTimeout(this.handleSearch, this.props.time);\n    } else {\n      this.handleSearch();\n    }\n  };\n\n  handleSearch = () => {\n    if (this.searchInput !== undefined) this.props.onChange(this.searchInput);\n  };\n\n  render() {\n    const { classes, style, placeholder } = this.props;\n    return (\n      <div className={classes.search} style={style}>\n        <div className={classes.searchIcon}>\n          <SearchIcon />\n        </div>\n        <InputBase\n          ref={this.setSearchInput}\n          placeholder={placeholder}\n          classes={{\n            root: classes.inputRoot,\n            input: classes.inputInput\n          }}\n          inputProps={{ \"aria-label\": \"search\" }}\n          onChange={this.handleChange}\n        />\n      </div>\n    );\n  }\n}\n\nSearchInput.propTypes = {\n  placeholder: PropTypes.string,\n  onChange: PropTypes.func,\n  time: PropTypes.number,\n  enableTimeout: PropTypes.bool,\n  style: PropTypes.object\n};\n\nSearchInput.defaultProps = {\n  placeholder: \"Search...\",\n  onChange: input => {\n    console.log(input);\n  },\n  time: 250,\n  enableTimeout: true,\n  style: {}\n};\n\nexport default withStyles(styles, { withTheme: true })(SearchInput);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nimport Typography from \"@material-ui/core/Typography\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& > * + *\": {\n      marginTop: theme.spacing(2)\n    }\n  },\n  link: {\n    fontSize: \"24px\",\n    fontWeight: 800,\n    fontFamily: \"Open Sans\",\n    \"&:hover\": {\n      cursor: \"pointer\",\n      textDecoration: \"underline\"\n    }\n  },\n  lastLabel: {\n    fontSize: \"24px\",\n    fontWeight: 800,\n    fontFamily: \"Open Sans\"\n  }\n}));\n\nconst Breadcrumb = props => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Breadcrumbs\n        separator={<NavigateNextIcon fontSize=\"small\" />}\n        aria-label=\"breadcrumb\"\n        style={props.style}\n      >\n        {props.pathList.map((element, index) => {\n          if (props.pathList.length - 1 !== index) {\n            return (\n              <Typography\n                key={index}\n                color=\"primary\"\n                variant=\"inherit\"\n                className={classes.link}\n                onClick={element.function}\n              >\n                {element.label}\n              </Typography>\n            );\n          }\n        })}\n        <Typography color=\"textPrimary\" className={classes.lastLabel}>\n          {props.pathList[props.pathList.length - 1].label}\n        </Typography>\n      </Breadcrumbs>\n    </div>\n  );\n};\n\nBreadcrumb.propTypes = {\n  pathList: PropTypes.array\n};\n\nBreadcrumb.defaultProps = {\n  pathList: [\n    { label: \"Mov.ai\", function: () => console.log(\"pth1/\") },\n    { label: \"User\", function: () => console.log(\"path1/path2\") },\n    { label: \"John Doe\" }\n  ]\n};\n\nexport default Breadcrumb;\n","//========================================================================================\n/*                                                                                      *\n *         Based from https://doc.babylonjs.com/resources/babylonjs_and_reactjs         *\n *                                                                                      */\n//========================================================================================\n\nimport { Engine, Scene } from \"@babylonjs/core\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport ReactResizeDetector from \"react-resize-detector\";\nimport PropTypes from \"prop-types\";\nconst FLEX_STYLE = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  flexGrow: 1\n};\n// import EngineSingleton from \"../Util3d/EngineSingleton\";\n\nconst BaseViewer = props => {\n  const {\n    antialias,\n    engineOptions,\n    adaptToDeviceRatio,\n    sceneOptions,\n    onRender,\n    onSceneReady,\n    is2render,\n    sceneFactory,\n    ...rest\n  } = props;\n  const reactCanvas = useRef(null);\n  const [loaded, setLoaded] = useState(false);\n  const [scene, setScene] = useState(null);\n  const [size, setSize] = useState({ width: 100, height: 100 });\n\n  const setUpScene = engine => {\n    const scene = sceneFactory\n      ? sceneFactory(engine)\n      : new Scene(engine, sceneOptions);\n    setScene(scene);\n    if (scene.isReady()) {\n      onSceneReady(scene);\n    } else {\n      scene.onReadyObservable.addOnce(scene => onSceneReady(scene));\n    }\n    return scene;\n  };\n\n  const onResize = (width, height) => {\n    setSize({\n      width,\n      height\n    });\n    scene && scene.getEngine().resize();\n  };\n\n  const renderScene = (engine, nScene) => {\n    if (!is2render) return;\n    engine.runRenderLoop(() => {\n      if (typeof onRender === \"function\") {\n        onRender(nScene);\n      }\n      nScene && nScene.render();\n    });\n  };\n\n  useEffect(() => {\n    if (!loaded) {\n      setLoaded(true);\n      const engine = new Engine(\n        reactCanvas.current,\n        antialias,\n        engineOptions,\n        adaptToDeviceRatio\n      );\n      // const engine = new EngineSingleton(reactCanvas.current).engine;\n      const newScene = setUpScene(engine);\n      renderScene(engine, newScene);\n    }\n\n    return () => {\n      console.log(\"Disposing engine and scene\");\n      scene && scene.dispose();\n      scene && scene.getEngine() && scene.getEngine().dispose();\n    };\n  }, [reactCanvas, loaded, scene]);\n\n  loaded && reactCanvas.current.focus();\n  return (\n    <div style={{ ...FLEX_STYLE }}>\n      <canvas\n        ref={reactCanvas}\n        width={size.width}\n        height={size.height}\n        {...rest}\n      />\n      <ReactResizeDetector handleWidth handleHeight onResize={onResize} />\n    </div>\n  );\n};\n\nBaseViewer.propTypes = {\n  antialias: PropTypes.bool,\n  engineOptions: PropTypes.object,\n  adaptToDeviceRatio: PropTypes.bool,\n  sceneOptions: PropTypes.object,\n  onSceneReady: PropTypes.func,\n  onRender: PropTypes.func,\n  is2render: PropTypes.bool,\n  sceneFactory: PropTypes.func\n};\n\nBaseViewer.defaultProps = {\n  antialias: true,\n  onSceneReady: scene => {},\n  is2render: true,\n  engineOptions: { preserveDrawingBuffer: true, stencil: true }\n};\n\nexport default BaseViewer;\n","import { Clipboard as Clip } from \"mov-fe-lib-core\";\n\nconst SCENE_CONTEXT = \"scene\";\n\nexport default class Clipboard {\n  static copy(value) {\n    Clip.write(SCENE_CONTEXT, value);\n  }\n  static paste() {\n    return Clip.read(SCENE_CONTEXT);\n  }\n}\n","//immutable class, not managing exceptions\nclass Vec2 {\n  constructor(x, y) {\n    this.vec = [x, y].map(z => (z ? z : 0));\n  }\n\n  get x() {\n    return this.vec[0];\n  }\n\n  get y() {\n    return this.vec[1];\n  }\n\n  toArray() {\n    return this.vec;\n  }\n\n  add(y) {\n    return this.op(y, (a, b) => a + b);\n  }\n\n  sub(y) {\n    return this.op(y, (a, b) => a - b);\n  }\n\n  mul(y) {\n    return this.op(y, (a, b) => a * b);\n  }\n\n  div(y) {\n    return this.op(y, (a, b) => a / b);\n  }\n\n  dot(y) {\n    return this.vec.reduce((acc, v, i) => acc + v * y.vec[i], 0);\n  }\n\n  prod(y) {\n    return new Vec2(this.x * y.x - this.y * y.y, this.x * y.y + this.y * y.x);\n  }\n\n  length() {\n    return Math.sqrt(this.dot(this));\n  }\n\n  normalize() {\n    return this.scale(1 / this.length());\n  }\n\n  dual() {\n    return new Vec2(-this.y, this.x);\n  }\n\n  sym() {\n    return this.scale(-1);\n  }\n\n  conj() {\n    return new Vec2(this.x, -this.y);\n  }\n\n  scale(r) {\n    return this.map(z => z * r);\n  }\n\n  map(lambda) {\n    return Vec2.fromArray(this.vec.map(lambda));\n  }\n\n  /**\n   * Returns a vec2 from the operation function bilambda\n   * @param {*} y\n   * @param {*} biLambda\n   */\n  op(y, biLambda) {\n    return Vec2.fromArray(this.vec.map((v, i) => biLambda(v, y.vec[i])));\n  }\n\n  reduce(fold, initial) {\n    return this.vec.reduce(fold, initial);\n  }\n\n  toObject() {\n    return { x: this.x, y: this.y };\n  }\n\n  toString() {\n    return `{x: ${this.x}, y:${this.y}}`;\n  }\n\n  static fromArray(array) {\n    if (array.length < 2) throw new Error(\"array must have size > 2\");\n    return new Vec2(array[0], array[1]);\n  }\n\n  static of(x, y) {\n    return new Vec2(x, y);\n  }\n\n  static ofBabylon(vector3) {\n    return new Vec2(vector3.x, vector3.y);\n  }\n\n  static ZERO = new Vec2(0, 0);\n  static e1 = new Vec2(1, 0);\n  static e2 = new Vec2(0, 1);\n}\n\nexport default Vec2;\n","import { Vector3 } from \"@babylonjs/core\";\nimport Vec2 from \"./Vec2\";\n\n/**\n * Class that describes immutable 3-vectors\n */\nclass Vec3 {\n  //no for's because performance\n  constructor(array) {\n    if (array.constructor !== Array || array.length < 3)\n      throw new Error(`${array} is not a valid 3-vector`);\n    this.vec3 = [...array];\n  }\n\n  get x() {\n    return this.vec3[0];\n  }\n\n  get y() {\n    return this.vec3[1];\n  }\n\n  get z() {\n    return this.vec3[2];\n  }\n\n  add(x) {\n    return this.op(x, (a, b) => a + b);\n  }\n\n  sub(x) {\n    return this.op(x, (a, b) => a - b);\n  }\n\n  mul(x) {\n    return this.op(x, (a, b) => a * b);\n  }\n\n  op(x, operation) {\n    const ans = [];\n    ans[0] = operation(this.vec3[0], x.vec3[0]);\n    ans[1] = operation(this.vec3[1], x.vec3[1]);\n    ans[2] = operation(this.vec3[2], x.vec3[2]);\n    return new Vec3(ans);\n  }\n\n  scale(r) {\n    return this.map(x => x * r);\n  }\n\n  dot(x) {\n    return (\n      this.vec3[0] * x.vec3[0] +\n      this.vec3[1] * x.vec3[1] +\n      this.vec3[2] * x.vec3[2]\n    );\n  }\n\n  map(f) {\n    return new Vec3(this.vec3.map(f));\n  }\n\n  length() {\n    return Math.sqrt(this.dot(this));\n  }\n\n  normalize = () => {\n    const l = this.length();\n    if (l === 0) throw new Error(\"You can't normalize a zero norm vector\");\n    return this.scale(1 / l);\n  };\n\n  toBabylon() {\n    return new Vector3(this.vec3[0], this.vec3[1], this.vec3[2]);\n  }\n\n  toArray() {\n    return this.vec3;\n  }\n\n  toVec2() {\n    return new Vec2(this.x, this.y);\n  }\n\n  equals(v) {\n    if (v.constructor !== this.constructor) return false;\n    return v.vec3\n      .map((x, index) => v.vec3[index] === x)\n      .reduce((e, v) => e && v, true);\n  }\n\n  reduce(binary, initialValue) {\n    return this.vec3.reduce(binary, initialValue);\n  }\n\n  getMax() {\n    return this.reduce((a, b) => Math.max(a, b), -Number.MAX_VALUE);\n  }\n\n  getMin() {\n    return this.reduce((a, b) => Math.min(a, b), Number.MAX_VALUE);\n  }\n\n  someNaNOrInfinite() {\n    return this.vec3.some(x => isNaN(x) || !isFinite(x));\n  }\n\n  static ofBabylon(babylon) {\n    return new Vec3([babylon.x, babylon.y, babylon.z]);\n  }\n\n  static of(array) {\n    return array ? new Vec3(array) : new Vec3([0, 0, 0]);\n  }\n\n  static fromArray(array) {\n    return Vec3.of(array);\n  }\n\n  static random() {\n    return new Vec3([1, 2, 3].map(Math.random()));\n  }\n\n  /**\n   *\n   * @param {*} u: Vec3\n   */\n  static orthogonalBasisFromVector(u) {\n    const identityMatrix = [Vec3.e1, Vec3.e2, Vec3.e3];\n    //choose pivot\n    let pivot = 0;\n    for (let i = 0; i < 3; i++) {\n      if (u.vec3[i] !== 0) {\n        pivot = i;\n        break;\n      }\n    }\n    let v = identityMatrix[(pivot + 1) % 3].add(\n      identityMatrix[pivot].scale(-u.vec3[(pivot + 1) % 3] / u.vec3[pivot])\n    );\n    v = v.normalize();\n    let w = identityMatrix[(pivot + 2) % 3].add(\n      identityMatrix[pivot].scale(-u.vec3[(pivot + 2) % 3] / u.vec3[pivot])\n    );\n    w = w.normalize();\n    w = w.sub(v.scale(v.dot(w)));\n    return { u: u.normalize(), v: v, w: w.normalize() };\n  }\n\n  static ONES = Vec3.of([1, 1, 1]);\n  static ZERO = Vec3.of([0, 0, 0]);\n  static e1 = new Vec3([1, 0, 0]);\n  static e2 = new Vec3([0, 1, 0]);\n  static e3 = new Vec3([0, 0, 1]);\n}\n\nexport default Vec3;\n","import { MasterDB } from \"mov-fe-lib-core\";\n\nclass AnnotationManager {\n  constructor() {\n    if (instance) return instance;\n    instance = this;\n    this.annotations = {};\n    this.observersBySceneId = {};\n  }\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                   Getters & Setters                                  *\n   *                                                                                      */\n  //========================================================================================\n\n  getAnnotations = () => this.annotations;\n\n  load() {\n    this.retrieveAnnotationsFromDb();\n    return this;\n  }\n  /**\n   *\n   * @param {*} scene: Scene\n   * @param {*} lambda: AnnotationManager -> {}\n   */\n  pushObserver(scene, lambda) {\n    const sceneId = scene._uid;\n\n    if (!(sceneId in this.observersBySceneId)) {\n      this.observersBySceneId[sceneId] = [];\n    }\n    this.observersBySceneId[sceneId].push(lambda);\n    return this;\n  }\n\n  clearObserver(scene) {\n    const sceneId = scene._uid;\n    if (sceneId in this.observersBySceneId) {\n      delete this.observersBySceneId[sceneId];\n    }\n  }\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                         Utils                                        *\n   *                                                                                      */\n  //========================================================================================\n\n  retrieveAnnotationsFromDb() {\n    MasterDB.subscribe(\n      { Scope: \"Annotation\", Name: \"*\" },\n      data => {\n        console.log(\"Annotation update\", data);\n        const actionMap = {\n          del: annotation => this.delAnnotation(annotation),\n          set: annotation => this.addAnnotation(annotation)\n        };\n        const annotation = data.key.Annotation;\n        if (data.event in actionMap) {\n          actionMap[data.event](annotation);\n          Object.keys(this.observersBySceneId).forEach(k =>\n            this.observersBySceneId[k].forEach(f => f(this))\n          );\n        }\n      },\n      data => {\n        console.log(\"Annotation start\", data);\n        const annotation = data.value.Annotation;\n        this.addAnnotation(annotation);\n      }\n    );\n  }\n\n  delAnnotation(annotation) {\n    if (!annotation) return;\n    const names2delete = Object.keys(annotation).reduce((e, x) => {\n      e.push(x);\n      return e;\n    }, []);\n    Object.keys(this.annotations).forEach(annotationType => {\n      const value = this.annotations[annotationType];\n      value.names = value.names.filter(x => !names2delete.includes(x));\n      value.labels = value.labels.filter(x => !names2delete.includes(x));\n    });\n  }\n\n  addAnnotation(annotation) {\n    if (!annotation) return;\n    Object.keys(annotation).forEach(name => {\n      const annotationObj = annotation[name];\n      if (!annotationObj.Type) return;\n      const type = annotationObj.Type.toLowerCase();\n      const label = annotationObj.Label;\n      if (!(type in this.annotations)) {\n        this.annotations[type] = { names: [], labels: [] };\n      }\n      this.annotations[type].names.push(name);\n      this.annotations[type].labels.push(label ? label : name);\n    });\n  }\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                        Static                                        *\n   *                                                                                      */\n  //========================================================================================\n\n  static getInstance() {\n    return new AnnotationManager();\n  }\n\n  static getAnnotations() {\n    return AnnotationManager.getInstance().getAnnotations();\n  }\n}\nlet instance = null;\nexport default AnnotationManager;\n","import Clipboard from \"../Utils/Clipboard\";\nimport Vec3 from \"../Math/Vec3\";\nimport { Maybe } from \"monet\";\nimport _capitalize from \"lodash/capitalize\";\nimport { Quaternion, Color3, Vector3 } from \"@babylonjs/core\";\nimport AnnotationManager from \"../Utils/AnnotationManager\";\nimport GlobalRef from \"./GlobalRef\";\n\nclass NodeItem {\n  constructor(mesh, keyValueMap = {}) {\n    this.name = mesh.name;\n    this.mesh = mesh;\n    this.mesh.getMouseContextActions = this.getMouseContextActions;\n    this.mesh.nodeItem = this;\n    this.keyValueMap = keyValueMap;\n  }\n\n  dispose() {\n    this.mesh.dispose();\n  }\n\n  toDict() {\n    return {\n      name: this.name,\n      type: this.getType(),\n      position: Vec3.ofBabylon(this.mesh?.position).toArray(),\n      quaternion: Maybe.fromNull(this.mesh?.rotationQuaternion)\n        .map(x => [x.w, x.x, x.y, x.z])\n        .orLazy(() => {\n          const q = Quaternion.RotationYawPitchRoll(\n            this.mesh.rotation.y,\n            this.mesh.rotation.x,\n            this.mesh.rotation.z\n          );\n          return [q.w, q.x, q.y, q.z];\n        }),\n      color: Maybe.fromNull(this.mesh?.material)\n        .flatMap(x => Maybe.fromNull(x.diffuseColor).map(z => [z.r, z.g, z.b]))\n        .orSome([0, 0, 0]),\n      keyValueMap: this.keyValueMap,\n      isVisible: this.mesh.isEnabled()\n    };\n  }\n\n  /**\n   * Generates json based on https://github.com/rjsf-team/react-jsonschema-form\n   */\n  toForm() {\n    const info = this.toDict();\n    const color = new Color3(info.color[0], info.color[1], info.color[2]);\n    const schema = {\n      jsonSchema: {\n        type: \"object\",\n        properties: {\n          oldName: {\n            type: \"string\"\n          },\n          name: {\n            type: \"string\",\n            title: \"Name\"\n          },\n          type: {\n            type: \"string\",\n            title: \"Type\"\n          },\n          position: {\n            type: \"object\",\n            title: \"Position\",\n            properties: {\n              x: {\n                type: \"number\",\n                title: \"x\"\n              },\n              y: {\n                type: \"number\",\n                title: \"y\"\n              },\n              z: {\n                type: \"number\",\n                title: \"z\"\n              }\n            }\n          },\n          quaternion: {\n            type: \"object\",\n            title: \"Orientation\",\n            properties: {\n              w: {\n                type: \"number\",\n                title: \"w\"\n              },\n              x: {\n                type: \"number\",\n                title: \"x\"\n              },\n              y: {\n                type: \"number\",\n                title: \"y\"\n              },\n              z: {\n                type: \"number\",\n                title: \"z\"\n              }\n            }\n          },\n          color: {\n            type: \"string\",\n            title: \"Color\"\n          }\n        }\n      },\n      uiSchema: {\n        type: {\n          \"ui:disabled\": true\n        },\n        color: {\n          \"ui:widget\": \"color\"\n        },\n        oldName: {\n          \"ui:widget\": \"hidden\"\n        },\n        position: {\n          \"ui:widget\": \"collapse\"\n        },\n        quaternion: {\n          \"ui:widget\": \"collapse\"\n        }\n      },\n      data: {\n        oldName: info.name,\n        name: info.name,\n        type: info.type,\n        position: {\n          x: info.position[0],\n          y: info.position[1],\n          z: info.position[2]\n        },\n        quaternion: {\n          w: info.quaternion[0],\n          x: info.quaternion[1],\n          y: info.quaternion[2],\n          z: info.quaternion[3]\n        },\n        color: color.toHexString()\n      }\n    };\n\n    NodeItem.setAnnotations2Form(schema, this.keyValueMap);\n    return schema;\n  }\n\n  /**\n   * Changes NodeItem based on a form\n   *\n   * Warning: side effect function\n   * @param {*} form\n   */\n  ofForm(form) {\n    this.name = form.name;\n    this.mesh.name = form.name;\n\n    Maybe.fromNull(form?.position).forEach(position => {\n      const pos = [position.x, position.y, position.z].map(Number.parseFloat);\n      this.mesh.position = Vector3.FromArray(pos);\n    });\n    Maybe.fromNull(form?.quaternion).forEach(quaternion => {\n      const quat = [quaternion.x, quaternion.y, quaternion.z, quaternion.w].map(\n        Number.parseFloat\n      );\n      this.mesh.rotationQuaternion = Quaternion.FromArray(quat).normalize();\n    });\n    if (this.mesh.material) {\n      this.mesh.material.diffuseColor = Color3.FromHexString(form.color);\n      this.mesh.material.emissiveColor = Color3.FromHexString(form.color);\n    }\n    this.keyValueMap = { ...form.annotations };\n  }\n\n  getType = () => NodeItem.TYPE;\n\n  getMouseContextActions = mainView => {\n    return [\n      {\n        title: \"Copy\",\n        onClick: () => Clipboard.copy(this.getCopyFunction())\n      },\n      {\n        title: \"Delete\",\n        onClick: () =>\n          mainView\n            .getNodeFromTree(this.name)\n            .forEach(node => mainView.onDeleteNode(node, false))\n      }\n    ];\n  };\n\n  getCopyFunction(isForceUpdate = true) {\n    // mousePosFromRoot : Vector3\n    return (mousePosFromRoot, someMainView) =>\n      someMainView.getSceneMemory().map(({ scene }) => {\n        const { item: rootItem } = someMainView.getRootNode();\n        const copyDict = this.toDict();\n        copyDict.name += \"_copy\" + Clipboard.getUID();\n        const newPosArray = Vec3.ofBabylon(mousePosFromRoot).toArray();\n        // preserves z-coordinate\n        newPosArray[2] = copyDict.position[2];\n        copyDict.position = newPosArray;\n        const copiedNodeItem = this.ofDict(scene, copyDict, someMainView);\n        const { mesh: copiedMesh } = copiedNodeItem;\n        copiedMesh.parent = rootItem.mesh;\n        someMainView.addNodeItem2Tree(\n          copiedNodeItem,\n          GlobalRef.NAME,\n          true,\n          true,\n          isForceUpdate\n        );\n        return copiedNodeItem;\n      });\n  }\n\n  delVertex() {\n    let delVertex = this.mesh.graphVertex?.delVertex;\n    if (!delVertex) {\n      const childrenWithDelVertex = (this.mesh?._children || [])\n        .filter(childMesh => !!childMesh.graphVertex)\n        .map(childMesh => childMesh.graphVertex.delVertex);\n      delVertex = () => childrenWithDelVertex.forEach(del => del());\n    }\n    delVertex();\n  }\n\n  //========================================================================================\n  /*                                                                                      *\n   *                           Static attributes/methods                                  *\n   *                                                                                      */\n  //========================================================================================\n\n  static TYPE = \"NodeItem\";\n\n  // side-effect function\n  static mapDict2Mesh(dict, mesh) {\n    if (!mesh) throw new Error(\"can't map a null mesh\");\n    Maybe.fromNull(dict).forEach(someDict => {\n      Maybe.fromNull(dict.name).forEach(name => (mesh.name = name));\n      Maybe.fromNull(someDict.position).forEach(\n        position => (mesh.position = Vec3.of(position).toBabylon())\n      );\n      Maybe.fromNull(someDict.quaternion).forEach(quaternion => {\n        const babylonQuaternion = new Quaternion(\n          quaternion[1],\n          quaternion[2],\n          quaternion[3],\n          quaternion[0]\n        );\n        mesh.rotationQuaternion = babylonQuaternion.normalize();\n      });\n      Maybe.fromNull(someDict.color).forEach(color => {\n        const babylonColor = new Color3(color[0], color[1], color[2]);\n        Maybe.fromNull(mesh.material).forEach(material => {\n          Maybe.fromNull(material.diffuseColor).forEach(\n            z => (mesh.material.diffuseColor = babylonColor)\n          );\n          Maybe.fromNull(material.emissiveColor).forEach(\n            z => (mesh.material.emissiveColor = babylonColor)\n          );\n        });\n      });\n    });\n    return mesh;\n  }\n\n  // side effect function\n  static setAnnotations2Form(schema, keyValueMap = {}) {\n    schema.jsonSchema.properties.annotations = {\n      title: \"Annotations\",\n      type: \"object\",\n      properties: {}\n    };\n    schema.uiSchema.annotations = {\n      \"ui:widget\": \"collapse\"\n    };\n    schema.data[\"annotations\"] = { ...keyValueMap };\n    const annotations = AnnotationManager.getAnnotations();\n\n    [\"safety\", \"behaviour\", \"localization\", \"navigation\"].forEach(\n      annotation => {\n        // if (annotations[annotation].labels.length > 0) {\n        schema.jsonSchema.properties.annotations.properties[annotation] = {\n          title: _capitalize(annotation),\n          type: \"string\"\n        };\n        schema.uiSchema.annotations[annotation] = {\n          \"ui:widget\": \"selectScopeModal\",\n          \"ui:options\": {\n            scopeList: \"Annotation\",\n            name: _capitalize(annotation),\n            filter: e => {\n              return annotations[annotation].names.includes(e.name);\n            }\n          }\n        };\n        // }\n      }\n    );\n  }\n}\n\nexport default NodeItem;\n","import Vec3 from \"./Vec3\";\nimport { Matrix } from \"@babylonjs/core\";\n\nclass Mat3 {\n  constructor(v1, v2, v3) {\n    const v = [v1, v2, v3];\n    for (let i = 0; i < v.length; i++) {\n      if (v[i].constructor !== Array || v[i].length < 3)\n        throw Error(\"One of the inputs is not a array\");\n    }\n    this.mat3 = v.map(x => new Vec3(x));\n  }\n\n  /**\n   * Matrix prod with  3-vector\n   * @param {*} v: 3-vector\n   *\n   * returns 3-vector\n   */\n  prodVec(v) {\n    let ans = new Vec3([0, 0, 0]);\n    for (let i = 0; i < this.mat3.length; i++) {\n      ans = ans.add(this.mat3[i].scale(v.vec3[i]));\n    }\n    return ans;\n  }\n\n  /**\n   * Matrix transpose prod with 3-vec\n   * @param {*} v : 3-vector\n   */\n  dotVec(v) {\n    const ans = [0, 0, 0];\n    for (let i = 0; i < this.mat3.length; i++) {\n      ans[i] = this.mat3[i].dot(v);\n    }\n    return new Vec3(ans);\n  }\n\n  prod(m) {\n    const u = this.prodVec(m.mat3[0]);\n    const v = this.prodVec(m.mat3[1]);\n    const w = this.prodVec(m.mat3[2]);\n    return new Mat3(u.vec3, v.vec3, w.vec3);\n  }\n\n  dot(m) {\n    const u = this.dotVec(m.mat3[0]);\n    const v = this.dotVec(m.mat3[1]);\n    const w = this.dotVec(m.mat3[2]);\n    return new Mat3(u.vec3, v.vec3, w.vec3);\n  }\n\n  map(f) {\n    const u = this.mat3[0].map(f);\n    const v = this.mat3[1].map(f);\n    const w = this.mat3[2].map(f);\n    return new Mat3(u.vec3, v.vec3, w.vec3);\n  }\n\n  equals(mat) {\n    if (mat.constructor !== this.constructor) return false;\n    return this.mat3\n      .map((v, index) => v.equals(mat.mat3[index]))\n      .reduce((e, v) => e && v, true);\n  }\n\n  static ofBabylonMatrix(babylonMat) {\n    const arrayMat = Matrix.GetAsMatrix3x3(babylonMat);\n    const u = [arrayMat[0], arrayMat[1], arrayMat[2]];\n    const v = [arrayMat[3], arrayMat[4], arrayMat[5]];\n    const w = [arrayMat[6], arrayMat[7], arrayMat[8]];\n    return new Mat3(u, v, w);\n  }\n\n  static of(v1, v2, v3) {\n    return new Mat3(v1, v2, v3);\n  }\n\n  static eye() {\n    return new Mat3([1, 0, 0], [0, 1, 0], [0, 0, 1]);\n  }\n}\n\nexport default Mat3;\n","import { GizmoManager } from \"@babylonjs/core\";\n\nclass GizmoManagerBuilder {\n  constructor(scene) {\n    this._scene = scene;\n    this._isPosition = false;\n    this._isRotation = false;\n    this._isBoundingBox = false;\n    this._isScale = false;\n    this._usePointerToAttachGizmos = false;\n  }\n\n  isPosition(v) {\n    this._isPosition = v;\n    return this;\n  }\n\n  isRotation(v) {\n    this._isRotation = v;\n    return this;\n  }\n\n  isBoundingBox(v) {\n    this._isBoundingBox = v;\n    return this;\n  }\n\n  isScale(v) {\n    this._isScale = v;\n    return this;\n  }\n\n  usePointerToAttachGizmos(v) {\n    this._usePointerToAttachGizmos = v;\n    return this;\n  }\n\n  build() {\n    const gizmoManager = new GizmoManager(this._scene);\n    gizmoManager.positionGizmoEnabled = this._isPosition;\n    gizmoManager.rotationGizmoEnabled = this._isRotation;\n    gizmoManager.boundingBoxGizmoEnabled = this._isBoundingBox;\n    gizmoManager.scaleGizmoEnabled = this._isScale;\n    gizmoManager.usePointerToAttachGizmos = this._usePointerToAttachGizmos;\n    return gizmoManager;\n  }\n}\n\nexport default GizmoManagerBuilder;\n","import { ArcRotateCamera } from \"@babylonjs/core\";\n\nclass CameraBuilder {\n  constructor(scene) {\n    this._scene = scene;\n    this._sphericalCoordinates = null;\n    this._target = null;\n    this._name = `camera${Math.floor(Math.random() * 1e3)}`;\n  }\n\n  name(name) {\n    this._name = name;\n    return this;\n  }\n\n  sphericalCoordinates(sphericalCoordinates) {\n    this._sphericalCoordinates = sphericalCoordinates;\n    return this;\n  }\n\n  target(target) {\n    this._target = target;\n    return this;\n  }\n\n  build() {\n    const variables = Object.values(this);\n    variables.forEach(x => {\n      if (x === null)\n        throw new Error(\n          `There are missing variables to build a camera, e.g ${x}`\n        );\n    });\n    return new ArcRotateCamera(\n      this._name,\n      this._sphericalCoordinates.x,\n      this._sphericalCoordinates.y,\n      this._sphericalCoordinates.z,\n      this._target,\n      this._scene\n    );\n  }\n}\n\nexport default CameraBuilder;\n","import { PointLight } from \"@babylonjs/core\";\n\nclass PositionalLightBuilder {\n  constructor(scene) {\n    this._scene = scene;\n    this._position = null;\n    this._name = `light${Math.floor(Math.random() * 1e3)}`;\n    this._intensity = 1;\n  }\n\n  position(position) {\n    this._position = position;\n    return this;\n  }\n\n  name(name) {\n    this._name = name;\n    return this;\n  }\n\n  intensity(intensity) {\n    this._intensity = intensity;\n    return this;\n  }\n\n  build() {\n    const variables = Object.values(this);\n    variables.forEach(x => {\n      if (x === null)\n        throw new Error(\n          `There are missing variables to build a light, e.g ${x}`\n        );\n    });\n    const light = new PointLight(this._name, this._position, this._scene);\n    light.intensity = this._intensity;\n    return light;\n  }\n}\n\nexport default PositionalLightBuilder;\n","import { Mesh, Vector3, Color3, MeshBuilder } from \"@babylonjs/core\";\nclass ReferentialBuilder {\n  constructor(scene) {\n    this._scene = scene;\n    this._name = `referential${Math.floor(Math.random() * 1e3)}`;\n    this._isPickable = true;\n    this._boxParams = { isVisible: true, size: 0.25 };\n    this._size = 1;\n  }\n\n  name(name) {\n    this._name = name;\n    return this;\n  }\n\n  isPickable(isPickable) {\n    this._isPickable = isPickable;\n    return this;\n  }\n\n  boxParams(boxParams) {\n    this._boxParams = boxParams;\n    return this;\n  }\n\n  size(size) {\n    this._size = size;\n    return this;\n  }\n\n  build() {\n    const size = this._size;\n    const axisX = Mesh.CreateLines(\n      `axisX${this._name}`,\n      [\n        new Vector3.Zero(),\n        new Vector3(size, 0, 0),\n        new Vector3(size * 0.95, 0.05 * size, 0),\n        new Vector3(size, 0, 0),\n        new Vector3(size * 0.95, -0.05 * size, 0)\n      ],\n      this._scene\n    );\n    axisX.color = new Color3(1, 0, 0);\n    axisX.isPickable = false;\n    const axisY = Mesh.CreateLines(\n      `axisY${this._name}`,\n      [\n        new Vector3.Zero(),\n        new Vector3(0, size, 0),\n        new Vector3(-0.05 * size, size * 0.95, 0),\n        new Vector3(0, size, 0),\n        new Vector3(0.05 * size, size * 0.95, 0)\n      ],\n      this._scene\n    );\n    axisY.color = new Color3(0, 1, 0);\n    axisY.isPickable = false;\n    const axisZ = Mesh.CreateLines(\n      `axisZ${this._name}`,\n      [\n        new Vector3.Zero(),\n        new Vector3(0, 0, size),\n        new Vector3(0, -0.05 * size, size * 0.95),\n        new Vector3(0, 0, size),\n        new Vector3(0, 0.05 * size, size * 0.95)\n      ],\n      this._scene\n    );\n    axisZ.color = new Color3(0, 0, 1);\n    axisZ.isPickable = false;\n\n    const localOrigin = MeshBuilder.CreateBox(\n      this._name,\n      { size: this._boxParams.size },\n      this._scene\n    );\n    localOrigin.isVisible = this._boxParams.isVisible;\n    localOrigin.isPickable = this._isPickable;\n\n    axisX.parent = localOrigin;\n    axisY.parent = localOrigin;\n    axisZ.parent = localOrigin;\n\n    return localOrigin;\n  }\n}\n\nexport default ReferentialBuilder;\n","import {\n  Mesh,\n  Vector3,\n  StandardMaterial,\n  Texture,\n  Space\n} from \"@babylonjs/core\";\n\nclass GroundBuilder {\n  constructor(scene) {\n    this._scene = scene;\n    this._name = `camera${Math.floor(Math.random() * 1e3)}`;\n    this._width = 1;\n    this._height = 1;\n    this._textureSrc = null;\n    this._isPickable = false;\n  }\n\n  name(name) {\n    this._name = name;\n    return this;\n  }\n\n  width(width) {\n    this._width = width;\n    return this;\n  }\n\n  height(height) {\n    this._height = height;\n    return this;\n  }\n\n  textureSrc(textureSrc) {\n    this._textureSrc = textureSrc;\n    return this;\n  }\n\n  isPickable(isPickable) {\n    this._isPickable = isPickable;\n    return this;\n  }\n\n  build() {\n    const ground = Mesh.CreateGround(\n      this._name,\n      this._width,\n      this._height,\n      1,\n      this._scene\n    );\n    ground.translate(new Vector3(0, -1, 0), 1e-1, Space.WORLD);\n    if (this._textureSrc) {\n      ground.material = new StandardMaterial(\n        `Texture${this._name}`,\n        this._scene\n      );\n      ground.material.ambientTexture = new Texture(\n        this._textureSrc,\n        this._scene\n      );\n      ground.material.ambientTexture.uScale = 1;\n      ground.material.ambientTexture.vScale = 1;\n    }\n    ground.isPickable = this._isPickable;\n    return ground;\n  }\n}\n\nexport default GroundBuilder;\n","import { DirectionalLight } from \"@babylonjs/core\";\n\nclass DirectionalLightBuilder {\n  constructor(scene) {\n    this._scene = scene;\n    this._direction = null;\n    this._name = `Dlight${Math.floor(Math.random() * 1e3)}`;\n    this._intensity = 1;\n  }\n\n  direction(direction) {\n    this._direction = direction;\n    return this;\n  }\n\n  name(name) {\n    this._name = name;\n    return this;\n  }\n\n  intensity(intensity) {\n    this._intensity = intensity;\n    return this;\n  }\n\n  build() {\n    const variables = Object.values(this);\n    variables.forEach(x => {\n      if (x === null)\n        throw new Error(\n          `There are missing variables to build a light, e.g ${x}`\n        );\n    });\n    const light = new DirectionalLight(\n      this._name,\n      this._direction.normalize(),\n      this._scene\n    );\n    light.intensity = this._intensity;\n    return light;\n  }\n}\n\nexport default DirectionalLightBuilder;\n","import NodeItem from \"./NodeItem\";\nimport { Maybe } from \"monet\";\nimport Util3d from \"../Util3d/Util3d\";\nimport { Color3 } from \"@babylonjs/core\";\n\nclass Box extends NodeItem {\n  static DEFAULT_SIZE = 0.5;\n\n  constructor(mesh, size = Box.DEFAULT_SIZE, keyValueMap = {}) {\n    super(mesh, keyValueMap);\n    this.size = size;\n  }\n\n  toDict() {\n    const dict = super.toDict();\n    dict.size = this.size;\n    return dict;\n  }\n\n  ofDict(scene, dict = null, mainView = null) {\n    return Box.ofDict(scene, dict, mainView);\n  }\n\n  getType = () => Box.TYPE;\n\n  static TYPE = \"Box\";\n\n  static ofDict(scene, dict = null, mainView = null) {\n    const maybeDict = Maybe.fromNull(dict);\n    const size = maybeDict\n      .flatMap(z => Maybe.fromNull(z.size))\n      .orSome(Box.DEFAULT_SIZE);\n    const name = maybeDict\n      .flatMap(z => Maybe.fromNull(z.name))\n      .orSome(`Box${Math.floor(Math.random() * 1e3)}`);\n    const keyValueMap = maybeDict\n      .flatMap(d => Maybe.fromNull(d.keyValueMap))\n      .orUndefined();\n\n    const boxMesh = Util3d.createBox(\n      scene,\n      new Color3(Math.random(), Math.random(), Math.random()),\n      size,\n      name\n    );\n    NodeItem.mapDict2Mesh(dict, boxMesh);\n    return new Box(boxMesh, size, keyValueMap);\n  }\n}\n\nexport default Box;\n","import Vec3 from \"../Math/Vec3\";\nimport Mat3 from \"../Math/Mat3\";\nimport { Maybe } from \"monet\";\nimport GizmoManagerBuilder from \"./GizmoManagerBuilder.js\";\nimport CameraBuilder from \"./CameraBuilder\";\nimport PositionalLightBuilder from \"./PositionalLightBuilder\";\nimport ReferentialBuilder from \"./ReferentialBuilder\";\nimport GroundBuilder from \"./GroundBuilder\";\nimport DirectionalLightBuilder from \"./DirectionalLightBuilder\";\nimport earcut from \"earcut\";\nimport {\n  Vector3,\n  Color3,\n  Quaternion,\n  StandardMaterial,\n  VertexData,\n  Mesh,\n  Matrix,\n  MeshBuilder,\n  VertexBuffer,\n  Curve3\n} from \"@babylonjs/core\";\nimport GlobalRef from \"../NodeItem/GlobalRef\";\nimport Box from \"../NodeItem/Box\";\n\nclass Util3d {\n  /**\n   *\n   * @param {*} mesh\n   * @param {*} localPosition: Vector3\n   * @returns Vec3\n   */\n  static getGlobalCoordinates(mesh, localPosition) {\n    if (\n      (mesh.parent && mesh.parent.name === GlobalRef.NAME) ||\n      mesh.name === GlobalRef.NAME\n    )\n      return Vec3.ofBabylon(localPosition);\n    const meshParent = mesh.parent;\n    const meshParentPos = Vec3.ofBabylon(meshParent.position);\n    const meshParentRotMat = Util3d.getRotationMatrix(meshParent);\n    const meshParentScaling = Vec3.ofBabylon(meshParent.scaling);\n    return meshParentRotMat\n      .prodVec(\n        meshParentScaling.mul(\n          Util3d.getGlobalCoordinates(mesh.parent, localPosition)\n        )\n      )\n      .add(meshParentPos);\n  }\n\n  static getBabylonCoordinates(positionInWorld) {\n    return GlobalRef.forwardCoordinates(positionInWorld);\n  }\n\n  /**\n   *\n   * @param {*} mesh\n   * @param {*} worldPosition: Vector3 from GlobalRef coordinate frame\n   */\n  static getLocalCoordFromGlobal(mesh, worldPosition, withTranslation = true) {\n    if (\n      (mesh.parent && mesh.parent.name === GlobalRef.NAME) ||\n      mesh.name === GlobalRef.NAME\n    )\n      return Vec3.ofBabylon(worldPosition);\n    const meshParent = mesh.parent;\n    const meshParentPos = withTranslation\n      ? Vec3.ofBabylon(meshParent.position)\n      : Vec3.ZERO;\n    const meshParentRotMat = Util3d.getRotationMatrix(meshParent);\n    const meshParentScaling = Vec3.ofBabylon(meshParent.scaling);\n    return meshParentScaling\n      .map(z => 1 / z)\n      .mul(\n        meshParentRotMat.dotVec(\n          Util3d.getLocalCoordFromGlobal(\n            meshParent,\n            worldPosition,\n            withTranslation\n          ).sub(meshParentPos)\n        )\n      );\n  }\n\n  /**\n   *\n   * @param {*} mesh\n   * @param {*} worldPosition: Vec3 from World(Babylon) coordinate frame\n   *\n   * @returns localPosition: Vec3\n   */\n  static getLocalCoordFromWorld(mesh, worldPosition, withTranslation = true) {\n    /// WARNING: very similar with getLocalCoordFromGlobal\n    if (!mesh.parent) {\n      return worldPosition;\n    }\n    const meshParent = mesh.parent;\n    const meshParentPos = withTranslation\n      ? Vec3.ofBabylon(meshParent.position)\n      : Vec3.ZERO;\n    const meshParentRotMat = Util3d.getRotationMatrix(meshParent);\n    const meshParentScaling = Vec3.ofBabylon(meshParent.scaling);\n    // assume scaling != 0\n    const inverseScaling = meshParentScaling.map(x => 1.0 / x);\n\n    return inverseScaling.mul(\n      meshParentRotMat.dotVec(\n        Util3d.getLocalCoordFromWorld(\n          meshParent,\n          worldPosition,\n          withTranslation\n        ).sub(meshParentPos)\n      )\n    );\n  }\n\n  /**\n   * World to Global coords\n   * @param {*} parentView: MainView\n   */\n  static toGlobalCoord = parentView => {\n    const rootMesh = parentView.getRootNode().item.mesh;\n    return arrayOfVector3 => {\n      const transform = p =>\n        Util3d.getLocalCoordFromWorld(\n          { parent: rootMesh },\n          Vec3.ofBabylon(p)\n        ).toBabylon();\n      if (Array.isArray(arrayOfVector3)) {\n        return arrayOfVector3.map(transform);\n      }\n      return transform(arrayOfVector3);\n    };\n  };\n\n  static getRotationMatrix(mesh) {\n    const localRotationMatrix = new Matrix();\n    const maybeQuaternion = Maybe.fromNull(mesh?.rotationQuaternion);\n    maybeQuaternion.forEach(quaternion =>\n      quaternion.toRotationMatrix(localRotationMatrix)\n    );\n    maybeQuaternion.orElseRun(() => {\n      const quaternion = Quaternion.RotationYawPitchRoll(\n        mesh.rotation.y,\n        mesh.rotation.x,\n        mesh.rotation.z\n      );\n      quaternion.toRotationMatrix(localRotationMatrix);\n    });\n    return Mat3.ofBabylonMatrix(localRotationMatrix);\n  }\n\n  static showNormals(scene, mesh, size = 1, color = Color3.Red()) {\n    const normals = mesh.getVerticesData(VertexBuffer.NormalKind);\n    const positions = mesh.getVerticesData(VertexBuffer.PositionKind);\n    const lines = [];\n    for (let i = 0; i < normals.length; i += 3) {\n      const v1 = Vector3.FromArray(positions, i);\n      const v2 = v1.add(Vector3.FromArray(normals, i).scaleInPlace(size));\n      lines.push([v1.add(mesh.position), v2.add(mesh.position)]);\n    }\n    const normalLines = MeshBuilder.CreateLineSystem(\n      \"normalLines\",\n      { lines: lines },\n      scene\n    );\n    normalLines.color = color;\n    normalLines.parent = mesh;\n    return normalLines;\n  }\n\n  static orthogonalBasisFromVector(u) {\n    const identityMatrix = [\n      new Vector3(1, 0, 0),\n      new Vector3(0, 1, 0),\n      new Vector3(0, 0, 1)\n    ];\n    const uArray = [u.x, u.y, u.z];\n    // choose pivot\n    let pivot = 0;\n    for (let i = 0; i < 3; i++) {\n      if (uArray[i] !== 0) {\n        pivot = i;\n        break;\n      }\n    }\n    let v = identityMatrix[(pivot + 1) % 3].add(\n      identityMatrix[pivot].scale(-uArray[(pivot + 1) % 3] / uArray[pivot])\n    );\n    v = v.normalize();\n    let w = identityMatrix[(pivot + 2) % 3].add(\n      identityMatrix[pivot].scale(-uArray[(pivot + 2) % 3] / uArray[pivot])\n    );\n    w = w.normalize();\n    w = w.subtract(v.scale(Vector3.Dot(v, w)));\n    return { u: Vector3.FromArray(uArray).normalize(), v: v, w: w.normalize() };\n  }\n\n  static createOrientedCone = (\n    scene,\n    u = new Vector3(1, 0, 0),\n    color = Color3.Gray(),\n    name = `OrientedCone${randomDigits()}`,\n    isPickable = true,\n    segments = 16\n  ) => {\n    const surface = {\n      positions: [],\n      faces: []\n    };\n    const d = u.length() / 3;\n    const mat3 = Util3d.orthogonalBasisFromVector(u);\n    const v = mat3.v;\n    const w = mat3.w;\n\n    const orientation = Math.sign(Vector3.Dot(Vector3.Cross(v, w), u));\n    // positions\n    for (let i = 0; i < segments; i++) {\n      const theta = orientation * ((2 * Math.PI) / segments) * i;\n      surface.positions.push(\n        v.scale(d * Math.cos(theta)).add(w.scale(d * Math.sin(theta)))\n      );\n    }\n\n    surface.positions.push(Vector3.Zero());\n    surface.positions.push(u);\n\n    const zeroIndex = surface.positions.length - 1;\n    const uIndex = surface.positions.length - 2;\n\n    for (let i = 0; i < segments; i++) {\n      // bottom faces\n      surface.faces.push([zeroIndex, (i + 1) % segments, i]);\n      // cone faces\n      surface.faces.push([uIndex, i, (i + 1) % segments]);\n    }\n\n    // mesh\n    const mesh = Util3d.meshFromPositionAndFaces(\n      name,\n      scene,\n      surface.positions,\n      surface.faces\n    );\n    mesh.convertToFlatShadedMesh();\n    const material = new StandardMaterial(`OrientedConeMaterial${name}`, scene);\n    material.diffuseColor = color;\n    material.emissiveColor = color;\n    mesh.material = material;\n    mesh.isPickable = isPickable;\n    return mesh;\n  };\n\n  static createSphere = (\n    scene,\n    color = Color3.Gray(),\n    diameter = 1,\n    name = `Sphere${randomDigits()}`,\n    isPickable = true\n  ) => {\n    const sphere = Mesh.CreateSphere(name, 16, diameter, scene);\n    const material = Util3d.getMaterialFromColor(\n      color,\n      scene,\n      `SphereMaterial${name}`\n    );\n    sphere.material = material;\n    sphere.isPickable = isPickable;\n    return sphere;\n  };\n\n  static createBox = (\n    scene,\n    color = Color3.Gray(),\n    size = Box.DEFAULT_SIZE,\n    name = `Box${randomDigits()}`,\n    isPickable = true\n  ) => {\n    const box = Mesh.CreateBox(name, size, scene);\n    const material = new StandardMaterial(`BoxMaterial${name}`, scene);\n    material.diffuseColor = color;\n    material.emissiveColor = color;\n    box.material = material;\n    box.isPickable = isPickable;\n    return box;\n  };\n\n  static createTubeFromPoints = (\n    scene,\n    points,\n    color = Color3.Gray(),\n    radius = 1,\n    name = `Tube${randomDigits()}`,\n    isPickable = true\n  ) => {\n    const mesh = MeshBuilder.CreateTube(\n      name,\n      {\n        path: points,\n        radius: radius,\n        sideOrientation: Mesh.DOUBLESIDE,\n        updatable: true,\n        cap: Mesh.CAP_ALL\n      },\n      scene\n    );\n    mesh.material = Util3d.getMaterialFromColor(\n      color,\n      scene,\n      `Material${name}`\n    );\n    mesh.isPickable = isPickable;\n    return mesh;\n  };\n\n  static positionalLightBuilder = scene => {\n    return new PositionalLightBuilder(scene);\n  };\n\n  static directionalLightBuilder = scene => {\n    return new DirectionalLightBuilder(scene);\n  };\n\n  static cameraBuilder(scene) {\n    return new CameraBuilder(scene);\n  }\n\n  static gizmoManagerBuilder(scene) {\n    return new GizmoManagerBuilder(scene);\n  }\n\n  static referentialBuilder = scene => {\n    return new ReferentialBuilder(scene);\n  };\n\n  /**\n   * Return a maybe position of intersection of the mouse and a ground mesh\n   *\n   * @param {Scene} scene Babylon scene\n   * @param {Ground} ground a Babylon mesh that represents the ground\n   * @returns {Maybe} a maybe Vector3 representing the mouse ground intersection\n   */\n  static getGroundPosition = function (scene, ground) {\n    // Use a predicate to get position on the ground\n    const pickInfo = scene.pick(\n      scene.pointerX,\n      scene.pointerY,\n      mesh => mesh === ground\n    );\n    if (pickInfo.hit) return Maybe.some(pickInfo.pickedPoint);\n    return Maybe.none();\n  };\n\n  static pickMesh = (scene, ground) => {\n    const pickInfo = scene.pick(\n      scene.pointerX,\n      scene.pointerY,\n      mesh => mesh !== ground && mesh.isEnabled()\n    );\n    if (pickInfo.hit && pickInfo.pickedMesh.isPickable) {\n      return Maybe.some(pickInfo.pickedMesh);\n    }\n    return Maybe.none();\n  };\n\n  static groundBuilder = scene => {\n    return new GroundBuilder(scene);\n  };\n\n  static meshFromPositionAndFaces(\n    name,\n    scene,\n    positions,\n    faces,\n    updatable = true\n  ) {\n    const vertexData = new VertexData();\n\n    vertexData.positions = positions.flatMap(z => [z.x, z.y, z.z]);\n    vertexData.indices = faces.flatMap(z => z);\n\n    let mesh = new Mesh(name, scene);\n    vertexData.applyToMesh(mesh, updatable);\n    // mesh.createNormals();\n    return mesh;\n  }\n\n  /**\n   *\n   * @param {*} polygon: Array of babylonjs vector3, representing a boundary of a polygon\n   */\n  static triangulatePolygon(polygon) {\n    const triangulation = earcut(\n      polygon.map(x => [x.x, x.y, x.z]).flatMap(x => x),\n      null,\n      3\n    );\n    const len = triangulation.length / 3;\n    const ans = [];\n    for (let i = 0; i < len; i++) {\n      const i3 = 3 * i;\n      ans.push([\n        triangulation[i3],\n        triangulation[i3 + 1],\n        triangulation[i3 + 2]\n      ]);\n    }\n    return ans;\n  }\n\n  /**\n   *\n   * @param {*} polygon: Array of babylonjs vector3, representing a boundary of a polygon\n   * Returns a real number representing the orientation of the curve, if positive represents a counterclockwise orientation, clockwise otherwise.\n   */\n  static computeOrientation(polygon) {\n    const n = polygon.length;\n    const vec3Poly = polygon.map(x => Vec3.ofBabylon(x));\n    let orientation = 0;\n    vec3Poly.forEach((a, i) => {\n      const modi = (i + 1) % n;\n      const edge = vec3Poly[modi].sub(vec3Poly[i]);\n      orientation += Vec3.of([-a.y, a.x, a.z]).dot(edge);\n    });\n    return orientation / 2;\n  }\n\n  /**\n   * @param {*} arrayOfPoints: array of babylon vec3\n   * Returns the average\n   */\n  static pointAverage(arrayOfPoints) {\n    if (!arrayOfPoints || arrayOfPoints.length === 0) return Vector3.Zero();\n    return arrayOfPoints\n      .reduce((e, x) => e.add(x), Vector3.Zero())\n      .scale(1 / arrayOfPoints.length);\n  }\n\n  static pointAverageVec3(arrayOfPoints) {\n    if (!arrayOfPoints || arrayOfPoints.length === 0) return Vec3.ZERO;\n    return arrayOfPoints\n      .reduce((e, x) => e.add(x), Vec3.ZERO)\n      .scale(1 / arrayOfPoints.length);\n  }\n\n  static randomVector3(a, b) {\n    return new Vector3.FromArray(\n      [0, 0, 0].map(x => a + (b - a) * Math.random())\n    );\n  }\n\n  static getMaterialFromColor(\n    color,\n    scene,\n    name = `MaterialFromColor${randomDigits()}`\n  ) {\n    const material = new StandardMaterial(name, scene);\n    material.diffuseColor = color;\n    material.emissiveColor = color;\n    return material;\n  }\n\n  static piecewiseCurveDistance = curve => {\n    let distance = 0;\n    for (let i = 0; i < curve.length - 1; i++) {\n      const v = curve[i + 1].subtract(curve[i]);\n      distance += v.length();\n    }\n    return distance;\n  };\n\n  static getCurveOrientations = curve => {\n    const orientations = [];\n    for (let i = 0; i < curve.length - 1; i++) {\n      const v = curve[i + 1].subtract(curve[i]);\n      orientations.push(Math.atan2(v.y, v.x));\n    }\n    orientations.push(orientations[orientations.length - 1]);\n    return orientations;\n  };\n\n  static getSplineFromCurve = (curve, nbPoints = 7) => {\n    const closed = false;\n    return {\n      points: Curve3.CreateCatmullRomSpline(curve, nbPoints, closed).getPoints()\n    };\n  };\n\n  static splineObj2redis = splineObj => {\n    const orientations = Util3d.getCurveOrientations(splineObj.points);\n    return splineObj.points.map((x, i) => {\n      return [x.x, x.y, orientations[i]];\n    });\n  };\n}\n\nconst randomDigits = () => {\n  return Math.floor(Math.random() * 1e3);\n};\n\nexport default Util3d;\n","import NodeItem from \"./NodeItem\";\nimport Vec3 from \"../Math/Vec3\";\nimport Util3d from \"../Util3d/Util3d\";\nimport { Maybe } from \"monet\";\nimport { Quaternion, MeshBuilder } from \"@babylonjs/core\";\n\n// ROS/RVIZ default referential\nconst THETA = -Math.PI / 2;\nconst ROS_ORIGIN = {\n  position: [0, 0, 0],\n  scaling: [1, -1, 1],\n  quaternion: [Math.cos(THETA / 2), Math.sin(THETA / 2), 0, 0]\n};\n\nclass GlobalRef extends NodeItem {\n  constructor(mesh, keyValueMap = {}) {\n    super(mesh, keyValueMap);\n  }\n\n  toForm() {\n    const form = super.toForm();\n    form.uiSchema.name = {\n      \"ui:disabled\": true\n    };\n    return form;\n  }\n\n  getMouseContextActions() {\n    return [];\n  }\n\n  getType = () => GlobalRef.TYPE;\n\n  static TYPE = \"GlobalRef\";\n\n  static NAME = \"Global ref\";\n\n  static ofDict(scene, dict = null, mainView = null) {\n    const rosOrigin = GlobalRef.getRosOrigin(scene);\n\n    const globalRefMesh = Util3d.referentialBuilder(scene)\n      .name(GlobalRef.NAME)\n      .isPickable(true)\n      .boxParams({ isVisible: true, size: 0.25 })\n      .build();\n\n    globalRefMesh.parent = rosOrigin;\n\n    NodeItem.mapDict2Mesh(dict, globalRefMesh);\n\n    return new GlobalRef(\n      globalRefMesh,\n      Maybe.fromNull(dict)\n        .flatMap(d => Maybe.fromNull(d.keyValueMap))\n        .orUndefined()\n    );\n  }\n\n  static getRosOrigin(scene) {\n    const rosOrigin = MeshBuilder.CreateBox(\n      \"ROS_ORIGIN\",\n      { size: 1e-3 },\n      scene\n    );\n    rosOrigin.isVisible = false;\n    rosOrigin.isPickable = false;\n    rosOrigin.position = Vec3.of(ROS_ORIGIN.position).toBabylon();\n    rosOrigin.scaling = Vec3.of(ROS_ORIGIN.scaling).toBabylon();\n    const quaternion = new Quaternion(\n      ROS_ORIGIN.quaternion[1],\n      ROS_ORIGIN.quaternion[2],\n      ROS_ORIGIN.quaternion[3],\n      ROS_ORIGIN.quaternion[0]\n    );\n    rosOrigin.rotationQuaternion = quaternion.normalize();\n    return rosOrigin;\n  }\n\n  /**\n   *\n   * @param {*} x: Babylon Vector3 in World coordinates\n   *\n   * returns Babylon Vector3 vector in ROS coordinates\n   */\n  static inverseCoordinates(x) {\n    /**\n     * Solves RS\\eta + p = x\n     *\n     * \\eta = S^(⁻1)R^T(x-p)\n     */\n    const quaternion = ROS_ORIGIN.quaternion;\n    const rotationMatrix = Util3d.getRotationMatrix({\n      rotationQuaternion: new Quaternion(\n        quaternion[1],\n        quaternion[2],\n        quaternion[3],\n        quaternion[0]\n      )\n    });\n    const scaling = Vec3.of(ROS_ORIGIN.scaling).map(z => 1 / z);\n    const pos = Vec3.of(ROS_ORIGIN.position);\n    const result = scaling.mul(\n      rotationMatrix.dotVec(Vec3.ofBabylon(x).sub(pos))\n    );\n    return result.map(z => (Math.abs(z) < 1e-5 ? 0 : z)).toBabylon();\n  }\n\n  /**\n   *\n   * @param {*} x: Babylon Vector3 in ROS coordinates\n   *\n   * returns Babylon Vector3 vector in World coordinates\n   */\n  static forwardCoordinates(x) {\n    /**\n     * computes RS\\eta + p = x\n     */\n    const quaternion = ROS_ORIGIN.quaternion;\n    const rotationMatrix = Util3d.getRotationMatrix({\n      rotationQuaternion: new Quaternion(\n        quaternion[1],\n        quaternion[2],\n        quaternion[3],\n        quaternion[0]\n      )\n    });\n    const scaling = Vec3.of(ROS_ORIGIN.scaling);\n    const pos = Vec3.of(ROS_ORIGIN.position);\n    const result = rotationMatrix\n      .prodVec(scaling.mul(Vec3.ofBabylon(x)))\n      .add(pos);\n    return result.map(z => (Math.abs(z) < 1e-5 ? 0 : z)).toBabylon();\n  }\n}\n\nexport default GlobalRef;\n","class Action {\n  constructor() {\n    this.memory = {};\n  }\n\n  action(parentView) {\n    parentView.getSceneMemory().forEach(memory => {\n      memory.gizmoManager.attachedMesh = null;\n      memory.camera.attachControl(memory.canvas, true);\n    });\n    parentView.closeContextDial && parentView.closeContextDial();\n    parentView.setContextActionIndex && parentView.setContextActionIndex();\n  }\n\n  onChange(parentView) {\n    // to be overwritten by children\n  }\n}\n\nexport default Action;\n","import NodeItem from \"./NodeItem\";\n\nclass AssetNodeItem extends NodeItem {\n  constructor(mesh, assetName, keyValueMap = {}) {\n    super(mesh, keyValueMap);\n    this.assetName = assetName;\n  }\n\n  toDict() {\n    const ans = super.toDict();\n    ans.assetName = this.assetName;\n    return ans;\n  }\n\n  getCopyFunction = () => {\n    return (mousePosFromRoot, someMainView) => {};\n  };\n}\n\nexport default AssetNodeItem;\n","import AssetNodeItem from \"./AssetNodeItem\";\n\nclass Map extends AssetNodeItem {\n  constructor(mesh, size, textureSrc, assetName) {\n    super(mesh, assetName);\n    this.size = size;\n    this.textureSrc = textureSrc;\n  }\n\n  dispose() {\n    super.dispose();\n  }\n\n  toDict() {\n    const dict = super.toDict();\n    dict[\"size\"] = this.size;\n    dict[\"textureSrc\"] = this.textureSrc;\n    return dict;\n  }\n\n  toForm() {\n    const info = this.toDict();\n    const schema = {\n      jsonSchema: {\n        type: \"object\",\n        properties: {\n          oldName: {\n            type: \"string\"\n          },\n          name: {\n            type: \"string\",\n            title: \"Name\"\n          },\n          type: {\n            type: \"string\",\n            title: \"Type\"\n          },\n          assetName: {\n            type: \"string\",\n            title: \"Asset Name\"\n          }\n        }\n      },\n      uiSchema: {\n        type: {\n          \"ui:disabled\": true\n        },\n        assetName: {\n          \"ui:disabled\": true\n        },\n        oldName: {\n          \"ui:widget\": \"hidden\"\n        }\n      },\n      data: {\n        oldName: info.name,\n        name: info.name,\n        type: info.type,\n        assetName: info.assetName\n      }\n    };\n    return schema;\n  }\n\n  ofForm(form) {\n    this.name = form.name;\n    this.mesh.name = form.name;\n    this.keyValueMap = { ...form.annotations };\n  }\n\n  getType = () => Map.TYPE;\n\n  static TYPE = \"Map\";\n}\n\nexport default Map;\n","import {\n  Scene,\n  Color3,\n  RotationGizmo,\n  UtilityLayerRenderer,\n  Vector3,\n  StandardMaterial,\n  Mesh,\n  Space\n} from \"@babylonjs/core\";\nimport { TextBlock, AdvancedDynamicTexture } from \"@babylonjs/gui/2D\";\nimport Util3d from \"../Util3d/Util3d\";\nimport \"@babylonjs/core/Debug/debugLayer\";\nimport \"@babylonjs/inspector\";\n\nclass DefaultScene {\n  static createGizmo = scene => {\n    const gizmoManager = new RotationGizmo(new UtilityLayerRenderer(scene));\n    gizmoManager.xGizmo.dragBehavior.detach();\n    gizmoManager.xGizmo.scaleRatio = 0.0;\n    gizmoManager.yGizmo.dragBehavior.detach();\n    gizmoManager.yGizmo.scaleRatio = 0.0;\n    return gizmoManager;\n  };\n\n  static createCamera = (scene, canvas, forEach = camera => {}) => {\n    const COLLISION_RADIUS = 1;\n    const camera = Util3d.cameraBuilder(scene)\n      .sphericalCoordinates(new Vector3(0, 0, 14))\n      .target(Vector3.Zero())\n      .name(\"camera\")\n      .build();\n    camera.attachControl(canvas, false);\n    camera.inertia = 0.7;\n    camera.collisionRadius = new Vector3(\n      COLLISION_RADIUS,\n      COLLISION_RADIUS,\n      COLLISION_RADIUS\n    );\n    camera.panningInertia = 0.5;\n    camera.checkCollisions = true;\n    camera.panningSensibility = 0;\n    camera.lowerRadiusLimit = 2;\n    forEach(camera);\n    return camera;\n  };\n\n  static createLight = scene => {\n    return Util3d.directionalLightBuilder(scene)\n      .name(\"light\")\n      .direction(new Vector3(0, -1, 0))\n      .intensity(0.35)\n      .build();\n  };\n\n  static createMeshGround = (scene, width = 20, height = 20) => {\n    const ground = Mesh.CreateGround(\"groundMesh\", width, height, 20, scene);\n    ground.translate(new Vector3(0, -1, 0), 1e-2, Space.WORLD);\n    ground.material = new StandardMaterial(\"wireframe\", scene);\n    ground.material.wireframe = true;\n    ground.isPickable = false;\n    ground.checkCollisions = true;\n    return ground;\n  };\n\n  static createScene = engine => {\n    const scene = new Scene(engine);\n    scene.clearColor = Color3.Black;\n    scene.collisionsEnabled = true;\n    scene._uid = scene.getUniqueId();\n    // scene.debugLayer.show({\n    //   embedMode: true,\n    //   globalRoot: document.body,\n    //   overlay: true\n    // });\n    return scene;\n  };\n\n  static createMouseLocationText = scene => {\n    const advancedTexture = AdvancedDynamicTexture.CreateFullscreenUI(\n      \"UI\",\n      true,\n      scene\n    );\n    const text = new TextBlock();\n    text.text = \"\";\n    text.color = \"white\";\n    text.fontSize = 17;\n    text.left = -560;\n    text.top = -145;\n    advancedTexture.addControl(text);\n    return text;\n  };\n}\n\nexport default DefaultScene;\n","import Action from \"./Action\";\n\nclass MouseKeysAction extends Action {\n  onPointerDown(evt, parentView) {\n    // to be implemented on sub classes\n  }\n\n  onPointerMove(evt, parentView) {\n    // to be implemented on sub classes\n  }\n\n  onPointerUp(evt, parentView) {\n    // to be implemented on sub classes\n  }\n\n  onKeyUp(evt, parentView) {}\n}\n\nexport default MouseKeysAction;\n","export function selectOneAction(predicateActionList, defaultAction = () => {}) {\n  return input => {\n    predicateActionList.push({ predicate: e => true, action: defaultAction });\n    for (let i = 0; i < predicateActionList.length; i++) {\n      const predicateAction = predicateActionList[i];\n      if (predicateAction.predicate(input)) {\n        predicateAction.action();\n        break;\n      }\n    }\n  };\n}\n","import NodeItem from \"./NodeItem\";\nimport Util3d from \"../Util3d/Util3d\";\nimport { Maybe } from \"monet\";\nimport { MeshBuilder, StandardMaterial } from \"@babylonjs/core\";\n\nclass KeyPoint extends NodeItem {\n  ofDict(scene, dict = null, mainView = null) {\n    return KeyPoint.ofDict(scene, dict, mainView);\n  }\n\n  getType = () => KeyPoint.TYPE;\n\n  static TYPE = \"KeyPoint\";\n\n  static ofDict(scene, dict = null, mainView = null) {\n    const name = Maybe.fromNull(dict)\n      .map(x => x.name)\n      .orSome(`KeyPoint${Math.floor(Math.random() * 1e3)}`);\n\n    const mesh = MeshBuilder.CreatePolyhedron(\n      name,\n      { custom: TRIANGULAR_ANTIPRISM, size: KeyPoint.DEFAULT_SIZE },\n      scene\n    );\n    const material = new StandardMaterial(`KeyPointMaterial${name}`, scene);\n    mesh.material = material;\n    mesh.convertToFlatShadedMesh();\n\n    const axis = Util3d.referentialBuilder(scene)\n      .isPickable(false)\n      .boxParams({ isVisible: false, size: 0.1 * KeyPoint.DEFAULT_SIZE })\n      .name(`${name}Axis`)\n      .build();\n    axis.parent = mesh;\n\n    NodeItem.mapDict2Mesh(dict, mesh);\n    return new KeyPoint(mesh, dict.keyValueMap);\n  }\n\n  static DEFAULT_SIZE = 0.25;\n}\n\nconst TRIANGULAR_ANTIPRISM = {\n  name: \"Triangular Antiprism (Octahedron)\",\n  category: [\"Antiprism\"],\n  vertex: [\n    [0, 0, 1.414214],\n    [1.414214, 0, 0],\n    [0, 1.414214, 0],\n    [-1.414214, 0, 0],\n    [0, -1.414214, 0],\n    [0, 0, -1.414214]\n  ],\n  face: [\n    [0, 1, 2],\n    [0, 2, 3],\n    [0, 3, 4],\n    [0, 4, 1],\n    [1, 4, 5],\n    [1, 5, 2],\n    [2, 5, 3],\n    [3, 5, 4]\n  ]\n};\n\nexport default KeyPoint;\n","export default class MeshSelector {\n  constructor(mainView) {\n    return mainView\n      .getSceneMemory()\n      .map(({ scene }) => {\n        const sceneId = scene._uid;\n        if (sceneId in placeHolderInstance) {\n          return placeHolderInstance[sceneId];\n        }\n        this.scene = scene;\n        this.mainView = mainView;\n        this.meshSelectionSet = new Set();\n        placeHolderInstance[sceneId] = this;\n        return this;\n      })\n      .orSome(this);\n  }\n\n  /**\n   * Add mesh 2 selected meshes\n   * @param {*} mesh\n   * @param {*} isSubtractive: if true, repeated addition of meshes will be removed from selected meshes set.\n   */\n  add(mesh, isSubtractive = true) {\n    if (this.meshSelectionSet.has(mesh)) {\n      isSubtractive && this.meshSelectionSet.delete(mesh);\n    } else {\n      this.meshSelectionSet.add(mesh);\n    }\n    return this;\n  }\n\n  addArray(meshes, isSubtractive = true) {\n    meshes.forEach(mesh => this.add(mesh, isSubtractive));\n    return this;\n  }\n\n  clear() {\n    this.meshSelectionSet = new Set();\n    return this;\n  }\n\n  meshes() {\n    return [...this.meshSelectionSet];\n  }\n\n  has(mesh) {\n    return this.meshSelectionSet.has(mesh);\n  }\n\n  filter(predicate) {\n    const filteredSet = new Set();\n    this.meshSelectionSet.forEach(mesh => {\n      if (predicate(mesh)) filteredSet.add(mesh);\n    });\n    this.meshSelectionSet = filteredSet;\n    return this;\n  }\n\n  //   forEach(lambda) {\n  //     this.meshSelectionSet.forEach(lambda);\n  //     return this;\n  //   }\n\n  static ofMainView(mainView) {\n    return new MeshSelector(mainView);\n  }\n}\n\nconst placeHolderInstance = {};\n","import { uniqBy } from \"lodash\";\nimport Util3d from \"../Util3d/Util3d\";\nimport KeyPoint from \"../NodeItem/KeyPoint\";\nimport {\n  Quaternion,\n  Observable,\n  Vector3,\n  ShaderMaterial,\n  Effect\n} from \"@babylonjs/core\";\nimport { Maybe } from \"monet\";\nimport Vec3 from \"../Math/Vec3\";\nimport Vec2 from \"../Math/Vec2\";\nimport MeshSelector from \"../MainView/MeshSelector\";\n\nclass SelectionPlaceHolder {\n  constructor(mainView) {\n    return mainView\n      .getSceneMemory()\n      .map(({ scene }) => {\n        const sceneId = scene._uid;\n        if (sceneId in placeHolderInstance) {\n          return placeHolderInstance[sceneId];\n        }\n        this.scene = scene;\n        this.mesh = null;\n        this.arrayOfMeshes = [];\n        this.angleByMeshName = {};\n        this.mainView = mainView;\n        this.theta = 0;\n        placeHolderInstance[sceneId] = this;\n        return this;\n      })\n      .orSome(this);\n  }\n\n  push(arrayOfMeshes) {\n    if (arrayOfMeshes.length === 0) return this;\n    arrayOfMeshes = Array.isArray(arrayOfMeshes)\n      ? arrayOfMeshes\n      : [arrayOfMeshes];\n    this.arrayOfMeshes = uniqBy(\n      this.arrayOfMeshes.concat(arrayOfMeshes),\n      mesh => mesh.name\n    );\n    this.angleByMeshName = this.arrayOfMeshes.reduce((map, m) => {\n      map[m.name] = getAngleFromMesh(m);\n      return map;\n    }, {});\n    const placeHolderPosition = Util3d.pointAverage(\n      this.arrayOfMeshes.map(mesh =>\n        Util3d.getGlobalCoordinates(mesh, mesh.position).toBabylon()\n      )\n    );\n    this.createPlaceHolderIn(placeHolderPosition);\n    return this;\n  }\n\n  clear() {\n    this.arrayOfMeshes = [];\n    this.mesh && this.mesh.dispose();\n    return this;\n  }\n\n  createPlaceHolderIn(p) {\n    if (this.mesh === null || this.mesh.isDisposed()) {\n      this.mesh = KeyPoint.ofDict(this.scene, {\n        name: NAME,\n        type: SelectionPlaceHolder,\n        position: [0, 0, 0],\n        quaternion: Quaternion.Identity(),\n        color: [0.5, 0.5, 0.5],\n        keyValueMap: {},\n        isVisible: true\n      }).mesh;\n      this.mesh.material = getShaderMaterial(this.scene)();\n    }\n    const that = this;\n    this.mesh.getMouseContextActions = () => [\n      {\n        title: \"Delete\",\n        onClick: () => {\n          that.mainView.addGizmo2Mesh();\n          that.clear();\n          MeshSelector.ofMainView(this.mainView).clear();\n          that.mainView.highlightMeshesInScene();\n          that.mainView.highlightNodesInTree();\n        }\n      }\n    ];\n    this.mesh.onClick = () => {};\n    this.mesh.isSelectionPlaceHolder = true;\n    this.mesh.parent = this.mainView.getRootNode().item.mesh;\n    this.mesh.position = p.add(new Vector3(0, 0, HEIGHT));\n    this.mesh.observers = new Observable();\n    this.mesh.observers.add(this.getPlaceHolderObs());\n    return this.mesh;\n  }\n\n  getPlaceHolderObs() {\n    const that = this;\n    return ({\n      updatedPointMesh: placeHolder,\n      is2updateServer,\n      displacement\n    }) => {\n      const filteredMeshes = that.arrayOfMeshes.filter(\n        mesh => !mesh.isDisposed()\n      );\n      const theta = getAngleFromMesh(placeHolder);\n      const dTheta = theta - that.theta;\n      that.theta = theta;\n\n      filteredMeshes.forEach(mesh => {\n        handleMotion(theta, mesh, displacement, placeHolder, dTheta, that);\n        if (is2updateServer) {\n          that.mainView.updateNodeInServer(mesh.name);\n          that.mesh.rotationQuaternion = Quaternion.Identity();\n          that.angleByMeshName[mesh.name] = getAngleFromMesh(mesh);\n          that.theta = 0;\n        }\n        // notify babylonjs observers\n        Maybe.fromNull(mesh.observers).forEach(obs =>\n          obs.notifyObservers({\n            updatedPointMesh: mesh,\n            is2updateServer,\n            displacement\n          })\n        );\n        // notify graph observers\n        Maybe.fromNull(mesh.graphVertex).forEach(({ vertexObs }) => {\n          vertexObs({\n            updatedPointMesh: mesh,\n            is2updateServer,\n            displacement\n          });\n        });\n      });\n      if (filteredMeshes.length === 0) {\n        that.clear();\n      }\n    };\n  }\n\n  static ofMainView(mainView) {\n    return new SelectionPlaceHolder(mainView);\n  }\n}\n\nconst getShaderMaterial = scene => (vertex = VERTEX, frag = FRAG) => {\n  Effect.ShadersStore[\"customVertexShader\"] = vertex;\n  Effect.ShadersStore[\"customFragmentShader\"] = frag;\n  const shaderMaterial = new ShaderMaterial(\n    \"shader\",\n    scene,\n    { vertex: \"custom\", fragment: \"custom\" },\n    {\n      attributes: [\"position\", \"normal\", \"uv\"],\n      uniforms: [\n        \"world\",\n        \"worldView\",\n        \"worldViewProjection\",\n        \"view\",\n        \"projection\",\n        \"time\"\n      ]\n    }\n  );\n  shaderMaterial.backFaceCulling = false;\n  let time = 0;\n  let T = new Date().getTime();\n  shaderMaterial.onBindObservable.add(() => {\n    const dt = (new Date().getTime() - T) / 1000;\n    shaderMaterial.setFloat(\"time\", time);\n    time = time + dt;\n    T = new Date().getTime();\n  });\n  return shaderMaterial;\n};\n\nconst VERTEX = `precision highp float;\n\n// Attributes\nattribute vec3 position;\nattribute vec3 normal;\n\n// Uniforms\nuniform mat4 worldViewProjection;\n\n// Varying\nvarying vec3 vPosition;\nvarying vec3 vNormal;\n\nvoid main(void) {\n    gl_Position = worldViewProjection * vec4(position, 1.0);\n    vPosition = position;\n    vNormal = normal;\n}`;\n\nconst FRAG = `precision highp float;\n\n// Varying\nvarying vec3 vPosition;\nvarying vec3 vNormal;\n\n// Uniforms\nuniform mat4 world;\nuniform float time;\n\nvoid main(void) {\n    // World values\n    vec3 p = vec3(world * vec4(vPosition, 1.0));\n    vec3 n = normalize(vec3(world * vec4(vNormal, 0.0)));\n    float spatialFreq = 10.;\n    float timeFreq = 10.;\n    float power = sin(spatialFreq * p.y - timeFreq * time);\n    vec3 color = power *  vec3( 1, 0, 0 ) + (1. - power) * vec3(1,0.5,0.5);\n    gl_FragColor = vec4(color, 1.);\n}`;\n\nconst getAngleFromMesh = mesh =>\n  Maybe.fromNull(mesh.rotationQuaternion)\n    .map(q => 2 * Math.atan2(q.z, q.w))\n    .orSome(0);\n\nconst placeHolderInstance = {};\nconst NAME = \"placeholder\";\nconst HEIGHT = 1.5;\n\nfunction handleMotion(theta, mesh, displacement, placeHolder, dTheta, that) {\n  if (Math.abs(theta) < 1e-3) {\n    handleTranslation(mesh, displacement);\n  } else {\n    handleRotation(placeHolder, mesh, dTheta, that, theta);\n  }\n}\n\nfunction handleRotation(placeHolder, mesh, dTheta, that, theta) {\n  const baseCoord = Vec3.ofBabylon(placeHolder.position);\n  const v = Vec3.ofBabylon(mesh.position).sub(baseCoord).toVec2();\n  const eITheta = Vec2.of(Math.cos(dTheta), Math.sin(dTheta));\n  const rV = eITheta.prod(v);\n  const finalV = Vec3.of([rV.x, rV.y, 0]).toBabylon();\n  mesh.position = new Vector3(\n    placeHolder.position.x,\n    placeHolder.position.y,\n    mesh.position.z\n  ).add(finalV);\n  const finalTheta = that.angleByMeshName[mesh.name] + theta;\n  // divide by 2 because of quaternion multiplication.\n  mesh.rotationQuaternion = new Quaternion(\n    0,\n    0,\n    Math.sin(finalTheta / 2),\n    Math.cos(finalTheta / 2)\n  );\n}\n\nfunction handleTranslation(mesh, displacement) {\n  const localDisplacement = Util3d.getLocalCoordFromWorld(\n    mesh,\n    Vec3.ofBabylon(displacement),\n    false\n  );\n  const newPos = Vec3.ofBabylon(mesh.position).add(localDisplacement);\n  // translating\n  mesh.position = newPos.toBabylon();\n}\n\nexport default SelectionPlaceHolder;\n","import { Maybe } from \"monet\";\n\nfunction getNodeRecursive(tree, predicate) {\n  for (let i = 0; i < tree.length; i++) {\n    const node = tree[i];\n    if (predicate(node)) return Maybe.some(node);\n    const answer = getNodeRecursive(node.children, predicate);\n    if (answer.isSome()) return answer;\n  }\n  return Maybe.none();\n}\n\nfunction getParentNodeRecursive(tree, predicate, parent) {\n  const foundChild = tree\n    .map(x => predicate(x))\n    .reduce((e, x) => e || x, false);\n  if (foundChild) return Maybe.fromNull(parent);\n  for (let i = 0; i < tree.length; i++) {\n    const node = tree[i];\n    const answer = getParentNodeRecursive(node.children, predicate, node);\n    if (answer.isSome()) return answer;\n  }\n  return Maybe.none();\n}\n\nfunction compareTreesRecursive(treeA, treeB, nodeEquality) {\n  if (treeA.length === treeB.length) {\n    let ans = true;\n    for (let i = 0; i < treeA.length; i++) {\n      const nodeA = treeA[i];\n      const nodeB = treeB[i];\n      if (nodeEquality(nodeA, nodeB)) {\n        ans =\n          ans &&\n          compareTreesRecursive(nodeA.children, nodeB.children, nodeEquality);\n      } else {\n        return false;\n      }\n    }\n    return ans;\n  }\n  return false;\n}\n\nfunction mapRecursive(tree, newTree, map) {\n  tree.forEach(nod => {\n    const node = { ...nod };\n    const mappedNode = map(node);\n    mappedNode.children = mapRecursive(node.children, [], map);\n    newTree.push(mappedNode);\n  });\n  return newTree;\n}\n\nfunction forEachRecursive(tree = [], forEach = () => {}) {\n  tree.forEach(node => {\n    forEach(node);\n    forEachRecursive(node.children, forEach);\n  });\n}\n\nfunction expand(node) {\n  node.expanded = true;\n  return node;\n}\n\nfunction filterTree(tree = [], predicate = node => true) {\n  if (!tree || tree.length === 0) return [];\n  let result = [];\n  tree.forEach(nod => {\n    const node = { ...nod };\n    if (predicate(node)) {\n      const expanded = expand(node);\n      expanded.children = filterTree(expanded.children, predicate);\n      result.push(expanded);\n    } else if (node.children) {\n      const children = filterTree(node.children, predicate);\n      if (children.length !== 0) {\n        node.children = children;\n        result.push(expand(node));\n      }\n    }\n  });\n  return result;\n}\n\nfunction flatten(tree = [], predicate = node => true) {\n  if (!tree || tree.length === 0) return [];\n  let result = [];\n  tree.forEach(nod => {\n    const node = { ...nod };\n    if (predicate(node)) result.push(node);\n    result = result.concat(flatten(node.children, predicate));\n  });\n  return result;\n}\n\n/**\n * General purpose tree\n *\n * It just need a basic structure as input:\n *  Tree: Array<Node>\n *  Node: {children: Array<Node>}\n */\nclass TreeObject {\n  constructor(tree) {\n    this.tree = tree;\n  }\n  /**\n   * Return maybe node based on predicate\n   * @param {*} predicate\n   */\n  getNode(predicate) {\n    return getNodeRecursive(this.tree, predicate);\n  }\n\n  /**\n   * return maybe parent node based on the child predicate\n   * @param {*} childPredicate\n   */\n  getParentNode(childPredicate) {\n    return getParentNodeRecursive(this.tree, childPredicate, null);\n  }\n\n  equals(tree, nodeEquality = (a, b) => a === b) {\n    if (tree.constructor === TreeObject) {\n      return compareTreesRecursive(this.tree, tree.tree, nodeEquality);\n    }\n    return compareTreesRecursive(this.tree, tree, nodeEquality);\n  }\n\n  map(nodeMap) {\n    return new TreeObject(mapRecursive(this.tree, [], nodeMap));\n  }\n\n  filter(predicate = node => true) {\n    return new TreeObject(filterTree(this.tree, predicate));\n  }\n\n  /**\n   *\n   * @param {*} predicate: node => Boolean\n   * @returns Array with flattened tree while filtering values with predicate\n   */\n  flatten(predicate = node => true) {\n    return flatten(this.tree, predicate);\n  }\n\n  forEach(map) {\n    forEachRecursive(this.tree, map);\n  }\n}\n\nexport default TreeObject;\n","const Constants = {\n  RADIUS: 0.4,\n  POINTS_DENSITY: 2,\n  CLOUD_FUNCTION_NAME: \"backend.viewer\"\n};\n\nexport default Constants;\n","import { Maybe } from \"monet\";\n\n/**\n * Undirected Graph data structure\n */\nclass Graph {\n  #adjMap = {};\n  #vertices = {};\n  #edges = {};\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                      Public API                                      *\n   *                                                                                      */\n  //========================================================================================\n\n  addVertex(i) {\n    if (!(i in this.#vertices)) {\n      this.#vertices[i] = {};\n      this.#adjMap[i] = {};\n    }\n  }\n\n  delVertex(i) {\n    if (i in this.#vertices) {\n      delete this.#vertices[i];\n      // delete neighbors edge properties\n      Object.keys(this.#adjMap[i]).forEach(j => {\n        delete this.#edges[Graph.edgeKey(i, j)];\n        delete this.#edges[Graph.edgeKey(j, i)];\n      });\n      delete this.#adjMap[i];\n      Object.keys(this.#adjMap).forEach(j => {\n        if (i in this.#adjMap[j]) {\n          delete this.#adjMap[j][i];\n        }\n      });\n    }\n  }\n\n  /**\n   *\n   * If edge already exists, this function overwrites previous edge\n   *\n   * @param {*} i: vertex id\n   * @param {*} j: vertex id\n   */\n  addEdge(i, j) {\n    this.addVertex(i);\n    this.addVertex(j);\n    const edgeProps = {};\n    this.#edges[Graph.edgeKey(i, j)] = edgeProps;\n    this.#edges[Graph.edgeKey(j, i)] = edgeProps;\n    this.#adjMap[i][j] = true;\n    this.#adjMap[j][i] = true;\n    return this;\n  }\n\n  delEdge(i, j) {\n    const ijKey = Graph.edgeKey(i, j);\n    const jiKey = Graph.edgeKey(j, i);\n    if (ijKey in this.#edges || jiKey in this.#edges) {\n      delete this.#edges[ijKey];\n      delete this.#edges[jiKey];\n      delete this.#adjMap[i][j];\n      delete this.#adjMap[j][i];\n    }\n    // remove vertex if have no neighbors\n    [i, j].forEach(id => {\n      const neighbors = this.getNeighbors(id);\n      if (neighbors.length === 0) {\n        this.delVertex(id);\n      }\n    });\n  }\n\n  hasEdge(i, j) {\n    return this.getEdge(i, j).isSome();\n  }\n\n  getNeighbors(i) {\n    if (i in this.#adjMap) return Object.keys(this.#adjMap[i]);\n    return [];\n  }\n\n  getEdge(i, j) {\n    const edgeKey = Graph.edgeKey(i, j);\n    if (edgeKey in this.#edges) {\n      return Maybe.some(this.#edges[edgeKey]);\n    }\n    return Maybe.none();\n  }\n\n  getVertex(i) {\n    if (i in this.#vertices) {\n      return Maybe.some(this.#vertices[i]);\n    }\n    return Maybe.none();\n  }\n\n  getEdges() {\n    return this.#edges;\n  }\n\n  getVertices() {\n    return this.#vertices;\n  }\n\n  getAdjMap() {\n    return this.#adjMap;\n  }\n\n  static edgeKey = (i, j) => `${i}_${j}`;\n  static key2Edge = key => key.split(\"_\");\n}\n\nexport default Graph;\n","import NodeItem from \"./NodeItem\";\nimport Vec3 from \"../Math/Vec3\";\nimport Util3d from \"../Util3d/Util3d\";\nimport React from \"react\";\nimport { Maybe } from \"monet\";\nimport Constants from \"../Utils/Constants\";\nimport {\n  Observable,\n  Color3,\n  MeshBuilder,\n  Quaternion,\n  Vector3\n} from \"@babylonjs/core\";\nimport { UndoManager } from \"mov-fe-lib-core\";\n\nconst RADIUS = Constants.RADIUS;\n\nclass Path extends NodeItem {\n  /**\n   * @param {*} mesh\n   * @param {*} localPath: is an array of 3-arrays of numbers of the local coordinates in relation to mesh.position and quaternion\n   * @param {*} keyPoints: are the keyPoints meshes array\n   * @param {*} splinePath: is an array of 3-arrays of numbers of the local coordinates in relation to mesh.position and quaternion\n   * @param {*} mainView: MainView\n   * @param {*} keyValueMap: annotations\n   */\n  constructor(\n    mesh,\n    localPath,\n    keyPoints,\n    splinePath,\n    mainView,\n    weight = 1,\n    keyValueMap = {}\n  ) {\n    super(mesh, keyValueMap);\n    // Array<Vector3> points in relation to its mean\n    this.localPath = localPath;\n    // Array<Meshes> representing key points of the curve\n    this.keyPoints = keyPoints;\n    // spline points from local path\n    this.splinePath = splinePath;\n    this.selectedKeyPointIndex = -1;\n    this.mainView = mainView;\n    this.weight = weight;\n  }\n\n  toDict() {\n    const dict = super.toDict();\n    dict.localPath = this.localPath;\n    dict.splinePath = this.splinePath;\n    dict.weight = this.weight;\n    return dict;\n  }\n\n  toForm() {\n    const schema = super.toForm();\n    if (this.selectedKeyPointIndex >= 0) {\n      schema.jsonSchema.properties[\"selectedKeyPoint\"] = {\n        type: \"object\",\n        title: `KeyPoint ${this.selectedKeyPointIndex}`,\n        properties: {\n          x: {\n            type: \"number\",\n            title: \"x\"\n          },\n          y: {\n            type: \"number\",\n            title: \"y\"\n          },\n          z: {\n            type: \"number\",\n            title: \"z\"\n          }\n        }\n      };\n\n      schema.uiSchema[\"selectedKeyPoint\"] = {\n        \"ui:widget\": \"collapse\"\n      };\n      schema.uiSchema[\"position\"] = { \"ui:widget\": \"hidden\" };\n      schema.uiSchema[\"quaternion\"] = { \"ui:widget\": \"hidden\" };\n      schema.uiSchema[\"color\"] = { \"ui:widget\": \"hidden\" };\n      schema.uiSchema[\"annotations\"] = { \"ui:widget\": \"hidden\" };\n      const selectedMesh = this.keyPoints[this.selectedKeyPointIndex];\n      const position = Util3d.getGlobalCoordinates(\n        selectedMesh,\n        selectedMesh.position\n      ).toArray();\n      schema.data[\"selectedKeyPoint\"] = {\n        x: position[0],\n        y: position[1],\n        z: position[2]\n      };\n\n      return schema;\n    }\n    // re-order attributes\n    const props = { ...schema.jsonSchema.properties };\n    const newSchema = {\n      type: \"object\",\n      properties: {\n        oldName: props.oldName,\n        name: props.name,\n        type: props.type,\n        weight: {\n          type: \"number\",\n          title: \"Weight\"\n        },\n        position: props.position,\n        quaternion: props.quaternion,\n        color: props.color,\n        annotations: props.annotations\n      }\n    };\n    schema.jsonSchema = newSchema;\n    schema.data[\"weight\"] = this.weight;\n    return schema;\n  }\n\n  ofForm(form) {\n    super.ofForm(form);\n    if (this.selectedKeyPointIndex >= 0) {\n      const selectedKeyPoint = this.keyPoints[this.selectedKeyPointIndex];\n      const formPosition = form.selectedKeyPoint;\n      const newPosInWorldCoordinates = Vector3.FromArray(\n        [formPosition.x, formPosition.y, formPosition.z].map(Number.parseFloat)\n      );\n      const localPos = Util3d.getLocalCoordFromGlobal(\n        selectedKeyPoint,\n        newPosInWorldCoordinates\n      ).toArray();\n      selectedKeyPoint.position = new Vector3(\n        localPos[0],\n        localPos[1],\n        localPos[2]\n      );\n      selectedKeyPoint.observers.notifyObservers({\n        updatedPointMesh: selectedKeyPoint,\n        is2updateServer: false\n      });\n      return;\n    }\n    this.weight = Number(form.weight);\n    this.updatePathEdgeWithForm(this.weight, this.keyValueMap);\n  }\n\n  updatePathEdgeWithForm(weight, annotations) {\n    this.mainView.getGraph().forEach(({ item: graphItem }) => {\n      const { graph } = graphItem;\n      const first = this.keyPoints[0];\n      const last = this.keyPoints[this.keyPoints.length - 1];\n      const edge = [first, last]\n        .filter(v => !!v?.graphVertex?.vertex)\n        .map(v => v.graphVertex.vertex);\n      if (edge.length < 2) return;\n      const edgeIds = edge.map(v => v.id);\n      graph.getEdge(...edgeIds).forEach(({ data: edgeData }) => {\n        edgeData.weight = weight;\n        edgeData.keyValueMap = annotations;\n      });\n      this.mainView.updateNodeInServer(graphItem.name);\n    });\n  }\n\n  ofDict(scene, dict = null, mainView = null) {\n    return Path.ofDict(scene, dict, mainView);\n  }\n\n  getCopyFunction(isForceUpdate = true) {\n    // mousePosFromRoot : Vector3\n    return (mousePosFromRoot, someMainView) => {\n      return super\n        .getCopyFunction(isForceUpdate)(mousePosFromRoot, someMainView)\n        .map(copiedPath => {\n          const kp = copiedPath?.keyPoints;\n          if (kp !== undefined && isPathOnGraph(this)) {\n            Path.updateGraph(someMainView, kp, copiedPath, true);\n          }\n          return copiedPath;\n        });\n    };\n  }\n\n  getType = () => Path.TYPE;\n\n  static TYPE = \"Path\";\n\n  static ofDict(scene, dict = null, mainView = null) {\n    if (!dict || !mainView)\n      throw new Error(\"null dictionary describing path or null mainView\");\n\n    const name = dict.name;\n    const curve = dict.localPath.map(z => Vec3.of(z).toBabylon());\n    const spline = Util3d.getSplineFromCurve(curve);\n    const { points } = spline;\n    let mesh = null;\n    //hack for creating 1 point curves\n    if (points.length === 1) {\n      mesh = MeshBuilder.CreateLines(\n        name,\n        { points: points, updatable: true },\n        scene\n      );\n    } else {\n      mesh = Util3d.createTubeFromPoints(\n        scene,\n        points,\n        Color3.Gray(),\n        RADIUS / 8,\n        name\n      );\n    }\n    mesh.position = Vec3.of(dict.position).toBabylon();\n    mesh.material = Util3d.getMaterialFromColor(\n      Color3.FromArray(dict.color),\n      scene,\n      `PathMaterial${name}`\n    );\n    mesh.rotationQuaternion = Maybe.fromNull(dict.quaternion)\n      .map(quaternion =>\n        new Quaternion(\n          quaternion[1],\n          quaternion[2],\n          quaternion[3],\n          quaternion[0]\n        ).normalize()\n      )\n      .orSome(Quaternion.Identity());\n    const splinePath = Util3d.splineObj2redis(spline);\n    const keyPoints = createPlaceHolderKeyPoints(\n      scene,\n      { ...dict, mesh, splinePath },\n      mainView\n    );\n    const path2return = new Path(\n      mesh,\n      curve.map(point => [point.x, point.y, point.z]),\n      keyPoints,\n      splinePath,\n      mainView,\n      dict.weight,\n      dict.keyValueMap\n    );\n    mesh.onClick = getMeshOnClick(mainView, path2return);\n    mesh.observers = new Observable();\n    mesh.observers.add(getMeshObserver(keyPoints));\n    return path2return;\n  }\n\n  /**\n   * Create new mesh from old, has side effects\n   *\n   * @param {*} newPoints: Vector3\n   * @param {*} scene: Scene\n   * @param {*} item: PathItem\n   * @param {*} mainView: MainView\n   * @param {*} keyPointUpdateFunction: (scene, mainView, mesh, item) => Array<Mesh>\n   */\n  static createNewMeshFromOldUsingNewPoints(\n    newPoints,\n    scene,\n    item,\n    mainView,\n    keyPointUpdateFunction = defaultKeyPointUpdate\n  ) {\n    const { mesh: oldMesh } = item;\n    const average = Util3d.pointAverage(newPoints);\n    newPoints = newPoints.map(x => x.subtract(average));\n\n    const spline = Util3d.getSplineFromCurve(newPoints);\n    const newMesh = Util3d.createTubeFromPoints(\n      scene,\n      spline.points,\n      Color3.Gray(),\n      RADIUS / 8,\n      oldMesh.name\n    );\n\n    // average in parent coord\n    const rotMat3 = Util3d.getRotationMatrix(oldMesh);\n    const scaleVec3 = Vec3.ofBabylon(oldMesh.scaling);\n    const averageInParentCoord = rotMat3\n      .prodVec(Vec3.ofBabylon(average).mul(scaleVec3))\n      .toBabylon();\n\n    newMesh.parent = oldMesh.parent;\n    newMesh.rotationQuaternion = oldMesh.rotationQuaternion;\n    newMesh.position = averageInParentCoord.add(oldMesh.position);\n\n    newMesh.material = oldMesh.material;\n    newMesh.visibility = oldMesh.visibility;\n    newMesh.onClick = oldMesh.onClick;\n    newMesh.getMouseContextActions = oldMesh.getMouseContextActions;\n    newMesh.nodeItem = oldMesh.nodeItem;\n    newMesh.observers = oldMesh.observers;\n    item.localPath = newPoints.map(x => Vec3.ofBabylon(x).toArray());\n    item.splinePath = Util3d.splineObj2redis(spline);\n    item.mesh = newMesh;\n    const oldKeyPoints = item.keyPoints;\n    item.keyPoints = keyPointUpdateFunction(scene, mainView, oldMesh, item);\n    // update observer that triggers keypoints observers\n    item.mesh.observers.clear();\n    item.mesh.observers.add(getMeshObserver(item.keyPoints));\n\n    Path.updateGraph(\n      mainView,\n      oldKeyPoints,\n      item,\n      oldKeyPoints.length !== item.keyPoints.length\n    );\n\n    oldMesh.dispose();\n    return item;\n  }\n\n  static deleteKeyPoint(scene, keyPointMesh, mainView) {\n    const index = keyPointMesh.index;\n    const name = keyPointMesh.parent.name;\n    mainView.getNodeFromTree(name).forEach(({ item }) => {\n      const { mesh } = item;\n      const copyPosition = { ...mesh.position };\n      let newPoints = item.localPath.map(x => Vec3.of(x).toBabylon());\n      mainView\n        .getUndoManager()\n        .doIt(\n          Path.getUndoDeleteKeyPoint(\n            name,\n            index,\n            copyPosition,\n            newPoints,\n            scene,\n            item,\n            mainView\n          )\n        );\n    });\n  }\n\n  static getUndoDeleteKeyPoint(\n    name,\n    index,\n    copyPosition,\n    newPoints,\n    scene,\n    item,\n    mainView\n  ) {\n    return UndoManager.actionBuilder()\n      .doAction(() => {\n        const copyPoints = [...newPoints];\n        copyPoints.splice(index, 1);\n        Path.createNewMeshFromOldUsingNewPoints(\n          copyPoints,\n          scene,\n          item,\n          mainView,\n          Path.onAddNewPointKeyPointUpdate\n        );\n        mainView.updateNodeInServer(name);\n      })\n      .undoAction(() => {\n        const copyPoints = [...newPoints];\n        item.mesh.position = copyPosition;\n        Path.createNewMeshFromOldUsingNewPoints(\n          copyPoints,\n          scene,\n          item,\n          mainView,\n          Path.onAddNewPointKeyPointUpdate\n        );\n        mainView.updateNodeInServer(name);\n      })\n      .build();\n  }\n\n  static onAddNewPointKeyPointUpdate(scene, mainView, oldMesh, item) {\n    // used when new keypoint is added\n    return createPlaceHolderKeyPoints(scene, item, mainView);\n  }\n\n  /**\n   *\n   * @param {*} scene\n   * @param {*} keyPointMesh\n   * @param {*} curveMesh\n   * @param {*} mainView\n   * @param {*} orientation: it belongs to the set {-1,1}, represents orientation\n   */\n  static addKeyPointInBetween(scene, keyPointMesh, mainView, orientation) {\n    const index = keyPointMesh.index;\n    const name = keyPointMesh.parent.name;\n    mainView.getNodeFromTree(name).forEach(({ item }) => {\n      const points = item.localPath.map(x => Vec3.of(x).toBabylon());\n      const copyPosition = { ...item.mesh.position };\n      mainView\n        .getUndoManager()\n        .doIt(\n          Path.getUndoAddKeyPointInBetween(\n            name,\n            index,\n            orientation,\n            item,\n            points,\n            copyPosition,\n            scene,\n            mainView\n          )\n        );\n    });\n  }\n\n  static getUndoAddKeyPointInBetween(\n    name,\n    index,\n    orientation,\n    item,\n    points,\n    copyPosition,\n    scene,\n    mainView\n  ) {\n    return UndoManager.actionBuilder()\n      .doAction(() => {\n        const nextIndex = index + orientation;\n        const numberOfPoints = item.localPath.length;\n        let newPoints = [];\n        const oldPoints = [...points];\n        if (nextIndex < 0) {\n          newPoints = [\n            oldPoints[0].scale(3).subtract(oldPoints[1]).scale(0.5)\n          ].concat(oldPoints);\n        } else if (nextIndex > numberOfPoints - 1) {\n          newPoints = oldPoints.concat([\n            oldPoints[numberOfPoints - 1]\n              .scale(3)\n              .subtract(oldPoints[numberOfPoints - 2])\n              .scale(0.5)\n          ]);\n        } else {\n          const specialIndex = index + Math.max(0, orientation);\n          for (let i = 0; i < specialIndex; i++) {\n            newPoints.push(oldPoints[i]);\n          }\n          newPoints.push(oldPoints[nextIndex].add(oldPoints[index]).scale(0.5));\n          for (let i = specialIndex; i < numberOfPoints; i++) {\n            newPoints.push(oldPoints[i]);\n          }\n        }\n\n        Path.createNewMeshFromOldUsingNewPoints(\n          newPoints,\n          scene,\n          item,\n          mainView,\n          Path.onAddNewPointKeyPointUpdate\n        );\n\n        mainView.updateNodeInServer(name);\n      })\n      .undoAction(() => {\n        const copyPoints = [...points];\n        item.mesh.position = copyPosition;\n        Path.createNewMeshFromOldUsingNewPoints(\n          copyPoints,\n          scene,\n          item,\n          mainView,\n          Path.onAddNewPointKeyPointUpdate\n        );\n\n        mainView.updateNodeInServer(name);\n      })\n      .build();\n  }\n\n  /**\n   *\n   * @param {*} mainView: MainView\n   * @param {*} oldKpMeshes: Mesh\n   * @param {*} pathItem: PathItem\n   * @param {*} isTopologyChange: boolean\n   */\n  static updateGraph(mainView, oldKpMeshes, pathItem, isTopologyChange) {\n    if (!isTopologyChange) return;\n    mainView.getGraph().forEach(({ item: graph }) => {\n      //naive algorithm, delete all vertices\n      oldKpMeshes.forEach(kp => {\n        graph.delVertexFromMesh(kp, false);\n      });\n      // add final edge\n      const keyPoints = pathItem.keyPoints;\n      const edgeMeshes = [keyPoints[0], keyPoints[keyPoints.length - 1]];\n      graph.addEdge(...edgeMeshes);\n      mainView.updateNodeInServer(graph.name);\n    });\n  }\n}\n\nexport default Path;\n\nconst getMeshOnClick = (mainView, nodeItem) => () => {\n  mainView.closeContextDial();\n  mainView\n    .getNodeFromTree(nodeItem.name)\n    .forEach(node => (node.item.selectedKeyPointIndex = -1));\n};\n\nconst getMeshObserver = keypoints => ({\n  updatedPointMesh,\n  is2updateServer,\n  displacement\n}) => {\n  keypoints.forEach(k => {\n    if (!!k.graphVertex) {\n      k.graphVertex.vertexObs({\n        updatedPointMesh: k,\n        is2updateServer,\n        displacement\n      });\n    }\n  });\n};\n\nfunction defaultKeyPointUpdate(scene, mainView, oldMesh, item) {\n  // used when key point is updated\n  const childrenCopy = [...oldMesh._children];\n  const spline = item.splinePath.map(z => new Vector3(z[0], z[1], 0));\n  childrenCopy.forEach(c => {\n    c.parent = item.mesh;\n  });\n  return item.keyPoints.map((k, i) => {\n    k.index = i;\n    k.name = `${oldMesh.name}keyPointSpline${i}`;\n    k.position = Vec3.of(item.localPath[i]).toBabylon();\n    k.rotationQuaternion = Quaternion.Identity();\n    if (!!oldMesh.graphVertex) k.graphVertex = oldMesh.graphVertex;\n    if (i > 0 && i < item.keyPoints.length - 1) {\n      k._children.forEach(kChild => kChild.dispose());\n      const c = getConeMesh(\n        scene,\n        k.material.diffuseColor,\n        item.mesh,\n        i,\n        spline,\n        k.position\n      )();\n      c.parent = k;\n    }\n    return k;\n  });\n}\n\nconst getKeyPointObserverFunction = (scene, mainView) => {\n  return ({ updatedPointMesh, is2updateServer, displacement }) => {\n    if (!updatedPointMesh.parent) return;\n    mainView\n      .getNodeFromTree(updatedPointMesh.parent.name)\n      .forEach(({ item }) => {\n        const { index } = updatedPointMesh;\n        const { mesh } = item;\n        let newPoints = item.localPath.map(x => Vec3.of(x).toBabylon());\n        newPoints[index] = updatedPointMesh.position;\n        Path.createNewMeshFromOldUsingNewPoints(\n          newPoints,\n          scene,\n          item,\n          mainView\n        );\n        if (index > 0 && index < newPoints.length - 1) {\n          // we know by construction that this keyPoint has children\n          mainView.highlightMeshesInScene([item.keyPoints[index]._children[0]]);\n        }\n        if (is2updateServer) {\n          mainView.updateNodeInServer(mesh.name);\n          mainView.setProperties(item.toForm());\n        }\n      });\n  };\n};\n\nconst getKeyPointActions = (scene, keyPointMesh, mainView) => {\n  const actions = [];\n\n  mainView.getNodeFromTree(keyPointMesh.parent.name).forEach(pathTreeNode => {\n    const item = pathTreeNode.item;\n    const curve = item.localPath;\n\n    if (curve.length !== 2) {\n      actions.push({\n        icon: props => <i className=\"fas fa-trash\" {...props}></i>,\n        action: parentView => {\n          Path.deleteKeyPoint(scene, keyPointMesh, parentView);\n          parentView.closeContextDial();\n        },\n        name: \"Delete node [DEL]\"\n      });\n    }\n\n    actions.push({\n      icon: props => <i className=\"fas fa-less-than\" {...props}></i>,\n      action: parentView => {\n        Path.addKeyPointInBetween(scene, keyPointMesh, parentView, -1);\n        parentView.closeContextDial();\n      },\n      name: \"Add previous\"\n    });\n\n    actions.push({\n      icon: props => <i className=\"fas fa-greater-than\" {...props}></i>,\n      action: parentView => {\n        Path.addKeyPointInBetween(scene, keyPointMesh, parentView, 1);\n        parentView.closeContextDial();\n      },\n      name: \"Add next\"\n    });\n  });\n\n  return actions;\n};\n\nconst createPlaceHolderKeyPoints = (scene, item, mainView) => {\n  const color = new Color3(0.25, 0.25, 0.25);\n  const keyPoints = [];\n  const curve = item.localPath.map(z => Vec3.of(z).toBabylon());\n  const spline = item.splinePath.map(z => new Vector3(z[0], z[1], 0));\n  const curveMesh = item.mesh;\n  curve.forEach((p, i) => {\n    const sphere = getSphereMesh(scene, color, curveMesh, i);\n    const cone = () => {\n      const c = getConeMesh(scene, color, curveMesh, i, spline, p)();\n      const s = getSphereMesh(scene, color, curveMesh, i)();\n      s.visibility = 0.1;\n      c.parent = s;\n      return s;\n    };\n\n    const keyPoint = i === 0 || i === curve.length - 1 ? sphere() : cone();\n    keyPoint.parent = curveMesh;\n    keyPoint.position = p;\n    keyPoint.index = i;\n    keyPoint.observers = new Observable();\n\n    keyPoints.push(keyPoint);\n\n    keyPoint.observers.add(getKeyPointObserverFunction(scene, mainView));\n  });\n\n  keyPoints.forEach(kp => {\n    kp.onClick = () => {\n      mainView.setContextActions(getKeyPointActions(scene, kp, mainView));\n      mainView.getNodeFromTree(kp.parent.name).forEach(node => {\n        node.item.selectedKeyPointIndex = kp.index;\n        mainView.setProperties(node.item.toForm());\n      });\n    };\n  });\n  return keyPoints;\n};\n\nfunction getConeMesh(scene, color, curveMesh, i, spline, p) {\n  return () => {\n    const index = spline\n      .map(z => p.subtract(z).length())\n      .reduce((e, x, i) => (e.value < x ? e : { value: x, index: i }), {\n        value: Number.MAX_VALUE,\n        index: -1\n      }).index;\n    const u = spline[index + 1]\n      .subtract(spline[index])\n      .normalize()\n      .scale(RADIUS);\n    const c = Util3d.createOrientedCone(\n      scene,\n      u,\n      color,\n      `${curveMesh.name}keyPointCone${i}`,\n      false\n    );\n    return c;\n  };\n}\n\nfunction getSphereMesh(scene, color, curveMesh, i) {\n  return () =>\n    Util3d.createSphere(\n      scene,\n      color,\n      RADIUS,\n      `${curveMesh.name}keyPointSpline${i}`,\n      true\n    );\n}\n\nfunction isPathOnGraph(pathItem) {\n  return [\n    pathItem.keyPoints[0]?.graphVertex,\n    pathItem.keyPoints[pathItem.keyPoints.length - 1]?.graphVertex\n  ].every(v => !!v);\n}\n","import NodeItem from \"./NodeItem\";\nimport Util3d from \"../Util3d/Util3d\";\nimport { Color3, Vector3, Observable } from \"@babylonjs/core\";\nimport Constants from \"../Utils/Constants\";\nimport { Quaternion } from \"@babylonjs/core/Maths/math\";\nimport Graph from \"../Graph/Graph\";\nimport Vec3 from \"../Math/Vec3\";\nimport { Maybe } from \"monet\";\nimport React from \"react\";\nimport lodashGet from \"lodash/get\";\nimport { UndoManager } from \"mov-fe-lib-core\";\nimport Path from \"./Path\";\n\n/**\n * One graph per scene\n */\nclass GraphItem extends NodeItem {\n  constructor(scene, mainView, name = GraphItem.NAME, keyValueMap = {}) {\n    const sceneId = scene.getUniqueId();\n    // super() must be called before using _this_.\n    if (\n      sceneId in graphItemInstances &&\n      !graphItemInstances[sceneId].mesh.isDisposed()\n    ) {\n      return graphItemInstances[sceneId];\n    }\n\n    const graphPlaceHolder = getGraphPlaceHolder(scene, name);\n    graphPlaceHolder.onClick = () =>\n      (this.graphFormMapper = this.getDefaultFormMapper());\n\n    super(graphPlaceHolder, keyValueMap);\n    graphItemInstances[sceneId] = this;\n\n    // object properties\n    this.graph = new Graph();\n    this.scene = scene;\n    this.mainView = mainView;\n    this.meshByEdgeId = {};\n    this.graphFormMapper = this.getDefaultFormMapper();\n    this.vertexGenerator = 0;\n  }\n\n  getType = () => GraphItem.TYPE;\n\n  toDict() {\n    const dict = super.toDict();\n    const { graph } = this;\n    const vertices = { ...graph.getVertices() };\n    const edges = { ...graph.getEdges() };\n    Object.keys(vertices).forEach(k => {\n      graph.getVertex(k).forEach(({ data: vertexData }) => {\n        vertices[k] = {\n          position: Vec3.ofBabylon(vertexData.position).toArray(),\n          id: String(k)\n        };\n      });\n    });\n    Object.keys(edges).forEach(k => {\n      const ids = Graph.key2Edge(k);\n      graph.getEdge(...ids).forEach(({ data: edgeData }) => {\n        const [i, j] = ids.map(x => Number(x));\n        const edgeMesh = edgeData.edge.map(({ mesh }) => mesh);\n        const [belongsSrcMesh, belongsTrgMesh] = edgeMesh;\n        edges[k] = {\n          ids: ids,\n          keyValueMap: edgeData.keyValueMap,\n          weight: edgeData.weight,\n          belongsSrc:\n            i < j\n              ? this.exportBelongToData(belongsSrcMesh)\n              : this.exportBelongToData(belongsTrgMesh),\n          belongsTrg:\n            i < j\n              ? this.exportBelongToData(belongsTrgMesh)\n              : this.exportBelongToData(belongsSrcMesh)\n        };\n        if (this.doMeshesBelong2SamePath(...edgeMesh)) {\n          if (i > j) {\n            // remove edge if belongs to same path and i > j\n            delete edges[k];\n          }\n        }\n      });\n    });\n    dict[\"vertices\"] = vertices;\n    dict[\"edges\"] = edges;\n    return dict;\n  }\n\n  toForm() {\n    const form = super.toForm();\n    delete form.jsonSchema.properties.position;\n    delete form.jsonSchema.properties.quaternion;\n    delete form.jsonSchema.properties.color;\n    delete form.uiSchema.position;\n    delete form.uiSchema.quaternion;\n    delete form.uiSchema.color;\n    delete form.data.position;\n    delete form.data.quaternion;\n    delete form.data.color;\n    return this.graphFormMapper.toForm(form);\n  }\n\n  ofForm(form) {\n    this.name = form.name;\n    this.mesh.name = form.name;\n    this.graphFormMapper.ofForm(form);\n  }\n\n  getDefaultFormMapper() {\n    return {\n      toForm: form => form,\n      ofForm: form => (this.keyValueMap = { ...form.annotations })\n    };\n  }\n\n  getToFormEdge(edgeMesh) {\n    const { graph } = this;\n    return {\n      toForm: form => {\n        return graph\n          .getEdge(...edgeMesh.edgeIndexes)\n          .map(({ data: edgeData }) => {\n            form.jsonSchema.properties[\"weight\"] = {\n              type: \"number\",\n              title: \"Weight\"\n            };\n            form.data[\"weight\"] = edgeData.weight;\n            NodeItem.setAnnotations2Form(form, edgeData.keyValueMap);\n            form.jsonSchema.properties[\n              \"annotations\"\n            ].title = `Annotations Edge ${edgeMesh.edgeIndexes}`;\n            return form;\n          })\n          .orSome(form);\n      },\n      ofForm: form => {\n        const { edgeIndexes } = edgeMesh;\n        graph.getEdge(...edgeIndexes).forEach(({ data: edgeData }) => {\n          edgeData.keyValueMap = { ...lodashGet(form, \"annotations\", {}) };\n          edgeData.weight = Number.parseFloat(form.weight);\n        });\n      }\n    };\n  }\n\n  /**\n   * @override nodeItem delVertex()\n   * Delete all vertex from tree nodes\n   */\n  delVertex() {\n    // Iterate though all nodes under the root node and delete its vertexes\n    const root = this.mainView.getRootNode();\n    this.delVertexRecursively(root?.children);\n  }\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                   Graph Operations                                   *\n   *                                                                                      */\n  //========================================================================================\n\n  /**\n   *\n   * @param {*} iMesh: Mesh vertex\n   * @param {*} jMesh: Mesh vertex\n   * @param {*} edgeIndexes: Array<Integer>\n   */\n  addEdge(iMesh, jMesh, edgeIndexes = []) {\n    const [iIndex, jIndex] = edgeIndexes;\n    if (this.hasEdge(iMesh, jMesh)) return;\n    this.buildVertex(iMesh, iIndex);\n    this.buildVertex(jMesh, jIndex);\n    this.buildEdge(iMesh, jMesh);\n    return this;\n  }\n\n  delEdge(iMesh, jMesh) {\n    const { graph } = this;\n    const [i, j] = [iMesh, jMesh].map(this.getVertexIdFromMesh);\n    // if it has an edge\n    graph.getEdge(i, j).forEach(({ data: edgeData }) => {\n      const ijKey = Graph.edgeKey(i, j);\n      const jiKey = Graph.edgeKey(j, i);\n      Maybe.fromNull(this.meshByEdgeId[ijKey]).forEach(mesh => {\n        mesh.dispose();\n        delete this.meshByEdgeId[ijKey];\n        delete this.meshByEdgeId[jiKey];\n      });\n      graph.delEdge(i, j);\n    });\n  }\n\n  /**\n   *\n   * @param {*} iMesh: Mesh\n   * @param {*} jMesh: Mesh\n   */\n  hasEdge(iMesh, jMesh) {\n    const [i, j] = [iMesh, jMesh].map(this.getVertexIdFromMesh);\n    return this.graph.hasEdge(i, j);\n  }\n\n  delVertexFromMesh(iMesh, is2updateServer = true) {\n    const { graph } = this;\n    const i = this.getVertexIdFromMesh(iMesh);\n    graph.getVertex(i).forEach(_ => {\n      // if vertex found delete neighbors\n      const neighbors = graph.getNeighbors(i);\n      neighbors\n        .map(j => graph.getVertex(j))\n        .forEach(maybeV =>\n          maybeV.forEach(({ data: vertexData }) => {\n            const { mesh: jMesh } = vertexData;\n            this.delEdge(iMesh, jMesh);\n          })\n        );\n      // delete itself\n      graph.delVertex(i);\n      iMesh.graphVertex = undefined;\n      if (is2updateServer) this.mainView.updateNodeInServer(this.name);\n    });\n  }\n\n  /**\n   *\n   * @param {*} id: vertex to be updated id\n   * @param {*} newPosition: Vector3, new vertex position\n   * @param {*} is2updateServer: is to update in server boolean var\n   * @param {*} protectEdge: Pair<Int> with vertex indices\n   */\n  updateVertexPosition(id, newPosition, is2updateServer = true) {\n    const { graph } = this;\n    graph.getVertex(id).forEach(({ data: vertexData }) => {\n      vertexData.position = newPosition;\n    });\n    graph.getNeighbors(id).forEach(j => {\n      const i = id;\n      const edgeKey = Graph.edgeKey(i, j);\n      this.meshByEdgeId[edgeKey] && this.meshByEdgeId[edgeKey].dispose();\n      graph.getEdge(i, j).forEach(({ data: edgeData }) => {\n        const [iData, jData] = edgeData.edge;\n        this.buildEdge(iData.mesh, jData.mesh);\n      });\n      if (is2updateServer) this.mainView.updateNodeInServer(this.name);\n    });\n  }\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                    Private Methods                                   *\n   *                                                                                      */\n  //========================================================================================\n\n  /**\n   * Delete vertex from nodeTree children\n   * @param {*} nodeTree: List of nodes (initially root.children)\n   */\n  delVertexRecursively(nodeTree = []) {\n    nodeTree.forEach(node => {\n      if(node.item.getType() !== GraphItem.TYPE) {\n        node.item.delVertex();\n        this.delVertexRecursively(node.children);\n      }\n    });\n  }\n\n  /**\n   *\n   * @param {*} mesh: Mesh\n   * @returns Integer| Undefined\n   */\n  getVertexIdFromMesh(mesh) {\n    return mesh?.graphVertex?.vertex?.id;\n  }\n\n  /**\n   *\n   * @param {*} vertexMesh: Mesh\n   * @param {*} vertexIndex: integer representing index of vertex (can be undefined)\n   *\n   */\n  buildVertex(vertexMesh, vertexIndex) {\n    // test if vertexMesh already exists in the graph\n    const vId = this.getVertexIdFromMesh(vertexMesh);\n    const maybeVertex = this.graph.getVertex(vId);\n    maybeVertex.orElseRun(() => {\n      // if vertex doesn't exist\n      const id = vertexIndex ? vertexIndex : this.vertexGenerator++;\n      this.graph.addVertex(id);\n      this.graph.getVertex(id).forEach(vertex => {\n        vertex.data = VertexData.builder()(id, vertexMesh);\n        this.addObs2VertexMesh(vertex.data);\n      });\n    });\n  }\n\n  /**\n   *\n   * @param {*} vData: VertexData\n   */\n  addObs2VertexMesh(vData) {\n    const { mesh } = vData;\n    if (mesh !== undefined) {\n      mesh.graphVertex = {\n        vertex: vData,\n        delVertex: () => this.delVertexFromMesh(mesh),\n        vertexObs: this.getVertexMeshObs(vData)\n      };\n    }\n  }\n\n  /**\n   *\n   * @param {*} vertexData: VertexData\n   */\n  getVertexMeshObs(vertexData) {\n    return ({ updatedPointMesh, is2updateServer, _ }) => {\n      const newPos = Util3d.getGlobalCoordinates(\n        updatedPointMesh,\n        updatedPointMesh.position\n      ).toBabylon();\n      this.updateVertexPosition(vertexData.id, newPos, is2updateServer);\n    };\n  }\n\n  /**\n   *\n   * @param {*} iMesh: Mesh\n   * @param {*} jMesh: Mesh\n   * @param {*} edgeMeshes: Array<Mesh>\n   */\n  buildEdge(iMesh, jMesh) {\n    const { graph } = this;\n    // need to sort edge numbers because is undirected graph\n    const [i, j] = [iMesh, jMesh]\n      .map(this.getVertexIdFromMesh)\n      .sort((a, b) => a - b); // reason here: https://stackoverflow.com/questions/15084070/is-this-a-bug-in-array-sort\n    graph.addEdge(i, j);\n    graph.getVertex(i).forEach(({ data: iVertexD }) =>\n      graph.getVertex(j).forEach(({ data: jVertexD }) => {\n        graph.getEdge(i, j).forEach(edge => {\n          edge.data = new EdgeData(iVertexD, jVertexD);\n        });\n        // if vertices belong to same path don't build mesh\n        if (!this.doVerticesBelong2SamePath(i, j)) {\n          const edgeMesh = this.getEdgeMesh(iVertexD, jVertexD);\n          this.meshByEdgeId[Graph.edgeKey(i, j)] = edgeMesh;\n          this.meshByEdgeId[Graph.edgeKey(j, i)] = edgeMesh;\n        }\n      })\n    );\n  }\n\n  getEdgeMesh(iVertexD, jVertexD) {\n    const edgeGlobalCoord = [iVertexD, jVertexD].map(({ mesh }) => {\n      return Util3d.getGlobalCoord(mesh, mesh.position);\n    });\n    const edgeMesh = GraphItem.getEdgeMesh(\n      this.scene,\n      edgeGlobalCoord,\n      Color3.Yellow()\n    );\n    edgeMesh.parent = this.mesh;\n    edgeMesh.edgeIndexes = [iVertexD, jVertexD].map(({ id }) => id);\n    edgeMesh.getMouseContextActions = this.getEdgeMouseCtxActions(edgeMesh);\n    this.addObserver2EdgeMesh(edgeMesh);\n    this.addOnClickEdge(edgeMesh);\n    return edgeMesh;\n  }\n\n  /**\n   *\n   * @param {*} edgeMesh: Mesh\n   * @returns: () => Array<{title: String, onClick: () => {}}>\n   */\n  getEdgeMouseCtxActions = edgeMesh => () => {\n    return [\n      {\n        title: \"Delete\",\n        onClick: () =>\n          this.mainView.getUndoManager().doIt(this.getUndoDeleteEdge(edgeMesh))\n      }\n    ];\n  };\n\n  /**\n   *\n   * @param {*} edgeMesh: Mesh\n   */\n  addObserver2EdgeMesh(edgeMesh) {\n    edgeMesh.observers = new Observable();\n    edgeMesh.observers.add(this.getEdgeObs());\n  }\n\n  /**\n   * @returns ({updatedPointMesh: Mesh, is2updateServer: Boolean, displacement: Vector3}) => {}\n   */\n  getEdgeObs = () => ({ updatedPointMesh, is2updateServer, displacement }) => {\n    const v = Vec3.ofBabylon(displacement);\n    const vLocal = Util3d.getLocalCoordFromWorld(this.mesh, v, false);\n    updatedPointMesh.position = updatedPointMesh.position.add(\n      vLocal.scale(-1).toBabylon()\n    );\n    if (is2updateServer) {\n      this.graphFormMapper = this.getToFormEdge(updatedPointMesh);\n      this.mainView.setProperties(this.toForm());\n    }\n  };\n\n  /**\n   *\n   * @param {*} edgeMesh: Mesh\n   */\n  addOnClickEdge(edgeMesh) {\n    edgeMesh.onClick = this.getOnClickEdge(edgeMesh);\n  }\n\n  getOnClickEdge = edgeMesh => () => {\n    const actions = [];\n    actions.push({\n      icon: props => <i className=\"fas fa-trash\" {...props}></i>,\n      action: () => {\n        this.mainView.getUndoManager().doIt(this.getUndoDeleteEdge(edgeMesh));\n      },\n      name: \"Delete Edge [Del]\"\n    });\n    this.mainView.setContextActions(actions);\n  };\n\n  getUndoDeleteEdge(edgeMesh) {\n    const { graph } = this;\n    const { edgeIndexes } = edgeMesh;\n    const [iVertexD, jVertexD] = edgeIndexes\n      .map(i => graph.getVertex(i))\n      .map(maybeV => maybeV.some())\n      .map(({ data }) => data);\n    return this.getUndoDelLineEdge(iVertexD, jVertexD);\n  }\n\n  getUndoDelLineEdge(iVertexD, jVertexD) {\n    const { graph } = this;\n    const edgeVertexD = [iVertexD, jVertexD];\n    const [i, j] = edgeVertexD.map(({ id }) => id);\n    const edgeMeshes = edgeVertexD.map(({ mesh }) => mesh);\n    let edgeProps = { keyValueMap: {}, weight: 1, edge: {} };\n    graph.getEdge(i, j).forEach(({ data: edgeData }) => {\n      edgeProps.keyValueMap = edgeData.keyValueMap;\n      edgeProps.weight = edgeData.weight;\n      edgeProps.edge = edgeData.edge;\n    });\n    return UndoManager.actionBuilder()\n      .doAction(() => {\n        this.delEdge(...edgeMeshes);\n        this.mainView.closeContextDial();\n        this.mainView.updateNodeInServer(this.name);\n      })\n      .undoAction(() => {\n        this.addEdge(...edgeMeshes, [i, j]);\n        graph.getEdge(i, j).forEach(({ data: edgeData }) => {\n          edgeData.keyValueMap = edgeProps.keyValueMap;\n          edgeData.weight = edgeProps.weight;\n          edgeData.edge = edgeProps.edge;\n        });\n        this.mainView.updateNodeInServer(this.name);\n      })\n      .build();\n  }\n\n  /**\n   *\n   * @param {*} i: Integer\n   * @param {*} j: Integer\n   * @returns: Boolean\n   */\n  doVerticesBelong2SamePath(i, j) {\n    return this.graph\n      .getEdge(i, j)\n      .map(({ data: edgeData }) => {\n        const [iMesh, jMesh] = edgeData.edge.map(vData => vData.mesh);\n        if (iMesh === undefined || jMesh === undefined) return false;\n        return (\n          iMesh?.parent?.name === jMesh?.parent?.name &&\n          [iMesh, jMesh].map(this.isMeshBelong2Path).every(x => x)\n        );\n      })\n      .orSome(false);\n  }\n\n  isMeshBelong2Path = ({ parent }) => {\n    return this.mainView\n      .getNodeFromTree(parent?.name)\n      .filter(({ item }) => item.getType() === Path.TYPE)\n      .orSome(false);\n  };\n\n  doMeshesBelong2SamePath(iMesh, jMesh) {\n    const iParentNodeItem = iMesh?.parent?.nodeItem;\n    const jParentNodeItem = jMesh?.parent?.nodeItem;\n    return (\n      !!iParentNodeItem &&\n      !!jParentNodeItem &&\n      iParentNodeItem.name === jParentNodeItem.name &&\n      iParentNodeItem.getType() === Path.TYPE &&\n      jParentNodeItem.getType() === Path.TYPE\n    );\n  }\n\n  exportBelongToData = mesh => {\n    const { index, name } = mesh;\n    if (index === null || index === undefined) {\n      return { name };\n    }\n    // if mesh has index, then it must be a path or polygon\n    return this.mainView\n      .getNodeFromTree(mesh?.parent?.name)\n      .map(({ item }) => ({\n        name: item.name,\n        index: index > 0 ? -1 : index\n      }))\n      .orUndefined();\n  };\n  //========================================================================================\n  /*                                                                                      *\n   *                             Static Methods and Variables                             *\n   *                                                                                      */\n  //========================================================================================\n\n  static TYPE = \"GraphItem\";\n\n  static NAME = \"LogicGraph\";\n\n  static ofDict(scene, dict = null, mainView = null) {\n    if (!dict || !mainView)\n      throw new Error(\"null dictionary describing graphItem or null mainView\");\n    const graphItem = new GraphItem(\n      scene,\n      mainView,\n      dict.name,\n      dict.keyValueMap\n    );\n    const { edges } = dict;\n    let vertexCounter = Number.MIN_VALUE;\n    // create mesh of graph using addEdge\n    Object.values(edges).forEach(({ ids, belongsSrc, belongsTrg }) => {\n      const [i, j] = ids.map(x => Number(x));\n      vertexCounter = Math.max(vertexCounter, Math.max(i, j));\n      if (i < j) {\n        const edgeMeshes = getMeshesFromEdgeData(mainView, {\n          belongsSrc,\n          belongsTrg\n        });\n        graphItem.addEdge(...edgeMeshes, [i, j]);\n        // add additional data\n        graphItem.graph.getEdge(i, j).forEach(({ data: edgeData }) => {\n          const dataEdge = edges[Graph.edgeKey(i, j)];\n          edgeData.importFeatures(dataEdge);\n        });\n      }\n    });\n    graphItem.vertexGenerator = vertexCounter + 1;\n    return graphItem;\n  }\n\n  static getVertexMesh(\n    scene,\n    vertexPosition,\n    color = Color3.Gray(),\n    radius = Constants.RADIUS\n  ) {\n    const sphere = Util3d.createSphere(scene, color, radius);\n    sphere.position = vertexPosition;\n    return sphere;\n  }\n\n  /**\n   *\n   * @param {*} scene: Scene\n   * @param {*} edge: Array<Vector3>\n   * @param {*} color: Color3\n   * @param {*} radius: Number\n   */\n  static getEdgeMesh(\n    scene,\n    edge,\n    color = Color3.Gray(),\n    radius = Constants.RADIUS / 4\n  ) {\n    return Util3d.createTubeFromPoints(scene, edge, color, radius);\n  }\n\n  static createGraphItemIfNone = (scene, parentView) =>\n    parentView.getGraph().orElseRun(() => {\n      const graphItem = new GraphItem(scene, parentView);\n      graphItem.mesh.parent = parentView.getRootNode().item.mesh;\n      parentView.addNodeItem2Tree(graphItem);\n    });\n}\n\nconst graphItemInstances = {};\nconst getGraphPlaceHolder = (scene, name) => {\n  const graphPlaceHolder = Util3d.createSphere(\n    scene,\n    Color3.Gray(),\n    Number.MIN_VALUE,\n    name,\n    false\n  );\n  graphPlaceHolder.position = Vector3.Zero();\n  graphPlaceHolder.scaling = Vector3.One();\n  graphPlaceHolder.rotationQuaternion = Quaternion.Identity();\n  graphPlaceHolder.visibility = 0.0;\n  return graphPlaceHolder;\n};\n\nconst getMeshesFromEdgeData = (mainView, edgeProps) => {\n  const { belongsSrc, belongsTrg } = edgeProps;\n  const edgeMesh = [belongsSrc, belongsTrg].map(({ name, index }) => {\n    return mainView\n      .getNodeFromTree(name)\n      .map(({ item }) => {\n        if (index === null || index === undefined) return item.mesh;\n        // if has index, then it must be a path or polygon\n        const ind = index < 0 ? item.keyPoints.length - 1 : index;\n        return item.keyPoints[ind];\n      })\n      .orUndefined();\n  });\n  return edgeMesh;\n};\n\nclass VertexData {\n  /**\n   *\n   * @param {*} id: Integer\n   * @param {*} mesh: Mesh\n   * @param {*} position:\n   */\n  constructor(id, mesh, position) {\n    this.id = id;\n    this.mesh = mesh;\n    this.position = position;\n  }\n\n  static builder() {\n    return (id, mesh) => {\n      const globalPos = Util3d.getGlobalCoordinates(\n        mesh,\n        mesh.position\n      ).toBabylon();\n      return new VertexData(id, mesh, globalPos);\n    };\n  }\n}\n\nclass EdgeData {\n  constructor(vertexDataI, vertexDataJ, keyValueMap = {}) {\n    this.edge = [vertexDataI, vertexDataJ];\n    this.keyValueMap = keyValueMap;\n    this.weight = 1.0;\n  }\n\n  importFeatures({ keyValueMap, weight }) {\n    this.keyValueMap = keyValueMap;\n    this.weight = weight;\n  }\n}\n\nexport default GraphItem;\n","import Util3d from \"../Util3d/Util3d\";\nimport Vec3 from \"../Math/Vec3\";\nimport { Maybe } from \"monet\";\nimport MouseKeysAction from \"./MouseKeysAction\";\nimport React from \"react\";\nimport { Vector3 } from \"@babylonjs/core\";\nimport { UndoManager } from \"mov-fe-lib-core\";\nimport Clipboard from \"../Utils/Clipboard\";\nimport { selectOneAction } from \"../Utils/Utils\";\nimport SelectionPlaceHolder from \"../Util3d/SelectionPlaceHolder\";\nimport MeshSelector from \"../MainView/MeshSelector\";\nimport Vec2 from \"../Math/Vec2\";\nimport ReactDOM from \"react-dom\";\nimport TreeObject from \"../TreeObject/TreeObject\";\nimport GlobalRef from \"../NodeItem/GlobalRef\";\nimport GraphItem from \"../NodeItem/GraphItem\";\nimport Map from \"../NodeItem/Map\";\n\nclass DragObjectsAction extends MouseKeysAction {\n  constructor() {\n    super();\n    this.key = \"dragObject\";\n    this.name = \"Grab Objects [1]\";\n    this.icon = props => <i className=\"far fa-hand-paper\" {...props}></i>;\n    this.maybeSelectedMesh = Maybe.none();\n    this.clickPointInWorld = Vec3.ZERO;\n    this.movePointInWorld = Vec3.ZERO;\n    this.startDivPos = Vec2.ZERO;\n    this.corners = [];\n  }\n\n  action = parentView => {\n    super.action(parentView);\n    parentView.setSelectedAction(this);\n  };\n\n  onPointerDown = (evt, parentView) => {\n    if (!(evt.buttons === 1 || evt.buttons === 2)) return;\n    parentView.getSceneMemory().forEach(({ scene, ground }) => {\n      this.maybeSelectedMesh = Util3d.pickMesh(scene, ground);\n      this.maybeSelectedMesh.forEach(currentMesh =>\n        this.dragDownMesh(currentMesh, parentView, evt)\n      );\n      this.maybeSelectedMesh.orLazy(() => {\n        this.dragDownWithoutMesh(parentView, evt);\n      });\n    });\n  };\n\n  onPointerMove = (evt, parentView) => {\n    if (!(evt.buttons === 1)) return;\n    parentView.getSceneMemory().forEach(({ scene, ground }) => {\n      // check that a mesh was selected\n      this.maybeSelectedMesh.forEach(selectedMesh => {\n        Util3d.getGroundPosition(scene, ground).forEach(groundPos => {\n          this.dragMoveMesh(parentView, groundPos);\n        });\n      });\n      this.maybeSelectedMesh.orLazy(() => {\n        this.dragMoveWithoutMesh(evt);\n      });\n    });\n  };\n\n  onPointerUp = (evt, parentView) => {\n    parentView.getSceneMemory().forEach(({ camera, scene, ground, canvas }) => {\n      this.maybeSelectedMesh.forEach(selectedMesh => {\n        this.dragUpMesh(selectedMesh, parentView, scene, ground);\n      });\n      this.maybeSelectedMesh.orLazy(() => {\n        this.dragUpWithoutMesh(parentView, scene);\n      });\n      // reset action\n      camera.attachControl(canvas, true);\n      this.maybeSelectedMesh = Maybe.none();\n      this.destroySelectionDiv();\n      this.corners = [];\n    });\n  };\n\n  onKeyUp = (evt, parentView) => {\n    const defaultAction = () => super.onKeyUp(evt, parentView);\n    const predicateActionList = [\n      {\n        predicate: e => [\"Backspace\", \"Delete\"].includes(e.code),\n        action: this.getDeleteButtonAction(parentView)\n      },\n      {\n        predicate: e => e.ctrlKey && e.code === \"KeyC\",\n        action: this.getCopyAction(parentView)\n      },\n      {\n        predicate: e => e.ctrlKey && e.code === \"KeyV\",\n        action: this.getPasteAction(parentView)\n      }\n    ];\n    selectOneAction(predicateActionList, defaultAction)(evt);\n  };\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                         UTILS                                        *\n   *                                                                                      */\n  //========================================================================================\n\n  dragDownMesh(currentMesh, parentView, evt) {\n    parentView.getSceneMemory().forEach(({ camera, canvas, scene, ground }) => {\n      camera.detachControl(canvas);\n      this.addSelectedMesh(evt, currentMesh, parentView);\n      this.handleMeshRightClick(evt, parentView, currentMesh);\n      Util3d.getGroundPosition(scene, ground).forEach(groundPos => {\n        this.updateMouseVars(groundPos);\n        // mesh onClick\n        currentMesh.onClick\n          ? currentMesh.onClick()\n          : parentView.closeContextDial();\n\n        if (currentMesh.isSelectionPlaceHolder) {\n          parentView.addGizmo2Mesh(\n            currentMesh,\n            () =>\n              this.notifyObservers(currentMesh, true, Vec3.ZERO, parentView),\n            () =>\n              this.notifyObservers(currentMesh, false, Vec3.ZERO, parentView)\n          );\n        } else {\n          this.selectMeshUpdateUI(parentView);\n        }\n      });\n    });\n  }\n\n  selectMeshUpdateUI(parentView) {\n    const meshSelector = MeshSelector.ofMainView(parentView);\n    const selectionPlaceHolder = SelectionPlaceHolder.ofMainView(parentView);\n    const selectedMeshes = meshSelector.meshes();\n    parentView.highlightMeshesInScene(selectedMeshes);\n    parentView.highlightNodesInTree(selectedMeshes.map(({ name }) => name));\n    if (selectedMeshes.length > 1) {\n      parentView.addGizmo2Name();\n      selectionPlaceHolder.clear();\n      selectionPlaceHolder.push(selectedMeshes);\n      this.setProperties(parentView, selectedMeshes[0].name);\n    } else {\n      selectionPlaceHolder.clear();\n      parentView.addGizmo2Name();\n      selectedMeshes.forEach(mesh => {\n        parentView.addGizmo2Name(mesh.name);\n        this.setProperties(parentView, mesh.name);\n      });\n    }\n  }\n\n  dragDownWithoutMesh(parentView, evt) {\n    parentView\n      .getMouseCoordsFromRoot()\n      .forEach(mousePosRoot =>\n        this.handleRightClickWithoutMesh(evt, parentView, mousePosRoot)\n      );\n    parentView.getSceneMemory().forEach(({ camera, canvas, scene }) => {\n      if (evt.shiftKey) {\n        camera.detachControl(canvas);\n        this.createSelectionDiv(evt);\n        this.corners.push(Vec2.of(scene.pointerX, scene.pointerY));\n      }\n    });\n  }\n\n  dragMoveMesh(parentView, groundPos) {\n    const meshSelector = MeshSelector.ofMainView(parentView);\n    const meshes = meshSelector.meshes();\n    const selector = SelectionPlaceHolder.ofMainView(parentView);\n    const newMousePosInWorld = Vec3.ofBabylon(groundPos);\n    const v = newMousePosInWorld.sub(this.movePointInWorld);\n    meshes.forEach(mesh => {\n      let vLocal = Util3d.getLocalCoordFromWorld(mesh, v, false);\n      vLocal = new Vector3(vLocal.x, vLocal.y, 0);\n      mesh.position = mesh.position.add(vLocal);\n      this.notifyObservers(mesh, false, v, parentView);\n    });\n    if (meshes.length > 1) {\n      let vLocal = Util3d.getLocalCoordFromWorld(selector.mesh, v, false);\n      vLocal = new Vector3(vLocal.x, vLocal.y, 0);\n      selector.mesh.position = selector.mesh.position.add(vLocal);\n    }\n    this.movePointInWorld = newMousePosInWorld;\n  }\n\n  dragMoveWithoutMesh(evt) {\n    this.updateSelectionDiv(evt);\n  }\n\n  dragUpMesh(selectedMesh, parentView, scene, ground) {\n    const meshSelector = MeshSelector.ofMainView(parentView);\n    const meshes = meshSelector.meshes();\n    const selectPlaceHolder = SelectionPlaceHolder.ofMainView(parentView);\n    Util3d.getGroundPosition(scene, ground).forEach(groundPos => {\n      const groundPosInWorld = Vec3.ofBabylon(groundPos);\n      const bigDisplacement = groundPosInWorld.sub(this.clickPointInWorld);\n      meshes.forEach(mesh => {\n        this.notifyObservers(mesh, true, Vec3.ZERO, parentView);\n        parentView.updateNodeInServer(mesh.name);\n      });\n      this.setProperties(parentView, selectedMesh.name);\n      if (bigDisplacement.length() > 0) {\n        parentView\n          .getUndoManager()\n          .addIt(this.getUndoAbleAction(meshes, bigDisplacement, parentView));\n      }\n      if (selectedMesh.isSelectionPlaceHolder) {\n        meshSelector.clear();\n        meshSelector.addArray(selectPlaceHolder.arrayOfMeshes);\n      }\n    });\n  }\n\n  dragUpWithoutMesh(parentView, scene) {\n    this.selectObjectsInside(scene, parentView);\n  }\n\n  handleMeshRightClick = (evt, parentView, mesh) => {\n    if (!(evt.buttons === 2)) return;\n    if (!mesh || !mesh.getMouseContextActions) return;\n    parentView.setMouseContextActions(\n      evt,\n      mesh.getMouseContextActions(parentView)\n    );\n  };\n\n  /**\n   * @param evt: event\n   * @param parentView: MainView\n   * @param mousePosFromRoot: Vector3\n   */\n  handleRightClickWithoutMesh = (evt, parentView, mousePosFromRoot) => {\n    if (!(evt.buttons === 2)) return;\n    parentView.setMouseContextActions(evt, [\n      {\n        title: \"Paste\",\n        onClick: this.getPasteOnClick(mousePosFromRoot, parentView)\n      }\n    ]);\n  };\n\n  updateMouseVars(groundPos) {\n    const groundPosInGlobal = Vec3.ofBabylon(groundPos);\n    this.movePointInWorld = groundPosInGlobal;\n    this.clickPointInWorld = groundPosInGlobal;\n  }\n\n  addSelectedMesh(evt, currentMesh, parentView) {\n    const meshSelector = MeshSelector.ofMainView(parentView);\n    // is an edge mesh\n    if (!!currentMesh.edgeIndexes) {\n      meshSelector.clear();\n      meshSelector.add(currentMesh);\n      return;\n    }\n    // not an edge mesh\n    meshSelector.filter(mesh => !mesh.edgeIndexes);\n    if (evt.shiftKey) {\n      meshSelector.add(currentMesh);\n    } else {\n      if (meshSelector.has(currentMesh)) return;\n      meshSelector.clear();\n      meshSelector.add(currentMesh);\n    }\n  }\n\n  getPasteOnClick = (mousePosFromRoot, parentView) => () => {\n    const pasteAction = Clipboard.paste();\n    if (pasteAction && typeof pasteAction === \"function\") {\n      pasteAction(mousePosFromRoot, parentView);\n    }\n  };\n\n  getDeleteButtonAction(parentView) {\n    return () => {\n      const meshSelector = MeshSelector.ofMainView(parentView);\n      const meshes = meshSelector.meshes();\n      const isOne = meshes.length === 1;\n      meshes.forEach(mesh => {\n        const maybeNode = parentView.getNodeFromTree(mesh.name);\n        maybeNode.forEach(node => parentView.onDeleteNode(node, isOne, isOne));\n        maybeNode.orElseRun(() => {\n          //TODO REFACTOR THIS;\n          if (!isOne) return;\n          const contextActions = parentView.getContextActions();\n          !!contextActions[0] && contextActions[0].action(parentView);\n        });\n      });\n      parentView.highlightNodesInTree();\n      parentView.highlightMeshesInScene();\n      parentView.addGizmo2Mesh();\n      meshSelector.clear();\n      SelectionPlaceHolder.ofMainView(parentView).clear();\n      parentView.forceUpdate();\n    };\n  }\n\n  getCopyAction(parentView) {\n    const meshSelector = MeshSelector.ofMainView(parentView);\n    const meshes = meshSelector.meshes();\n    const selectPlaceHolder = SelectionPlaceHolder.ofMainView(parentView).mesh;\n    return () => {\n      if (meshes.length <= 1) {\n        meshes\n          .filter(mesh => !!mesh.nodeItem)\n          .map(mesh => mesh.nodeItem)\n          .forEach(item => {\n            Clipboard.copy((mousePosFromRoot, someMainView) => {\n              item\n                .getCopyFunction()(mousePosFromRoot, someMainView)\n                .forEach(({ mesh: copiedMesh }) => {\n                  someMainView.addGizmo2Name(copiedMesh.name);\n                  someMainView.highlightMeshesInScene([copiedMesh]);\n                  someMainView.highlightNodesInTree([copiedMesh.name]);\n                  MeshSelector.ofMainView(someMainView).clear().add(copiedMesh);\n                });\n            });\n          });\n      } else {\n        const nodeCopyActionPairs = meshes\n          .filter(mesh => !!mesh.nodeItem)\n          .map(mesh => mesh.nodeItem)\n          .reduce((nodeActionPairs, nodeItem) => {\n            nodeActionPairs.push([nodeItem, nodeItem.getCopyFunction(false)]);\n            return nodeActionPairs;\n          }, []);\n        Clipboard.copy((mousePosFromRoot, someMainView) => {\n          const maybeCopiedItems = nodeCopyActionPairs.map(\n            ([nodeItem, copyAction]) => {\n              const displacement = Util3d.toGlobalCoord(parentView)(\n                nodeItem.mesh.absolutePosition\n              ).subtract(selectPlaceHolder.position);\n              return copyAction(\n                displacement.add(mousePosFromRoot),\n                someMainView\n              );\n            }\n          );\n          const copiedItems = maybeCopiedItems\n            .filter(maybe => maybe.isSome())\n            .map(maybe => maybe.some());\n          const copiedMeshes = copiedItems.map(({ mesh }) => mesh);\n          const copiedNames = copiedItems.map(({ name }) => name);\n          someMainView.addGizmo2Name();\n          someMainView.highlightMeshesInScene(copiedMeshes);\n          someMainView.highlightNodesInTree(copiedNames);\n          MeshSelector.ofMainView(someMainView).clear().addArray(copiedMeshes);\n          SelectionPlaceHolder.ofMainView(someMainView)\n            .clear()\n            .push(copiedMeshes);\n          someMainView.forceUpdate();\n        });\n      }\n    };\n  }\n\n  getPasteAction(parentView) {\n    return () => {\n      parentView\n        .getMouseCoordsFromRoot()\n        .forEach(mousePosRoot =>\n          this.getPasteOnClick(mousePosRoot, parentView)()\n        );\n    };\n  }\n\n  /**\n   *\n   * @param {*} mesh: Mesh\n   * @param {*} is2updateServer: Boolean\n   * @param {*} displacement: Vec3 in world coordinates\n   */\n  notifyObservers(mesh, is2updateServer, displacement, parentView) {\n    // notify  babylonjs observers\n    Maybe.fromNull(mesh.observers).forEach(obs => {\n      obs.notifyObservers({\n        updatedPointMesh: mesh,\n        is2updateServer: is2updateServer,\n        displacement: displacement.toBabylon()\n      });\n    });\n    // notify graph observers\n    Maybe.fromNull(mesh.graphVertex).forEach(({ vertexObs }) => {\n      vertexObs({\n        updatedPointMesh: mesh,\n        is2updateServer: is2updateServer,\n        displacement: displacement.toBabylon()\n      });\n    });\n    if (parentView.getNodeFromTree(mesh.name).isSome()) {\n      mesh._children\n        .filter(\n          m =>\n            (!!m.observers || !!m.graphVertex) &&\n            parentView.getNodeFromTree(m.name).isSome()\n        )\n        .forEach(m =>\n          this.notifyObservers(m, is2updateServer, displacement, parentView)\n        );\n    }\n  }\n\n  setProperties = (parentView, name) => parentView.setPropertiesWithName(name);\n\n  /**\n   *\n   * @param {*} selectedMeshes: Array<Mesh>\n   * @param {*} displacement: Vec3 in world coordinates\n   * @param {*} parentView: MainView\n   */\n  getUndoAbleAction(selectedMeshes, displacement, parentView) {\n    return UndoManager.actionBuilder()\n      .doAction(() => {\n        selectedMeshes.forEach(mesh => {\n          const localDisplacement = Util3d.getLocalCoordFromWorld(\n            mesh,\n            displacement,\n            false\n          );\n          const newPos = Vec3.ofBabylon(mesh.position).add(localDisplacement);\n          mesh.position = newPos.toBabylon();\n          this.notifyObservers(mesh, true, displacement, parentView);\n          parentView.updateNodeInServer(mesh.name);\n        });\n      })\n      .undoAction(() => {\n        selectedMeshes.forEach(mesh => {\n          const invertDisplacement = displacement.scale(-1);\n          const localDisplacement = Util3d.getLocalCoordFromWorld(\n            mesh,\n            invertDisplacement,\n            false\n          );\n          const newPos = Vec3.ofBabylon(mesh.position).add(localDisplacement);\n          mesh.position = newPos.toBabylon();\n          this.notifyObservers(mesh, true, invertDisplacement, parentView);\n          parentView.updateNodeInServer(mesh.name);\n        });\n      })\n      .build();\n  }\n\n  createSelectionDiv(e) {\n    this.startDivPos = this.findMouseInDom(e);\n    const { x, y } = this.startDivPos;\n    const outerDiv = document.createElement(\"div\");\n    outerDiv.id = ID;\n    document.body.appendChild(outerDiv);\n    ReactDOM.render(\n      <SelectDiv left={x} top={y}></SelectDiv>,\n      document.getElementById(ID)\n    );\n  }\n\n  updateSelectionDiv(e) {\n    const newMouse = this.findMouseInDom(e);\n    const oldMouse = this.startDivPos;\n    const { x: minX, y: minY } = newMouse.op(oldMouse, Math.min);\n    const { x: maxX, y: maxY } = newMouse.op(oldMouse, Math.max);\n    const outerDiv = document.getElementById(ID);\n    if (!outerDiv) return;\n    ReactDOM.render(\n      <SelectDiv\n        left={minX}\n        top={minY}\n        width={maxX - minX}\n        height={maxY - minY}\n        style={{ zIndex: 999 }}\n      ></SelectDiv>,\n      outerDiv\n    );\n  }\n\n  destroySelectionDiv() {\n    const outerDiv = document.getElementById(ID);\n    if (!outerDiv) return;\n    outerDiv.parentNode.removeChild(outerDiv);\n  }\n\n  findMouseInDom(e) {\n    const x = e.clientX; //x position within the element.\n    const y = e.clientY; //y position within the element.\n    return new Vec2(x, y);\n  }\n\n  selectObjectsInside(scene, parentView) {\n    if (this.corners.length === 0) return;\n    this.corners.push(Vec2.of(scene.pointerX, scene.pointerY));\n    const [oldMouse, newMouse] = this.corners;\n    const min = newMouse.op(oldMouse, Math.min);\n    const max = newMouse.op(oldMouse, Math.max);\n    const cornersDiv = [min, Vec2.of(max.x, min.y), max, Vec2.of(min.x, max.y)];\n    const rayCastCorners = cornersDiv.map(p => this.pickPoints(p, parentView));\n    if (rayCastCorners.some(x => x === null || x === undefined)) return;\n    const treeObj = new TreeObject(parentView.getObjectTree());\n    const insideBox = treeObj.flatten(\n      this.isItemInsideBox(rayCastCorners, parentView)\n    );\n    let insideBoxDragAbleMeshes = insideBox.map(({ item }) => item.mesh);\n    const meshSelector = MeshSelector.ofMainView(parentView);\n    meshSelector.clear();\n    if (insideBoxDragAbleMeshes.length !== 0) {\n      meshSelector.addArray(insideBoxDragAbleMeshes, false);\n    }\n    this.selectMeshUpdateUI(parentView);\n  }\n\n  /**\n   *\n   * @param {*} p: Vec2 point in canvas\n   * @param {*} parentView: MainView\n   */\n  pickPoints(p, parentView) {\n    return parentView\n      .getSceneMemory()\n      .flatMap(memory => {\n        const { scene, ground } = memory;\n        const pickInfo = scene.pick(p.x, p.y, mesh => mesh === ground);\n        if (pickInfo.hit) {\n          const floorPoint = Util3d.toGlobalCoord(parentView)(\n            pickInfo.pickedPoint\n          );\n          return Maybe.some(Vec2.of(floorPoint.x, floorPoint.y));\n        }\n        return Maybe.none();\n      })\n      .orNull();\n  }\n\n  /**\n   *\n   * @param {*} polygon: Array<Vec2>\n   * @param {*} parentView\n   */\n  isItemInsideBox(polygon, parentView) {\n    return ({ item }) => {\n      const type = item.getType();\n      if (\n        type === GlobalRef.TYPE ||\n        type === Map.TYPE ||\n        type === GraphItem.TYPE ||\n        item?.mesh?.isSelectionPlaceHolder\n      )\n        return false;\n      const { mesh } = item;\n      return this.isMeshInsideBox(polygon, parentView)(mesh);\n    };\n  }\n\n  /**\n   *\n   * @param {*} polygon: Array<Vec2>\n   * @param {*} parentView\n   */\n  isMeshInsideBox(polygon, parentView) {\n    return mesh => {\n      const p = Util3d.toGlobalCoord(parentView)(mesh.absolutePosition);\n      const planeP = new Vec2(p.x, p.y);\n      return this.isPointInsideBox(polygon)(planeP);\n    };\n  }\n\n  /**\n   *\n   * @param {*} polygon: Array<Vec2>\n   * @param {*} epsilon: Number\n   */\n  isPointInsideBox(polygon, epsilon = 1e-3) {\n    return p => {\n      let theta = 0;\n      const n = polygon.length;\n      for (let i = 0; i < n; i++) {\n        const vi = polygon[i].sub(p);\n        const vii = polygon[(i + 1) % n].sub(p);\n        theta += Math.acos(vi.dot(vii) / (vi.length() * vii.length()));\n      }\n      return Math.abs(theta - 2 * Math.PI) < epsilon;\n    };\n  }\n}\n\n//========================================================================================\n/*                                                                                      *\n *                                     SELECTION DIV                                    *\n *                                                                                      */\n//========================================================================================\n\nconst SelectDiv = ({ left, top, width, height, style }) => {\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        top: top,\n        left: left,\n        width: width,\n        height: height,\n        borderRadius: 10,\n        border: \"solid\",\n        borderColor: \"#c7c7c7\",\n        ...style\n      }}\n    ></div>\n  );\n};\nSelectDiv.defaultProps = {\n  left: 0,\n  top: 0,\n  width: 0,\n  height: 0\n};\nconst ID = \"SELECTION_TOOL_ID\";\n//========================================================================================\n/*                                                                                      *\n *                                        EXPORT                                        *\n *                                                                                      */\n//========================================================================================\n\nexport default DragObjectsAction;\n","import Util3d from \"../Util3d/Util3d\";\nimport KeyPoint from \"../NodeItem/KeyPoint\";\nimport Vec3 from \"../Math/Vec3\";\nimport { Maybe } from \"monet\";\nimport MouseKeysAction from \"./MouseKeysAction\";\nimport React from \"react\";\nimport { Color3, Axis, Vector3 } from \"@babylonjs/core\";\nimport { UndoManager } from \"mov-fe-lib-core\";\n\nclass AddKeyPointAction extends MouseKeysAction {\n  constructor() {\n    super();\n    this.key = \"addKeyPoint\";\n    this.name = \"Add Key Point [4]\";\n    this.maybeMousePos = Maybe.none();\n    this.tempMesh = null;\n    this.icon = props => <i className=\"fas fa-map-marker\" {...props}></i>;\n  }\n\n  createKeyPoint(\n    position,\n    name,\n    scene,\n    parentView,\n    is2addInServer = true,\n    color = Color3.Gray()\n  ) {\n    const rootMesh = parentView.getRootNode().item.mesh;\n\n    const keyPoint = KeyPoint.ofDict(scene, {\n      name: name,\n      color: [color.r, color.g, color.b]\n    });\n    const mesh = keyPoint.mesh;\n    mesh.parent = rootMesh;\n\n    const localPosition = Util3d.getLocalCoordFromWorld(\n      { parent: rootMesh },\n      Vec3.ofBabylon(position)\n    ).toBabylon();\n\n    mesh.setPositionWithLocalVector(\n      localPosition.add(Axis.Z.scale(KeyPoint.DEFAULT_SIZE))\n    );\n\n    if (is2addInServer) {\n      parentView.addNodeItem2Tree(keyPoint, rootMesh.name, is2addInServer);\n    }\n    return mesh;\n  }\n\n  action = parentView => {\n    super.action(parentView);\n    parentView.setSelectedAction(this);\n  };\n\n  onPointerDown = (evt, parentView) => {\n    if (evt.button !== 0) {\n      return;\n    }\n    parentView.getSceneMemory().forEach(memory => {\n      const { scene, ground, camera } = memory;\n      this.maybeMousePos = Util3d.getGroundPosition(scene, ground);\n      this.maybeMousePos.forEach(mousePos => {\n        camera.detachControl(memory.canvas);\n      });\n    });\n  };\n\n  onPointerMove = (evt, parentView) => {\n    parentView.getSceneMemory().forEach(memory => {\n      const scene = memory.scene;\n      const ground = memory.ground;\n      const maybeCurrent = Util3d.getGroundPosition(scene, ground);\n      maybeCurrent.forEach(current => {\n        this.maybeMousePos.forEach(oldMousePos => {\n          if (this.tempMesh) this.tempMesh.dispose();\n          this.tempMesh = this.createKeyPoint(\n            current,\n            TEMP_KEY_POINT_NAME,\n            scene,\n            parentView,\n            false\n          );\n        });\n      });\n    });\n  };\n\n  onPointerUp = (evt, parentView) => {\n    parentView.getSceneMemory().forEach(({ scene, camera, ground, canvas }) => {\n      const maybeCurrent = Util3d.getGroundPosition(scene, ground);\n      maybeCurrent.forEach(current => {\n        this.maybeMousePos.forEach(oldMousePos => {\n          if (this.tempMesh) this.tempMesh.dispose();\n          const name = `KeyPoint${Math.floor(Math.random() * 1e3)}`;\n          const keyPoint = this.createKeyPoint(\n            current,\n            name,\n            scene,\n            parentView,\n            true,\n            new Color3(Math.random(), Math.random(), Math.random())\n          );\n          parentView.setPropertiesWithName(name);\n          parentView\n            .getUndoManager()\n            .addIt(this.getUndoAbleAction(keyPoint, scene, parentView));\n        });\n      });\n      this.maybeMousePos = Maybe.none();\n      camera.attachControl(canvas, true);\n    });\n  };\n\n  getUndoAbleAction(mesh, scene, parentView) {\n    return UndoManager.actionBuilder()\n      .doAction(() => {\n        const keyPoint = this.createKeyPoint(\n          Vector3.Zero(),\n          mesh.name,\n          scene,\n          parentView,\n          true,\n          mesh.material.diffuseColor\n        );\n        keyPoint.position = mesh.position;\n        parentView.updateNodeInServer(mesh.name);\n      })\n      .undoAction(() => {\n        parentView.deleteNodeFromTreeUsingName(mesh.name);\n      })\n      .build();\n  }\n}\n\nconst TEMP_KEY_POINT_NAME = \"temp_key_point\";\nexport default AddKeyPointAction;\n","import NodeItem from \"./NodeItem\";\nimport Util3d from \"../Util3d/Util3d\";\nimport Vec3 from \"../Math/Vec3\";\nimport { Maybe } from \"monet\";\nimport Constants from \"../Utils/Constants\";\nimport {\n  Vector3,\n  Axis,\n  Color3,\n  Observable,\n  StandardMaterial,\n  Quaternion\n} from \"@babylonjs/core\";\nimport isEqual from \"lodash.isequal\";\n\nclass BoxRegion extends NodeItem {\n  constructor(mesh, corners, keyPoints, keyValueMap = {}) {\n    super(mesh, keyValueMap);\n    this.corners = corners; // in local coordinates, in relation to center of mass\n    this.keyPoints = keyPoints;\n  }\n\n  toDict() {\n    const dict = super.toDict();\n    dict.corners = this.corners;\n    return dict;\n  }\n\n  toForm() {\n    const schema = super.toForm();\n    schema.jsonSchema.properties[\"dimensions\"] = {\n      type: \"object\",\n      title: \"Dimensions\",\n      properties: {\n        lower: {\n          type: \"object\",\n          title: \"Lower Corner\",\n          properties: {\n            x: {\n              type: \"number\",\n              title: \"x\"\n            },\n            y: {\n              type: \"number\",\n              title: \"y\"\n            }\n          }\n        },\n        size: {\n          type: \"object\",\n          title: \"Size\",\n          properties: {\n            scaleX: {\n              type: \"number\",\n              title: \"scale-X\"\n            },\n            scaleY: {\n              type: \"number\",\n              title: \"scale-Y\"\n            }\n          }\n        }\n      }\n    };\n    schema.uiSchema[\"dimensions\"] = { \"ui:widget\": \"collapse\" };\n    // global ref coordinates\n    const worldCorners = this.keyPoints\n      .map(x => Util3d.getGlobalCoordinates(x, x.position))\n      .map(x => x.toArray());\n    schema.data[\"dimensions\"] = {\n      lower: {\n        x: worldCorners[0][0],\n        y: worldCorners[0][1]\n      },\n      size: {\n        // TODO: warning, doesn't take into account possible scaling\n        scaleX: this.corners[1][0] - this.corners[0][0],\n        scaleY: this.corners[1][1] - this.corners[0][1]\n      }\n    };\n    return schema;\n  }\n\n  ofForm(form) {\n    const oldForm = this.toForm();\n    const oldDimensions = oldForm.data.dimensions;\n    if (isEqual(oldDimensions, form.dimensions)) {\n      super.ofForm(form);\n    } else {\n      this.ofFormDimensions(form);\n    }\n  }\n\n  ofDict(scene, dict = null, mainView = null) {\n    return BoxRegion.ofDict(scene, dict, mainView);\n  }\n\n  getType = () => BoxRegion.TYPE;\n\n  static TYPE = \"BoxRegion\";\n\n  ofFormDimensions(form) {\n    const newLowerPositionInWorldCoordinates = Vector3.FromArray(\n      [form.dimensions.lower.x, form.dimensions.lower.y, 0].map(\n        Number.parseFloat\n      )\n    );\n    const newLocalDimensions = [\n      form.dimensions.size.scaleX,\n      form.dimensions.size.scaleY\n    ].map(Number.parseFloat);\n    let localLowerPosition = Util3d.getLocalCoordFromGlobal(\n      this.keyPoints[0],\n      newLowerPositionInWorldCoordinates\n    ).toArray();\n    const notify = (i, update = false) =>\n      this.keyPoints[i].observers.notifyObservers({\n        updatedPointMesh: this.keyPoints[i],\n        is2updateServer: update\n      });\n\n    this.keyPoints[0].position = new Vector3(\n      localLowerPosition[0],\n      localLowerPosition[1],\n      this.keyPoints[0].position.z\n    );\n    notify(0);\n    localLowerPosition = Util3d.getLocalCoordFromGlobal(\n      this.keyPoints[0],\n      newLowerPositionInWorldCoordinates\n    ).toArray();\n    this.keyPoints[1].position = new Vector3(\n      localLowerPosition[0] + newLocalDimensions[0],\n      localLowerPosition[1] + newLocalDimensions[1],\n      this.keyPoints[1].position.z\n    );\n    notify(1);\n  }\n\n  static ofDict(scene, dict = null, mainView = null) {\n    if (!dict) throw new Error(\"null dictionary describing Box region\");\n    const name = Maybe.fromNull(dict.name).orSome(\n      `BoxRegion${Math.floor(Math.random() * 1e3)}`\n    );\n    const mesh = createBoxRegionMesh(dict, name, scene);\n\n    const material = new StandardMaterial(`BoxRegionMaterial${name}`, scene);\n    const color = new Color3(dict.color[0], dict.color[1], dict.color[2]);\n    material.diffuseColor = color;\n    material.emissiveColor = color;\n    material.backFaceCulling = false;\n    mesh.material = material;\n\n    mesh.visibility = VISIBILITY;\n\n    Maybe.fromNull(dict.quaternion).forEach(quaternion => {\n      const babylonQuaternion = new Quaternion(\n        quaternion[1],\n        quaternion[2],\n        quaternion[3],\n        quaternion[0]\n      );\n      mesh.rotationQuaternion = babylonQuaternion.normalize();\n    });\n\n    const keyPoints = createPlaceHolderKeyPoints(\n      scene,\n      dict.corners.map(x => Vec3.of(x).toBabylon()),\n      mesh,\n      mainView\n    );\n    return new BoxRegion(mesh, dict.corners, keyPoints, dict.keyValueMap);\n  }\n}\n\nconst RADIUS = Constants.RADIUS;\nconst FACES = [\n  [0, 1, 2],\n  [2, 3, 0],\n  [4, 5, 6],\n  [6, 7, 4],\n  [0, 1, 5],\n  [5, 4, 0],\n  [3, 2, 6],\n  [6, 7, 3],\n  [1, 2, 6],\n  [6, 5, 1],\n  [0, 3, 7],\n  [7, 4, 0]\n];\n\n/**\n * @param boxRegion: {position: 3-array, corners: array of 3-arrays }\n */\nfunction createBoxRegionMesh(boxRegion, name, scene) {\n  // centered corners vec\n  const corners = boxRegion.corners.map(x => Vec3.of(x).toBabylon());\n  const d = corners[1].subtract(corners[0]);\n  const middlePoint = Vec3.of(boxRegion.position).toBabylon();\n  const shape = [\n    corners[0],\n    corners[0].add(Axis.X.scale(d.x)),\n    corners[0].add(new Vector3(d.x, d.y, 0)),\n    corners[0].add(Axis.Y.scale(d.y))\n  ];\n  const h = new Vector3(0, 0, d.z);\n  const boxRegionMesh = {\n    positions: [\n      shape[0],\n      shape[1],\n      shape[2],\n      shape[3],\n      shape[0].add(h),\n      shape[1].add(h),\n      shape[2].add(h),\n      shape[3].add(h)\n    ],\n    faces: FACES\n  };\n  const mesh = Util3d.meshFromPositionAndFaces(\n    name,\n    scene,\n    boxRegionMesh.positions,\n    boxRegionMesh.faces\n  );\n  mesh.position = middlePoint;\n  return mesh;\n}\n\nfunction createNewMeshFromOldUsingNewBox(newBox, scene, mesh, item) {\n  const average = Util3d.pointAverageVec3(newBox.corners.map(x => Vec3.of(x)));\n  newBox.position = average.toArray();\n  newBox.corners = newBox.corners.map(x => Vec3.of(x).sub(average).toArray());\n\n  // average in parent coord\n  const rotMat3 = Util3d.getRotationMatrix(mesh);\n  const scaleVec3 = Vec3.ofBabylon(mesh.scaling);\n  const averageInParentCoord = rotMat3\n    .prodVec(average.mul(scaleVec3))\n    .toBabylon();\n\n  const newMesh = createBoxRegionMesh(newBox, mesh.name, scene);\n  newMesh.parent = mesh.parent;\n  newMesh.rotationQuaternion = mesh.rotationQuaternion;\n  newMesh.position = averageInParentCoord.add(mesh.position);\n\n  newMesh.material = mesh.material;\n  newMesh.visibility = VISIBILITY;\n  newMesh.getMouseContextActions = mesh.getMouseContextActions;\n  newMesh.nodeItem = mesh.nodeItem;\n  newMesh.observers = mesh.observers;\n  if (!!mesh.graphVertex) newMesh.graphVertex = mesh.graphVertex;\n\n  item.mesh = newMesh;\n  item.corners = newBox.corners;\n\n  const childrenCopy = [...mesh._children];\n  childrenCopy.forEach(c => {\n    c.parent = newMesh;\n  });\n  item.keyPoints.forEach((k, j) => {\n    k.position = Vec3.of(newBox.corners[j]).toBabylon();\n  });\n  // dispose old mesh\n  mesh.dispose();\n}\n\nconst getKeyPointObserverFunction = (mainView, scene) => {\n  return ({ updatedPointMesh, is2updateServer }) => {\n    mainView\n      .getNodeFromTree(updatedPointMesh.parent.name)\n      .forEach(boxRegionTreeNode => {\n        const index = updatedPointMesh.index;\n        const item = boxRegionTreeNode.item;\n        const mesh = item.mesh;\n        const name = mesh.name;\n        let newBox = {\n          position: Vec3.ofBabylon(mesh.position).toArray(),\n          corners: item.corners\n        };\n        newBox.corners[index] = Vec3.ofBabylon(\n          updatedPointMesh.position\n        ).toArray();\n        createNewMeshFromOldUsingNewBox(newBox, scene, mesh, item);\n        mainView.addGizmo2Name();\n        if (is2updateServer) {\n          mainView.updateNodeInServer(name);\n          mainView.getNodeFromTree(name).forEach(node => {\n            mainView.setProperties(node.item.toForm());\n          });\n        }\n        // signal box region observers\n        Maybe.fromNull(item.mesh.observers).forEach(obs => {\n          obs.notifyObservers({\n            updatedPointMesh: item.mesh,\n            is2updateServer: is2updateServer,\n            displacement: Vector3.Zero()\n          });\n        });\n        Maybe.fromNull(item.mesh.graphVertex).forEach(({ vertexObs }) => {\n          vertexObs({\n            updatedPointMesh: item.mesh,\n            is2updateServer: is2updateServer,\n            displacement: Vector3.Zero()\n          });\n        });\n      });\n  };\n};\n\nconst createPlaceHolderKeyPoints = (\n  scene,\n  corners,\n  boxRegionMesh,\n  mainView\n) => {\n  const keyPoints = [];\n  corners.forEach((corner, i) => {\n    const p = corner;\n\n    const keyPoint = Util3d.createSphere(\n      scene,\n      new Color3(0.25, 0.25, 0.25),\n      RADIUS,\n      `${boxRegionMesh.name}keyPoint${i}`,\n      true\n    );\n\n    keyPoint.parent = boxRegionMesh;\n    keyPoint.position = p;\n    keyPoint.index = i;\n    keyPoint.observers = new Observable();\n    keyPoint.observers.add(getKeyPointObserverFunction(mainView, scene));\n    keyPoints.push(keyPoint);\n  });\n  return keyPoints;\n};\n\nconst VISIBILITY = 0.25;\nexport default BoxRegion;\n","import { Maybe } from \"monet\";\nimport MouseKeysAction from \"./MouseKeysAction\";\nimport BoxRegion from \"../NodeItem/BoxRegion\";\nimport Vec3 from \"../Math/Vec3\";\nimport Util3d from \"../Util3d/Util3d\";\nimport React from \"react\";\nimport { Color3 } from \"@babylonjs/core\";\nimport { UndoManager } from \"mov-fe-lib-core\";\n\nclass BoxRegionAction extends MouseKeysAction {\n  constructor() {\n    super();\n    this.key = \"drawBoxRegion\";\n    this.name = \"Draw Box Region [3]\";\n    this.maybeMousePos = Maybe.none();\n    this.tempMesh = null;\n    this.icon = props => <i className=\"fas fa-square\" {...props} />;\n  }\n\n  action = parentView => {\n    super.action(parentView);\n    parentView.setSelectedAction(this);\n  };\n\n  onPointerDown = (evt, parentView) => {\n    if (!(evt.buttons === 1)) return;\n    parentView.getSceneMemory().forEach(memory => {\n      const scene = memory.scene;\n      const ground = memory.ground;\n      const camera = memory.camera;\n      const maybeMousePos = Util3d.getGroundPosition(scene, ground);\n      this.maybeMousePos = maybeMousePos;\n      maybeMousePos.forEach(mousePos => {\n        camera.detachControl(memory.canvas);\n      });\n    });\n  };\n\n  onPointerMove = (evt, parentView) => {\n    parentView.getSceneMemory().forEach(memory => {\n      const scene = memory.scene;\n      const ground = memory.ground;\n      const maybeCurrent = Util3d.getGroundPosition(scene, ground);\n      maybeCurrent.forEach(current => {\n        this.maybeMousePos.forEach(oldMousePos => {\n          if (this.tempMesh) this.tempMesh.dispose();\n          this.tempMesh = this.createBoxRegion(\n            [oldMousePos, current],\n            TEMP_BOX_REGION_NAME,\n            scene,\n            parentView,\n            false\n          );\n        });\n      });\n    });\n  };\n\n  onPointerUp = (evt, parentView) => {\n    parentView.getSceneMemory().forEach(memory => {\n      const scene = memory.scene;\n      const camera = memory.camera;\n      const ground = memory.ground;\n      const maybeCurrent = Util3d.getGroundPosition(scene, ground);\n      maybeCurrent.forEach(current => {\n        this.maybeMousePos.forEach(oldMousePos => {\n          if (current.subtract(oldMousePos).length() < 1e-2) return;\n          this.tempMesh.dispose();\n          const name = `BoxRegion${Math.floor(Math.random() * 1e3)}`;\n          const boxMesh = this.createBoxRegion(\n            [oldMousePos, current],\n            name,\n            scene,\n            parentView,\n            true\n          );\n          parentView.setPropertiesWithName(name);\n          parentView\n            .getUndoManager()\n            .addIt(\n              this.getUndoAbleAction(\n                [oldMousePos, current],\n                boxMesh,\n                scene,\n                parentView\n              )\n            );\n        });\n      });\n      this.maybeMousePos = Maybe.none();\n      camera.attachControl(memory.canvas, true);\n    });\n  };\n\n  getUndoAbleAction(points, mesh, scene, parentView) {\n    return UndoManager.actionBuilder()\n      .doAction(() => {\n        this.createBoxRegion(points, mesh.name, scene, parentView, true);\n      })\n      .undoAction(() => {\n        parentView.deleteNodeFromTreeUsingName(mesh.name);\n      })\n      .build();\n  }\n\n  createBoxRegion = (\n    region,\n    name,\n    scene,\n    parentView,\n    is2addInServer = true,\n    color = Color3.Red(),\n    height = 1\n  ) => {\n    const rootMesh = parentView.getRootNode().item.mesh;\n\n    const localRegion = region.map(r =>\n      Util3d.getLocalCoordFromWorld({ parent: rootMesh }, Vec3.ofBabylon(r))\n    );\n\n    localRegion[1] = localRegion[1].add(Vec3.of([0, 0, height]));\n    const middlePoint = localRegion[0].add(localRegion[1]).scale(0.5);\n    const centeredRegion = localRegion.map(r => r.sub(middlePoint));\n\n    const boxRegionItem = BoxRegion.ofDict(\n      scene,\n      {\n        name: name,\n        position: middlePoint.toArray(),\n        color: [color.r, color.g, color.b],\n        corners: centeredRegion.map(x => x.toArray())\n      },\n      parentView\n    );\n    boxRegionItem.mesh.parent = rootMesh;\n    if (is2addInServer) {\n      parentView.addNodeItem2Tree(boxRegionItem, rootMesh.name, is2addInServer);\n    }\n    return boxRegionItem.mesh;\n  };\n}\n\nconst TEMP_BOX_REGION_NAME = \"temp_box_region\";\nexport default BoxRegionAction;\n","import Util3d from \"../Util3d/Util3d\";\nimport Vec3 from \"../Math/Vec3\";\nimport Path from \"../NodeItem/Path\";\nimport MouseKeysAction from \"./MouseKeysAction\";\nimport React from \"react\";\nimport { Color3 } from \"@babylonjs/core\";\nimport { UndoManager } from \"mov-fe-lib-core\";\nimport { selectOneAction } from \"../Utils/Utils\";\nimport GraphItem from \"../NodeItem/GraphItem\";\n\nclass DrawPathAction extends MouseKeysAction {\n  constructor() {\n    super();\n    this.key = \"drawPath\";\n    this.name = \"Draw Path [2]\";\n    this.mouseCurve = [];\n    this.icon = props => <i className=\"fas fa-bezier-curve\" {...props}></i>;\n  }\n\n  action = parentView => {\n    super.action(parentView);\n    parentView.setSelectedAction(this);\n  };\n\n  onPointerDown = (evt, parentView) => {\n    if (!(evt.buttons === 1)) return;\n    parentView.getSceneMemory().forEach(memory => {\n      const { scene, ground, camera, canvas } = memory;\n      const maybeMousePos = Util3d.getGroundPosition(scene, ground);\n      maybeMousePos.forEach(mousePos => {\n        camera.detachControl(canvas);\n        this.mouseCurve.push(mousePos);\n        parentView\n          .getUndoManager()\n          .doIt(\n            this.getUndoAbleClickAction(\n              this.mouseCurve,\n              scene,\n              parentView,\n              memory\n            )\n          );\n      });\n    });\n  };\n\n  getUndoAbleClickAction(keyPoints, scene, parentView, { camera, canvas }) {\n    const kps = [...keyPoints];\n    return UndoManager.actionBuilder()\n      .doAction(() => {\n        const finalKps = kps.length === 1 ? [kps[0], kps[0]] : kps;\n        parentView.deleteNodeFromTreeUsingName(TEMP_PATH_NAME, false, false);\n        this.createCurve(finalKps, TEMP_PATH_NAME, scene, parentView, false);\n        if (kps.length <= 2) {\n          parentView.setContextActions(\n            this.getDrawPathContextAction(camera, canvas, scene)\n          );\n        }\n        this.mouseCurve = kps;\n      })\n      .undoAction(() => {\n        parentView.deleteNodeFromTreeUsingName(TEMP_PATH_NAME);\n        const reducedKps = kps.slice(0, kps.length - 1);\n        const finalKps =\n          reducedKps.length === 1 ? [reducedKps[0], reducedKps[0]] : reducedKps;\n        reducedKps.length > 0 &&\n          this.createCurve(finalKps, TEMP_PATH_NAME, scene, parentView, false);\n        this.mouseCurve = reducedKps;\n      })\n      .build();\n  }\n\n  onPointerMove = (evt, parentView) => {\n    // empty\n  };\n\n  onPointerUp = (evt, parentView) => {\n    // empty\n  };\n\n  onKeyUp = (evt, parentView) => {\n    const defaultAction = () => super.onKeyUp(evt, parentView);\n    parentView.getSceneMemory().forEach(memory => {\n      const { scene, camera, canvas } = memory;\n      const contextActions = this.getDrawPathContextAction(\n        camera,\n        canvas,\n        scene\n      );\n      selectOneAction(\n        [\n          {\n            predicate: e => e.code === \"Enter\" || e.code === \"NumpadEnter\",\n            action: () => contextActions[1].action(parentView)\n          },\n          {\n            predicate: e => e.code === \"Delete\" || e.code === \"Backspace\",\n            action: () => contextActions[0].action(parentView)\n          },\n          {\n            predicate: e => e.code === \"Escape\",\n            action: () => {\n              if (this.mouseCurve.length === 0) {\n                super.onKeyUp(evt, parentView);\n              }\n              contextActions[0].action(parentView);\n            }\n          }\n        ],\n        defaultAction\n      )(evt);\n    });\n  };\n\n  /**\n   *\n   * @param {*} curve: Array<Vector3>\n   * @param {*} name: String\n   * @param {*} scene: Scene\n   * @param {*} parentView: MainView\n   * @param {*} is2addInServer: Boolean\n   * @param {*} color: Color3\n   */\n  createCurve = (\n    curve,\n    name,\n    scene,\n    parentView,\n    is2addInServer = true,\n    color = Color3.Gray()\n  ) => {\n    const rootMesh = parentView.getRootNode().item.mesh;\n    const localCurve = Util3d.toGlobalCoord(parentView)(curve);\n    const middlePoint = Util3d.pointAverage(localCurve);\n    const centeredCurve = localCurve.map(w => w.subtract(middlePoint));\n\n    const pathItem = Path.ofDict(\n      scene,\n      {\n        name: name,\n        position: Vec3.ofBabylon(middlePoint).toArray(),\n        color: [color.r, color.g, color.b],\n        localPath: centeredCurve.map(z => Vec3.ofBabylon(z).toArray())\n      },\n      parentView\n    );\n    pathItem.mesh.parent = rootMesh;\n    parentView.addNodeItem2Tree(\n      pathItem,\n      rootMesh.name,\n      is2addInServer,\n      true,\n      is2addInServer\n    );\n    return pathItem;\n  };\n\n  getDrawPathContextAction = (camera, canvas, scene) => {\n    const ans = [];\n    ans.push({\n      icon: props => <i className=\"fas fa-trash\" {...props}></i>,\n      action: parentView => {\n        camera.attachControl(canvas, true);\n        parentView.deleteNodeFromTreeUsingName(TEMP_PATH_NAME, false);\n        this.mouseCurve = [];\n        parentView.closeContextDial();\n      },\n      name: \"Clear Path [ESC | DEL | Backspace]\"\n    });\n    if (this.mouseCurve.length > 1) {\n      ans.push({\n        icon: props => <i className=\"fas fa-check\" {...props}></i>,\n        action: parentView => {\n          camera.attachControl(canvas, true);\n          parentView\n            .getUndoManager()\n            .doIt(\n              this.getUndoAbleEnterAction(this.mouseCurve, scene, parentView)\n            );\n        },\n        name: \"Create Path [Enter]\"\n      });\n    }\n    return ans;\n  };\n\n  getUndoAbleEnterAction(keyPoints, scene, parentView) {\n    const kps = [...keyPoints];\n    const name = `Path${Math.floor(Math.random() * 1e3)}`;\n    return UndoManager.actionBuilder()\n      .doAction(() => {\n        parentView.deleteNodeFromTreeUsingName(TEMP_PATH_NAME, false);\n        const pathItem = this.createCurve(kps, name, scene, parentView, true);\n        this.mouseCurve = [];\n        parentView.setPropertiesWithName(name);\n        parentView.closeContextDial();\n        const keyPointMeshes = pathItem.keyPoints;\n        DrawPathAction.addEdgesInKeyPoints(keyPointMeshes, scene, parentView);\n      })\n      .undoAction(() => {\n        this.deleteEdgeInKeyPoints(name, parentView);\n        parentView.deleteNodeFromTreeUsingName(name);\n        this.createCurve(kps, TEMP_PATH_NAME, scene, parentView, false);\n        this.mouseCurve = kps;\n      })\n      .build();\n  }\n\n  deleteEdgeInKeyPoints(pathName, parentView) {\n    parentView.getGraph().forEach(({ item: graph }) => {\n      parentView.getNodeFromTree(pathName).forEach(({ item: pathItem }) => {\n        const keyPointMeshes = pathItem.keyPoints;\n        const edgeMeshes = [\n          keyPointMeshes[0],\n          keyPointMeshes[keyPointMeshes.length - 1]\n        ];\n        graph.delEdge(...edgeMeshes);\n        parentView.updateNodeInServer(graph.name);\n      });\n    });\n  }\n\n  static addEdgesInKeyPoints(keyPointMeshes, scene, parentView) {\n    GraphItem.createGraphItemIfNone(scene, parentView);\n    parentView.getGraph().forEach(({ item: graph }) => {\n      const edgeMeshes = [\n        keyPointMeshes[0],\n        keyPointMeshes[keyPointMeshes.length - 1]\n      ];\n      graph.addEdge(...edgeMeshes);\n      parentView.updateNodeInServer(graph.name);\n    });\n  }\n}\n\nconst TEMP_PATH_NAME = \"temp_curve\";\nexport default DrawPathAction;\n","import NodeItem from \"./NodeItem\";\nimport Vec3 from \"../Math/Vec3\";\nimport Util3d from \"../Util3d/Util3d\";\nimport { Maybe } from \"monet\";\nimport React from \"react\";\nimport { Utils } from \"mov-fe-lib-core\";\nimport Constants from \"../Utils/Constants\";\nimport {\n  Vector3,\n  Observable,\n  Color3,\n  StandardMaterial,\n  Quaternion\n} from \"@babylonjs/core\";\nimport { UndoManager } from \"mov-fe-lib-core\";\n\nconst RADIUS = Constants.RADIUS;\nconst positiveMod = Utils.mod;\n\nclass PolygonRegion extends NodeItem {\n  /**\n   * @param {*} mesh\n   * @param {*} localPolygon: is an array of 3-arrays of numbers of the local coordinates in relation to mesh.position and quaternion\n   * @param {*} keyPoints: are the keyPoints meshes array\n   */\n  constructor(mesh, localPolygon, height, keyPoints, keyValueMap = {}) {\n    super(mesh, keyValueMap);\n    this.localPolygon = localPolygon;\n    this.height = height;\n    this.keyPoints = keyPoints;\n  }\n\n  toDict() {\n    const dict = super.toDict();\n    dict.localPolygon = this.localPolygon;\n    dict.height = this.height;\n    return dict;\n  }\n\n  ofDict(scene, dict = null, mainView = null) {\n    return PolygonRegion.ofDict(scene, dict, mainView);\n  }\n\n  getType = () => PolygonRegion.TYPE;\n\n  static TYPE = \"PolygonRegion\";\n\n  static ofDict(scene, dict = null, mainView = null) {\n    if (!dict || !mainView)\n      throw new Error(\"null dictionary describing polygon or null mainView\");\n\n    const polygon = dict.localPolygon.map(z => Vec3.of(z).toBabylon());\n    const middlePoint = Vec3.of(dict.position).toBabylon();\n\n    const mesh = createExtrudedPolygonMesh(\n      scene,\n      polygon,\n      dict.height,\n      dict.name\n    );\n    mesh.position = middlePoint;\n\n    const material = new StandardMaterial(`PolygonMaterial${dict.name}`, scene);\n    const color = new Color3(dict.color[0], dict.color[1], dict.color[2]);\n    material.diffuseColor = color;\n    material.emissiveColor = color;\n    mesh.material = material;\n    mesh.visibility = 0.5;\n    Maybe.fromNull(dict.quaternion).forEach(quaternion => {\n      const babylonQuaternion = new Quaternion(\n        quaternion[1],\n        quaternion[2],\n        quaternion[3],\n        quaternion[0]\n      );\n      mesh.rotationQuaternion = babylonQuaternion.normalize();\n    });\n\n    const keypoints = createPlaceHolderKeyPoints(\n      scene,\n      polygon,\n      mesh,\n      mainView\n    );\n\n    return new PolygonRegion(\n      mesh,\n      polygon.map(point => [point.x, point.y, point.z]),\n      dict.height,\n      keypoints,\n      dict.keyValueMap\n    );\n  }\n\n  /**\n   * Create new mesh from old, has side effects\n   *\n   * @param {*} newPoints: Vector3\n   * @param {*} scene: Scene\n   * @param {*} item: PathItem\n   * @param {*} mainView: MainView\n   * @param {*} keyPointUpdateFunction: (scene, mainView, mesh, item) => Array<Mesh>\n   */\n  static createNewMeshFromOldUsingNewPoints(\n    newPoints,\n    scene,\n    item,\n    mainView,\n    keyPointUpdateFunction = defaultKeyPointUpdate\n  ) {\n    const { mesh: oldMesh } = item;\n    const average = Util3d.pointAverage(newPoints);\n    newPoints = newPoints.map(x => x.subtract(average));\n\n    // average in parent coord\n    const rotMat3 = Util3d.getRotationMatrix(oldMesh);\n    const scaleVec3 = Vec3.ofBabylon(oldMesh.scaling);\n    const averageInParentCoord = rotMat3\n      .prodVec(Vec3.ofBabylon(average).mul(scaleVec3))\n      .toBabylon();\n\n    // update mesh\n    const newMesh = createExtrudedPolygonMesh(\n      scene,\n      newPoints,\n      item.height,\n      oldMesh.name\n    );\n\n    newMesh.parent = oldMesh.parent;\n    newMesh.rotationQuaternion = oldMesh.rotationQuaternion;\n    newMesh.position = averageInParentCoord.add(oldMesh.position);\n\n    newMesh.material = oldMesh.material;\n    newMesh.visibility = oldMesh.visibility;\n    newMesh.onClick = oldMesh.onClick;\n    newMesh.getMouseContextActions = oldMesh.getMouseContextActions;\n    newMesh.nodeItem = oldMesh.nodeItem;\n    newMesh.observers = oldMesh.observers;\n    if (!!oldMesh.graphVertex) newMesh.graphVertex = oldMesh.graphVertex;\n\n    item.localPolygon = newPoints.map(x => Vec3.ofBabylon(x).toArray());\n    item.mesh = newMesh;\n    item.keyPoints = keyPointUpdateFunction(scene, mainView, oldMesh, item);\n\n    oldMesh.dispose();\n    return newPoints;\n  }\n\n  static deleteKeyPoint(scene, keyPointMesh, mainView) {\n    const index = keyPointMesh.index;\n    const name = keyPointMesh.parent.name;\n    mainView.getNodeFromTree(name).forEach(({ item }) => {\n      const { mesh } = item;\n      const copyPosition = { ...mesh.position };\n      let newPoints = item.localPolygon.map(x => Vec3.of(x).toBabylon());\n      mainView\n        .getUndoManager()\n        .doIt(\n          PolygonRegion.getUndoDeleteKeyPoint(\n            name,\n            index,\n            copyPosition,\n            newPoints,\n            scene,\n            item,\n            mainView\n          )\n        );\n    });\n  }\n\n  static getUndoDeleteKeyPoint(\n    name,\n    index,\n    copyPosition,\n    newPoints,\n    scene,\n    item,\n    mainView\n  ) {\n    return UndoManager.actionBuilder()\n      .doAction(() => {\n        const copyPoints = [...newPoints];\n        copyPoints.splice(index, 1);\n        PolygonRegion.createNewMeshFromOldUsingNewPoints(\n          copyPoints,\n          scene,\n          item,\n          mainView,\n          PolygonRegion.onAddNewPointKeyPointUpdate\n        );\n        mainView.updateNodeInServer(name);\n      })\n      .undoAction(() => {\n        const copyPoints = [...newPoints];\n        item.mesh.position = copyPosition;\n        PolygonRegion.createNewMeshFromOldUsingNewPoints(\n          copyPoints,\n          scene,\n          item,\n          mainView,\n          PolygonRegion.onAddNewPointKeyPointUpdate\n        );\n        mainView.updateNodeInServer(name);\n      })\n      .build();\n  }\n\n  static onAddNewPointKeyPointUpdate(scene, mainView, oldMesh, item) {\n    // used when new keypoint is added\n    return createPlaceHolderKeyPoints(\n      scene,\n      item.localPolygon.map(x => Vec3.of(x).toBabylon()),\n      item.mesh,\n      mainView\n    );\n  }\n\n  /**\n   *\n   * @param {*} scene\n   * @param {*} keyPointMesh\n   * @param {*} curveMesh\n   * @param {*} mainView\n   * @param {*} orientation: it belongs to the set {-1,1}, represents orientation\n   */\n  static addKeyPointInBetween = (\n    scene,\n    keyPointMesh,\n    mainView,\n    orientation\n  ) => {\n    const index = keyPointMesh.index;\n    const name = keyPointMesh.parent.name;\n    mainView.getNodeFromTree(name).forEach(({ item }) => {\n      const copyPosition = { ...item.mesh.position };\n      const points = item.localPolygon.map(x => Vec3.of(x).toBabylon());\n      mainView\n        .getUndoManager()\n        .doIt(\n          PolygonRegion.getUndoAddKeyPointInBetween(\n            name,\n            index,\n            orientation,\n            item,\n            points,\n            copyPosition,\n            scene,\n            mainView\n          )\n        );\n    });\n  };\n\n  static getUndoAddKeyPointInBetween(\n    name,\n    index,\n    orientation,\n    item,\n    points,\n    copyPosition,\n    scene,\n    mainView\n  ) {\n    return UndoManager.actionBuilder()\n      .doAction(() => {\n        const numberOfPoints = points.length;\n        const nextIndex = positiveMod(index + orientation, numberOfPoints);\n        let newPoints = [];\n        const specialIndex = index + Math.max(0, orientation);\n        for (let i = 0; i < specialIndex; i++) {\n          newPoints.push(points[i]);\n        }\n        newPoints.push(points[nextIndex].add(points[index]).scale(0.5));\n        for (let i = specialIndex; i < numberOfPoints; i++) {\n          newPoints.push(points[i]);\n        }\n        PolygonRegion.createNewMeshFromOldUsingNewPoints(\n          newPoints,\n          scene,\n          item,\n          mainView,\n          PolygonRegion.onAddNewPointKeyPointUpdate\n        );\n        mainView.updateNodeInServer(name);\n      })\n      .undoAction(() => {\n        const copyPoints = [...points];\n        item.mesh.position = copyPosition;\n        PolygonRegion.createNewMeshFromOldUsingNewPoints(\n          copyPoints,\n          scene,\n          item,\n          mainView,\n          PolygonRegion.onAddNewPointKeyPointUpdate\n        );\n        mainView.updateNodeInServer(name);\n      })\n      .build();\n  }\n}\n\n/**\n *\n * @param {*} polygon: boundary as babylonjs vec3\n */\nconst stitchingBoundaries = polygon => {\n  const n = polygon.length;\n  const orientation = Util3d.computeOrientation(polygon);\n  const ans = [];\n  for (let i = 0; i < n; i++) {\n    const modi = (i + 1) % n;\n    ans.push([i, n + modi, modi]);\n    ans.push([i, n + i, n + modi]);\n  }\n  return orientation > 0 ? ans : ans.map(reverseOrientation);\n};\n\nconst reverseOrientation = triangleIndex => {\n  const ans = [];\n  ans.push(triangleIndex[1]);\n  ans.push(triangleIndex[0]);\n  ans.push(triangleIndex[2]);\n  return ans;\n};\n\n/**\n *\n * @param {*} scene\n * @param {*} polygon array of babylon js vector3\n * @param {*} height\n * @param {*} name\n */\nconst createExtrudedPolygonMesh = (scene, polygon, height, name) => {\n  const h = new Vector3(0, 0, height);\n  const polygonRegionMesh = {\n    positions: [],\n    faces: []\n  };\n  polygonRegionMesh.positions = [...polygon];\n  for (let i = 0; i < polygon.length; i++) {\n    polygonRegionMesh.positions.push(polygon[i].add(h));\n  }\n  const n = polygon.length;\n  const lowerTriangulation = Util3d.triangulatePolygon(polygon);\n  const upperTriangulation = Util3d.triangulatePolygon(\n    polygonRegionMesh.positions.slice(n)\n  )\n    .map(x => x.map(z => z + n))\n    .map(reverseOrientation);\n  const stitchTriangulation = stitchingBoundaries(polygon);\n  polygonRegionMesh.faces = lowerTriangulation\n    .concat(upperTriangulation)\n    .concat(stitchTriangulation);\n  const mesh = Util3d.meshFromPositionAndFaces(\n    name,\n    scene,\n    polygonRegionMesh.positions,\n    polygonRegionMesh.faces\n  );\n  return mesh;\n};\n\nfunction defaultKeyPointUpdate(scene, mainView, oldMesh, item) {\n  // used when keypoint is updated or deleted\n  const childrenCopy = [...oldMesh._children];\n  childrenCopy.forEach(c => {\n    c.parent = item.mesh;\n    console.log(\"Moving parents of child\", c.name);\n  });\n\n  return item.keyPoints.map((k, i) => {\n    k.observers = new Observable();\n    k.observers.add(getKeyPointObserverFunction(scene, mainView));\n    k.index = i;\n    k.name = `${oldMesh.name}keyPoint${i}`;\n    k.position = Vec3.of(item.localPolygon[i]).toBabylon();\n    return k;\n  });\n}\n\nconst getKeyPointObserverFunction = (scene, mainView) => {\n  return ({ updatedPointMesh, is2updateServer }) => {\n    if (!updatedPointMesh.parent) return;\n    mainView\n      .getNodeFromTree(updatedPointMesh.parent.name)\n      .forEach(polygonTreeNode => {\n        const index = updatedPointMesh.index;\n        const item = polygonTreeNode.item;\n        const mesh = item.mesh;\n        const name = mesh.name;\n        let newPoints = item.localPolygon.map(x => Vec3.of(x).toBabylon());\n        newPoints[index] = updatedPointMesh.position;\n        PolygonRegion.createNewMeshFromOldUsingNewPoints(\n          newPoints,\n          scene,\n          item,\n          mainView\n        );\n        if (is2updateServer) {\n          mainView.updateNodeInServer(name);\n        }\n        // signal observers\n        Maybe.fromNull(item.mesh.observers).forEach(obs => {\n          //side effect update absolute position\n          item.mesh.getAbsolutePosition();\n          obs.notifyObservers({\n            updatedPointMesh: item.mesh,\n            is2updateServer: is2updateServer,\n            displacement: Vector3.Zero()\n          });\n        });\n        Maybe.fromNull(item.mesh.graphVertex).forEach(({ vertexObs }) => {\n          item.mesh.getAbsolutePosition();\n          vertexObs({\n            updatedPointMesh: item.mesh,\n            is2updateServer: is2updateServer,\n            displacement: Vector3.Zero()\n          });\n        });\n      });\n  };\n};\n\nconst getKeyPointActions = (scene, keyPointMesh, mainView) => {\n  const actions = [];\n  mainView.getNodeFromTree(keyPointMesh.parent.name).forEach(pathTreeNode => {\n    const item = pathTreeNode.item;\n    const polygon = item.localPolygon;\n    if (polygon.length > 3) {\n      actions.push({\n        icon: props => <i className=\"fas fa-trash\" {...props}></i>,\n        action: parentView => {\n          PolygonRegion.deleteKeyPoint(scene, keyPointMesh, parentView);\n          parentView.closeContextDial();\n        },\n        name: \"Delete node [DEL]\"\n      });\n    }\n    actions.push({\n      icon: props => <i className=\"fas fa-less-than\" {...props}></i>,\n      action: parentView => {\n        PolygonRegion.addKeyPointInBetween(scene, keyPointMesh, parentView, -1);\n        parentView.closeContextDial();\n      },\n      name: \"Add previous\"\n    });\n    actions.push({\n      icon: props => <i className=\"fas fa-greater-than\" {...props}></i>,\n      action: parentView => {\n        PolygonRegion.addKeyPointInBetween(scene, keyPointMesh, parentView, 1);\n        parentView.closeContextDial();\n      },\n      name: \"Add next\"\n    });\n  });\n\n  return actions;\n};\n\nconst createPlaceHolderKeyPoints = (scene, polygon, polygonMesh, mainView) => {\n  const keyPoints = [];\n  polygon.forEach((p, i) => {\n    const color = new Color3(0.25, 0.25, 0.25);\n    const keyPoint = Util3d.createSphere(\n      scene,\n      color,\n      RADIUS,\n      `${polygonMesh.name}keyPointPolygon${i}`,\n      true\n    );\n    keyPoint.parent = polygonMesh;\n    keyPoint.position = p;\n    keyPoint.index = i;\n    keyPoint.observers = new Observable();\n\n    keyPoints.push(keyPoint);\n\n    keyPoint.observers.add(getKeyPointObserverFunction(scene, mainView));\n  });\n\n  keyPoints.forEach(x => {\n    x.onClick = () => {\n      mainView.setContextActions(getKeyPointActions(scene, x, mainView));\n    };\n  });\n\n  return keyPoints;\n};\n\nexport default PolygonRegion;\n","import MouseKeysAction from \"./MouseKeysAction\";\nimport Vec3 from \"../Math/Vec3\";\nimport Util3d from \"../Util3d/Util3d\";\nimport React from \"react\";\nimport PolygonRegion from \"../NodeItem/PolygonRegion\";\nimport { Color3 } from \"@babylonjs/core\";\nimport { UndoManager } from \"mov-fe-lib-core\";\nimport { selectOneAction } from \"../Utils/Utils\";\n\n// Similar 2 Draw Action Path\nclass PolygonRegionAction extends MouseKeysAction {\n  constructor() {\n    super();\n    this.key = \"drawPolygonRegion\";\n    this.name = \"Draw Polygon Region [5]\";\n    this.mouseCurve = [];\n    this.icon = props => <i className=\"fas fa-draw-polygon\" {...props}></i>;\n  }\n\n  action = parentView => {\n    super.action(parentView);\n    parentView.setSelectedAction(this);\n  };\n\n  onPointerDown = (evt, parentView) => {\n    if (!(evt.buttons === 1)) return;\n    parentView.getSceneMemory().forEach(memory => {\n      const scene = memory.scene;\n      const ground = memory.ground;\n      const camera = memory.camera;\n      const maybeMousePos = Util3d.getGroundPosition(scene, ground);\n      maybeMousePos.forEach(mousePos => {\n        camera.detachControl(memory.canvas);\n        this.mouseCurve.push(mousePos);\n        parentView\n          .getUndoManager()\n          .doIt(\n            this.getUndoAbleClickAction(\n              this.mouseCurve,\n              scene,\n              parentView,\n              memory\n            )\n          );\n      });\n    });\n  };\n\n  getUndoAbleClickAction(keyPoints, scene, parentView, { camera, canvas }) {\n    const kps = [...keyPoints];\n    return UndoManager.actionBuilder()\n      .doAction(() => {\n        const finalKps = kps.length === 1 ? [kps[0], kps[0]] : kps;\n        parentView.deleteNodeFromTreeUsingName(\n          TEMP_POLYGON_REGION_NAME,\n          false,\n          false\n        );\n        this.createPolygonRegion(\n          finalKps,\n          TEMP_POLYGON_REGION_NAME,\n          scene,\n          parentView,\n          false\n        );\n        parentView.setContextActions(\n          this.getDrawPolygonContextAction(camera, canvas, scene)\n        );\n        this.mouseCurve = kps;\n      })\n      .undoAction(() => {\n        parentView.deleteNodeFromTreeUsingName(TEMP_POLYGON_REGION_NAME);\n        const reducedKps = kps.slice(0, kps.length - 1);\n        const finalKps =\n          reducedKps.length === 1 ? [reducedKps[0], reducedKps[0]] : reducedKps;\n        reducedKps.length > 0 &&\n          this.createPolygonRegion(\n            finalKps,\n            TEMP_POLYGON_REGION_NAME,\n            scene,\n            parentView,\n            false\n          );\n        this.mouseCurve = reducedKps;\n      })\n      .build();\n  }\n\n  getDrawPolygonContextAction = (camera, canvas, scene) => {\n    const ans = [];\n    ans.push({\n      icon: props => <i className=\"fas fa-trash\" {...props}></i>,\n      action: parentView => {\n        camera.attachControl(canvas, true);\n        parentView.deleteNodeFromTreeUsingName(TEMP_POLYGON_REGION_NAME, false);\n        this.mouseCurve = [];\n        parentView.closeContextDial();\n      },\n      name: \"Clear Polygon [ESC | DEL | Backspace]\"\n    });\n    if (this.mouseCurve.length > 2) {\n      ans.push({\n        icon: props => <i className=\"fas fa-check\" {...props}></i>,\n        action: parentView => {\n          camera.attachControl(canvas, true);\n          parentView\n            .getUndoManager()\n            .doIt(\n              this.getUndoAbleEnterAction(this.mouseCurve, scene, parentView)\n            );\n        },\n        name: \"Create Polygon [Enter]\"\n      });\n    }\n    return ans;\n  };\n\n  getUndoAbleEnterAction(keyPoints, scene, parentView) {\n    const kps = [...keyPoints];\n    const name = `PolygonRegion${Math.floor(Math.random() * 1e3)}`;\n    return UndoManager.actionBuilder()\n      .doAction(() => {\n        parentView.deleteNodeFromTreeUsingName(TEMP_POLYGON_REGION_NAME, false);\n        this.createPolygonRegion(kps, name, scene, parentView, true);\n        this.mouseCurve = [];\n        parentView.setPropertiesWithName(name);\n        parentView.closeContextDial();\n      })\n      .undoAction(() => {\n        parentView.deleteNodeFromTreeUsingName(name);\n        this.createPolygonRegion(\n          kps,\n          TEMP_POLYGON_REGION_NAME,\n          scene,\n          parentView,\n          false\n        );\n        this.mouseCurve = kps;\n      })\n      .build();\n  }\n\n  onPointerMove = (evt, parentView) => {\n    // empty\n  };\n\n  onPointerUp = (evt, parentView) => {\n    // empty\n  };\n\n  onKeyUp = (evt, parentView) => {\n    // Warning: code duplication with PathAction\n    const defaultAction = () => super.onKeyUp(evt, parentView);\n    parentView.getSceneMemory().forEach(memory => {\n      const { scene, camera, canvas } = memory;\n      const contextActions = this.getDrawPolygonContextAction(\n        camera,\n        canvas,\n        scene\n      );\n      selectOneAction(\n        [\n          {\n            predicate: e => e.code === \"Enter\" || e.code === \"NumpadEnter\",\n            action: () => contextActions[1].action(parentView)\n          },\n          {\n            predicate: e => e.code === \"Delete\" || e.code === \"Backspace\",\n            action: () => contextActions[0].action(parentView)\n          },\n          {\n            predicate: e => e.code === \"Escape\",\n            action: () => {\n              if (this.mouseCurve.length === 0) {\n                super.onKeyUp(evt, parentView);\n              }\n              contextActions[0].action(parentView);\n            }\n          }\n        ],\n        defaultAction\n      )(evt);\n    });\n  };\n\n  createPolygonRegion = (\n    region,\n    name,\n    scene,\n    parentView,\n    is2addInServer = true,\n    color = Color3.Yellow(),\n    height = 1\n  ) => {\n    const rootMesh = parentView.getRootNode().item.mesh;\n\n    const localRegion = region.map(r =>\n      Util3d.getLocalCoordFromWorld({ parent: rootMesh }, Vec3.ofBabylon(r))\n    );\n\n    const middlePoint = Util3d.pointAverageVec3(localRegion);\n    const centeredRegion = localRegion.map(r => r.sub(middlePoint));\n\n    const polygonRegionItem = PolygonRegion.ofDict(\n      scene,\n      {\n        name: name,\n        position: middlePoint.toArray(),\n        color: [color.r, color.g, color.b],\n        localPolygon: centeredRegion.map(x => x.toArray()),\n        height: height\n      },\n      parentView\n    );\n\n    polygonRegionItem.mesh.parent = rootMesh;\n\n    parentView.addNodeItem2Tree(\n      polygonRegionItem,\n      rootMesh.name,\n      is2addInServer,\n      true,\n      is2addInServer\n    );\n  };\n}\n\nconst TEMP_POLYGON_REGION_NAME = \"temp_polygon_region\";\nexport default PolygonRegionAction;\n","import { Maybe } from \"monet\";\nimport MouseKeysAction from \"./MouseKeysAction\";\nimport React from \"react\";\n\nclass OrbitAction extends MouseKeysAction {\n  constructor() {\n    super();\n    this.key = \"orbit\";\n    this.name = \"Orbit [ESC]\";\n    this.maybeSelectedMesh = Maybe.none();\n    this.icon = props => <i className=\"fas fa-globe\" {...props}></i>;\n  }\n\n  action = parentView => {\n    super.action(parentView);\n    parentView.setSelectedAction(this);\n  };\n\n  onPointerDown = (evt, parentView) => {};\n\n  onPointerMove = (evt, parentView) => {};\n\n  onPointerUp = (evt, parentView) => {};\n}\n\nexport default OrbitAction;\n","import MouseKeysAction from \"./MouseKeysAction\";\nimport React from \"react\";\nimport Util3d from \"../Util3d/Util3d\";\nimport { Color3 } from \"@babylonjs/core\";\nimport GraphItem from \"../NodeItem/GraphItem\";\nimport Constants from \"../Utils/Constants\";\nimport { UndoManager } from \"mov-fe-lib-core\";\nimport { selectOneAction } from \"../Utils/Utils\";\nimport Path from \"../NodeItem/Path\";\nimport { Maybe } from \"monet\";\nimport GlobalRef from \"../NodeItem/GlobalRef\";\n\nclass DrawGraphAction extends MouseKeysAction {\n  constructor() {\n    super();\n    this.key = \"drawGraph\";\n    this.name = \"Draw Graph [6]\";\n    this.icon = props => <i className=\"fas fa-project-diagram\" {...props}></i>;\n\n    this.previewMeshes = [];\n    this.firstMousePos = undefined;\n    this.firstClickedMesh = undefined;\n  }\n\n  //========================================================================================\n  /*                                                                                      *\n   *                            Mouse Key Action Implementation                           *\n   *                                                                                      */\n  //========================================================================================\n\n  action = parentView => {\n    super.action(parentView);\n    parentView.setSelectedAction(this);\n  };\n\n  onPointerDown = (evt, parentView) => {\n    if (!(evt.buttons === 1)) return;\n    this.mousePosConsumer(parentView)((mousePos, memory) => {\n      const { scene, ground } = memory;\n      const maybeMesh = Util3d.pickMesh(scene, ground).filter(\n        this.isConnectableMesh(parentView)\n      );\n      maybeMesh.forEach(possibleMesh => {\n        parentView.highlightMeshesInScene([possibleMesh], Color3.Green());\n        this.onPointerDownLine(mousePos, possibleMesh, memory, parentView);\n      });\n      maybeMesh.orElseRun(() => {\n        // no mesh found\n        parentView.highlightMeshesInScene();\n        this.resetPreview();\n      });\n    });\n  };\n\n  onPointerMove = (evt, parentView) => {\n    this.mousePosConsumer(parentView)((mousePos, memory) => {\n      const { scene, ground } = memory;\n      Util3d.pickMesh(scene, ground)\n        .filter(this.isConnectableMesh(parentView))\n        .cata(\n          () => parentView.highlightMeshesInScene(),\n          pickedMesh =>\n            parentView.highlightMeshesInScene([pickedMesh], Color3.Green())\n        );\n      if (!this.firstMousePos) return;\n      this.onPointerMoveLine(mousePos, memory, parentView);\n    });\n  };\n\n  onPointerUp = (evt, parentView) => {};\n\n  onKeyUp = (evt, parentView) => {\n    const escapeAction = () => this.resetPreview();\n    const predicateActionList = [\n      {\n        predicate: e => [\"Backspace\", \"Delete\", \"Escape\"].includes(e.code),\n        action: escapeAction\n      }\n    ];\n    selectOneAction(predicateActionList)(evt);\n  };\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                  Auxiliary functions                                  *\n   *                                                                                      */\n  //========================================================================================\n\n  resetPreview = () => {\n    if (!!this.firstMousePos) {\n      this.deletePreviewMeshes();\n      this.firstMousePos = undefined;\n      this.firstClickedMesh = undefined;\n    }\n  };\n\n  deletePreviewMeshes = () => {\n    this.previewMeshes.forEach(mesh => mesh.dispose());\n    this.previewMeshes = [];\n  };\n\n  mousePosConsumer = parentView => lambda => {\n    parentView.getSceneMemory().forEach(memory => {\n      const { scene, ground } = memory;\n      const maybeCurrent = Util3d.getGroundPosition(scene, ground);\n      maybeCurrent.forEach(mousePos => lambda(mousePos, memory));\n    });\n  };\n\n  /**\n   * returns a predicate(mesh => boolean) that tells if a mesh is connectable by an edge\n   * @param {*} parentView\n   */\n  isConnectableMesh = parentView => mesh => {\n    return parentView\n      .getNodeFromTree(mesh.name)\n      .cata(\n        () => {\n          // mesh is not a nodeItem, check if mesh parent is a path and is beginning or end of path\n          const parentName = mesh?.parent?.name || \"\";\n          return parentView\n            .getNodeFromTree(parentName)\n            .filter(({ item }) => item.getType() === Path.TYPE)\n            .filter(({ item }) => {\n              const index = mesh.index;\n              return index === 0 || index === item.keyPoints.length - 1;\n            });\n        },\n        ({ item }) => {\n          // mesh is a nodeItem, check if not path\n          return Maybe.some(mesh).filter(\n            _ =>\n              item.getType() !== Path.TYPE && item.getType() !== GlobalRef.TYPE\n          );\n        }\n      )\n      .orSome(false);\n  };\n\n  belongsToPath = parentView => mesh => {\n    const parentName = mesh?.parent?.name || \"\";\n    return parentView\n      .getNodeFromTree(parentName)\n      .filter(({ item }) => item.getType() === Path.TYPE)\n      .map(({ item }) => item.name);\n  };\n\n  belongs2SamePath = parentView => (meshI, meshJ) => {\n    const belongsToPath = this.belongsToPath(parentView);\n    return belongsToPath(meshI)\n      .flatMap(nameI => belongsToPath(meshJ).map(nameJ => nameI === nameJ))\n      .orSome(false);\n  };\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                       Line Edge                                      *\n   *                                                                                      */\n  //========================================================================================\n\n  onPointerDownLine = (mousePos, clickedMesh, memory, parentView) => {\n    const { scene } = memory;\n    if (!this.firstMousePos) {\n      this.firstMousePos = mousePos;\n      this.firstClickedMesh = clickedMesh;\n    } else {\n      //firstMousePos exists\n      if (\n        this.belongs2SamePath(parentView)(clickedMesh, this.firstClickedMesh)\n      ) {\n        this.resetPreview();\n      } else {\n        parentView\n          .getUndoManager()\n          .doIt(\n            this.getUndoAbleLineEdge(\n              [this.firstClickedMesh, clickedMesh],\n              scene,\n              parentView,\n              clickedMesh\n            )\n          );\n      }\n    }\n  };\n\n  getUndoAbleLineEdge = (edgeMeshes, scene, parentView) => {\n    return UndoManager.actionBuilder()\n      .doAction(() => {\n        this.createEdge(edgeMeshes, scene, parentView);\n        this.resetPreview();\n      })\n      .undoAction(() => {\n        this.deleteEdge(edgeMeshes, parentView);\n      })\n      .build();\n  };\n\n  onPointerMoveLine = (mousePos, memory, parentView) => {\n    // preview line\n    const visibility = 0.25;\n    const { scene } = memory;\n    const rootMesh = parentView.getRootNode().item.mesh;\n    const edgeEmbedding = toGlobalCoord(parentView)([\n      this.firstMousePos,\n      mousePos\n    ]);\n    this.deletePreviewMeshes();\n    this.previewMeshes = [\n      GraphItem.getEdgeMesh(\n        scene,\n        edgeEmbedding,\n        Color3.Blue(),\n        Constants.RADIUS / 4\n      )\n    ];\n    this.previewMeshes.forEach(mesh => {\n      mesh.visibility = visibility;\n      mesh.parent = rootMesh;\n      mesh.isPickable = false;\n    });\n  };\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                    Draw functions                                    *\n   *                                                                                      */\n  //========================================================================================\n\n  createEdge = (edgeMeshes, scene, parentView) => {\n    GraphItem.createGraphItemIfNone(scene, parentView);\n    parentView.getGraph().forEach(graphNode => {\n      const { item: graphItem } = graphNode;\n      graphItem.addEdge(...edgeMeshes);\n      parentView.updateNodeInServer(graphItem.name);\n    });\n  };\n\n  deleteEdge = (edgeMeshes, parentView) => {\n    parentView.getGraph().forEach(graphNode => {\n      const { item: graphItem } = graphNode;\n      graphItem.delEdge(...edgeMeshes);\n      parentView.updateNodeInServer(graphItem.name);\n    });\n  };\n}\n\nconst toGlobalCoord = Util3d.toGlobalCoord;\nexport default DrawGraphAction;\n","import Util3d from \"../Util3d/Util3d\";\nimport MouseKeysAction from \"./MouseKeysAction\";\nimport React from \"react\";\nimport { MeshBuilder } from \"@babylonjs/core\";\nimport { AdvancedDynamicTexture, TextBlock } from \"@babylonjs/gui/2D\";\nimport Vec2 from \"../Math/Vec2\";\n\nclass MeasureAction extends MouseKeysAction {\n  constructor() {\n    super();\n    this.key = \"drawWall\";\n    this.name = \"Measure [7]\";\n    this.ruler = []; // can only have to elements, start point and end point\n    this.tempMesh = null;\n    this.mesh = null;\n    this.advancedTexture = null;\n    this.text = null;\n    this.icon = props => <i className=\"fas fa-ruler\" {...props}></i>;\n  }\n\n  action = parentView => {\n    super.action(parentView);\n    parentView.setSelectedAction(this);\n  };\n\n  onPointerDown = (evt, parentView) => {\n    if (evt.button !== 0) {\n      return;\n    }\n    parentView.getSceneMemory().forEach(memory => {\n      const scene = memory.scene;\n      const ground = memory.ground;\n\n      Util3d.getGroundPosition(scene, ground).forEach(current => {\n        const currentMousePos = Util3d.toGlobalCoord(parentView)(current);\n        this.ruler.push(currentMousePos);\n        if (this.ruler.length > 2) {\n          this.mesh && this.mesh.dispose();\n          this.tempMesh && this.tempMesh.dispose();\n          this.text && this.text.dispose();\n          this.ruler = [];\n        }\n        if (this.ruler.length === 2) {\n          this.mesh = MeshBuilder.CreateLines(\n            \"ruler\",\n            {\n              points: this.ruler,\n              updatable: true\n            },\n            scene\n          );\n\n          this.addTextGUI(\n            scene,\n            this.calculateDistance(this.ruler[0], currentMousePos),\n            evt\n          );\n\n          const rootMesh = parentView.getRootNode().item.mesh;\n          this.mesh.parent = rootMesh;\n        }\n      });\n    });\n  };\n\n  onPointerMove = (evt, parentView) => {\n    parentView.getSceneMemory().forEach(memory => {\n      const scene = memory.scene;\n      const ground = memory.ground;\n\n      Util3d.getGroundPosition(scene, ground).forEach(current => {\n        const currentMousePos = Util3d.toGlobalCoord(parentView)(current);\n        // Don't add more than two point to the ruler\n        if (this.ruler.length === 1) {\n          // Remove previous element from Mesh to not overlap\n          this.tempMesh && this.tempMesh.dispose();\n\n          this.tempMesh = MeshBuilder.CreateLines(\n            \"ruler\",\n            {\n              points: [this.ruler[0], currentMousePos],\n              updatable: true\n            },\n            scene\n          );\n\n          this.addTextGUI(\n            scene,\n            this.calculateDistance(this.ruler[0], currentMousePos),\n            evt\n          );\n\n          const rootMesh = parentView.getRootNode().item.mesh;\n          this.tempMesh.parent = rootMesh;\n        }\n      });\n    });\n  };\n\n  onPointerUp = (evt, parentView) => {};\n\n  // Calculate 2D distance from starting of ruler to the end of ruler\n  calculateDistance = (start, end) => {\n    const startVec = Vec2.ofBabylon(start);\n    const endVec = Vec2.ofBabylon(end);\n    return startVec.sub(endVec).length().toFixed(3);\n  };\n\n  addTextGUI = function (scene, value, evt) {\n    this.advancedTexture && this.advancedTexture.removeControl(this.text);\n    // GUI\n    this.advancedTexture = AdvancedDynamicTexture.CreateFullscreenUI(\n      \"UI\",\n      true,\n      scene\n    );\n\n    this.text = new TextBlock();\n    this.text.text = `${value}m`;\n    this.text.fontSize = 17;\n    this.text.left = scene.pointerX - evt.target.width / 2 + 20;\n    this.text.top = scene.pointerY - evt.target.height / 2 + 20;\n    this.text.color = \"white\";\n    this.advancedTexture.addControl(this.text);\n  };\n}\n\nexport default MeasureAction;\n","import DragObjectsAction from \"../Actions/DragObjectsAction\";\nimport AddKeyPointAction from \"../Actions/AddKeyPointAction\";\nimport BoxRegionAction from \"../Actions/BoxRegionAction\";\nimport DrawPathAction from \"../Actions/DrawPathAction\";\nimport PolygonRegionAction from \"../Actions/PolygonRegionAction\";\nimport OrbitAction from \"../Actions/OrbitAction\";\nimport DrawGraphAction from \"../Actions/DrawGraphAction\";\nimport MeasureAction from \"../Actions/MeasureAction\";\n// import RobotAction from \"../Actions/RobotAction\";\n// import DrawWallAction from \"../Actions/DrawWallAction\";\n\n/**\n * Order Matters\n */\nexport const ACTIONS = () => ({\n  measure: new MeasureAction(),\n  drawGraph: new DrawGraphAction(),\n  drawRegion: new PolygonRegionAction(),\n  addKeyPoint: new AddKeyPointAction(),\n  drawBoxRegion: new BoxRegionAction(),\n  drawPath: new DrawPathAction(),\n  dragObjects: new DragObjectsAction(),\n  orbit: new OrbitAction()\n  // drawWalls: new DrawWallAction()\n  // addRobot: new RobotAction({\n  //   id: \"Test\",\n  //   name: \"Test\",\n  //   robotTree: {\n  //     name: \"Test\",\n  //     position: { x: 0, y: 0, z: 0 },\n  //     orientation: {\n  //       w: 1,\n  //       x: 0,\n  //       y: 0,\n  //       z: 0\n  //     },\n  //     child: [\n  //       {\n  //         name: \"TestTF\",\n  //         position: { x: 1, y: 0, z: 1 },\n  //         orientation: {\n  //           w: Math.cos(-Math.PI / 4),\n  //           x: 0,\n  //           y: Math.sin(-Math.PI / 4),\n  //           z: 0\n  //         },\n  //         child: []\n  //       }\n  //     ]\n  //   }\n  // })\n});\n","export default class MapLoader {\n  constructor(yamlSrc) {\n    this.yamlSrc = yamlSrc;\n    this.cachedMap = null;\n  }\n\n  async load() {\n    if (this.cachedMap) return this.cachedMap;\n    const response = await fetch(MapLoader.getMapUrl(this.yamlSrc));\n    const map = await this.parseYaml(await response.text());\n    const ans = {\n      textureSrc: map.image,\n      resolution: map.resolution,\n      origin: map.origin,\n      imageSize: map.size\n    };\n    this.cachedMap = ans;\n    return ans;\n  }\n\n  async parseYaml(yamlTxt) {\n    const ans = {};\n    const actionDict = {\n      image: (k, v) => (ans[k] = MapLoader.getMapUrl(v)),\n      resolution: (k, v) => (ans[k] = Number.parseFloat(v)),\n      origin: (k, v) => (ans[k] = JSON.parse(v))\n    };\n    console.log(\"Yaml text\", yamlTxt);\n    yamlTxt\n      .split(\"\\n\")\n      .map(s => s.split(\": \"))\n      .filter(split => split.length >= 2)\n      .filter(split => split[0] in actionDict)\n      .forEach(split => actionDict[split[0]](split[0], split[1]));\n    ans[\"size\"] = await this.getImageSize(ans[\"image\"]);\n    return ans;\n  }\n\n  getImageSize(src) {\n    return new Promise((resolve, reject) => {\n      const img = new Image();\n      img.src = src;\n      img.onload = () => resolve([img.naturalWidth, img.naturalHeight]);\n    });\n  }\n  static getMapUrl = src => `/static/maps/${src}`;\n}\n","import { Maybe } from \"monet\";\nimport { ASSETS_TYPES, AssetsTypesFactory } from \"../Utils/AssetsTypesFactory\";\nimport { MasterDB } from \"mov-fe-lib-core\";\nimport MapLoader from \"./MapLoader\";\n\n/**\n *  Graphic Assets Manager, retrieves and manages the assets that are in DB.\n */\nclass AssetsManager {\n  constructor() {\n    if (instance) return instance;\n    instance = this;\n    this.assets = {};\n    this.assetsActionMap = {};\n    this.robots = {};\n    this.observersBySceneId = {};\n    this.afterLoad = [];\n    this.finishInitialSubscribers = 0;\n    this.isLoading = true;\n  }\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                  Getters and Setters                                 *\n   *                                                                                      */\n  //========================================================================================\n\n  getAssets = () => this.assets;\n\n  getAssetsActionMap = () => this.assetsActionMap;\n\n  load = async () => {\n    await this.retrieveAssetsFromDb();\n    return this;\n  };\n\n  addAfterLoad(afterLoad) {\n    this.afterLoad.push(afterLoad);\n    return this;\n  }\n\n  addObserver(scene, observer) {\n    const sceneId = scene._uid;\n    if (!(sceneId in this.observersBySceneId)) {\n      this.observersBySceneId[sceneId] = [];\n    }\n    this.observersBySceneId[sceneId].push(observer);\n    return this;\n  }\n\n  signalObservers = () => {\n    Object.keys(this.observersBySceneId).forEach(k => {\n      this.observersBySceneId[k].forEach(obs => obs(this));\n    });\n  };\n\n  addAsset(assetKey, asset) {\n    try {\n      this.assets[assetKey] = asset;\n      this.assetsActionMap[assetKey] = AssetsTypesFactory[asset.type](asset);\n      if (!this.isLoading) this.signalObservers();\n    } catch (e) {\n      console.log(\"Caught exception while adding asset\", e);\n      throw Error(`Caught exception while adding asset ${e}`);\n    }\n  }\n\n  delAsset(assetKey) {\n    if (assetKey in this.assets) delete this.assets[assetKey];\n    if (assetKey in this.assetsActionMap) delete this.assetsActionMap[assetKey];\n    this.signalObservers();\n  }\n\n  clearObserver(scene) {\n    const sceneId = scene._uid;\n    if (sceneId in this.observersBySceneId) {\n      console.log(\"Clear asset observer\", sceneId);\n      delete this.observersBySceneId[sceneId];\n    }\n  }\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                      Subscribers                                     *\n   *                                                                                      */\n  //========================================================================================\n\n  subs = [\n    resolve =>\n      MasterDB.subscribe(\n        {\n          Scope: \"Robot\",\n          Name: \"*\",\n          RobotName: \"*\"\n        },\n        this.getRobotNameUpdate(),\n        this.getRobotNameSub(\n          ({ value }) => value,\n          () => this.finishSub(\"RobotName\", resolve)\n        )\n      ),\n    resolve =>\n      MasterDB.subscribe(\n        {\n          Scope: \"Package\",\n          File: \"*\",\n          Name: \"maps\",\n          FileLabel: \"*\"\n        },\n        this.getMapUpdater(({ key }) => key),\n        this.getMapSubscriber(\n          ({ value }) => value,\n          () => this.finishSub(\"Maps\", resolve)\n        )\n      ),\n    resolve =>\n      MasterDB.subscribe(\n        { Scope: \"Package\", File: \"*\", Name: \"meshes\", FileLabel: \"*\" },\n        this.getMeshUpdater(),\n        this.getMeshSubscriber(\n          ({ value }) => value,\n          () => this.finishSub(\"Meshes\", resolve)\n        )\n      )\n  ];\n\n  retrieveAssetsFromDb() {\n    return new Promise((re, rej) => {\n      this.subs.forEach(f => f(re));\n    });\n  }\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                         Utils                                        *\n   *                                                                                      */\n  //========================================================================================\n\n  finishSub = (place, resolve) => {\n    console.log(\"FINISH SUB \", place, this.finishInitialSubscribers);\n    if (++this.finishInitialSubscribers > this.subs.length - 1) {\n      this.afterLoad.forEach(f => f(this));\n      this.afterLoad = [];\n      this.isLoading = false;\n      resolve(true);\n    }\n  };\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                        Robots                                        *\n   *                                                                                      */\n  //========================================================================================\n\n  deleteRobot = id => {\n    this.delAsset(this.robots[id].name);\n    if (id in this.robots) delete this.robots[id];\n  };\n\n  addRobot(id, name = null) {\n    if (!(id in this.robots)) {\n      this.robots[id] = {\n        id: id,\n        name: null\n      };\n    }\n    ofNull(name).forEach(name => (this.robots[id].name = name));\n    if (Object.values(this.robots[id]).every(x => x !== null)) {\n      const localRobot = this.robots[id];\n      this.addAsset(localRobot.name, {\n        name: localRobot.name,\n        id: id,\n        type: ASSETS_TYPES.Robot,\n        robotTree: {\n          name: localRobot.name,\n          position: { x: 0, y: 0, z: 0 },\n          orientation: {\n            w: 1,\n            x: 0,\n            y: 0,\n            z: 0\n          },\n          child: []\n        }\n      });\n    }\n  }\n\n  getRobotNameSub(getter, after = () => {}) {\n    return data => {\n      ofNull(getter(data))\n        .flatMap(maybeGet(\"Robot\"))\n        .forEach(r =>\n          Object.keys(r).forEach(id => this.addRobot(id, r[id].RobotName))\n        );\n      after();\n    };\n  }\n\n  getRobotNameUpdate() {\n    const actionMap = {\n      del: data =>\n        ofNull(data.key)\n          .flatMap(maybeGet(\"Robot\"))\n          .forEach(r => Object.keys(r).forEach(this.deleteRobot)),\n      set: this.getRobotNameSub(({ key }) => key)\n    };\n    return data => {\n      console.log(\"Robot NAME UPDATE\", data);\n      actionMap[data.event](data);\n    };\n  }\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                         Maps                                         *\n   *                                                                                      */\n  //========================================================================================\n\n  getMapSubscriber = (dataGetter, after = () => {}) => {\n    return data =>\n      this.getMapFileData(dataGetter, data).forEach(fileName => {\n        Object.keys(fileName)\n          .filter(f => f.includes(\".yaml\"))\n          .forEach(this.addMap);\n        after();\n      });\n  };\n\n  getMapUpdater = dataGetter => {\n    const actionMap = {\n      del: data => {\n        this.getMapFileData(dataGetter, data).forEach(f => {\n          let filename = Object.keys(f)[0];\n          filename = filename.split(\".\")[0];\n          this.delAsset(filename);\n        });\n      },\n      set: this.getMapSubscriber(dataGetter),\n      subscribe: this.getMapSubscriber(dataGetter)\n    };\n    return data => {\n      console.log(\"MAP UPDATE\", data);\n      actionMap[data.event](data);\n    };\n  };\n\n  addMap = yamlSrc => {\n    const map = {\n      name: yamlSrc.split(\".\")[0],\n      loader: new MapLoader(yamlSrc),\n      type: ASSETS_TYPES.Map\n    };\n    this.addAsset(map.name, map);\n  };\n\n  getMapFileData = (dataGetter, data) =>\n    ofNull(dataGetter(data))\n      .flatMap(maybeGet(\"Package\"))\n      .flatMap(maybeGet(\"maps\"))\n      .flatMap(maybeGet(\"File\"));\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                         Mesh                                         *\n   *                                                                                      */\n  //========================================================================================\n\n  getMeshSubscriber = (dataGetter, after = () => {}) => data => {\n    this.getMeshFileData(dataGetter, data).forEach(d =>\n      Object.keys(d).forEach(id => {\n        const mesh = { id: id, name: d[id].FileLabel, type: ASSETS_TYPES.Mesh };\n        this.addAsset(mesh.name, mesh);\n      })\n    );\n    after();\n  };\n\n  getMeshUpdater = () => {\n    const actionMap = {\n      del: data => {\n        this.getMeshFileData(d => d.key, data).forEach(f => {\n          let filename = Object.keys(f)[0];\n          this.delAsset(filename);\n        });\n      },\n      set: this.getMeshSubscriber(d => d.key),\n      subscribe: this.getMeshSubscriber(d => d.key)\n    };\n    return data => actionMap[data.event](data);\n  };\n\n  getMeshFileData = (dataGetter, data) =>\n    ofNull(dataGetter(data))\n      .flatMap(maybeGet(\"Package\"))\n      .flatMap(maybeGet(\"meshes\"))\n      .flatMap(maybeGet(\"File\"));\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                        static                                        *\n   *                                                                                      */\n  //========================================================================================\n\n  static getInstance() {\n    return new AssetsManager();\n  }\n}\n\n// private variable\nlet instance = null;\n\n// auxiliary functions\nconst ofNull = Maybe.fromNull;\nconst get = prop => obj => obj[prop];\nconst dot = f => g => x => f(g(x));\nconst maybeGet = prop => dot(ofNull)(get(prop));\n\nexport default AssetsManager;\n","import Util3d from \"../Util3d/Util3d\";\nimport Vec3 from \"../Math/Vec3\";\nimport Action from \"./Action\";\nimport Map from \"../NodeItem/Map\";\nimport { Maybe } from \"monet\";\nimport React from \"react\";\nimport GlobalRef from \"../NodeItem/GlobalRef\";\nimport { Vector3 } from \"@babylonjs/core\";\nimport DefaultScene from \"../Utils/DefaultScene\";\nimport { ACTIONS } from \"../MainView/MainViewActions\";\nimport MapLoader from \"../AssetsManager/MapLoader\";\nimport { UndoManager } from \"mov-fe-lib-core\";\nimport AssetsManager from \"../AssetsManager/AssetsManager\";\n\nclass AddMapAction extends Action {\n  constructor(name, mapLoader) {\n    super();\n    this.name = name;\n    this.key = `addMap${name}`;\n    this.mapLoader = mapLoader;\n    this.icon = props => <i {...props} className=\"fas fa-map\"></i>;\n    this.firstTimeLoad = true;\n  }\n\n  addMap(parentView) {\n    parentView.getSceneMemory().forEach(async memory => {\n      const { scene, camera } = memory;\n      const {\n        textureSrc,\n        resolution,\n        origin,\n        imageSize\n      } = await this.mapLoader.load();\n\n      const width = resolution * imageSize[0];\n      const height = resolution * imageSize[1];\n      const mesh = Util3d.groundBuilder(scene)\n        .name(Maybe.fromNull(this.memory[\"name\"]).orSome(this.name))\n        .width(width)\n        .height(height)\n        .textureSrc(textureSrc)\n        .build();\n\n      const originPos = Vec3.of([-width / 2, -height / 2, 0]).sub(\n        Vec3.of(origin)\n      );\n\n      const rootNode = parentView.getRootNode();\n      const parent = rootNode.item.mesh.parent;\n      parent.position = GlobalRef.inverseCoordinates(originPos.toBabylon());\n      camera.setTarget(\n        new Vector3(parent.position.x, parent.position.y, parent.position.z)\n      );\n\n      const map = new Map(\n        mesh,\n        [width, height],\n        this.textureSrc,\n        Maybe.fromNull(this.memory[\"assetName\"]).orSome(this.name)\n      );\n\n      const isVisible = Maybe.fromNull(this.memory[\"isVisible\"]).orSome(true);\n      const is2sendServer = Maybe.fromNull(this.memory[\"isImport\"])\n        .map(x => !x)\n        .orSome(true);\n\n      mesh.setEnabled(isVisible);\n      parentView.addNodeItem2Tree(map, null, is2sendServer, isVisible);\n      memory.ground.dispose();\n      memory.ground = DefaultScene.createMeshGround(scene, width, height);\n      this.memory[\"isImport\"] = false;\n    });\n  }\n\n  action(parentView) {\n    super.action(parentView);\n    const maybeNode = parentView.getNodeFromTree(this.name);\n    maybeNode.orElseRun(() => {\n      const isImport = this.memory[\"isImport\"];\n      // you shouldn't be able to undo when importing a scene. isImport prevents removing the map when you undo.\n      // firstTimeLoad condition to prevent adding a map when fast map switch\n      if (isImport && this.firstTimeLoad) {\n        this.addMap(parentView);\n        this.firstTimeLoad = false;\n      } else {\n        parentView.getUndoManager().doIt(this.getUndoAction(parentView));\n      }\n    });\n    parentView.setSelectedAction(ACTIONS().orbit);\n  }\n\n  getUndoAction(parentView) {\n    if (parentView.getObjectTree().length < 2) {\n      return UndoManager.actionBuilder()\n        .doAction(() => {\n          this.addMap(parentView);\n        })\n        .undoAction(() => {\n          const name = parentView.getObjectTree()[1].title;\n          parentView.deleteNodeFromTreeUsingName(name);\n        })\n        .build();\n    } else {\n      const oldMapName = parentView.getObjectTree()[1].title;\n      const newMapName = this.name;\n      return UndoManager.actionBuilder()\n        .doAction(() => {\n          this.switchMaps(oldMapName, newMapName, parentView);\n        })\n        .undoAction(() => {\n          parentView.deleteNodeFromTreeUsingName(newMapName);\n          Maybe.fromNull(\n            AssetsManager.getInstance().getAssetsActionMap()[oldMapName]\n          ).forEach(a => a.action(parentView));\n        })\n        .build();\n    }\n  }\n\n  switchMaps(oldMapName, newMapName, parentView) {}\n\n  getType = () => AddMapAction.TYPE;\n\n  deleteAsset = () => {};\n\n  download = async () => {\n    const { textureSrc } = await this.mapLoader.load();\n    const { yamlSrc } = this.mapLoader;\n    const downloadLinks = (\n      <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n          <div style={{ marginRight: \"5px\" }}>Image:</div>\n          <a href={textureSrc} download>\n            {textureSrc}\n          </a>\n        </div>\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n          <div style={{ marginRight: \"5px\" }}>Yaml:</div>\n          <a href={MapLoader.getMapUrl(yamlSrc)} download>\n            {yamlSrc}\n          </a>\n        </div>\n      </div>\n    );\n  };\n\n  static TYPE = \"AddMapAction\";\n}\n\nexport default AddMapAction;\n","import Vec3 from \"../Math/Vec3\";\nimport Util3d from \"../Util3d/Util3d\";\nimport { Database } from \"mov-fe-lib-core\";\nimport AssetNodeItem from \"./AssetNodeItem\";\nimport { Axis, Space, Vector3, Quaternion, Color3 } from \"@babylonjs/core\";\nimport _get from \"lodash/get\";\n\nclass Robot extends AssetNodeItem {\n  static ROBOT_MESH_NAME = \"Tugbot.stl\";\n\n  constructor(meshTree, assetName, keyValueMap = {}) {\n    super(meshTree.mesh, assetName, keyValueMap);\n    this.requestAnimationFrameId = null;\n    this.meshTree = meshTree;\n    this.timeSinceLastUpdate = 0;\n    this.isOnline = true;\n    this.speed = Vector3.Zero();\n    this.qSpeed = Quaternion.Zero();\n    this.newPos = Vector3.Zero();\n    this.newOri = Quaternion.Identity();\n    this.db = new Database();\n  }\n\n  toDict() {\n    let dict = super.toDict();\n    return dict;\n  }\n\n  toForm() {\n    const schema = super.toForm();\n    schema.jsonSchema.properties = {\n      oldName: schema.jsonSchema.properties.oldName,\n      name: schema.jsonSchema.properties.name,\n      type: schema.jsonSchema.properties.type,\n      assetName: {\n        type: \"string\",\n        title: \"Asset Name\"\n      },\n      position: schema.jsonSchema.properties.position,\n      quaternion: schema.jsonSchema.properties.quaternion,\n      color: schema.jsonSchema.properties.color,\n      annotations: schema.jsonSchema.properties.annotations\n    };\n    schema.uiSchema[\"assetName\"] = {\n      \"ui:disabled\": true\n    };\n    schema.data[\"assetName\"] = this.assetName;\n    return schema;\n  }\n\n  dispose() {\n    super.dispose();\n    this.db.unsubscribe({\n      Scope: \"Robot\",\n      Name: this.meshTree.id,\n      Parameter: \"tf\"\n    });\n    window.cancelAnimationFrame(this.requestAnimationFrameId);\n  }\n\n  updateRobot = (robot, oldTimeInMillis, robotAnimator) => {\n    const time = new Date().getTime();\n    const dt = 1e-3 * (time - oldTimeInMillis);\n    robotAnimator(robot, dt);\n    this.requestAnimationFrameId = requestAnimationFrame(() =>\n      this.updateRobot(robot, time, robotAnimator)\n    );\n  };\n\n  animate = robotAnimator => {\n    this.requestAnimationFrameId = requestAnimationFrame(() =>\n      this.updateRobot(this, new Date().getTime(), robotAnimator)\n    );\n  };\n\n  getType = () => Robot.TYPE;\n\n  toOffline() {\n    if (this.mesh.isDisposed()) return;\n    this.mesh._children[0]._children[0].visibility = 0.1;\n    this.speed = Vector3.Zero();\n    this.qSpeed = Quaternion.Zero();\n    this.isOnline = false;\n  }\n\n  toOnline() {\n    if (this.mesh.isDisposed()) return;\n    this.mesh._children[0]._children[0].visibility = 1;\n    this.isOnline = true;\n  }\n  //========================================================================================\n  /*                                                                                      *\n   *                                   Static Functions                                   *\n   *                                                                                      */\n  //========================================================================================\n\n  static TYPE = \"Robot\";\n\n  static TIME_2_BE_OFFLINE_IN_SEC = 10;\n\n  static getDefaultAnimator = parentView => (robot, dt) => {\n    const mesh = robot.mesh;\n    const speed = 3;\n    const vel = Util3d.getRotationMatrix(mesh)\n      .prodVec(new Vec3([speed, 0, 0]))\n      .toBabylon();\n    mesh.position = mesh.position.add(vel.scale(dt));\n    mesh.rotate(Axis.Z, (-Math.PI / 2) * dt, Space.LOCAL);\n  };\n\n  static updateRobotMeshTree(newRobotTf, robot) {\n    const lastPosition = robot.mesh.position;\n    const lastOrientation = robot.mesh.rotationQuaternion;\n    const newPosition = new Vector3(\n      newRobotTf.position.x,\n      newRobotTf.position.y,\n      newRobotTf.position.z\n    );\n    const newOrientation = new Quaternion(\n      newRobotTf.orientation.x,\n      newRobotTf.orientation.y,\n      newRobotTf.orientation.z,\n      newRobotTf.orientation.w\n    ).normalize();\n\n    const dtReciprocal = 1 / robot.timeSinceLastUpdate;\n    robot.speed = newPosition.subtract(lastPosition).scale(dtReciprocal);\n    robot.qSpeed = newOrientation.subtract(lastOrientation).scale(dtReciprocal);\n    robot.newPos = newPosition;\n    robot.newOri = newOrientation;\n    robot.timeSinceLastUpdate = 0;\n  }\n\n  static getSocketAnimator = (robot, parentView) => {\n    robot.db.subscribe(\n      { Scope: \"Robot\", Name: robot.meshTree.id, Parameter: \"tf\" },\n      data => {\n        const tf = _get(\n          data,\n          `key.Robot.${robot.meshTree.id}.Parameter.tf.Value`,\n          undefined\n        );\n        if (tf) Robot.updateRobotMeshTree(tf, robot);\n      },\n      data => {\n        const tf = _get(\n          data,\n          `key.Robot.${robot.meshTree.id}.Parameter.tf.Value`,\n          undefined\n        );\n        if (tf) Robot.updateRobotMeshTree(tf, robot);\n      }\n    );\n    return (robot2Animate, dt) => {\n      const epsilon = 1e-2;\n      const n = 1 / epsilon;\n      const biasedCoin = robot2Animate.timeSinceLastUpdate % n; // Math.random() < epsilon\n      robot2Animate.timeSinceLastUpdate += dt;\n      if (Vec3.ofBabylon(robot2Animate.speed).someNaNOrInfinite()) return;\n      if (Vec3.ofBabylon(robot2Animate.qSpeed).someNaNOrInfinite()) return;\n      robot2Animate.mesh.position = biasedCoin\n        ? robot2Animate.newPos\n        : robot2Animate.mesh.position.add(robot2Animate.speed.scale(dt));\n      robot2Animate.mesh.rotationQuaternion = biasedCoin\n        ? robot2Animate.newOri\n        : robot2Animate.mesh.rotationQuaternion\n            .add(robot.qSpeed.scale(dt))\n            .normalize();\n      Robot.setOnOffLine(robot2Animate);\n    };\n  };\n\n  static setOnOffLine(robot) {\n    if (robot.timeSinceLastUpdate > Robot.TIME_2_BE_OFFLINE_IN_SEC) {\n      robot.toOffline();\n    } else {\n      if (!robot.isOnline) robot.toOnline();\n    }\n  }\n\n  /**\n   * Side effect function\n   */\n  static transformMesh(mesh, scene) {\n    const thetaX = Math.PI / 2;\n    const translate = 0.25;\n    const boundScale = 1.9;\n\n    const boundingSphere = mesh.getBoundingInfo().boundingSphere;\n    mesh.position.set(\n      -boundingSphere.center.x,\n      -boundingSphere.center.y,\n      -boundingSphere.center.z\n    );\n\n    const tfSphereMesh = Util3d.createSphere(\n      scene,\n      new Color3(0.0, 0.0, 0.0),\n      0.5 * boundingSphere.radius,\n      `tfsphere${mesh.name}`,\n      false\n    );\n    tfSphereMesh.visibility = 0.25;\n    tfSphereMesh.scaling = Vec3.ONES.scale(\n      1 / boundingSphere.radius\n    ).toBabylon();\n\n    tfSphereMesh.addRotation(thetaX, 0, 0);\n    tfSphereMesh.position.set(0, 0, translate);\n    const spherePlaceHolder = Util3d.createSphere(\n      scene,\n      new Color3(0.0, 0.0, 0.0),\n      boundScale,\n      mesh.name,\n      true\n    );\n    spherePlaceHolder.visibility = 0.1;\n\n    mesh.parent = tfSphereMesh;\n    tfSphereMesh.parent = spherePlaceHolder;\n    return spherePlaceHolder;\n  }\n\n  static createRobotMeshTreeRecursive(node, mesh, parent, scene) {\n    if (!mesh) {\n      mesh = Util3d.createSphere(\n        scene,\n        new Color3(0.0, 0.0, 0.0),\n        0.5,\n        node.name,\n        false\n      );\n    }\n    const meshTree = {\n      mesh: mesh,\n      children: []\n    };\n    const position = new Vector3(\n      node.position.x,\n      node.position.y,\n      node.position.z\n    );\n    const quaternion = new Quaternion(\n      node.orientation.x,\n      node.orientation.y,\n      node.orientation.z,\n      node.orientation.w\n    );\n    mesh.position = position;\n    mesh.rotationQuaternion = quaternion;\n    if (parent) {\n      mesh.parent = parent;\n    }\n    meshTree[\"children\"] = node.child.map(child => {\n      return this.createRobotMeshTreeRecursive(\n        child,\n        Util3d.referentialBuilder(scene)\n          .boxParams({ isVisible: false, size: 0.1 })\n          .build(),\n        mesh,\n        scene\n      );\n    });\n    return meshTree;\n  }\n\n  static createRobotMeshTree(robotTree, robotMesh, scene) {\n    return Robot.createRobotMeshTreeRecursive(\n      robotTree,\n      robotMesh,\n      null,\n      scene\n    );\n  }\n\n  static builder() {\n    return new RobotBuilder();\n  }\n}\n\nclass RobotBuilder {\n  constructor() {\n    this._name = null;\n    this._meshTree = null;\n    this._parentMesh = null;\n    this._scene = null;\n    this._isPickable = true;\n    this._id = null;\n    this._keyValueMap = {};\n    this._assetName = null;\n  }\n\n  name(name) {\n    this._name = name;\n    return this;\n  }\n\n  meshTree(meshTree) {\n    this._meshTree = meshTree;\n    return this;\n  }\n\n  parentMesh(parentMesh) {\n    this._parentMesh = parentMesh;\n    return this;\n  }\n\n  scene(scene) {\n    this._scene = scene;\n    return this;\n  }\n\n  isPickable(isPickable) {\n    this._isPickable = isPickable;\n    return this;\n  }\n\n  id(id) {\n    this._id = id;\n    return this;\n  }\n\n  keyValueMap(keyValueMap) {\n    this._keyValueMap = keyValueMap;\n    return this;\n  }\n\n  assetName(assetName) {\n    this._assetName = assetName;\n    return this;\n  }\n\n  build() {\n    const variables = Object.keys(this)\n      .filter(x => x !== \"_parentMesh\")\n      .map(x => this[x]);\n\n    variables.forEach(x => {\n      if (x === null)\n        throw new Error(\n          `There are missing variables to build a robot, e.g ${x}`\n        );\n    });\n\n    this._meshTree.id = this._id;\n    this._meshTree.name = this._name;\n    this._meshTree.mesh.name = this._name;\n    this._meshTree.mesh.isPickable = this._isPickable;\n    this._meshTree.mesh.parent = this._parentMesh;\n\n    const baseAxis = Util3d.referentialBuilder(this._scene)\n      .isPickable(false)\n      .boxParams({ isVisible: false, size: 0.1 })\n      .name(`${this._name}Axis`)\n      .build();\n    baseAxis.parent = this._meshTree.mesh;\n\n    return new Robot(this._meshTree, this._assetName, this._keyValueMap);\n  }\n}\n\nexport default Robot;\n","import NodeItem from \"./NodeItem\";\nimport { Mesh, StandardMaterial, Color3, VertexData } from \"@babylonjs/core\";\nimport { Maybe } from \"monet\";\nimport { Utils, MasterDB } from \"mov-fe-lib-core\";\nconst ofNull = Utils.ofNull;\n\nclass PointCloud extends NodeItem {\n  /**\n   *\n   * @param {*} mesh\n   * @param {*} robot: {name: string, id: string} representing a robot\n   */\n  constructor(mesh, robot) {\n    super(mesh);\n    this.robot = robot;\n    this.pointCloudSubscribe();\n  }\n\n  pointCloudSubscribe() {\n    MasterDB.subscribe(\n      {\n        Scope: \"Robot\",\n        Name: this.robot.id,\n        Parameter: \"front_lidar\"\n      },\n      data => {\n        Maybe.fromNull(data)\n          .flatMap(d => ofNull(d.key))\n          .flatMap(k => ofNull(k.Robot[this.robot.id]))\n          .flatMap(r => ofNull(r.Parameter))\n          .flatMap(p => ofNull(p.front_lidar))\n          .flatMap(f => ofNull(f.Value))\n          .flatMap(v => ofNull(v.points))\n          .forEach(points => this.updatePointCloud(points));\n      },\n      data => {\n        Maybe.fromNull(data.value)\n          .flatMap(v => ofNull(v.Robot))\n          .flatMap(r => ofNull(r[this.robot.id]))\n          .flatMap(r => ofNull(r.Parameter))\n          .flatMap(p => ofNull(p.front_lidar))\n          .flatMap(f => ofNull(f.Value))\n          .flatMap(v => ofNull(v.points))\n          .forEach(points => this.updatePointCloud(points));\n      }\n    );\n  }\n\n  /**\n   *\n   * @param {*} points: Array<3-Array>\n   */\n  updatePointCloud(points) {\n    const vertexData = new VertexData();\n    //Assign positions\n    vertexData.positions = points.flatMap(x => x);\n    const colors = new Array(4 * points.length);\n    vertexData.colors = colors.fill(1.0);\n    //Apply vertexData to custom mesh\n    vertexData.applyToMesh(this.mesh, true);\n  }\n\n  dispose() {\n    super.dispose();\n    MasterDB.unsubscribe({\n      Scope: \"Robot\",\n      Name: this.robot.id,\n      Parameter: \"front_lidar\"\n    });\n  }\n\n  getType = () => PointCloud.TYPE;\n\n  static TYPE = \"PointCloud\";\n\n  static ofDict(scene, dict = null, mainView = null) {\n    if (!dict || !mainView)\n      throw new Error(\n        \"null dictionary describing point cloud or null mainView\"\n      );\n\n    const pointCloudMesh = new Mesh(`cloudPoint${dict.name}`, scene);\n    const mat = new StandardMaterial(`cloudPoint${dict.name}Material`, scene);\n    mat.emissiveColor = new Color3(1, 1, 1);\n    mat.disableLighting = true;\n    mat.pointsCloud = true;\n    mat.pointSize = 2;\n    pointCloudMesh.material = mat;\n\n    return new PointCloud(pointCloudMesh, dict);\n  }\n}\n\nexport default PointCloud;\n","import { Maybe } from \"monet\";\n/**\n * Mesh cache for each scene.\n *\n * Each mesh is associated with a scene therefore we must have a cache per scene.\n *\n */\nclass MeshCache {\n  constructor() {\n    if (instance) return instance;\n    instance = this;\n    this.meshCacheBySceneId = {};\n    this.count = 0;\n  }\n\n  static getInstance() {\n    return new MeshCache();\n  }\n\n  hasKey(key, scene) {\n    const sceneId = scene._uid;\n    return Maybe.fromNull(this.meshCacheBySceneId[sceneId])\n      .flatMap(meshCache => ofNull(meshCache[key]))\n      .cata(\n        () => false,\n        () => true\n      );\n  }\n\n  put(key, scene, mesh) {\n    const sceneId = scene._uid;\n    if (!(sceneId in this.meshCacheBySceneId)) {\n      this.meshCacheBySceneId[sceneId] = {};\n    }\n    this.meshCacheBySceneId[sceneId][key] = mesh;\n    mesh.setEnabled(false);\n    return this;\n  }\n\n  get(key, scene) {\n    const sceneId = scene._uid;\n    return Maybe.fromNull(this.meshCacheBySceneId[sceneId])\n      .flatMap(meshCache => ofNull(meshCache[key]))\n      .map(mesh => {\n        console.log(\n          \"#Mesh: Found Mesh in cache, retrieving copy number\",\n          this.count\n        );\n        const cloneMesh = mesh.clone(`${key}${this.count++}`);\n        console.log(\"#Mesh:\", cloneMesh);\n        return cloneMesh;\n      })\n      .orNull();\n  }\n\n  del(scene) {\n    const sceneId = scene._uid;\n    if (sceneId in this.meshCacheBySceneId) {\n      delete this.meshCacheBySceneId[sceneId];\n    }\n  }\n}\n\nconst ofNull = x => Maybe.fromNull(x);\n// private instance\nlet instance = null;\nexport default MeshCache;\n","import MeshCache from \"./MeshCache\";\nimport { AssetsManager } from \"@babylonjs/core\";\nimport \"@babylonjs/loaders\";\n\nclass MeshLoader {\n  constructor(scene) {\n    this.scene = scene;\n  }\n\n  static of(scene) {\n    return new MeshLoader(scene);\n  }\n\n  load = (meshName, mapFunction = mesh => mesh) =>\n    new Promise((re, rej) => {\n      const meshCache = MeshCache.getInstance();\n      if (meshCache.hasKey(meshName, this.scene)) {\n        console.log(`Found Mesh ${meshName} in cache for scene ${this.scene}`);\n        re(mapFunction(meshCache.get(meshName, this.scene)));\n      } else {\n        console.log(\"Loading mesh....\");\n        const assetsManager = new AssetsManager(this.scene);\n        const meshTask = assetsManager.addMeshTask(\"\", \"\", MESH_URL, meshName);\n        meshTask.onSuccess = task => {\n          console.log(\"Load Success\", meshName);\n          const mesh = task.loadedMeshes[0];\n          mesh.name = meshName;\n          meshCache.put(meshName, this.scene, mesh);\n        };\n        meshTask.onError = (task, message, exception) =>\n          rej({ message, exception });\n        assetsManager.onFinish = task => {\n          console.log(\"Load finish \");\n          re(mapFunction(meshCache.get(meshName, this.scene)));\n        };\n        assetsManager.load();\n      }\n    });\n\n  static getMeshUrl = src => `${MESH_URL}${src}`;\n}\n\nconst MESH_URL = `/static/meshes/`;\nexport default MeshLoader;\n","import Robot from \"../NodeItem/Robot\";\nimport Action from \"./Action\";\nimport { Maybe } from \"monet\";\nimport React from \"react\";\nimport PointCloud from \"../NodeItem/PointCloud\";\nimport { ACTIONS } from \"../MainView/MainViewActions\";\nimport MeshLoader from \"../Utils/MeshLoader\";\nimport { UndoManager } from \"mov-fe-lib-core\";\n\nclass RobotAction extends Action {\n  constructor(\n    robot,\n    robotAnimatorFactory = (robot, parentView) =>\n      Robot.getDefaultAnimator(parentView)\n  ) {\n    super();\n    this.key = `robotAction${robot.name}`;\n    this.name = robot.name;\n    this.robot = robot;\n    this.robotAnimatorFactory = robotAnimatorFactory;\n    this.icon = props => <i className=\"fas fa-robot\" {...props}></i>;\n  }\n\n  action = parentView => {\n    super.action(parentView);\n    // if robot already exists, do nothing\n    parentView\n      .getNodeFromTree(this.robot.name)\n      .orElseRun(() => this.addRobot(parentView));\n    parentView.setSelectedAction(ACTIONS().dragObjects);\n  };\n\n  addRobot(parentView) {\n    parentView.getSceneMemory().forEach(memory => {\n      const { scene } = memory;\n      const actionMemoryClone = { ...this.memory };\n      const isImport = actionMemoryClone[\"isImport\"];\n      if (isImport) this.loadRobot(scene, parentView, actionMemoryClone);\n      else {\n        parentView\n          .getUndoManager()\n          .doIt(this.getUndoAbleAction(parentView, scene, actionMemoryClone));\n      }\n    });\n    this.memory[\"isImport\"] = false;\n  }\n\n  getUndoAbleAction(parentView, scene, actionMemoryClone) {\n    return UndoManager.actionBuilder()\n      .doAction(() => {\n        this.loadRobot(scene, parentView, actionMemoryClone);\n      })\n      .undoAction(() => {\n        parentView.deleteNodeFromTreeUsingName(this.name);\n      })\n      .build();\n  }\n\n  loadRobot(scene, parentView, actionMemoryClone) {\n    MeshLoader.of(scene)\n      .load(Robot.ROBOT_MESH_NAME, mesh => Robot.transformMesh(mesh, scene))\n      .then(mesh =>\n        this.createRobotFromMesh(mesh, scene, parentView, actionMemoryClone)\n      );\n  }\n\n  createRobotFromMesh(mesh, scene, parentView, memory) {\n    const parentMesh = this.getParentMesh(parentView);\n    const isImport = Maybe.fromNull(memory.isImport).orSome(false);\n    const isVisible = Maybe.fromNull(memory.isVisible).orSome(true);\n    mesh.setEnabled(isVisible);\n\n    const robot = this.getRobot(scene, mesh, parentMesh);\n    robot.animate(this.robotAnimatorFactory(robot, parentView));\n    parentView.addNodeItem2Tree(robot, parentMesh.name, !isImport, isVisible);\n\n    const cloudPoint = this.getCloudPoint(scene, parentView, robot);\n    parentView.addNodeItem2Tree(cloudPoint, robot.name, false, isVisible);\n  }\n\n  getRobot = (scene, mesh, parentMesh) => {\n    const meshTree = Robot.createRobotMeshTree(\n      this.robot.robotTree,\n      mesh,\n      scene\n    );\n    const dict = Maybe.fromNull(this.memory[\"nodeItemDict\"]);\n    return Robot.builder()\n      .id(this.robot.id)\n      .name(Maybe.fromNull(this.memory[\"name\"]).orSome(this.robot.name))\n      .assetName(\n        Maybe.fromNull(this.memory[\"assetName\"]).orSome(this.robot.name)\n      )\n      .meshTree(meshTree)\n      .parentMesh(parentMesh)\n      .scene(scene)\n      .keyValueMap(dict.map(x => x.keyValueMap).orSome({}))\n      .build();\n  };\n\n  getCloudPoint = (scene, parentView, robot) => {\n    const cloudPoint = PointCloud.ofDict(\n      scene,\n      { name: this.robot.name, id: this.robot.id },\n      parentView\n    );\n    cloudPoint.mesh.parent = robot.mesh;\n    return cloudPoint;\n  };\n\n  getParentMesh = parentView => {\n    return Maybe.fromNull(this.memory[\"parentObj\"])\n      .map(parentObj => parentObj.parent)\n      .flatMap(parentName => parentView.getNodeFromTree(parentName))\n      .map(treeNode => treeNode.item.mesh)\n      .orSome(parentView.getRootNode().item.mesh);\n  };\n\n  getType = () => RobotAction.TYPE;\n\n  static TYPE = \"RobotAction\";\n}\n\nexport default RobotAction;\n","import AssetNodeItem from \"./AssetNodeItem\";\n\nclass Mesh extends AssetNodeItem {\n  constructor(mesh, assetName, keyValueMap = {}) {\n    super(mesh, assetName, keyValueMap);\n  }\n\n  toDict() {\n    let dict = super.toDict();\n    return dict;\n  }\n\n  toForm() {\n    const schema = super.toForm();\n    schema.jsonSchema.properties = {\n      oldName: schema.jsonSchema.properties.oldName,\n      name: schema.jsonSchema.properties.name,\n      type: schema.jsonSchema.properties.type,\n      assetName: {\n        type: \"string\",\n        title: \"Asset Name\"\n      },\n      position: schema.jsonSchema.properties.position,\n      quaternion: schema.jsonSchema.properties.quaternion,\n      color: schema.jsonSchema.properties.color,\n      annotations: schema.jsonSchema.properties.annotations\n    };\n    schema.uiSchema[\"assetName\"] = {\n      \"ui:disabled\": true\n    };\n    schema.data[\"assetName\"] = this.assetName;\n    return schema;\n  }\n\n  getMouseContextActions(mainView) {\n    return super\n      .getMouseContextActions(mainView)\n      .filter(x => x.title === \"Delete\");\n  }\n\n  getType = () => Mesh.TYPE;\n  static TYPE = \"Mesh\";\n}\n\nexport default Mesh;\n","import Action from \"./Action\";\nimport React from \"react\";\nimport { ACTIONS } from \"../MainView/MainViewActions\";\nimport MeshLoader from \"../Utils/MeshLoader\";\nimport { Maybe } from \"monet\";\nimport Mesh from \"../NodeItem/Mesh\";\nimport { Vector3, Quaternion, Color3, StandardMaterial } from \"@babylonjs/core\";\nimport { UndoManager } from \"mov-fe-lib-core\";\n\n//\nclass AddMeshAction extends Action {\n  constructor(mesh) {\n    super();\n    this.key = mesh.id;\n    this.name = mesh.name;\n    this.icon = props => <i {...props} className=\"fas fa-draw-polygon\"></i>;\n  }\n\n  action(parentView) {\n    super.action(parentView);\n    console.log(`Mesh ${this.key} : ${this.name}`, this.memory);\n    this.addMesh(parentView);\n    parentView.setSelectedAction(ACTIONS().dragObjects);\n  }\n\n  addMesh = parentView => {\n    parentView.getSceneMemory().forEach(memory => {\n      const { scene } = memory;\n      const actionMemoryClone = { ...this.memory };\n      const isImport = this.getIsImport(actionMemoryClone);\n      const finalName = this.getFinalNameFromMemory(\n        actionMemoryClone,\n        isImport\n      );\n      if (isImport) {\n        this.loadMesh(\n          parentView,\n          scene,\n          actionMemoryClone,\n          isImport,\n          finalName\n        );\n      } else {\n        parentView\n          .getUndoManager()\n          .doIt(\n            this.getUndoAbleAction(\n              parentView,\n              scene,\n              actionMemoryClone,\n              isImport,\n              finalName\n            )\n          );\n      }\n    });\n    this.memory[\"isImport\"] = false;\n  };\n\n  getIsImport(memory) {\n    return ofNull(memory[\"isImport\"]).orSome(false);\n  }\n\n  getFinalNameFromMemory(memory, isImport) {\n    return ofNull(memory[\"nodeItemDict\"])\n      .flatMap(d => (isImport ? some(d.name) : none()))\n      .orSome(`${this.name}${Math.floor(Math.random() * 100)}`);\n  }\n\n  getUndoAbleAction(parentView, scene, actionMemory, isImport, finalName) {\n    return UndoManager.actionBuilder()\n      .doAction(() => {\n        this.loadMesh(parentView, scene, actionMemory, isImport, finalName);\n      })\n      .undoAction(() => {\n        parentView.deleteNodeFromTreeUsingName(finalName);\n      })\n      .build();\n  }\n\n  loadMesh(parentView, scene, actionMemory, isImport, finalName) {\n    MeshLoader.of(scene)\n      .load(this.key)\n      .then(this.transformMesh(parentView, scene, actionMemory, isImport))\n      .then(this.addMesh2Scene(parentView, actionMemory, isImport, finalName));\n  }\n\n  transformMesh = (parentView, scene, actionMemory, isImport) => mesh => {\n    const parentMesh = this.getParentMesh(parentView);\n    mesh.parent = parentMesh;\n    mesh.createNormals();\n    const maybeDict = ofNull(actionMemory[\"nodeItemDict\"]);\n    mesh.position = maybeDict\n      .flatMap(d => (isImport ? some(d.position) : none()))\n      .map(Vector3.FromArray)\n      .orSome(Vector3.Zero());\n    mesh.rotationQuaternion = maybeDict\n      .flatMap(d => (isImport ? some(d.quaternion) : none()))\n      .map(\n        quaternion =>\n          new Quaternion(\n            quaternion[1],\n            quaternion[2],\n            quaternion[3],\n            quaternion[0]\n          )\n      )\n      .orSome(Quaternion.Identity());\n    const material = new StandardMaterial(`Mesh${mesh.name}`, scene);\n    const color = maybeDict\n      .flatMap(d => (isImport ? some(d.color) : none()))\n      .map(Color3.FromArray)\n      .orSome(Color3.Gray());\n    material.diffuseColor = color;\n    material.emissiveColor = color;\n    mesh.material = material;\n    return mesh;\n  };\n\n  addMesh2Scene = (parentView, actionMemory, isImport, finalName) => mesh => {\n    const parentMesh = this.getParentMesh(parentView);\n    mesh.name = finalName;\n    const meshItem = new Mesh(\n      mesh,\n      this.name,\n      ofNull(actionMemory[\"nodeItemDict\"])\n        .flatMap(x => (isImport ? some(x.keyValueMap) : none()))\n        .orSome({})\n    );\n\n    parentView.addNodeItem2Tree(meshItem, parentMesh.name, !isImport);\n    parentView.renderMenus();\n  };\n\n  getParentMesh = parentView => {\n    return ofNull(this.memory[\"parentObj\"])\n      .map(parentObj => parentObj.parent)\n      .flatMap(parentName => parentView.getNodeFromTree(parentName))\n      .map(treeNode => treeNode.item.mesh)\n      .orSome(parentView.getRootNode().item.mesh);\n  };\n\n  getType = () => AddMeshAction.TYPE;\n  static TYPE = \"AddMeshAction\";\n\n  deleteAsset = () => {};\n\n  download = async () => {\n    const downloadLinks = (\n      <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n          <div style={{ marginRight: \"5px\" }}>Mesh:</div>\n          <a href={MeshLoader.getMeshUrl(this.key)} download>\n            {this.key}\n          </a>\n        </div>\n      </div>\n    );\n  };\n}\n\nconst ofNull = Maybe.fromNull;\nconst none = Maybe.none;\nconst some = Maybe.some;\nexport default AddMeshAction;\n","import AddMapAction from \"../Actions/AddMapAction\";\nimport RobotAction from \"../Actions/RobotAction\";\nimport Robot from \"../NodeItem/Robot\";\nimport AddMeshAction from \"../Actions/AddMeshAction\";\n\nexport const ASSETS_TYPES = {\n  Map: \"Map\",\n  Robot: \"Robot\",\n  Mesh: \"Mesh\"\n};\n\nexport const AssetsTypesFactory = {\n  Map: map => new AddMapAction(map.name, map.loader),\n  Robot: robot => new RobotAction(robot, Robot.getSocketAnimator),\n  Mesh: mesh => new AddMeshAction(mesh)\n};\n","import NodeItem from \"./NodeItem\";\nimport Vec3 from \"../Math/Vec3\";\nimport { Maybe } from \"monet\";\nimport Util3d from \"../Util3d/Util3d\";\nimport Constants from \"../Utils/Constants\";\nimport { Vector3, Color3, Observable, StandardMaterial } from \"@babylonjs/core\";\n/**\n * Will be deprecated\n */\nclass Wall extends NodeItem {\n  constructor(mesh, localWall, size, keyPoints = {}, keyValueMap = {}) {\n    super(mesh, keyValueMap);\n    this.localWall = localWall;\n    this.size = size;\n    this.keyPoints = keyPoints;\n  }\n\n  toDict() {\n    const dict = super.toDict();\n    dict.localWall = this.localWall;\n    dict.size = this.size;\n    return dict;\n  }\n\n  ofDict(scene, dict = null, mainView = null) {\n    return Wall.ofDict(scene, dict, mainView);\n  }\n\n  getType = () => Wall.TYPE;\n\n  static TYPE = \"Wall\";\n\n  static ofDict(scene, dict = null, mainView = null) {\n    if (!dict) throw new Error(\"null dictionary describing wall\");\n    const name = Maybe.fromNull(dict.name).orSome(\n      `Wall${Math.floor(Math.random() * 1e3)}`\n    );\n    const mesh = createWallMesh(dict, name, scene);\n\n    const material = new StandardMaterial(`WallMaterial${name}`, scene);\n    const color = new Color3(dict.color[0], dict.color[1], dict.color[2]);\n    material.diffuseColor = color;\n    material.emissiveColor = color;\n    mesh.material = material;\n    // babylonjs highlight shader flickers when floor intersect\n    mesh.position.z += 1e-3;\n\n    const keypoints = createPlaceHolderKeyPoints(\n      scene,\n      dict.localWall.map(x => Vec3.of(x).toBabylon()),\n      mesh,\n      mainView\n    );\n    return new Wall(\n      mesh,\n      dict.localWall,\n      dict.size,\n      keypoints,\n      dict.keyValueMap\n    );\n  }\n}\n\nconst RADIUS = Constants.RADIUS;\nconst FACES = [\n  [0, 1, 2],\n  [2, 3, 0],\n  [4, 6, 5],\n  [6, 4, 7],\n  [0, 5, 1],\n  [5, 0, 4],\n  [3, 2, 6],\n  [6, 7, 3],\n  [1, 6, 2],\n  [6, 1, 5],\n  [0, 3, 7],\n  [7, 4, 0]\n];\n\nfunction createWallMesh(dict, name, scene) {\n  const centeredWall = dict.localWall.map(x => Vec3.of(x).toBabylon());\n  const middlePoint = Vec3.of(dict.position).toBabylon();\n  const tangent = centeredWall[1].subtract(centeredWall[0]).normalize();\n  const normal = new Vector3(-tangent.y, tangent.x, 0);\n  const shape = [\n    centeredWall[0].add(normal.scale(dict.size.width)),\n    centeredWall[0].subtract(normal.scale(dict.size.width)),\n    centeredWall[1].subtract(normal.scale(dict.size.width)),\n    centeredWall[1].add(normal.scale(dict.size.width))\n  ];\n  const h = new Vector3(0, 0, dict.size.height);\n  const wallMesh = {\n    positions: [\n      shape[0],\n      shape[1],\n      shape[2],\n      shape[3],\n      shape[0].add(h),\n      shape[1].add(h),\n      shape[2].add(h),\n      shape[3].add(h)\n    ],\n    faces: FACES\n  };\n  const mesh = Util3d.meshFromPositionAndFaces(\n    name,\n    scene,\n    wallMesh.positions,\n    wallMesh.faces\n  );\n  mesh.position = middlePoint;\n  return mesh;\n}\n\nfunction createNewMeshFromOldUsingNewPoints(newWall, scene, mesh, item) {\n  const average = Util3d.pointAverageVec3(\n    newWall.localWall.map(x => Vec3.of(x))\n  );\n  newWall.position = average.toArray();\n  newWall.localWall = newWall.localWall.map(x =>\n    Vec3.of(x).sub(average).toArray()\n  );\n\n  const newMesh = createWallMesh(newWall, mesh.name, scene);\n  newMesh.position = mesh.position;\n  newMesh.rotationQuaternion = mesh.rotationQuaternion;\n  newMesh.locallyTranslate(average.toBabylon());\n  newMesh.material = mesh.material;\n  newMesh.visibility = mesh.visibility;\n  newMesh.parent = mesh.parent;\n  newMesh.getMouseContextActions = mesh.getMouseContextActions;\n  newMesh.nodeItem = mesh.nodeItem;\n\n  item.mesh = newMesh;\n  item.localWall = newWall.localWall;\n\n  const childrenCopy = [...mesh._children];\n  childrenCopy.forEach(c => {\n    mesh.removeChild(c);\n    c.parent = newMesh;\n  });\n  item.keyPoints.forEach((k, j) => {\n    k.position = Vec3.of(newWall.localWall[j]).toBabylon();\n  });\n  // dispose old mesh\n  mesh.dispose();\n}\n\nconst getKeyPointObserverFunction = (mainView, scene) => {\n  return ({ updatedPointMesh, is2updateServer }) => {\n    mainView.getNodeFromTree(updatedPointMesh.parent.name).forEach(wallNode => {\n      const index = updatedPointMesh.index;\n      const item = wallNode.item;\n      const mesh = item.mesh;\n      let newWall = {\n        position: Vec3.ofBabylon(mesh.position).toArray(),\n        localWall: item.localWall,\n        size: item.size\n      };\n      newWall.localWall[index] = Vec3.ofBabylon(\n        updatedPointMesh.position\n      ).toArray();\n\n      createNewMeshFromOldUsingNewPoints(newWall, scene, mesh, item);\n\n      if (is2updateServer) {\n        mainView.updateNodeInServer(mesh.name);\n      }\n    });\n  };\n};\n\nconst createPlaceHolderKeyPoints = (scene, wall, wallMesh, mainView) => {\n  const keyPoints = [];\n  wall.forEach((p, i) => {\n    const keyPoint = Util3d.createSphere(\n      scene,\n      new Color3(0.25, 0.25, 0.25),\n      RADIUS,\n      `${wallMesh.name}keyPointWall${i}`,\n      true\n    );\n    keyPoint.parent = wallMesh;\n    keyPoint.position = p;\n    keyPoint.index = i;\n    keyPoint.observers = new Observable();\n    keyPoint.observers.add(getKeyPointObserverFunction(mainView, scene));\n    keyPoints.push(keyPoint);\n  });\n  return keyPoints;\n};\n\nexport default Wall;\n","import GlobalRef from \"../NodeItem/GlobalRef\";\nimport Box from \"../NodeItem/Box\";\nimport KeyPoint from \"../NodeItem/KeyPoint\";\nimport Path from \"../NodeItem/Path\";\nimport Wall from \"../NodeItem/Wall\";\nimport BoxRegion from \"../NodeItem/BoxRegion\";\nimport PolygonRegion from \"../NodeItem/PolygonRegion\";\nimport GraphItem from \"../NodeItem/GraphItem\";\n\nconst NODE_ITEM_FACTORY_MAP = {\n  GlobalRef: GlobalRef,\n  Box: Box,\n  KeyPoint: KeyPoint,\n  Path: Path,\n  Wall: Wall,\n  BoxRegion: BoxRegion,\n  PolygonRegion: PolygonRegion,\n  GraphItem: GraphItem\n};\n\nexport default NODE_ITEM_FACTORY_MAP;\n","import GlobalRef from \"../NodeItem/GlobalRef\";\nimport { Maybe } from \"monet\";\nimport { ASSETS_TYPES } from \"../Utils/AssetsTypesFactory\";\nimport NODE_ITEM_FACTORY_MAP from \"./NodeItemFactoryMap\";\n\nclass MainViewRetriever {\n  static importScene(\n    mainView,\n    serverScene = [],\n    parent = null,\n    is2addInServer = false\n  ) {\n    console.log(\"Importing scene...\", mainView, serverScene);\n    const errors = [];\n    if (serverScene.length > 0) {\n      importSceneRecursive(\n        mainView,\n        serverScene,\n        parent,\n        errors,\n        is2addInServer\n      );\n    } else {\n      importDefaultScene(mainView);\n    }\n    console.log(\"End Importing scene\");\n    return errors;\n  }\n\n  static importNodeItem(mainView, nodeDict, parent, is2addInServer = false) {\n    const nodeItemClass = NODE_ITEM_FACTORY_MAP[nodeDict.type]; //retrieve default export\n    if (nodeItemClass) {\n      mainView.getSceneMemory().forEach(({ scene }) => {\n        const nodeItem = nodeItemClass.ofDict(scene, nodeDict, mainView);\n        // pseudo lazy migration of isVisible prop\n        const isVisible =\n          nodeDict.isVisible === undefined ? true : nodeDict.isVisible;\n        nodeItem.mesh.setEnabled(isVisible);\n        mainView.getNodeFromTree(parent).forEach(treeNode => {\n          nodeItem.mesh.parent = treeNode.item.mesh;\n        });\n        mainView.addNodeItem2Tree(\n          nodeItem,\n          parent,\n          is2addInServer,\n          isVisible,\n          false\n        );\n      });\n    }\n  }\n}\n\nfunction isAsset(nodeDict) {\n  return nodeDict.type in ASSETS_TYPES;\n}\n\nfunction importAsset(mainView, nodeDict, parent, errors) {\n  const assetType = nodeDict.type;\n  const assetName = Maybe.fromNull(nodeDict.assetName).orSome(nodeDict.name);\n  const assetActionMap = mainView.getAssetsActionMap();\n  // legacy\n  const retrievedAction = Maybe.fromNull(assetActionMap[assetName]).orLazy(\n    () => assetActionMap[assetName.split(\".\")[0]]\n  );\n  if (!retrievedAction) {\n    errors.push({\n      cause: `Asset of type ${assetType} with name ${assetName}, was not found`,\n      solution: `please upload ${assetType} ${assetName}`\n    });\n    return;\n  }\n  retrievedAction.memory[\"parentObj\"] = { parent: parent };\n  retrievedAction.memory[\"nodeItemDict\"] = nodeDict;\n  retrievedAction.memory[\"assetName\"] = assetName;\n  retrievedAction.memory[\"name\"] = nodeDict.name;\n  retrievedAction.memory[\"isImport\"] = true;\n  retrievedAction.memory[\"isVisible\"] =\n    nodeDict.isVisible === undefined ? true : nodeDict.isVisible;\n  retrievedAction.action(mainView);\n}\n\nfunction importSceneRecursive(\n  mainView,\n  arrayTree,\n  parent = null,\n  errors = [],\n  is2addInServer = false\n) {\n  if (!arrayTree) return;\n  const sortArrayTree = arrayTree.sort((a, b) => {\n    // global ref is first\n    if (a.item.type === NODE_ITEM_FACTORY_MAP.GlobalRef.TYPE) return -1;\n    if (b.item.type === NODE_ITEM_FACTORY_MAP.GlobalRef.TYPE) return 1;\n    // graphItem is last\n    if (a.item.type === NODE_ITEM_FACTORY_MAP.GraphItem.TYPE) return 1;\n    if (b.item.type === NODE_ITEM_FACTORY_MAP.GraphItem.TYPE) return -1;\n    return a.name < b.name ? -1 : a.name > b.name ? 1 : 0;\n  });\n  sortArrayTree.forEach(node => {\n    if (isAsset(node.item)) {\n      importAsset(mainView, node.item, parent, errors);\n    } else {\n      MainViewRetriever.importNodeItem(\n        mainView,\n        node.item,\n        parent,\n        is2addInServer\n      );\n    }\n    if (node.children.length > 0) {\n      importSceneRecursive(\n        mainView,\n        node.children,\n        node.name,\n        errors,\n        is2addInServer\n      );\n    }\n  });\n}\n\nfunction importDefaultScene(mainView) {\n  mainView.getSceneMemory().forEach(({ scene }) => {\n    const send2server = true;\n    mainView.addNodeItem2Tree(GlobalRef.ofDict(scene), null, send2server);\n  });\n}\n\nexport default MainViewRetriever;\n","import { MasterDB } from \"mov-fe-lib-core\";\nimport Constants from \"./Constants\";\n\nclass SceneServerUtils {\n  static retrieveScene = (\n    sceneName,\n    successCallback = DEFAULT_SUCCESS,\n    failCallback = DEFAULT_FAILURE(\"retrieving scene\")\n  ) => {\n    MasterDB.cloudFunction(\n      Constants.CLOUD_FUNCTION_NAME,\n      \"retrieveScene\",\n      sceneName,\n      data => successFailIf(data, successCallback, failCallback)\n    );\n  };\n}\n\nconst DEFAULT_FAILURE = failureLocation => data => {\n  throw new Error(`Exception caught in ${failureLocation}: ${data.error}`);\n};\n\nconst DEFAULT_SUCCESS = data => {};\n\nconst successFailIf = (data, successCallback, failCallback) => {\n  if (data.success) {\n    successCallback(data);\n  } else {\n    failCallback(data);\n  }\n};\nexport default SceneServerUtils;\n","class TreeNode {\n  constructor(title, item, children, expanded, isVisible) {\n    this.title = title;\n    this.item = item;\n    this.children = children;\n    this.expanded = expanded;\n    this.isVisible = isVisible;\n  }\n\n  static dispose(node) {\n    /*\n     * function must be defined here, otherwise it wouldn't work on the UI Tree change method\n     */\n    node.item.dispose();\n    node.children.forEach(child => {\n      TreeNode.dispose(child);\n    });\n  }\n\n  /**\n   *\n   * @param {*} node\n   */\n  static toDict(node) {\n    /*\n     * function must be defined here, otherwise it wouldn't work on the UI Tree change method\n     */\n    return {\n      name: node.title,\n      item: node.item.toDict(),\n      children: node.children.map(child => TreeNode.toDict(child))\n    };\n  }\n\n  static builder() {\n    return new TreeNodeBuilder();\n  }\n}\n\nclass TreeNodeBuilder {\n  constructor() {\n    this._title = null;\n    this._item = {};\n    this._children = [];\n    this._expanded = false;\n    this._isVisible = true;\n  }\n\n  title(title) {\n    this._title = title;\n    return this;\n  }\n\n  item(item) {\n    this._item = item;\n    return this;\n  }\n\n  children(children) {\n    this._children = children;\n    return this;\n  }\n\n  expanded(expanded) {\n    this._expanded = expanded;\n    return this;\n  }\n\n  isVisible(isVisible) {\n    this._isVisible = isVisible;\n    return this;\n  }\n\n  build() {\n    Object.values(this).forEach(value => {\n      if (value === null)\n        throw new Error(\n          `There are missing variables to build a TreeNode, e.g ${value}`\n        );\n    });\n    return new TreeNode(\n      this._title,\n      this._item,\n      this._children,\n      this._expanded,\n      this._isVisible\n    );\n  }\n}\n\nexport default TreeNode;\n","import TreeObject from \"../TreeObject/TreeObject\";\nimport TreeNode from \"../TreeObject/TreeNode\";\nimport GlobalRef from \"../NodeItem/GlobalRef\";\nimport { MasterDB } from \"mov-fe-lib-core\";\nimport Constants from \"./Constants\";\n\nconst CLOUD_FUNCTION_NAME = Constants.CLOUD_FUNCTION_NAME;\n\nclass TreeServerUtils {\n  constructor(sceneName) {\n    this.sceneName = sceneName;\n  }\n\n  static ofScene(sceneName) {\n    return new TreeServerUtils(sceneName);\n  }\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                    Util functions                                    *\n   *                                                                                      */\n  //========================================================================================\n\n  getNodeFromTree = (name, objectTree) => {\n    return new TreeObject(objectTree).getNode(x => name === x.title);\n  };\n\n  getParentFromChild = (childName, objectTree) => {\n    return new TreeObject(objectTree).getParentNode(x => childName === x.title);\n  };\n\n  deleteNodeFromTreeUsingName = (name, objectTree, is2delInServer = true) => {\n    this.getNodeFromTree(name, objectTree).forEach(node => {\n      // destroy treeNode\n      TreeNode.dispose(node);\n\n      if (is2delInServer) {\n        this.deleteNodeInServer(name);\n      }\n\n      const maybeParent = this.getParentFromChild(name, objectTree);\n      maybeParent.forEach(parentNode => {\n        parentNode.children = parentNode.children.filter(x => x.title !== name);\n      });\n\n      objectTree = objectTree.filter(x => x.title !== name);\n    });\n    return objectTree;\n  };\n\n  getNodeFromTreeWithPredicate = (predicate, objectTree) => {\n    return new TreeObject(objectTree).getNode(predicate);\n  };\n\n  addNodeItem2Tree = (\n    objectTree,\n    nodeItem,\n    parentName = GlobalRef.NAME,\n    is2addInServer = true,\n    isVisible = true\n  ) => {\n    // delete if already exist\n    this.deleteNodeFromTreeUsingName(nodeItem.name, objectTree, is2addInServer);\n\n    const node2Add = TreeNode.builder()\n      .title(nodeItem.name)\n      .item(nodeItem)\n      .isVisible(isVisible)\n      .build();\n\n    if (parentName) {\n      const maybeParentNode = this.getNodeFromTree(parentName, objectTree);\n      maybeParentNode.forEach(parentNode => {\n        if (is2addInServer) this.addNodeItem2Server(node2Add, parentNode.title);\n        parentNode.children.push(node2Add);\n      });\n    } else {\n      objectTree.push(node2Add);\n      if (is2addInServer) this.addNodeItem2Server(node2Add, null);\n    }\n    return objectTree;\n  };\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                   Server functions                                   *\n   *                                                                                      */\n  //========================================================================================\n\n  updateNodeInServer = (name, objectTree, oldName = null) => {\n    console.log(\"updateNodeInServer!\", name, this.sceneName);\n    this.getNodeFromTree(name, objectTree).forEach(node => {\n      const parentName = this.getParentFromChild(name, objectTree)\n        .map(x => x.title)\n        .orNull();\n      MasterDB.cloudFunction(\n        CLOUD_FUNCTION_NAME,\n        \"updateNode\",\n        [TreeNode.toDict(node), parentName, oldName, this.sceneName],\n        data => {\n          console.log(\"Update node with success?\", data.success, data.error);\n        }\n      );\n    });\n  };\n\n  addNodeItem2Server = (treeNode, parentName) => {\n    MasterDB.cloudFunction(\n      CLOUD_FUNCTION_NAME,\n      \"addNodeItem\",\n      [TreeNode.toDict(treeNode), parentName, this.sceneName],\n      data => {\n        console.log(\"Add node with success?\", data.success);\n      }\n    );\n  };\n\n  deleteNodeInServer = name => {\n    MasterDB.cloudFunction(\n      CLOUD_FUNCTION_NAME,\n      \"deleteNodeByName\",\n      [name, this.sceneName],\n      data => {\n        console.log(\"Deleted node with success?\", data.success);\n      }\n    );\n  };\n}\n\nexport default TreeServerUtils;\n","export class Animator {\n  constructor(state, next, doWhile) {\n    this.state = state;\n    this.next = next;\n    this.while = doWhile;\n    this.requestAnimeId = null;\n  }\n\n  play() {\n    this.requestAnimeId = requestAnimationFrame(() => {\n      if (!this.while(this.state)) return this.stop();\n      this.state = this.next(this.state);\n      this.play();\n    });\n    return this;\n  }\n\n  stop() {\n    cancelAnimationFrame(this.requestAnimeId);\n    return this;\n  }\n\n  static builder() {\n    return new AnimatorBuilder();\n  }\n}\n\nclass AnimatorBuilder {\n  constructor() {\n    this._state = null;\n    this._next = null;\n    this._end = null;\n  }\n\n  initialState(state) {\n    this._state = state;\n    return this;\n  }\n\n  nextState(next) {\n    this._next = next;\n    return this;\n  }\n\n  while(end) {\n    this._end = end;\n    return this;\n  }\n\n  build() {\n    const someAreEmpty = [this._state, this._next, this._end].some(\n      x => x === null || x === undefined\n    );\n    if (someAreEmpty) throw new Error(\"Animator properties are missing\");\n    return new Animator(this._state, this._next, this._end);\n  }\n}\n","import { Vector3 } from \"@babylonjs/core\";\nimport Util3d from \"../Util3d/Util3d\";\nimport { Animator } from \"./Animator\";\n\nexport default class DefaultMouseEvents {\n  static onPointerDown = mainView => evt => {\n    mainView.mousePosClick = mainView\n      .getMouseCoordsFromRoot()\n      .orSome(Vector3.Zero());\n    mainView.mousePosMove = mainView.mousePosClick;\n    mainView.sceneMemory.forEach(({ camera, canvas }) => {\n      if (evt.buttons === 2 || evt.buttons === 4 || evt.ctrlKey) {\n        camera.detachControl(canvas);\n      }\n    });\n  };\n\n  static onPointerUp = mainView => evt => {\n    mainView.sceneMemory.forEach(({ camera, canvas }) => {\n      camera.attachControl(canvas, true);\n    });\n  };\n\n  static onPointerMove = mainView => evt => {\n    mainView.sceneMemory.forEach(({ mouseLocationText, camera }) => {\n      mainView.getMouseCoordsFromRoot().forEach(currentLocal => {\n        setMouseLocationTxt(mouseLocationText, currentLocal);\n        const panCamera = () => {\n          const v = currentLocal.subtract(mainView.mousePosMove);\n          const vBabylon = Util3d.getBabylonCoordinates(v).scale(-1);\n          animateCamera(camera, vBabylon);\n          mainView.mousePosMove = currentLocal;\n        };\n        const mouseButtonActions = [\n          { predicate: evt.ctrlKey && evt.buttons === 1, action: panCamera },\n          { predicate: evt.buttons === 4, action: panCamera }\n        ];\n        const filterActions = mouseButtonActions.filter(\n          ({ predicate }) => predicate\n        );\n        if (filterActions.length > 0) filterActions[0].action();\n      });\n    });\n  };\n}\n\nfunction animateCamera(camera, v) {\n  Animator.builder()\n    .initialState({\n      camera: camera,\n      time: 0,\n      T: new Date().getTime()\n    })\n    .nextState(s => {\n      const { camera, time } = s;\n      const dt = 0.1; //(new Date().getTime() - T) / 1000;\n      const vdt = v.scale(dt);\n      camera.position = camera.position.add(vdt);\n      camera.setTarget(camera.target.add(vdt));\n      return {\n        camera: camera,\n        time: time + dt,\n        T: new Date().getTime()\n      };\n    })\n    .while(s => s.time <= 1)\n    .build()\n    .play();\n}\n\nfunction setMouseLocationTxt(mouseLocationText, currentLocal) {\n  mouseLocationText.text = `x: ${currentLocal.x.toFixed(\n    2\n  )}, y: ${currentLocal.y.toFixed(2)}`;\n}\n","import React, { Component } from \"react\";\nimport BaseViewer from \"./BaseViewer/BaseViewer\";\nimport PropTypes from \"prop-types\";\nimport { HighlightLayer, Vector3 } from \"@babylonjs/core\";\nimport { Maybe } from \"monet\";\nimport MainViewRetriever from \"./MainView/MainViewRetriever\";\nimport DefaultScene from \"./Utils/DefaultScene\";\nimport GlobalRef from \"./NodeItem/GlobalRef\";\nimport SceneServerUtils from \"./Utils/SceneServerUtils\";\nimport TreeServerUtils from \"./Utils/TreeServerUtils\";\nimport AssetsManager from \"./AssetsManager/AssetsManager\";\nimport TreeObject from \"./TreeObject/TreeObject\";\nimport GraphItem from \"./NodeItem/GraphItem\";\nimport DefaultMouseEvents from \"./Utils/DefaultMouseEvents\";\nimport Util3d from \"./Util3d/Util3d\";\nimport Vec3 from \"./Math/Vec3\";\nimport ReactResizeDetector from \"react-resize-detector\";\nimport ConfirmAlertModal from \"../Modal/ConfirmAlertModal\";\nimport { UndoManager } from \"mov-fe-lib-core\";\n\n//========================================================================================\n/*                                                                                      *\n *                                      SceneViewer                                     *\n *                                                                                      */\n//========================================================================================\n\nclass SceneViewer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { errorList: [] };\n    this.sceneName = props.sceneName.Value;\n    this.sceneMemory = Maybe.none();\n    this.objectTree = [];\n    this.undoManager = new UndoManager();\n    // camera properties\n    this.isPanned = false;\n    this.isRotated = false;\n    this.targetPos = undefined;\n    this.cameraSpeed = Vector3.Zero();\n    this.time = new Date().getTime() * 1e-3;\n  }\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                   Getters & Setters                                  *\n   *                                                                                      */\n  //========================================================================================\n\n  getSceneMemory = () => this.sceneMemory;\n\n  getAssetsActionMap = () => AssetsManager.getInstance().getAssetsActionMap();\n\n  getRootNode = (tree = [...this.objectTree]) => {\n    return tree.filter(x => x.title === GlobalRef.NAME)[0];\n  };\n\n  getObjectTree = () => this.objectTree;\n\n  setSelectedAction = () => {\n    /* empty */\n  };\n\n  getGraph() {\n    return new TreeObject(this.objectTree).getNode(\n      x => GraphItem.TYPE === x.item.getType()\n    );\n  }\n\n  getUndoManager = () => this.undoManager;\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                    Utils functions                                   *\n   *                                                                                      */\n  //========================================================================================\n\n  getNodeFromTree = (name, objectTree = [...this.objectTree]) => {\n    return TreeServerUtils.ofScene(this.sceneName).getNodeFromTree(\n      name,\n      objectTree\n    );\n  };\n\n  deleteNodeFromTreeUsingName = () => {\n    throw new Error(\"Delete Node in viewer Exception\");\n  };\n\n  updateNodeInServer = (name, oldName = null) => {\n    TreeServerUtils.ofScene(this.sceneName).updateNodeInServer(\n      name,\n      [...this.objectTree],\n      oldName\n    );\n  };\n\n  addNodeItem2Tree = (\n    nodeItem,\n    parentName = GlobalRef.NAME,\n    is2addInServer = true,\n    isVisible = true\n  ) => {\n    const newObjectTree = TreeServerUtils.ofScene(\n      this.sceneName\n    ).addNodeItem2Tree(\n      [...this.objectTree],\n      nodeItem,\n      parentName,\n      is2addInServer,\n      isVisible\n    );\n    this.objectTree = newObjectTree;\n  };\n\n  setCameraToTarget = () => {\n    this.sceneMemory.forEach(({ camera }) => {\n      const focusObject = this.isPanned ? \"\" : this.props.focusObject.Value;\n      this.getNodeFromTree(focusObject).forEach(\n        x => {\n          console.log(\"Set Camera, Found Object\", x.item.mesh);\n          const dt = new Date().getTime() * 1e-3 - this.time;\n          this.time = new Date().getTime() * 1e-3;\n          const pos = x.item.mesh._absolutePosition.clone();\n          this.cameraSpeed = !this.targetPos ? Vector3.Zero() : pos.subtract(this.targetPos);\n          this.targetPos = pos;  \n          camera.setTarget(pos);\n          camera.position = camera.position.add(this.cameraSpeed.scale(dt))\n          camera.beta = this.isRotated ? camera.beta : 0;\n          // move target object for debug\n          // const p = x.item.mesh.position;\n          // x.item.mesh.position = p.add(new Vector3(p.x, p.y, 0).scale(1e-2)); \n        }\n      );\n    });\n  };\n\n  addCanvasEventListeners(canvas) {\n    const events = [\n      {\n        name: \"pointerdown\",\n        function: evt => this.onPointerDown(evt)\n      },\n      { name: \"pointerup\", function: evt => this.onPointerUp(evt) },\n      {\n        name: \"pointermove\",\n        function: evt => this.onPointerMove(evt)\n      }\n    ];\n    events.forEach(event =>\n      canvas.addEventListener(event.name, event.function, false)\n    );\n  }\n\n  onPointerDown = evt => {\n    this.isRotated = true;\n    DefaultMouseEvents.onPointerDown(this)(evt);\n  };\n\n  onPointerUp = evt => {\n    DefaultMouseEvents.onPointerUp(this)(evt);\n  };\n\n  onPointerMove = evt => {\n    if(evt.buttons === 4) this.isPanned = true;\n    DefaultMouseEvents.onPointerMove(this)(evt);\n  };\n\n  getMouseCoordsFromRoot() {\n    return this.sceneMemory.flatMap(({ scene, ground }) => {\n      const maybeCurrent = Util3d.getGroundPosition(scene, ground);\n      return maybeCurrent.flatMap(current =>\n        Maybe.fromNull(this.getRootNode()).map(rootNode =>\n          Util3d.getLocalCoordFromWorld(\n            rootNode.item.mesh,\n            Vec3.ofBabylon(current)\n          ).toBabylon()\n        )\n      );\n    });\n  }\n\n  onResize = (w, h) => {\n    if (w === 0 && h === 0) return;\n    this.getSceneMemory().forEach(({ mouseLocationText }) => {\n      mouseLocationText.left = -w / 2 + w / 17;\n      mouseLocationText.top = -h / 2 + h / 30;\n    });\n  };\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                    Scene functions                                   *\n   *                                                                                      */\n  //========================================================================================\n\n  retrieveSceneFromServer = (afterLoading = () => {}) => {\n    SceneServerUtils.retrieveScene(this.sceneName, data => {\n      const errorList = MainViewRetriever.importScene(this, data.result);\n      this.setState({ errorList });\n      afterLoading();\n    });\n  };\n\n  loadAssets = async () => {\n    const assetManager = AssetsManager.getInstance();\n    if (Object.values(assetManager.getAssets()).length === 0) {\n      await assetManager.load();\n    }\n  };\n\n  loadScene = async () => {\n    await this.loadAssets();\n    this.retrieveSceneFromServer(this.renderScene);\n  };\n\n  renderScene = () => {\n    this.getSceneMemory().forEach(({ engine, scene }) =>\n      engine.runRenderLoop(() => {\n        this.time = new Date().getTime() * 1e-3;\n        scene.render()\n        this.setCameraToTarget();\n      })\n    );\n  };\n\n  onSceneReady = scene => {\n    const engine = scene.getEngine();\n    const canvas = engine.getRenderingCanvas();\n    this.addCanvasEventListeners(canvas);\n    const mouseLocationText = DefaultScene.createMouseLocationText(scene);\n    this.sceneMemory = Maybe.some({\n      engine: engine,\n      canvas: canvas,\n      scene: scene,\n      camera: DefaultScene.createCamera(scene, canvas),\n      light: DefaultScene.createLight(scene),\n      ground: DefaultScene.createMeshGround(scene),\n      gizmoManager: DefaultScene.createGizmo(scene),\n      highlightLayer: {\n        layer: new HighlightLayer(\"hl1\", scene),\n        lastHlMeshes: []\n      },\n      mouseLocationText: mouseLocationText\n    });\n    return scene;\n  };\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                   Render functions                                   *\n   *                                                                                      */\n  //========================================================================================\n\n  renderMenus = () => {\n    // to implement interface of MainView\n  };\n\n  componentDidUpdate = prevProps => {\n    const predicateAction = [\n      {\n        propVar: x => x.sceneName.Value,\n        action: () => (this.sceneName = this.props.sceneName.Value)\n      },\n      {\n        propVar: x => x.focusObject.Value,\n        action:() => {\n          this.isPanned = false;\n          this.isRotated = false;\n          this.setCameraToTarget()\n        } \n      }\n    ];\n    predicateAction.forEach(({ propVar, action }) => {\n      if (propVar(this.props) !== propVar(prevProps)) {\n        action();\n      }\n    });\n  };\n\n  componentDidMount = () => {\n    console.log(\"SceneViewer Did Mount!! \");\n    this.loadScene();\n  };\n\n  render() {\n    const { errorList } = this.state;\n    const resetErrorList = () => this.setState({ errorList: [] });\n    return (\n      <div style={{ display: \"flex\", flexGrow: 1, maxHeight: \"100%\" }}>\n        <BaseViewer\n          onSceneReady={this.onSceneReady}\n          is2render={false}\n          sceneFactory={DefaultScene.createScene}\n        />\n        <ConfirmAlertModal\n          onSubmit={resetErrorList}\n          onCancel={resetErrorList}\n          open={errorList?.length > 0}\n          title={\"Scene Viewer\"}\n          message={\"An error occurred while loading the scene\"}\n          submitText={\"OK\"}\n          submitColor={\"primary\"}\n          cancelText={\"Cancel\"}\n          cancelColor={\"secondary\"}\n        >\n          {getErrorSolutionList(errorList)}\n        </ConfirmAlertModal>\n        <ReactResizeDetector\n          handleWidth\n          handleHeight\n          onResize={this.onResize}\n        />\n      </div>\n    );\n  }\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                   Static functions                                   *\n   *                                                                                      */\n  //========================================================================================\n\n  static getComponentFactory(sceneName) {\n    return masterProps => {\n      const augmentProps = {\n        sceneName,\n        ...masterProps\n      };\n      return <SceneViewer {...augmentProps} />;\n    };\n  }\n\n  static EXTENSION = \".3d\";\n}\n\nSceneViewer.propTypes = {\n  sceneName: PropTypes.shape({ Value: PropTypes.string }),\n  focusObject: PropTypes.shape({ Value: PropTypes.string })\n};\n\nSceneViewer.defaultProps = {\n  sceneName: { Value: \"Pedro\" },\n  focusObject: { Value: \"\" }\n};\n\nfunction getErrorSolutionList(errorList) {\n  return !errorList ? (\n    []\n  ) : (\n    <ul>\n      {errorList.map(({ cause, solution }, i) => {\n        return <li key={\"error\" + i}>{`${cause}, ${solution}`}</li>;\n      })}\n    </ul>\n  );\n}\n\nexport default SceneViewer;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport MaterialSelect from \"@material-ui/core/Select\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  }\n}));\n\nconst Select = props => {\n  const classes = useStyles();\n\n  let noneOption = <div></div>;\n  if (props.noneOption) {\n    noneOption = (\n      <MenuItem value=\"\">\n        <em>None</em>\n      </MenuItem>\n    );\n  }\n\n  return (\n    <FormControl\n      variant={props.variant}\n      className={classes.formControl}\n      style={props.style}\n      hiddenLabel={props.label === undefined ? true : false}\n    >\n      <InputLabel id=\"movai-react-select\">{props.label}</InputLabel>\n      <MaterialSelect\n        labelId=\"movai-react-select\"\n        id={props.id}\n        value={props.value}\n        onChange={props.onChange}\n        inputProps={props.inputProps}\n      >\n        {noneOption}\n        {props.options.map((element, index) => {\n          return (\n            <MenuItem key={index} value={element}>\n              {element}\n            </MenuItem>\n          );\n        })}\n      </MaterialSelect>\n    </FormControl>\n  );\n};\n\nSelect.propTypes = {\n  value: PropTypes.string,\n  options: PropTypes.array,\n  noneOption: PropTypes.bool,\n  label: PropTypes.string,\n  variant: PropTypes.string,\n  style: PropTypes.object,\n  onChange: PropTypes.func,\n  id: PropTypes.string,\n  inputProps: PropTypes.object\n};\nSelect.defaultProps = {\n  value: \"option2\",\n  options: [\"option1\", \"option2\", \"option3\"],\n  variant: \"filled\",\n  noneOption: true,\n  onChange: evt => console.log(evt.target.value),\n  id: \"movai-react-select\"\n};\n\nexport default Select;\n","// import * as React from \"react\";\n// import SvgIcon from \"@material-ui/core/SvgIcon\";\n\n// export default function createSvgIcon({\n//   path = \"\",\n//   style = {},\n//   fill = \"#fff\",\n//   width = \"100%\",\n//   className = \"\",\n//   height = \"100%\",\n//   viewBox = \"0 0 32 32\"\n// }) {\n//   return (\n//     <svg\n//       width={width}\n//       style={style}\n//       height={height}\n//       viewBox={viewBox}\n//       className={className}\n//       xmlns=\"http://www.w3.org/2000/svg\"\n//       xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n//     >\n//       <path d={path} fill={fill} />\n//     </svg>\n//   );\n// }\n\n// export default function createSvgIcon(path, displayName) {\n//   const Component = React.memo(\n//     React.forwardRef((props, ref) => (\n//       <SvgIcon data-mui-test={`${displayName}Icon`} ref={ref} {...props}>\n//         {path}\n//       </SvgIcon>\n//       <SvgIcon>\n//         {path}\n//       </SvgIcon>\n//     ))\n//   );\n\n//   if (process.env.NODE_ENV !== \"production\") {\n//     Component.displayName = `${displayName}Icon`;\n//   }\n\n//   Component.muiName = SvgIcon.muiName;\n\n//   return Component;\n// }\n\nimport React from \"react\";\n\nconst CreateSVGIcon = ({\n  path = \"\",\n  style = {},\n  fill = \"#fff\",\n  width = \"100%\",\n  height = \"100%\",\n  className = \"\",\n  viewBox = \"0 0 24 24\"\n}) => (\n  <svg\n    width={width}\n    style={style}\n    height={height}\n    viewBox={viewBox}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className={`svg-icon ${className || \"\"}`}\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n  >\n    <path fill={fill} d={path} />\n  </svg>\n);\n\nexport default CreateSVGIcon;\n","import React from \"react\";\nimport CreateSVGIcon from \"./CreateSVGIcon\";\n\nexport const svgIcons = {\n  Close: (\n    <CreateSVGIcon\n      width={24}\n      path=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n    />\n  ),\n  ErrorOutline: (\n    <CreateSVGIcon\n      width={24}\n      path=\"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n    ></CreateSVGIcon>\n  ),\n  InfoOutlined: (\n    <CreateSVGIcon\n      width={24}\n      path=\"M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z\"\n    ></CreateSVGIcon>\n  ),\n  ReportProblemOutlined: (\n    <CreateSVGIcon\n      width={24}\n      path=\"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z\"\n    ></CreateSVGIcon>\n  ),\n  SuccessOutlined: (\n    <CreateSVGIcon\n      width={24}\n      path=\"M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z\"\n    ></CreateSVGIcon>\n  )\n};\n","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { capitalize } from \"@material-ui/core/utils\";\nimport { svgIcons } from \"./svg-icons/svgIcons\";\n\nexport const styles = () => {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      // borderRadius: theme.shape.borderRadius,\n      backgroundColor: \"transparent\",\n      display: \"flex\",\n      padding: \"6px 16px\"\n    },\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"success\"`. */\n    filledSuccess: {\n      color: \"#fff\",\n      // fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: \"#4caf50\"\n    },\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"info\"`. */\n    filledInfo: {\n      color: \"#fff\",\n      // fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: \"#2196f3\"\n    },\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"warning\"`. */\n    filledWarning: {\n      color: \"#fff\",\n      // fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: \"#ff9800\"\n    },\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"error\"`. */\n    filledError: {\n      color: \"#fff\",\n      // fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: \"#f44336\"\n    },\n    /* Styles applied to the icon wrapper element. */\n    icon: {\n      marginRight: 12,\n      padding: \"7px 0\",\n      display: \"flex\",\n      fontSize: 22,\n      opacity: 0.9\n    },\n    /* Styles applied to the message wrapper element. */\n    message: {\n      padding: \"8px 0\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\"\n    },\n    /* Styles applied to the action wrapper element if `action` is provided. */\n    action: {\n      display: \"flex\",\n      alignItems: \"center\",\n      marginLeft: \"auto\",\n      paddingLeft: 16,\n      marginRight: -8\n    }\n  };\n};\n\nconst defaultIconMapping = {\n  success: svgIcons.SuccessOutlined,\n  warning: svgIcons.ReportProblemOutlined,\n  error: svgIcons.ErrorOutline,\n  info: svgIcons.InfoOutlined\n};\n\nconst Alert = props => {\n  const {\n    action,\n    children,\n    classes,\n    className,\n    closeText = \"Close\",\n    color,\n    icon,\n    iconMapping = defaultIconMapping,\n    onClose,\n    role = \"alert\",\n    severity = \"success\",\n    variant = \"standard\",\n    theme,\n    ...other\n  } = props;\n\n  return (\n    <div\n      className={clsx(\n        classes.root,\n        classes[`${variant}${capitalize(color || severity)}`],\n        className\n      )}\n      {...other}\n    >\n      {icon !== false ? (\n        <div className={classes.icon}>\n          {icon || iconMapping[severity] || defaultIconMapping[severity]}\n        </div>\n      ) : null}\n      <div className={classes.message}>{children}</div>\n      {action != null ? <div className={classes.action}>{action}</div> : null}\n      {action == null && onClose ? (\n        <div className={classes.action}>\n          <IconButton\n            size=\"small\"\n            aria-label={closeText}\n            title={closeText}\n            color=\"inherit\"\n            onClick={onClose}\n          >\n            {svgIcons.Close}\n          </IconButton>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nAlert.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The action to display. It renders after the message, at the end of the alert.\n   */\n  action: PropTypes.node,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Override the default label for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  closeText: PropTypes.string,\n  /**\n   * The main color for the alert. Unless provided, the value is taken from the `severity` prop.\n   */\n  color: PropTypes.oneOf([\"error\", \"info\", \"success\", \"warning\"]),\n  /**\n   * Override the icon displayed before the children.\n   * Unless provided, the icon is mapped to the value of the `severity` prop.\n   */\n  icon: PropTypes.node,\n  /**\n   * The component maps the `severity` prop to a range of different icons,\n   * for instance success to `<SuccessOutlined>`.\n   * If you wish to change this mapping, you can provide your own.\n   * Alternatively, you can use the `icon` prop to override the icon displayed.\n   */\n  iconMapping: PropTypes.shape({\n    error: PropTypes.node,\n    info: PropTypes.node,\n    success: PropTypes.node,\n    warning: PropTypes.node\n  }),\n  /**\n   * Callback fired when the component requests to be closed.\n   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n  /**\n   * The ARIA role attribute of the element.\n   */\n  role: PropTypes.string,\n  /**\n   * The severity of the alert. This defines the color and icon used.\n   */\n  severity: PropTypes.oneOf([\"error\", \"info\", \"success\", \"warning\"]),\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf([\"filled\", \"outlined\", \"standard\"])\n};\n\nexport default withStyles(styles, { name: \"MuiAlert\" })(Alert);\n","// Inspired from https://github.com/GA-MO/react-confirm-alert\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { render, unmountComponentAtNode } from \"react-dom\";\n// import { Alert } from \"@material-ui/lab\";\nimport Alert from \"./Alert/Alert\";\n\nimport \"./Snackbar.css\";\n\nimport { svgIcons } from \"./Alert/svg-icons/svgIcons\";\n\nclass ReactConfirmAlert extends Component {\n  static propTypes = {\n    message: PropTypes.string,\n    customUI: PropTypes.func,\n    closeOnClickOutside: PropTypes.bool,\n    closeOnEscape: PropTypes.bool,\n    willUnmount: PropTypes.func,\n    onClickOutside: PropTypes.func,\n    onKeypressEscape: PropTypes.func,\n    // new props\n    severity: PropTypes.string,\n    closeText: PropTypes.string,\n    autoHideDuration: PropTypes.number,\n    closable: PropTypes.bool\n  };\n\n  autoClose = null;\n\n  static defaultProps = {\n    closeOnClickOutside: true,\n    closeOnEscape: true,\n    willUnmount: () => null,\n    onClickOutside: () => null,\n    onKeypressEscape: () => null,\n    // new props\n    severity: \"info\", // error, warning, info or success\n    closeText: \"Close\",\n    autoHideDuration: 6000,\n    closable: true\n  };\n\n  handleClickButton = button => {\n    if (button.onClick) button.onClick();\n    this.close();\n  };\n\n  handleClickOverlay = e => {\n    const { closeOnClickOutside, onClickOutside } = this.props;\n    const isClickOutside = e.target === this.overlay;\n\n    if (closeOnClickOutside && isClickOutside) {\n      onClickOutside();\n      this.close();\n    }\n  };\n\n  close = () => {\n    removeBodyClass();\n    removeElementReconfirm();\n  };\n\n  keyboardClose = event => {\n    const { closeOnEscape, onKeypressEscape } = this.props;\n    const isKeyCodeEscape = event.keyCode === 27;\n\n    if (closeOnEscape && isKeyCodeEscape) {\n      onKeypressEscape(event);\n      this.close();\n    }\n  };\n\n  componentDidMount = () => {\n    document.addEventListener(\"keydown\", this.keyboardClose, false);\n    this.autoClose = setTimeout(() => {\n      if (\n        document.getElementById(\"react-confirm-alert\") ||\n        document.getElementById(\"react-confirm-alert-body-element\")\n      ) {\n        this.close();\n      }\n    }, this.props.autoHideDuration);\n  };\n\n  componentWillUnmount = () => {\n    document.removeEventListener(\"keydown\", this.keyboardClose, false);\n    clearTimeout(this.autoClose);\n    this.props.willUnmount();\n  };\n\n  renderCustomUI = () => {\n    const { title, message, customUI } = this.props;\n    const dataCustomUI = {\n      title,\n      message,\n      onClose: this.close\n    };\n\n    return customUI(dataCustomUI);\n  };\n\n  render() {\n    const {\n      message,\n      customUI,\n      severity,\n      closeText,\n      closable,\n      theme\n    } = this.props;\n\n    return (\n      <div\n        className=\"react-confirm-alert-overlay\"\n        ref={dom => (this.overlay = dom)}\n        onClick={this.handleClickOverlay}\n      >\n        <div className=\"react-confirm-alert\">\n          {customUI ? (\n            this.renderCustomUI()\n          ) : (\n            <div className=\"react-confirm-alert-body\">\n              <Alert\n                theme={theme}\n                elevation={6}\n                variant=\"filled\"\n                severity={severity}\n                closeText={closeText}\n                action={\n                  closable ? (\n                    <div\n                      className=\"icon-container\"\n                      onClick={() => this.close()}\n                    >\n                      {svgIcons.Close}\n                    </div>\n                  ) : (\n                    undefined\n                  )\n                }\n              >\n                {message}\n              </Alert>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction createElementReconfirm(properties, theme) {\n  let divTarget = document.getElementById(\"react-confirm-alert\");\n  if (divTarget) {\n    // Rerender - the mounted ReactConfirmAlert\n    render(<ReactConfirmAlert {...properties} theme={theme} />, divTarget);\n  } else {\n    // Mount the ReactConfirmAlert component\n    document.body.children[0].classList.add(\"react-confirm-alert-blur\");\n    divTarget = document.createElement(\"div\");\n    divTarget.id = \"react-confirm-alert\";\n    document.body.appendChild(divTarget);\n    render(<ReactConfirmAlert {...properties} theme={theme} />, divTarget);\n  }\n}\n\nfunction removeElementReconfirm() {\n  const target = document.getElementById(\"react-confirm-alert\");\n  unmountComponentAtNode(target);\n  target.parentNode.removeChild(target);\n}\n\nfunction addBodyClass() {\n  document.body.classList.add(\"react-confirm-alert-body-element\");\n}\n\nfunction removeBodyClass() {\n  document.body.classList.remove(\"react-confirm-alert-body-element\");\n}\n\nexport function snackbar(properties, theme) {\n  addBodyClass();\n  createElementReconfirm(properties, theme);\n}\n\nexport default ReactConfirmAlert;\n","import { createMuiTheme } from \"@material-ui/core/styles\";\nimport \"fontsource-roboto\";\nimport \"fontsource-open-sans\";\n\nconst themeFactory = particular => ({\n  ...particular,\n  typography: {\n    fontFamily: \"Open Sans\",\n    h1: {\n      fontFamily: \"Open Sans\"\n    },\n    h2: {\n      fontFamily: \"Open Sans\"\n    },\n    h3: {\n      fontFamily: \"Open Sans\"\n    },\n    h4: {\n      fontFamily: \"Open Sans\"\n    },\n    h5: {\n      fontFamily: \"Open Sans\"\n    },\n    h6: {\n      fontFamily: \"Open Sans\"\n    },\n    body1: {\n      fontFamily: \"Roboto\"\n    }\n  },\n  cursorDefault: {\n    cursor: \"default\"\n  },\n  cursorPointer: {\n    cursor: \"pointer\"\n  }\n});\n\nconst Themes = {\n  dark: createMuiTheme(\n    themeFactory({\n      label: \"dark\",\n      backgroundColor:\n        \"linear-gradient(114.01deg, #212121 0%, #050505 100.43%)\",\n      bottomNavigation: { background: \"#212121\" },\n      globalStats: {\n        borderColor: \"#474747\",\n        subTextColor: \"#CDCDCD\",\n        upperTextColor: \"#E6E6E6\"\n      },\n      palette: {\n        type: \"dark\", // Switching the dark mode on, is a single property value change.\n        primary: {\n          main: \"#36b5e6\"\n        },\n        secondary: {\n          main: \"#CF6679\"\n        },\n        green: {\n          main: \"#03DAC5\"\n        }\n      },\n      overrides: {\n        MuiButton: {\n          outlined: {\n            margin: \"8px\"\n          },\n          text: {\n            margin: \"8px\"\n          },\n          contained: {\n            margin: \"8px\"\n          },\n          containedPrimary: {\n            color: \"inherit\",\n            margin: \"8px\"\n          },\n          containedSecondary: {\n            color: \"inherit\",\n            margin: \"8px\"\n          }\n        },\n        MuiButtonGroup: {\n          root: {\n            margin: \"0\"\n          },\n          groupedContainedPrimary: {\n            margin: \"0\"\n          },\n          groupedOutlined: {\n            margin: \"0\"\n          },\n          groupedText: {\n            margin: \"0\"\n          }\n        },\n        MuiIconButton: {\n          root: {\n            color: \"#36b5e6\"\n          }\n        },\n        MuiListItem: {\n          button: {\n            \"&:hover\": {\n              backgroundColor: \"rgba(54,181,230, 0.15)\"\n            }\n          }\n        },\n        MuiFormControlLabel: {\n          label: {\n            color: \"rgba(255,255,255,0.8)\"\n          }\n        },\n        MuiInputBase: {\n          input: {\n            font: \"Roboto\"\n          }\n        },\n        MuiFilledInput: {\n          root: {\n            border: \"4px\"\n          },\n          underline: {\n            \"&::before\": {\n              borderRadius: \"4px\"\n            }\n          }\n        }\n      }\n    })\n  ),\n  light: createMuiTheme(\n    themeFactory({\n      font: {\n        Roboto: {\n          fontFamily: \"Roboto\"\n        },\n        OpenSans: {\n          fontFamily: \"Open Sans\"\n        }\n      },\n      label: \"light\",\n      backgroundColor:\n        \"linear-gradient(122.19deg, #FFFFFF 2.58%, #FFFFFF 76.23%)\", // it was white before\n      bottomNavigation: { background: \"#c3c3c3\" },\n      globalStats: {\n        borderColor: \"#E6E6E6\",\n        subTextColor: \"#717171\",\n        upperTextColor: \"#474747\"\n      },\n      palette: {\n        primary: {\n          main: \"#007197\"\n        },\n        secondary: {\n          main: \"#BE2424\"\n        },\n        green: {\n          main: \"#03DAC5\"\n        }\n      },\n      overrides: {\n        MuiButton: {\n          outlined: {\n            margin: \"8px\"\n          },\n          text: {\n            margin: \"8px\"\n          },\n          contained: {\n            margin: \"8px\"\n          },\n          containedPrimary: {\n            color: \"white\",\n            margin: \"8px\"\n          },\n          containedSecondary: {\n            color: \"white\",\n            margin: \"8px\"\n          }\n        },\n        MuiButtonGroup: {\n          root: {\n            margin: \"0\"\n          },\n          groupedContainedPrimary: {\n            margin: \"0\"\n          },\n          groupedOutlined: {\n            margin: \"0\"\n          },\n          groupedText: {\n            margin: \"0\"\n          }\n        },\n        MuiIconButton: {\n          root: {\n            color: \"#007197\"\n          }\n        },\n        MuiListItem: {\n          button: {\n            \"&:hover\": {\n              backgroundColor: \"rgba(0,113,151, 0.15)\"\n            }\n          }\n        },\n        MuiFormControlLabel: {\n          label: {\n            color: \"rgba(0,0,0,0.8)\"\n          }\n        },\n        MuiInputBase: {\n          input: {\n            font: \"Roboto\"\n          }\n        },\n        MuiFilledInput: {\n          root: {\n            border: \"4px\"\n          },\n          underline: {\n            \"&::before\": {\n              borderRadius: \"4px\"\n            }\n          }\n        }\n      }\n    })\n  )\n};\n\nThemes.getTheme = () => {\n  const theme = window.localStorage.getItem(\"movai.theme\"); // dark or light\n  return theme ? theme : \"dark\";\n};\n\nThemes.setTheme = value => {\n  window.localStorage.setItem(\"movai.theme\", value);\n};\n\nexport default Themes;\n","import { createGlobalStyle } from \"styled-components\";\nimport { Style as S } from \"mov-fe-lib-core\";\n\nconst Style = createGlobalStyle`${S}`;\nexport default Style;\n","import React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Menu from \"@material-ui/core/Menu\";\nimport { Typography } from \"@material-ui/core\";\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PropTypes from \"prop-types\";\n\nconst styles = theme => ({\n  button: {\n    margin: theme.spacing(1),\n    color: theme.palette.primary.main,\n    borderColor: theme.palette.primary.main\n  },\n  iconActive: {\n    color: theme.palette.primary.main,\n    borderColor: theme.palette.primary.main,\n    backgroundColor: fade(theme.palette.primary.main, 0.1)\n  },\n  buttonApplyFilters: {\n    background: theme.palette.primary.main,\n    fontFamily: \"Roboto\",\n    fontStyle: \"normal\",\n    fontWeight: \"bold\",\n    fontSize: \"14px\",\n    color: \"#FAFAFA\",\n    margin: \"0px 20px 10px 20px\",\n    \"&:hover\": { background: theme.palette.primary.dark }\n  },\n  icon: {\n    // fontSize: \"18px\",\n    // height: \"21px\",\n    // width: \"15px\",\n    //color: theme.palette.primary.main,\n    \"&:hover\": { cursor: \"pointer\" }\n  },\n  height: { height: \"100%\" },\n  checkbox: { marginLeft: \"10px\" },\n  limitText: {\n    width: \"50px\",\n    margin: theme.spacing(0, 3, 0, 3)\n  }\n});\n\nconst StyledMenu = withStyles(theme => ({\n  paper: {\n    // border: \"1px solid #F0F0F0\",\n    borderRadius: \"8px\",\n    width: \"242px\",\n    height: \"411px\",\n    boxShadow: \"2px 2px 4px rgba(0, 0, 0, 0.25)\"\n  }\n}))(props => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: \"bottom\",\n      horizontal: \"center\"\n    }}\n    transformOrigin={{\n      vertical: \"top\",\n      horizontal: \"center\"\n    }}\n    autoFocus={false}\n    {...props}\n  />\n));\n\nclass FilterIcon extends Component {\n  state = { anchorEl: null, otherFilters: [] };\n\n  handleClick = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({\n      anchorEl: null,\n      otherFilters: []\n    });\n  };\n\n  render() {\n    const { classes, t } = this.props;\n    return (\n      <React.Fragment>\n        <IconButton\n          size=\"small\"\n          onClick={this.handleClick}\n          className={this.props.isActive ? classes.iconActive : classes.icon}\n        >\n          {this.props.icon}\n        </IconButton>\n        <StyledMenu\n          id=\"customized-menu\"\n          anchorEl={this.state.anchorEl}\n          open={Boolean(this.state.anchorEl)}\n          onClose={this.handleClose}\n          className={classes.height}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              height: \"-webkit-fill-available\"\n            }}\n          >\n            <Typography\n              component=\"div\"\n              style={{\n                padding: \"10px 10px 0px 20px\",\n                display: \"flex\",\n                flexDirection: \"row\"\n              }}\n            >\n              <Typography\n                component=\"div\"\n                style={{\n                  fontSize: \"24px\",\n                  fontFamily: \"Open Sans\",\n                  fontWeight: 500\n                }}\n              >\n                {this.props.title}\n              </Typography>\n              <Typography\n                component=\"div\"\n                style={{\n                  flexGrow: 1\n                }}\n              ></Typography>\n              <Typography\n                component=\"div\"\n                onClick={this.handleClose}\n                className={classes.icon}\n              >\n                <i className=\"fas fa-times\"></i>\n              </Typography>\n            </Typography>\n            <div\n              style={{\n                flexGrow: 1,\n                display: \"flex\",\n                flexDirection: \"column\",\n                margin: \"10px 0px 0px 10px\"\n              }}\n            >\n              {this.props.children}\n            </div>\n          </div>\n        </StyledMenu>\n      </React.Fragment>\n    );\n  }\n}\n\nFilterIcon.propTypes = {\n  isActive: PropTypes.bool,\n  title: PropTypes.string\n};\n\nFilterIcon.defaultProps = {\n  isActive: false,\n  title: \"Filters\"\n};\n\nexport default withStyles(styles, { withTheme: true })(FilterIcon);\n","import React, { memo } from \"react\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { FormControlLabel, Switch, TextField } from \"@material-ui/core\";\nimport ResetSearch from \"@material-ui/icons/Close\";\nimport FiltersIcon from \"./FiltersIcon/FiltersIcon\";\nimport LabelIcon from \"@material-ui/icons/Label\";\nimport Chip from \"@material-ui/core/Chip\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport TodayIcon from \"@material-ui/icons/Today\";\nimport { Typography } from \"@material-ui/core\";\nimport Input from \"@material-ui/core/Input\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Select from \"@material-ui/core/Select\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport {\n  KeyboardDateTimePicker,\n  MuiPickersUtilsProvider\n} from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport PropTypes from \"prop-types\";\nimport _isEqual from \"lodash/isEqual\";\nimport _get from \"lodash/get\";\n\nconst useStyles = makeStyles(theme => ({\n  filterBarContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    padding: 6,\n    backgroundColor: \"#353535\",\n    alignItems: \"center\"\n    // justifyContent: \"space-between\"\n  },\n  input: {\n    flex: 1,\n    paddingLeft: \"10px\",\n    fontSize: \"medium\"\n  },\n  searchText: {\n    minWidth: 150,\n    paddingLeft: theme.spacing(3)\n  },\n  addTagText: {\n    width: \"100%\"\n  },\n  limitText: {\n    width: \"50px\",\n    margin: theme.spacing(0, 3, 0, 3)\n  },\n  toggleContainer: {\n    margin: theme.spacing(2)\n  },\n  datePicker: {\n    width: \"200px\",\n    margin: theme.spacing(0, 3, 0, 3)\n  },\n  tagsContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: theme.spacing(0.5),\n    margin: theme.spacing(0, 3, 0, 3)\n  },\n  tagsList: {\n    marginTop: theme.spacing(3)\n  },\n  chip: {\n    margin: theme.spacing(0.5)\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    maxWidth: 300\n  },\n  filtersButton: {\n    display: \"flex\",\n    flexDirection: \"row\"\n  },\n  columnsFilter: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginTop: 6\n  },\n  iconButton: {\n    color: \"#0B6A8A\",\n    \"&:hover\": {\n      color: \"#22c7ff\"\n    }\n  }\n}));\n\nconst LogsFilterBar = props => {\n  const classes = useStyles();\n  const [tagText, setTagText] = React.useState(\"\");\n\n  const handleRobotChange = event => {\n    const arrayEvent = event?.target?.value;\n    const selectedId = arrayEvent[arrayEvent.length - 1];\n    props.updateRobotSelection(selectedId);\n  };\n  const getRobotSelector = () => {\n    return (\n      <div className={classes.toggleContainer}>\n        <svg\n          width=\"20\"\n          height=\"18\"\n          viewBox=\"0 0 30 27\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          style={{ paddingTop: \"5px\", paddingRight: \"5px\" }}\n        >\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M16.7753 1.35706L15.9587 2.61119L16.3648 2.87846L18.4001 4.18898L17.1052 6.20016H25.437C26.5487 6.20016 27.45 7.10137 27.45 8.21307V12.8244H28.0955C28.6514 12.8244 29.102 13.275 29.102 13.8308V16.0643C29.102 16.6201 28.6514 17.0707 28.0955 17.0707H27.45V21.2901C27.45 22.4018 26.5487 23.303 25.437 23.303H4.12161C3.00991 23.303 2.1087 22.4017 2.1087 21.29V17.0707H1.42467C0.868819 17.0707 0.418213 16.6201 0.418213 16.0643V13.8308C0.418213 13.275 0.868819 12.8244 1.42467 12.8244H2.1087V8.21307C2.1087 7.10137 3.00991 6.20016 4.12161 6.20016H13.5141L14.8252 4.16395L13.2875 3.15192L13.2966 3.13812L13.2875 3.1322L15.1377 0.290771L16.7753 1.35706ZM24.4306 9.21953H5.12807V20.2836H24.4306V9.21953ZM7.18098 12.1324C6.68518 12.1324 6.28325 12.5343 6.28325 13.0301C6.28325 13.5259 6.68518 13.9278 7.18098 13.9278H9.04635C9.54216 13.9278 9.94409 13.5259 9.94409 13.0301C9.94409 12.5343 9.54216 12.1324 9.04635 12.1324H7.18098ZM20.6901 12.1324C20.1943 12.1324 19.7924 12.5343 19.7924 13.0301C19.7924 13.5259 20.1943 13.9278 20.6901 13.9278H22.5555C23.0513 13.9278 23.4532 13.5259 23.4532 13.0301C23.4532 12.5343 23.0513 12.1324 22.5555 12.1324H20.6901ZM9.17669 17.6512H11.3239V19.253H9.17669V17.6512ZM14.3432 17.6513H12.196V19.253H14.3432V17.6513ZM15.2154 17.6513H17.3626V19.253H15.2154V17.6513ZM20.382 17.6513H18.2348V19.253H20.382V17.6513ZM10.9568 23.69H18.6019V25.7029C18.6019 26.2587 18.1513 26.7093 17.5954 26.7093H11.9632C11.4074 26.7093 10.9568 26.2587 10.9568 25.7029V23.69Z\"\n            fill=\"#9E9E9E\"\n          />\n        </svg>\n        <FormControl className={classes.formControl}>\n          <Select\n            labelId=\"select-label\"\n            id=\"select\"\n            multiple\n            value={props.selectedRobots}\n            onChange={handleRobotChange}\n            renderValue={selected => {\n              const selectedNames = selected\n                .filter(({ isSelected }) => isSelected)\n                .map(({ name }) => name);\n              return selectedNames.length > 2\n                ? [selectedNames[0], selectedNames[1]].join(\" , \") + \"...\"\n                : selectedNames.join(\" , \");\n            }}\n            input={<Input />}\n            MenuProps={MenuProps}\n          >\n            {/* <MenuItem key={`robotList-Default`} value={robotDefault}>\n              Default\n            </MenuItem> */}\n            {props.selectedRobots.map((robot, robotIndex) => {\n              return (\n                <MenuItem key={`robotList-${robotIndex}`} value={robot.id}>\n                  <Checkbox checked={robot.isSelected} />\n                  <ListItemText primary={robot.name} />\n                </MenuItem>\n              );\n            })}\n          </Select>\n        </FormControl>\n      </div>\n    );\n  };\n\n  const getSearchInput = () => {\n    return (\n      <TextField\n        className={classes.searchText}\n        label=\"\"\n        placeholder=\"Search (regex)\"\n        value={props.messageRegex}\n        onChange={evt => props.handleMessageRegex(evt.target.value)}\n        InputProps={{\n          startAdornment: (\n            <InputAdornment style={{ paddingRight: 8 }}>\n              <SearchIcon fontSize=\"small\" />\n            </InputAdornment>\n          ),\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              <IconButton\n                disabled={!props.messageRegex}\n                onClick={() => props.handleMessageRegex(\"\")}\n              >\n                <ResetSearch color=\"inherit\" fontSize=\"small\" />\n              </IconButton>\n            </InputAdornment>\n          )\n        }}\n        size=\"small\"\n      />\n    );\n  };\n\n  const getLevels = () => {\n    return (\n      <div className={classes.toggleContainer}>\n        <FormControl className={classes.formControl}>\n          <Select\n            labelId=\"demo-mutiple-checkbox-label\"\n            id=\"demo-mutiple-checkbox\"\n            multiple\n            value={props.levels}\n            onChange={props.handleLevels}\n            input={<Input />}\n            renderValue={selected => {\n              // selected comes from state, for example [\"ERROR\", \"INFO\"]\n              // but want to show the lables, for example [\"Alerts\", \"State of Robot\"]\n              const labels = props.levelsList\n                .filter(level => selected.includes(level.value))\n                .map(elem => elem.label);\n              return labels.join(\", \");\n            }}\n            MenuProps={MenuProps}\n          >\n            {props.levelsList.map(level => (\n              <MenuItem key={level.value} value={level.value}>\n                <Checkbox checked={props.levels.indexOf(level.value) > -1} />\n                <ListItemText primary={level.label} />\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </div>\n    );\n  };\n\n  const getTags = () => {\n    return (\n      <FiltersIcon\n        icon={<LabelIcon></LabelIcon>}\n        title=\"Tags\"\n        isActive={props.tags.length > 0}\n      >\n        <div className={classes.tagsContainer}>\n          <TextField\n            className={classes.addTagText}\n            value={tagText}\n            onChange={evt => setTagText(evt.target.value)}\n            onKeyUp={event => {\n              // User pressed Enter\n              if (event.keyCode === 13) {\n                props.handleAddTag(tagText);\n              }\n            }}\n            label=\"Add Tag\"\n            // placeholder=\"Tag\"\n            InputProps={{\n              endAdornment: (\n                <InputAdornment>\n                  <IconButton onClick={() => props.handleAddTag(tagText)}>\n                    <AddIcon />\n                  </IconButton>\n                </InputAdornment>\n              )\n            }}\n            size=\"small\"\n          />\n          <div className={classes.tagsList}>\n            {props.tags.map(data => {\n              return (\n                <li key={data.key}>\n                  <Chip\n                    label={data.label}\n                    onDelete={() => props.handleDeleteTag(data)}\n                    className={classes.chip}\n                    size=\"small\"\n                  />\n                </li>\n              );\n            })}\n          </div>\n        </div>\n      </FiltersIcon>\n    );\n  };\n\n  const getTimeFilters = () => {\n    return (\n      <FiltersIcon\n        icon={<TodayIcon></TodayIcon>}\n        title={props.t(\"Date Range\")}\n        isActive={\n          props.selectedFromDate !== null || props.selectedToDate !== null\n        }\n      >\n        {/* From -> To Date */}\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <KeyboardDateTimePicker\n            key=\"time-picker\"\n            className={classes.datePicker}\n            size=\"small\"\n            variant=\"inline\"\n            ampm={false}\n            label={props.t(\"From date\")}\n            value={props.selectedFromDate}\n            onChange={newDate =>\n              props.handleDateChange(newDate, \"selectedFromDate\")\n            }\n            onError={console.log}\n            format=\"yyyy/MM/dd HH:mm\"\n          />\n          <KeyboardDateTimePicker\n            key=\"time-picker2\"\n            className={classes.datePicker}\n            size=\"small\"\n            variant=\"inline\"\n            ampm={false}\n            label={props.t(\"To date\")}\n            value={props.selectedToDate}\n            onChange={newDate =>\n              props.handleDateChange(newDate, \"selectedToDate\")\n            }\n            onError={console.log}\n            format=\"yyyy/MM/dd HH:mm\"\n          />\n        </MuiPickersUtilsProvider>\n      </FiltersIcon>\n    );\n  };\n\n  const getSettings = () => {\n    return (\n      <FiltersIcon\n        icon={<SettingsIcon></SettingsIcon>}\n        title={props.t(\"Configuration\")}\n      >\n        {/* Advanced/Simple Mode */}\n        <FormControlLabel\n          control={\n            <Switch\n              checked={props.advancedMode}\n              onChange={props.handleAdvancedMode}\n            />\n          }\n          label={props.advancedMode ? \"Advanced\" : \"Simple\"}\n        />\n        <div className={classes.filtersButton}>\n          {/* Limit Input */}\n          <Typography\n            component=\"div\"\n            style={{\n              fontSize: \"1rem\",\n              fontFamily: \"Open Sans\",\n              fontWeight: 500\n            }}\n          >\n            {`${props.t(\"Limit p/Robot\")}:`}\n          </Typography>\n          <TextField\n            value={props.limit}\n            onChange={props.handleLimit}\n            className={classes.limitText}\n            id=\"outlined-number\"\n            // label=\"limit\"\n            placeholder={props.t(\"limit\")}\n            type=\"number\"\n            InputLabelProps={{\n              shrink: true\n            }}\n            // variant=\"outlined\"\n            size=\"small\"\n          />\n        </div>\n        <div className={classes.columnsFilter}>\n          {/* Limit Input */}\n          <Typography\n            component=\"div\"\n            style={{\n              fontSize: \"1rem\",\n              fontFamily: \"Open Sans\",\n              fontWeight: 500\n            }}\n          >\n            {`${props.t(\"Columns\")}:`}\n          </Typography>\n          <FormControl className={classes.formControl}>\n            <Select\n              labelId=\"demo-mutiple-checkbox-label\"\n              id=\"demo-mutiple-checkbox\"\n              multiple\n              value={props.columns}\n              onChange={props.handleColumns}\n              input={<Input />}\n              renderValue={selected =>\n                selected\n                  .map(elem => _get(props, `columnList[${elem}].label`, \"\"))\n                  .join(`, `)\n              }\n              MenuProps={MenuProps}\n            >\n              {Object.keys(props.columnList).map((column, index) => {\n                return (\n                  <MenuItem key={index} value={column}>\n                    <Checkbox checked={props.columns.indexOf(column) > -1} />\n                    <ListItemText primary={props.columnList[column].label} />\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n        </div>\n      </FiltersIcon>\n    );\n  };\n\n  return (\n    <div className={classes.filterBarContainer}>\n      {getRobotSelector()}\n      {/* Search Input */}\n      {getSearchInput()}\n      {/* Toggle: INFO, DEBUG, ERROR, CRITICAL */}\n      {getLevels()}\n      {/* Tags */}\n      {props.advancedMode && getTags()}\n      {getTimeFilters()}\n      <div style={{ flexGrow: 1 }}></div>\n      {getSettings()}\n    </div>\n  );\n};\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  },\n  getContentAnchorEl: null\n};\n\nLogsFilterBar.propTypes = {\n  levels: PropTypes.array,\n  levelsList: PropTypes.array,\n  handleLevels: PropTypes.func,\n  limit: PropTypes.number,\n  handleLimit: PropTypes.func,\n  columns: PropTypes.array,\n  columnList: PropTypes.object,\n  handleColumns: PropTypes.func,\n  handleDeleteTag: PropTypes.func,\n  messageRegex: PropTypes.string,\n  handleMessageRegex: PropTypes.func,\n  selectedFromDate: PropTypes.string,\n  selectToDate: PropTypes.string,\n  handleDateChange: PropTypes.func,\n  selectedRobots: PropTypes.array,\n  updateRobotSelection: PropTypes.func,\n  advancedMode: PropTypes.bool,\n  handleAdvancedMode: PropTypes.func,\n  t: PropTypes.func\n};\n\nLogsFilterBar.defaultProps = {\n  levels: [],\n  levelsList: [],\n  handleLevels: () => {},\n  limit: 1,\n  handleLimit: () => {},\n  columns: [],\n  columnList: {},\n  handleColumns: () => {},\n  handleDeleteTag: () => {},\n  messageRegex: \"\",\n  handleMessageRegex: () => {},\n  selectedFromDate: \"\",\n  selectToDate: \"\",\n  handleDateChange: () => {},\n  selectedRobots: [],\n  updateRobotSelection: () => {},\n  advancedMode: false,\n  handleAdvancedMode: () => {},\n  t: string => string\n};\n\n//The function returns true when the compared props equal, preventing the component from re-rendering\nfunction arePropsEqual(prevProps, nextProps) {\n  return _isEqual(prevProps, nextProps);\n}\n\nexport default memo(LogsFilterBar, arePropsEqual);\n","import React from \"react\";\nimport _isEmpty from \"lodash/isEmpty\";\n\n// export const levels = [\n//   { value: \"INFO\", label: i18n.t(\"Robot Status\") },\n//   // { value: \"WARNING\", label: \"Warnings\" },\n//   // { value: \"DEBUG\", label: \"Debug\" },\n//   { value: \"ERROR\", label: i18n.t(\"Alerts\") }\n//   // { value: \"CRITICAL\", label: \"Critical\" }\n// ];\n\nexport const colorCoding = {\n  INFO: {\n    backgroundColor: \"rgba(33, 150, 243, 0.1)\",\n    color: \"rgba(33, 150, 243, 1)\"\n  },\n  WARNING: {\n    backgroundColor: \"rgba(255, 152, 0, 0.1)\",\n    color: \"rgba(255, 152, 0, 1)\"\n  },\n  DEBUG: {\n    backgroundColor: \"rgba(76, 175, 80, 0.1)\",\n    color: \"rgba(76, 175, 80, 1)\"\n  },\n  ERROR: {\n    backgroundColor: \"rgba(244, 67, 54, 0.1)\",\n    color: \"rgba(244, 67, 54, 1)\"\n  },\n  CRITICAL: {\n    backgroundColor: \"rgba(255, 19, 1, 0.1)\",\n    color: \"rgba(255, 19, 1, 1)\"\n  }\n};\n\n// export const fixedColumns = {\n//   Date: {\n//     label: i18n.t(\"Date\"),\n//     dataKey: \"time\",\n//     width: 100,\n//     render: time => getJustDateFromServer(time)\n//   },\n//   Time: {\n//     label: i18n.t(\"Time\"),\n//     dataKey: \"time\",\n//     render: time => getJustTimeFromServer(time),\n//     width: 100\n//   },\n//   Level: {\n//     label: i18n.t(\"Level\"),\n//     dataKey: \"level\",\n//     width: 100\n//   },\n//   Module: {\n//     label: i18n.t(\"Module\"),\n//     dataKey: \"module\",\n//     width: 100\n//   },\n//   Function: {\n//     label: \"Function\",\n//     dataKey: \"funcName\",\n//     width: 100\n//   },\n//   Callback: {\n//     label: i18n.t(\"Callback\"),\n//     dataKey: \"callback\",\n//     width: 100\n//   },\n//   Node: {\n//     label: i18n.t(\"Node\"),\n//     dataKey: \"node\",\n//     width: 100\n//   },\n//   Fleet: {\n//     label: i18n.t(\"Fleet\"),\n//     dataKey: \"fleet\",\n//     width: 100\n//   },\n//   Robot: {\n//     label: i18n.t(\"Robot\"),\n//     dataKey: \"robot\",\n//     width: 100\n//   },\n//   Message: {\n//     label: i18n.t(\"Message\"),\n//     dataKey: \"message\",\n//     width: 100\n//   }\n// };\n\n// Makes sure to find unique \"i\" of chip array\n// Input: [{key: 0, label: \"Chip1\"}, {key: 2, label: \"Chip3\"}], keyName= \"key\"\n// Output: 1\nexport function findsUniqueKey(array, keyName) {\n  const length = array.length;\n  // If empty, return 0\n  if (length === 0 || array === undefined) {\n    return 0;\n  }\n  for (let k = 0; k < length; k++) {\n    for (let j = 0; j < length; j++) {\n      if (k === array[j][keyName]) {\n        break;\n      }\n      if (j === length - 1) {\n        return k;\n      }\n    }\n  }\n\n  return length;\n}\n\n// Converts the levels in the state for the string for the request\n//  Input: [\"INFO\", \"DEBUG\"]\n//  Output: \"level=info,debug\"\nexport function getRequestLevels(levelsArray, levelsList) {\n  let res = \"\";\n  if (Array.isArray(levelsArray) && levelsArray.length === levelsList.length) {\n    return res;\n  }\n\n  try {\n    levelsArray.forEach(level => {\n      if (res === \"\") {\n        res = `${level.toLowerCase()}`;\n      } else {\n        res = `${res},${level.toLowerCase()}`;\n      }\n    });\n    return `level=${res}`;\n  } catch (error) {\n    return \"\";\n  }\n}\n// Converts the levels in the state for the string for the request\n//  Input: [{ key: 0, label: \"UI\" }, { key: 1, label: \"TASKS\" }]\n//  Output: \"&tags=UI,TASKS\"\nexport function getRequestTags(tagsArray) {\n  let res = \"\";\n\n  if (_isEmpty(tagsArray)) {\n    return res;\n  }\n\n  tagsArray.forEach(tag => {\n    if (res === \"\") {\n      res = `${tag.label}`;\n    } else {\n      res = `${res},${tag.label}`;\n    }\n  });\n\n  return `&tags=${res}`;\n}\n// Converts the levels in the state for the string for the request\n//  Input: \"r'started\\.$\"\n//  Output: \"&message=r'started\\.$\"\nexport function getRequestMessage(message) {\n  if (!message || message === \"\") {\n    return \"\";\n  }\n\n  return `&message=${message}`;\n}\n\n// Convert Date format to a human readable format\n// Input: 1586370146\n// Output: \"08/04/2020 19:22:26\"\nexport const getTimeFromServer = serverTime => {\n  const time = new Date(serverTime * 1000);\n  return `${time.toLocaleString(\"pt\")}`;\n};\n// Convert Date format to a human readable format\n// Input: 1586370146\n// Output: \"08/04/2020\"\nexport const getJustDateFromServer = serverTime => {\n  const time = new Date(serverTime * 1000);\n  return `${time.toLocaleDateString(\"pt\")}`;\n};\n// Convert Date format to a human readable format\n// Input: 1586370146\n// Output: \"19:22:26\"\nexport const getJustTimeFromServer = serverTime => {\n  const time = new Date(serverTime * 1000);\n  return `${time.toLocaleTimeString(\"pt\")}`;\n};\n\n// Convert array of object to array of strings for LogList\n// Input:\n// [\n//   {\n//     time: 1586370146,\n//     level: \"INFO\",\n//     message: \"UI Tag Log Test: 12\"\n//   },\n//   {\n//     time: 1586370147,\n//     level: \"INFO\",\n//     message: \"UI Tag Log Test: 13\"\n//   }\n// ];\n// Output\n// [\n//   \"[08/04/2020 19:22:26] [INFO] : UI Tag Log Test: 12\",\n//   \"[08/04/2020 19:21:31] [INFO] : UI Tag Log Test: 56\"\n// ];\n\nexport const formatLogsData = data => {\n  return data.map(\n    elem => elem.stdout\n    // `[${getTimeFromServer(elem.time)}] [${elem.level}] : ${elem.message}`\n  );\n};\n\nfunction binaryIndexOf(data, criteria) {\n  var minIndex = 0;\n  var maxIndex = data.length - 1;\n  var currentIndex;\n  var currentElement;\n  var result = null;\n\n  while (minIndex <= maxIndex) {\n    currentIndex = ((minIndex + maxIndex) / 2) | 0;\n    currentElement = data[currentIndex];\n    var comparison = criteria(currentElement);\n\n    if (comparison[0] === \"right\") {\n      minIndex = currentIndex + 1;\n    } else {\n      maxIndex = currentIndex - 1;\n    }\n\n    if (comparison[1]) {\n      result = currentIndex;\n    }\n  }\n\n  return result;\n}\n\nexport const filterByFromToDates = (logsData, fromDate, toDate) => {\n  // If there is a problem fetching the logs, show nothing\n  if (!logsData) {\n    return [];\n  }\n\n  let lowerIndex = 0;\n  let upperIndex = logsData.length;\n\n  // If nothing is selected, do nothing\n  if (!fromDate && !toDate) {\n    return logsData;\n  }\n\n  // List of time format. Array is sorted in descending order (Newer -> Older)\n  const dateList = logsData.map(log => log.time);\n  if (toDate) {\n    // First log that is <= toDate (first index that fits criteria)\n    lowerIndex = binaryIndexOf(dateList, function (value) {\n      return value >= toDate.getTime() / 1000\n        ? [\"right\", false]\n        : [\"left\", true];\n    });\n  }\n  if (fromDate) {\n    // First log that is >= fromDate (last index that still fits criteria)\n    upperIndex = binaryIndexOf(dateList, function (value) {\n      return value <= fromDate.getTime() / 1000\n        ? [\"left\", false]\n        : [\"right\", true];\n    });\n  }\n  return logsData.slice(lowerIndex, upperIndex + 1);\n};\n\n// This function is to get the same string as the one you get in\n// Robot:Status nodes_lchd and persistent_nodes_lchd\nexport const addNestedName = (nestedName, newName) => {\n  if (nestedName === \"\") {\n    return newName;\n  } else {\n    return `${nestedName}__${newName}`;\n  }\n};\n\n// Will update according with the list of running nodes all the nodes to running or stopped\nexport const updateRunningNodes = (treeList, runningNodesList) => {\n  return treeList.map(elem => {\n    // Only update the status of nodes, not containers\n    if (elem.status) {\n      if (runningNodesList.includes(elem.nestedName)) {\n        return { ...elem, status: \"running\" };\n      } else {\n        return { ...elem, status: \"stopped\" };\n      }\n    } else {\n      return elem;\n    }\n  });\n};\n\n// This will remove the deleted container from the treeList and its respective children\nexport const removeDeleteContainer = (treeList, id) => {\n  // Get the id of the Container to remove\n  const deleteIndex = treeList.findIndex(elem => elem.id === id);\n  treeList.splice(deleteIndex, 1);\n  // Remove children: find all children with parentId that is the id\n  for (let i = 0; i < treeList.length; i++) {\n    if (treeList[i].parentId === id) {\n      removeDeleteContainer(treeList, treeList[i].id);\n    }\n  }\n};\n\n// Detects if there are loops within nested containers\n// Returns true if it finds a loop, false otherwise\nexport const detectContainerLoop = (treeList, parentId, flowId) => {\n  // If first level there are no loops\n  if (parentId === 0) {\n    return false;\n  }\n  // index of container to add\n  let flowIndex = treeList.findIndex(elem => elem.id === parentId);\n  let currentFlow = treeList[flowIndex];\n  // Stop when reaches the root of the tree\n  while (currentFlow.parentId) {\n    // get the parentId of the current container\n    const parentId = currentFlow.parentId;\n    // get the index of that parent in the array\n    flowIndex = treeList.findIndex(elem => elem.id === parentId);\n    currentFlow = treeList[flowIndex];\n    if (currentFlow.flowId === flowId) {\n      console.error(\"Found Flow Loop :0\");\n      return true;\n    }\n  }\n  return false;\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport { AutoSizer, Column, Table } from \"react-virtualized\";\nimport { colorCoding } from \"../utils/Utils\";\n\nconst styles = theme => ({\n  flexContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    boxSizing: \"border-box\"\n  },\n  table: {\n    // temporary right-to-left patch, waiting for\n    // // https://github.com/bvaughn/react-virtualized/issues/454\n    \"& .ReactVirtualized__Table__headerRow\": {\n      flip: false,\n      paddingRight: theme.direction === \"rtl\" ? \"0 !important\" : undefined\n    }\n  },\n  tableRow: {\n    cursor: \"pointer\"\n  },\n  tableRowHover: {\n    \"&:hover\": {\n      backgroundColor: theme.palette.grey[200]\n    }\n  },\n  tableCell: {\n    flexGrow: 1\n  },\n  flexColumn: {\n    flex: 1,\n    alignItems: \"center\"\n  },\n  noClick: {\n    cursor: \"initial\"\n  },\n  ...colorCoding\n});\n\nclass MuiVirtualizedTable extends React.PureComponent {\n  static defaultProps = {\n    headerHeight: 48,\n    rowHeight: 48\n  };\n\n  getRowClassName = ({ index }) => {\n    const { classes, onRowClick, data } = this.props;\n    const rowData = data[index];\n    return clsx(\n      classes.tableRow,\n      classes.flexContainer,\n      index !== -1 && classes[rowData.level],\n      {\n        [classes.tableRowHover]: index !== -1 && onRowClick != null\n      }\n    );\n  };\n\n  cellRenderer = render => ({ cellData, columnIndex }) => {\n    const { columns, classes, rowHeight, onRowClick } = this.props;\n    return (\n      <TableCell\n        component=\"div\"\n        className={clsx(classes.tableCell, classes.flexContainer, {\n          [classes.noClick]: onRowClick == null\n        })}\n        variant=\"body\"\n        style={{ height: rowHeight }}\n        align={\n          (columnIndex != null && columns[columnIndex].numeric) || false\n            ? \"right\"\n            : \"left\"\n        }\n      >\n        {render ? render(cellData) : cellData}\n      </TableCell>\n    );\n  };\n\n  headerRenderer = ({ label, columnIndex }) => {\n    const { headerHeight, columns, classes } = this.props;\n\n    return (\n      <TableCell\n        component=\"div\"\n        className={clsx(\n          classes.tableCell,\n          classes.flexContainer,\n          classes.noClick\n        )}\n        variant=\"head\"\n        style={{ height: headerHeight }}\n        align={columns[columnIndex].numeric || false ? \"right\" : \"left\"}\n      >\n        <span>{label}</span>\n      </TableCell>\n    );\n  };\n\n  render() {\n    const {\n      classes,\n      columns,\n      rowHeight,\n      headerHeight,\n      ...tableProps\n    } = this.props;\n    return (\n      <AutoSizer>\n        {({ height, width }) => (\n          <Table\n            height={height}\n            width={width}\n            rowHeight={rowHeight}\n            gridStyle={{\n              direction: \"inherit\"\n            }}\n            headerHeight={headerHeight}\n            className={classes.table}\n            {...tableProps}\n            rowClassName={this.getRowClassName}\n          >\n            {columns.map(({ dataKey, render, ...other }, index) => {\n              return (\n                <Column\n                  key={dataKey}\n                  headerRenderer={headerProps => {\n                    return this.headerRenderer({\n                      ...headerProps,\n                      columnIndex: index\n                    });\n                  }}\n                  flexGrow={dataKey === \"message\" ? 1 : undefined}\n                  className={classes.flexContainer}\n                  cellRenderer={this.cellRenderer(render)}\n                  dataKey={dataKey}\n                  {...other}\n                />\n              );\n            })}\n          </Table>\n        )}\n      </AutoSizer>\n    );\n  }\n}\n\nMuiVirtualizedTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n  columns: PropTypes.arrayOf(\n    PropTypes.shape({\n      dataKey: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      numeric: PropTypes.bool,\n      width: PropTypes.number.isRequired\n    })\n  ).isRequired,\n  headerHeight: PropTypes.number,\n  onRowClick: PropTypes.func,\n  rowHeight: PropTypes.number\n};\n\nconst VirtualizedTable = withStyles(styles)(MuiVirtualizedTable);\n\nexport default function LogsTable(props) {\n  return (\n    <VirtualizedTable\n      rowCount={props.logsData.length}\n      rowGetter={({ index }) => props.logsData[index]}\n      data={props.logsData}\n      columns={props.columns.map(elem => props.columnList[elem])}\n    />\n  );\n}\n\nLogsTable.propTypes = {\n  columns: PropTypes.array,\n  columnList: PropTypes.object,\n  logsData: PropTypes.array,\n  height: PropTypes.number\n};\n\nLogsTable.defaultProps = {\n  columns: [],\n  columnList: {},\n  logsData: [],\n  height: 10\n};\n","import React, { Component } from \"react\";\nimport LogsFilterBar from \"./LogsFilterBar/LogsFilterBar\";\nimport \"./Logs.css\";\nimport { MasterDB } from \"mov-fe-lib-core\";\nimport {\n  getRequestLevels,\n  getRequestTags,\n  getRequestMessage,\n  filterByFromToDates,\n  findsUniqueKey,\n  getJustDateFromServer,\n  getJustTimeFromServer\n} from \"./utils/Utils\";\nimport LogsTable from \"./LogsTable/LogsTable\";\nimport _isEqual from \"lodash/isEqual\";\nimport PropTypes from \"prop-types\";\n\nclass Logs extends Component {\n  state = {\n    selectedRobots: [],\n    levels: [\"INFO\", \"ERROR\"],\n    limit: 50,\n    logsData: [],\n    messageRegex: \"\",\n    selectedFromDate: null,\n    selectedToDate: null,\n    columns: [\"Time\", \"Robot\", \"Message\"],\n    tags: this.props.advancedMode ? [] : [{ key: 0, label: \"ui\" }],\n    height: 0, //LogsTable height\n    levelsList: this.props.advancedMode\n      ? [\n          { value: \"INFO\", label: \"Info\" },\n          { value: \"WARNING\", label: \"Warnings\" },\n          { value: \"DEBUG\", label: \"Debug\" },\n          { value: \"ERROR\", label: \"Error\" },\n          { value: \"CRITICAL\", label: \"Critical\" }\n        ]\n      : [\n          { value: \"INFO\", label: \"Robot Status\" },\n          { value: \"ERROR\", label: \"Alerts\" }\n        ],\n    advancedMode: this.props.advancedMode\n  };\n  logsTimeout = undefined;\n\n  simpleLevelsList = [\n    { value: \"INFO\", label: \"Robot Status\" },\n    { value: \"ERROR\", label: \"Alerts\" }\n  ];\n\n  advancedLevelsList = [\n    { value: \"INFO\", label: \"Info\" },\n    { value: \"WARNING\", label: \"Warnings\" },\n    { value: \"DEBUG\", label: \"Debug\" },\n    { value: \"ERROR\", label: \"Error\" },\n    { value: \"CRITICAL\", label: \"Critical\" }\n  ];\n\n  resizeHandler() {\n    const height = this.divElement.clientHeight;\n    this.setState({ height });\n  }\n\n  componentDidMount() {\n    this.updateSelectedRobots();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (_isEqual(prevProps.robotsData, this.props.robotsData)) return;\n    this.updateSelectedRobots();\n  }\n\n  updateSelectedRobots = () => {\n    if(\n      this.props.robotsData.length \n      && this.props.robotsData.filter(robot => robot.ip).length\n    )\n      this.setSelectedRobots(\n        this.props.robotsData.map(elem => ({ ...elem, isSelected: true }))\n      );\n  }\n\n  componentWillUnmount() {\n    if (this.logsTimeout) {\n      clearTimeout(this.logsTimeout);\n    }\n  }\n\n  // This function is responsible to check/unckeck the list of robots\n  updateRobotSelection = robotId => {\n    const selectedRobots = [...this.state.selectedRobots];\n    const updateRobot =\n      selectedRobots[selectedRobots.findIndex(elem => elem.id === robotId)];\n    updateRobot.isSelected = !updateRobot.isSelected;\n    this.setState({ selectedRobots });\n  };\n\n  setSelectedRobots = selectedRobots => {\n    clearTimeout(this.logsTimeout);\n    this.setState({ selectedRobots });\n    this.getLogs(selectedRobots);\n  };\n\n  getLogs = async robots => {\n    await Promise.all(\n      robots\n        .filter(robot => robot.robotState !== this.props.robotStates.off) // If robot is offline doesn't bother making the request\n        .filter(robot => robot.isSelected)\n        .map(robot => this.getRobotLogData(robot))\n    ).then(dataArrays => {\n      this.setState(prevState => {\n        const finalArray = dataArrays.reduce((all, dataArray) => {\n          dataArray && dataArray.forEach(data => all.push(data));\n          return all;\n        }, []);\n        this.logsTimeout = setTimeout(\n          this.getLogs,\n          3000,\n          prevState.selectedRobots\n        );\n        return { logsData: finalArray.sort((a, b) => b.time - a.time) };\n      });\n    });\n  };\n\n  getRobotLogData = robotSelected => {\n    return new Promise((re, rej) => {\n      // Failsafe timer to prevent the promise all from hanging\n      const timeoutHandle = setTimeout(() => {\n        console.error(\"MOV.AI: One of the promises reached timeout\");\n        re([]);\n      }, 2000);\n\n      if (robotSelected.ip) {\n        const dynamicURL = `http://${\n          robotSelected.ip\n        }/api/v1/logs/?${getRequestLevels(\n          this.state.levels,\n          this.state.levelsList\n        )}&limit=${this.state.limit}${getRequestTags(\n          this.state.tags\n        )}${getRequestMessage(this.state.messageRegex)}`;\n\n        MasterDB.get(dynamicURL, (res, e) => {\n          re(res?.data || []);\n          clearTimeout(timeoutHandle);\n        });\n      } else {\n        re([]);\n      }\n    }).catch(() => console.log(\"Failed getRobotLogData\"));\n  };\n\n  render() {\n    return (\n      <div\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          display: \"flex\",\n          flexDirection: \"column\"\n        }}\n      >\n        <div\n          style={{\n            flexGrow: \"1\",\n            height: \"100%\",\n            display: \"flex\",\n            flexDirection: \"column\"\n          }}\n        >\n          <LogsFilterBar\n            selectedRobots={this.state.selectedRobots}\n            updateRobotSelection={this.updateRobotSelection}\n            levels={this.state.levels}\n            levelsList={this.state.levelsList}\n            handleLevels={event => {\n              this.setState({ levels: event.target.value });\n            }}\n            limit={this.state.limit}\n            handleLimit={evt => {\n              if (evt.target.value === \"\") {\n                this.setState({ limit: 0 });\n              } else {\n                this.setState({ limit: evt.target.value });\n              }\n            }}\n            columns={this.state.columns}\n            columnList={this.props.columnList}\n            handleColumns={event => {\n              // make sure columns are always with the same order\n              const columns = Object.keys(this.props.columnList).filter(elem =>\n                event.target.value.includes(elem)\n              );\n              this.setState({ columns });\n            }}\n            tags={this.state.tags}\n            handleAddTag={tagText => {\n              const { tags } = this.state;\n              // Don't add tag if it's empty or duplicate\n              if (\n                tagText !== \"\" &&\n                tags.findIndex(elem => elem.label === tagText) < 0\n              ) {\n                tags.push({\n                  key: findsUniqueKey(tags, \"key\"),\n                  label: tagText\n                });\n                this.setState({ tags });\n              }\n            }}\n            handleDeleteTag={tagToDelete => {\n              const { tags } = this.state;\n              const filteredTags = tags.filter(\n                tag => tag.key !== tagToDelete.key\n              );\n              this.setState({ tags: filteredTags });\n            }}\n            messageRegex={this.state.messageRegex}\n            handleMessageRegex={text => this.setState({ messageRegex: text })}\n            selectedFromDate={this.state.selectedFromDate}\n            selectedToDate={this.state.selectedToDate}\n            handleDateChange={(newDate, keyToChange) => {\n              this.setState({ [keyToChange]: newDate });\n            }}\n            advancedMode={this.state.advancedMode}\n            handleAdvancedMode={evt => {\n              // Toggle advanced mode: change the levels\n              this.setState({\n                advancedMode: !this.state.advancedMode,\n                levelsList: this.state.advancedMode\n                  ? this.simpleLevelsList\n                  : this.advancedLevelsList,\n                tags: this.state.advancedMode\n                  ? []\n                  : this.state.tags\n              });\n            }}\n          ></LogsFilterBar>\n          <div\n            ref={divElement => {\n              this.divElement = divElement;\n            }}\n            style={{\n              flexGrow: 1,\n              overflowY: \"auto\",\n              minHeight: 0,\n              height: \"1px\"\n            }}\n          >\n            <LogsTable\n              columns={this.state.columns}\n              columnList={this.props.columnList}\n              logsData={filterByFromToDates(\n                this.state.logsData,\n                this.state.selectedFromDate,\n                this.state.selectedToDate\n              )}\n              height={this.state.height}\n              levelsList={this.state.levelsList}\n            ></LogsTable>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogs.propTypes = {\n  robotsData: PropTypes.array,\n  robotStates: PropTypes.object,\n  columnList: PropTypes.object,\n  advancedMode: PropTypes.bool\n};\nLogs.defaultProps = {\n  robotsData: [\n    {\n      name: \"robot\",\n      id: \"032cf6207ff34ad0a68cc45034f61b41\",\n      timestamp: 1604334778.6494586,\n      robotState: \"okay\",\n      battery: 78,\n      ip: \"127.0.0.1\"\n    },\n    {\n      name: \"robot_test\",\n      id: \"4df900e30cb44adba33ae74bb2596d88\",\n      timestamp: 1603969723.997914,\n      robotState: \"off\",\n      battery: 22,\n      ip: \"127.0.0.1\"\n    }\n  ],\n  robotStates: {\n    error: \"error\",\n    temp: \"temp\",\n    okay: \"okay\",\n    off: \"off\"\n  },\n  columnList: {\n    Date: {\n      label: \"Date\",\n      dataKey: \"time\",\n      width: 100,\n      render: time => getJustDateFromServer(time)\n    },\n    Time: {\n      label: \"Time\",\n      dataKey: \"time\",\n      width: 100,\n      render: time => getJustTimeFromServer(time)\n    },\n    Level: {\n      label: \"Level\",\n      dataKey: \"level\",\n      width: 100\n    },\n    Module: {\n      label: \"Module\",\n      dataKey: \"module\",\n      width: 100\n    },\n    Robot: {\n      label: \"Robot\",\n      dataKey: \"robot\",\n      width: 100\n    },\n    Message: {\n      label: \"Message\",\n      dataKey: \"message\",\n      width: 100\n    }\n  },\n  advancedMode: false\n};\n\nexport default Logs;\n","import React, { Component } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport defaultLogo from \"./movai_red.svg\";\nimport Paper from \"@material-ui/core/Paper\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Authentication } from \"mov-fe-lib-core\";\nimport PropTypes from \"prop-types\";\n\nconst styles = theme => ({\n  root: {\n    padding: theme.spacing(4, 4),\n    borderRadius: 10\n  }\n});\n\nclass LoginForm extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    remember: false,\n    error: false,\n    errorMessage: \"\",\n    capsLockOn: false\n  };\n\n  sendCreds = async () => {\n    try {\n      const apiResponse = await Authentication.login(\n        this.state.username,\n        this.state.password,\n        this.state.remember\n      );\n      // If successfully logged in\n      if (!apiResponse.error) {\n        this.props.setLoggedIn(true);\n      } else {\n        // Show the error in red\n        this.setState({\n          error: true,\n          errorMessage: apiResponse.error\n        });\n      }\n    } catch (e) {\n      this.setState({\n        error: true,\n        errorMessage: e\n      });\n    }\n  };\n\n  checkCapsLock = (event) => {\n    if(event.key === 'CapsLock' && this.state.capsLockOn)\n      this.setState({ capsLockOn: false });\n    else\n      this.setState({ capsLockOn: event.getModifierState('CapsLock') });\n  }\n\n  render() {\n    const { classes, logo } = this.props;\n\n    return (\n      <Grid\n        style={{ paddingTop: \"5%\" }}\n        container\n        direction=\"column\"\n        alignItems=\"center\"\n        justify=\"space-evenly\"\n      >\n        <Paper elevation={10} className={classes.root}>\n          <Grid item>\n            <img\n              src={logo ? logo : defaultLogo}\n              className=\"center\"\n              alt=\"logo\"\n              style={{\n                display: \"block\",\n                marginLeft: \"auto\",\n                marginRight: \"auto\",\n                width: \"50%\"\n              }}\n            />\n          </Grid>\n          <Grid>\n            <Typography align=\"center\" variant=\"subtitle1\" gutterBottom>\n              <FormControl\n                className={classes.formControl}\n                error={this.state.error}\n              >\n                <InputLabel htmlFor=\"component-error\">Username</InputLabel>\n                <Input\n                  id=\"component-error\"\n                  value={this.state.username}\n                  aria-describedby=\"component-error-text\"\n                  onChange={event =>\n                    this.setState({ username: event.target.value })\n                  }\n                />\n              </FormControl>\n            </Typography>\n          </Grid>\n          <Grid>\n            <Typography align=\"center\" variant=\"subtitle1\" gutterBottom>\n              <FormControl\n                className={classes.formControl}\n                error={this.state.error}\n              >\n                <InputLabel htmlFor=\"component-error\">Password</InputLabel>\n                <Input\n                  id=\"component-error\"\n                  type=\"password\"\n                  value={this.state.password}\n                  aria-describedby=\"component-error-text\"\n                  onChange={event =>\n                    this.setState({ password: event.target.value })\n                  }\n                  onKeyUp={event => {\n                    this.checkCapsLock(event);\n                    if (event.key === \"Enter\") {\n                      this.sendCreds();\n                    }\n                  }}\n                />\n                {this.state.error && (\n                  <FormHelperText id=\"component-error-text\">\n                    {this.state.errorMessage}\n                  </FormHelperText>\n                )}\n                {this.state.capsLockOn && (\n                  <FormHelperText id=\"component-warning-text\">\n                    Warning: Caps lock is ON!\n                  </FormHelperText>\n                )}\n              </FormControl>\n            </Typography>\n          </Grid>\n          <Grid>\n            <Typography align=\"center\" gutterBottom>\n              <Button onClick={() => this.sendCreds()}>Login</Button>\n            </Typography>\n          </Grid>\n        </Paper>\n      </Grid>\n    );\n  }\n}\n\nLoginForm.propTypes = {\n  logs: PropTypes.any, // expects a svg element\n  setLoggedIn: PropTypes.func\n};\n\nLoginForm.defaultProps = {\n  setLoggedIn: loggedIn => console.log(loggedIn)\n};\n\nexport default withStyles(styles, { withTheme: true })(LoginForm);\n","import React from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport PropTypes from \"prop-types\";\nimport Toggle from \"./Toggle\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => {\n  return {\n    menuItemSpacing: {\n      fontSize: \"18px\",\n      minHeight: \"18px\",\n      padding: theme.spacing(1.25, 2),\n      ...theme.cursorDefault\n    },\n    profileMenuFooter: {\n      fontSize: \"14px\",\n      textAlign: \"end\"\n    }\n  };\n});\n\nconst ProfileMenu = props => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <IconButton\n        aria-controls=\"simple-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n      >\n        <SettingsIcon />\n      </IconButton>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <Typography component=\"div\" variant=\"body1\">\n          <div className={classes.menuItemSpacing}>\n            {props.welcomeLabel}, {props.userName}\n          </div>\n          <Divider variant=\"middle\" />\n          {props.extraItems?.map(item => (\n            <MenuItem\n              className={classes.menuItemSpacing}\n              onClick={() => item.func}\n            >\n              {item.label}\n            </MenuItem>\n          ))}\n          <div className={classes.menuItemSpacing}>\n            {props.darkThemeLabel}\n            <Toggle\n              onToggle={() => props.handleToggleTheme()}\n              toggle={props.isDarkTheme}\n            ></Toggle>\n          </div>\n          <MenuItem\n            className={(classes.menuItemSpacing, classes.cursorPointer)}\n            onClick={props.handleLogout}\n          >\n            {props.logoutLabel}\n          </MenuItem>\n          <Divider variant=\"middle\" />\n          <div\n            className={\n              classes.menuItemSpacing + \" \" + classes.profileMenuFooter\n            }\n          >\n            {props.version}\n          </div>\n        </Typography>\n      </Menu>\n    </div>\n  );\n};\nProfileMenu.propTypes = {\n  welcomeLabel: PropTypes.string,\n  userName: PropTypes.string,\n  darkThemeLabel: PropTypes.string,\n  logoutLabel: PropTypes.string,\n  version: PropTypes.string,\n  extraItems: PropTypes.array,\n  isDarkTheme: PropTypes.bool,\n  handleLogout: PropTypes.func,\n  handleToggleTheme: PropTypes.func\n};\n\nProfileMenu.defaultProps = {\n  welcomeLabel: \"Hello\",\n  userName: \"User\",\n  darkThemeLabel: \"Dark Theme\",\n  logoutLabel: \"Logout\",\n  version: \"\",\n  extraItems: [],\n  isDarkTheme: true,\n  handleLogout: () => console.log(\"logout\"),\n  handleToggleTheme: () => console.log(\"toggle\")\n};\n\nexport default ProfileMenu;\n"],"sourceRoot":""}