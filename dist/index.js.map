{"version":3,"sources":["webpack://MovaiReact/webpack/universalModuleDefinition","webpack://MovaiReact/webpack/bootstrap","webpack://MovaiReact/external \"@babel/runtime/helpers/esm/defineProperty\"","webpack://MovaiReact/external \"@babylonjs/core\"","webpack://MovaiReact/external \"react\"","webpack://MovaiReact/external \"@babel/runtime/helpers/esm/assertThisInitialized\"","webpack://MovaiReact/external \"prop-types\"","webpack://MovaiReact/external \"@babel/runtime/helpers/esm/getPrototypeOf\"","webpack://MovaiReact/external \"monet\"","webpack://MovaiReact/external \"@babel/runtime/helpers/esm/classCallCheck\"","webpack://MovaiReact/external \"@babel/runtime/helpers/esm/createClass\"","webpack://MovaiReact/external \"@babel/runtime/helpers/esm/extends\"","webpack://MovaiReact/external \"@babel/runtime/helpers/esm/possibleConstructorReturn\"","webpack://MovaiReact/external \"@babel/runtime/helpers/esm/get\"","webpack://MovaiReact/external \"@babel/runtime/helpers/esm/inherits\"","webpack://MovaiReact/external \"mov-fe-lib-core\"","webpack://MovaiReact/external \"@babel/runtime/helpers/esm/classPrivateFieldGet\"","webpack://MovaiReact/external \"@babel/runtime/helpers/esm/toConsumableArray\"","webpack://MovaiReact/external \"@babel/runtime/regenerator\"","webpack://MovaiReact/external \"@material-ui/core/styles\"","webpack://MovaiReact/external \"@babel/runtime/helpers/esm/slicedToArray\"","webpack://MovaiReact/external \"@babel/runtime/helpers/esm/asyncToGenerator\"","webpack://MovaiReact/external \"@material-ui/core\"","webpack://MovaiReact/external \"@babel/runtime/helpers/esm/objectWithoutProperties\"","webpack://MovaiReact/external \"@material-ui/icons/ChevronRight\"","webpack://MovaiReact/external \"@material-ui/core/MenuItem\"","webpack://MovaiReact/external \"@material-ui/core/Typography\"","webpack://MovaiReact/external \"lodash\"","webpack://MovaiReact/external \"@material-ui/icons/Search\"","webpack://MovaiReact/external \"react-resize-detector\"","webpack://MovaiReact/external \"@babel/runtime/helpers/esm/classPrivateFieldSet\"","webpack://MovaiReact/external \"react-dom\"","webpack://MovaiReact/external \"@material-ui/icons/Clear\"","webpack://MovaiReact/external \"@babylonjs/gui/2D\"","webpack://MovaiReact/external \"rbush\"","webpack://MovaiReact/external \"@material-ui/core/Button\"","webpack://MovaiReact/external \"@material-ui/core/Drawer\"","webpack://MovaiReact/external \"@material-ui/icons/ExpandMore\"","webpack://MovaiReact/external \"@material-ui/core/Collapse\"","webpack://MovaiReact/external \"@material-ui/core/Menu\"","webpack://MovaiReact/external \"material-table\"","webpack://MovaiReact/external \"@material-ui/icons/AddBox\"","webpack://MovaiReact/external \"@material-ui/icons/ArrowDownward\"","webpack://MovaiReact/external \"@material-ui/icons/Check\"","webpack://MovaiReact/external \"@material-ui/icons/ChevronLeft\"","webpack://MovaiReact/external \"@material-ui/icons/DeleteOutline\"","webpack://MovaiReact/external \"@material-ui/icons/Edit\"","webpack://MovaiReact/external \"@material-ui/icons/FilterList\"","webpack://MovaiReact/external \"@material-ui/icons/FirstPage\"","webpack://MovaiReact/external \"@material-ui/icons/LastPage\"","webpack://MovaiReact/external \"@material-ui/icons/Remove\"","webpack://MovaiReact/external \"@material-ui/icons/SaveAlt\"","webpack://MovaiReact/external \"@material-ui/icons/ViewColumn\"","webpack://MovaiReact/external \"@material-ui/core/Tabs\"","webpack://MovaiReact/external \"@material-ui/core/Tab\"","webpack://MovaiReact/external \"@material-ui/core/TextField\"","webpack://MovaiReact/external \"@material-ui/core/FormControlLabel\"","webpack://MovaiReact/external \"@material-ui/core/Switch\"","webpack://MovaiReact/external \"@material-ui/core/InputBase\"","webpack://MovaiReact/external \"@material-ui/core/Breadcrumbs\"","webpack://MovaiReact/external \"@material-ui/icons/NavigateNext\"","webpack://MovaiReact/external \"earcut\"","webpack://MovaiReact/external \"lodash.isequal\"","webpack://MovaiReact/external \"@babylonjs/core/Maths/math\"","webpack://MovaiReact/external \"@material-ui/core/InputLabel\"","webpack://MovaiReact/external \"@material-ui/core/FormControl\"","webpack://MovaiReact/external \"@material-ui/core/Select\"","webpack://MovaiReact/external \"clsx\"","webpack://MovaiReact/external \"@material-ui/core/IconButton\"","webpack://MovaiReact/external \"@material-ui/core/utils\"","webpack://MovaiReact/external \"@babel/runtime/helpers/esm/taggedTemplateLiteral\"","webpack://MovaiReact/external \"styled-components\"","webpack://MovaiReact/external \"@material-ui/core/colors\"","webpack://MovaiReact/external \"@babylonjs/loaders\"","webpack://MovaiReact/./src/Components/Snackbar/Snackbar.css?c276","webpack://MovaiReact/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://MovaiReact/./src/Components/Snackbar/Snackbar.css","webpack://MovaiReact/./node_modules/css-loader/dist/runtime/api.js","webpack://MovaiReact/./src/Components/Button.js","webpack://MovaiReact/./src/Components/Modal/AbstractModal.js","webpack://MovaiReact/./src/Components/Modal/ConfirmAlertModal.js","webpack://MovaiReact/./src/Components/Drawer.js","webpack://MovaiReact/./src/Components/Collapse.js","webpack://MovaiReact/./src/Components/VerticalBar.js","webpack://MovaiReact/./src/Components/ContextMenu.js","webpack://MovaiReact/./src/Components/Table.js","webpack://MovaiReact/./src/Components/Tabs.js","webpack://MovaiReact/./src/Components/Text.js","webpack://MovaiReact/./src/Components/Toggle.js","webpack://MovaiReact/./src/Components/SearchInput.js","webpack://MovaiReact/./src/Components/Breadcrumb.js","webpack://MovaiReact/./src/Components/Viewer/BaseViewer/BaseViewer.js","webpack://MovaiReact/./src/Components/Viewer/Math/Vec2.js","webpack://MovaiReact/./src/Components/Viewer/Math/Vec3.js","webpack://MovaiReact/./src/Components/Viewer/Utils/AnnotationManager.js","webpack://MovaiReact/./src/Components/Viewer/Utils/Clipboard.js","webpack://MovaiReact/./src/Components/Viewer/NodeItem/NodeItem.js","webpack://MovaiReact/./src/Components/Viewer/Math/Mat3.js","webpack://MovaiReact/./src/Components/Viewer/Util3d/GizmoManagerBuilder.js","webpack://MovaiReact/./src/Components/Viewer/Util3d/CameraBuilder.js","webpack://MovaiReact/./src/Components/Viewer/Util3d/PositionalLightBuilder.js","webpack://MovaiReact/./src/Components/Viewer/Util3d/ReferentialBuilder.js","webpack://MovaiReact/./src/Components/Viewer/Util3d/GroundBuilder.js","webpack://MovaiReact/./src/Components/Viewer/Util3d/DirectionalLightBuilder.js","webpack://MovaiReact/./src/Components/Viewer/NodeItem/Box.js","webpack://MovaiReact/./src/Components/Viewer/Util3d/Util3d.js","webpack://MovaiReact/./src/Components/Viewer/NodeItem/GlobalRef.js","webpack://MovaiReact/./src/Components/Viewer/Actions/Action.js","webpack://MovaiReact/./src/Components/Viewer/NodeItem/AssetNodeItem.js","webpack://MovaiReact/./src/Components/Viewer/NodeItem/Map.js","webpack://MovaiReact/./src/Components/Viewer/Utils/DefaultScene.js","webpack://MovaiReact/./src/Components/Viewer/Actions/MouseKeysAction.js","webpack://MovaiReact/./src/Components/Viewer/Actions/DragObjectsAction.js","webpack://MovaiReact/./src/Components/Viewer/NodeItem/KeyPoint.js","webpack://MovaiReact/./src/Components/Viewer/Actions/AddKeyPointAction.js","webpack://MovaiReact/./src/Components/Viewer/Utils/Constants.js","webpack://MovaiReact/./src/Components/Viewer/NodeItem/BoxRegion.js","webpack://MovaiReact/./src/Components/Viewer/Actions/BoxRegionAction.js","webpack://MovaiReact/./src/Components/Viewer/NodeItem/Path.js","webpack://MovaiReact/./src/Components/Viewer/Actions/DrawPathAction.js","webpack://MovaiReact/./src/Components/Viewer/NodeItem/PolygonRegion.js","webpack://MovaiReact/./src/Components/Viewer/Actions/PolygonRegionAction.js","webpack://MovaiReact/./src/Components/Viewer/Actions/OrbitAction.js","webpack://MovaiReact/./src/Components/Viewer/Graph/Graph.js","webpack://MovaiReact/./src/Components/Viewer/Graph/GraphEmbedding.js","webpack://MovaiReact/./src/Components/Viewer/NodeItem/GraphItem.js","webpack://MovaiReact/./src/Components/Viewer/Actions/DrawGraphAction.js","webpack://MovaiReact/./src/Components/Viewer/MainView/MainViewActions.js","webpack://MovaiReact/./src/Components/Viewer/AssetsManager/MapLoader.js","webpack://MovaiReact/./src/Components/Viewer/Actions/AddMapAction.js","webpack://MovaiReact/./src/Components/Viewer/NodeItem/Robot.js","webpack://MovaiReact/./src/Components/Viewer/NodeItem/PointCloud.js","webpack://MovaiReact/./src/Components/Viewer/Utils/MeshCache.js","webpack://MovaiReact/./src/Components/Viewer/Utils/MeshLoader.js","webpack://MovaiReact/./src/Components/Viewer/Actions/RobotAction.js","webpack://MovaiReact/./src/Components/Viewer/NodeItem/Mesh.js","webpack://MovaiReact/./src/Components/Viewer/Actions/AddMeshAction.js","webpack://MovaiReact/./src/Components/Viewer/Utils/AssetsTypesFactory.js","webpack://MovaiReact/./src/Components/Viewer/NodeItem/Wall.js","webpack://MovaiReact/./src/Components/Viewer/MainView/NodeItemFactoryMap.js","webpack://MovaiReact/./src/Components/Viewer/MainView/MainViewRetriever.js","webpack://MovaiReact/./src/Components/Viewer/Utils/SceneServerUtils.js","webpack://MovaiReact/./src/Components/Viewer/TreeObject/TreeObject.js","webpack://MovaiReact/./src/Components/Viewer/TreeObject/TreeNode.js","webpack://MovaiReact/./src/Components/Viewer/Utils/TreeServerUtils.js","webpack://MovaiReact/./src/Components/Viewer/AssetsManager/AssetsManager.js","webpack://MovaiReact/./src/Components/Viewer/Utils/Animator.js","webpack://MovaiReact/./src/Components/Viewer/Utils/DefaultMouseEvents.js","webpack://MovaiReact/./src/Components/Viewer/SceneViewer.js","webpack://MovaiReact/./src/Components/Select.js","webpack://MovaiReact/./src/Components/Snackbar/Alert/svg-icons/CreateSVGIcon.js","webpack://MovaiReact/./src/Components/Snackbar/Alert/svg-icons/svgIcons.js","webpack://MovaiReact/./src/Components/Snackbar/Alert/Alert.js","webpack://MovaiReact/./src/Components/Snackbar/Snackbar.js","webpack://MovaiReact/./src/styles/Themes.js","webpack://MovaiReact/./src/styles/Style.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","api","content","default","options","locals","memo","isOldIE","Boolean","document","all","atob","getTarget","target","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","e","stylesInDom","getIndexByIdentifier","identifier","result","length","modulesToDom","list","idCountMap","identifiers","item","id","base","count","concat","index","obj","css","media","sourceMap","references","updater","push","addStyle","insertStyleElement","style","createElement","attributes","nonce","keys","forEach","setAttribute","insert","Error","appendChild","textStore","replaceText","replacement","filter","join","applyToSingletonTag","remove","styleSheet","cssText","cssNode","createTextNode","childNodes","removeChild","insertBefore","applyToTag","removeAttribute","btoa","unescape","encodeURIComponent","JSON","stringify","firstChild","singleton","singletonCounter","update","styleIndex","parentNode","removeStyleElement","newObj","lastIdentifiers","newList","toString","newLastIdentifiers","_i","_index","splice","___CSS_LOADER_API_IMPORT___","useSourceMap","this","map","cssMapping","sourceMapping","base64","data","sourceURLs","sources","source","sourceRoot","cssWithMappingToString","mediaQuery","dedupe","alreadyImportedModules","Button","props","className","onClick","color","variant","size","startIcon","disabled","children","propTypes","PropTypes","func","string","element","node","isRequired","bool","defaultProps","console","log","undefined","margin","position","overflow","display","flexDirection","AbstractModal","submit","onSubmit","cancel","onCancel","onKeyPress","open","onClose","alignItems","justifyContent","width","height","minWidth","minHeight","flexGrow","padding","fontWeight","title","paddingLeft","alignSelf","cancelColor","cancelText","submitColor","submitText","ConfirmAlertModal","message","Drawer","anchor","ANCHOR","left","right","top","bottom","Collapse","React","useState","setOpen","useEffect","clickLambda","button","iconStyle","divided","in","useStyles","makeStyles","theme","container","backgroundColor","logoArea","textAlign","navigationArea","accountArea","VerticalBar","classes","upperElement","navigationList","lowerElement","array","ContextMenu","anchorEl","setAnchorEl","handleClose","cloneElement","evt","currentTarget","keepMounted","menuList","reduce","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","Table","columns","icons","actions","components","localization","actionsColumnIndex","draggable","grouping","search","toolbar","searchFieldAlignment","paging","TabPanel","selectedTab","other","component","role","hidden","aria-labelledby","any","tabPanel","overflowY","Tabs","setSelectedTab","onChange","event","newSelectedTab","indicatorColor","textColor","tabList","tab","label","a11yProps","scrollable","number","Text","fontFamily","fontStyle","fontSize","marginLeft","marginRight","Toggle","control","checked","toggle","onToggle","labelPlacement","SearchInput","searchInput","enableTimeout","timer","clearTimeout","setTimeout","handleSearch","time","placeholder","searchIcon","setSearchInput","inputRoot","input","inputInput","inputProps","handleChange","Component","withStyles","borderRadius","shape","fade","palette","common","white","spacing","breakpoints","up","pointerEvents","transition","transitions","withTheme","marginTop","link","cursor","textDecoration","lastLabel","Breadcrumb","separator","aria-label","pathList","function","FLEX_STYLE","BaseViewer","reactCanvas","useRef","antialias","engineOptions","adaptToDeviceRatio","sceneOptions","onRender","is2render","onSceneReady","sceneFactory","rest","loaded","setLoaded","scene","setScene","setSize","engine","Engine","current","Scene","isReady","onReadyObservable","addOnce","runRenderLoop","render","dispose","focus","handleWidth","handleHeight","onResize","innerHeight","getEngine","resize","Vec2","x","y","vec","z","op","a","b","acc","v","Math","sqrt","dot","scale","lambda","fromArray","biLambda","fold","initial","Vec3","constructor","Array","vec3","operation","ans","f","Vector3","binary","initialValue","max","Number","MAX_VALUE","min","some","isNaN","isFinite","babylon","of","random","u","identityMatrix","e1","e2","e3","pivot","add","normalize","w","sub","AnnotationManager","annotations","instance","observers","retrieveAnnotationsFromDb","MasterDB","subscribe","Scope","Name","actionMap","del","annotation","delAnnotation","set","addAnnotation","Annotation","names2delete","annotationType","names","includes","labels","annotationObj","Type","type","toLowerCase","Label","getInstance","getAnnotations","Clipboard","Clip","write","read","capitalize","Utils","NodeItem","mesh","keyValueMap","TYPE","getMouseContextActions","nodeItem","getType","ofBabylon","toArray","quaternion","Maybe","fromNull","rotationQuaternion","orLazy","q","Quaternion","RotationYawPitchRoll","rotation","material","flatMap","diffuseColor","g","orSome","isVisible","isEnabled","info","toDict","Color3","schema","jsonSchema","properties","oldName","uiSchema","toHexString","setAnnotations2Form","form","FromHexString","emissiveColor","mainView","copy","mousePosFromRoot","someMainView","getSceneMemory","rootItem","getRootNode","copyDict","newPosArray","copiedNodeItem","ofDict","parent","addNodeItem2Tree","deleteNodeFromTreeUsingName","dict","someDict","toBabylon","babylonQuaternion","babylonColor","enumNames","enum","Mat3","v1","v2","v3","mat3","prodVec","dotVec","mat","equals","babylonMat","arrayMat","Matrix","GetAsMatrix3x3","GizmoManagerBuilder","_scene","_isPosition","_isRotation","_isBoundingBox","_isScale","_usePointerToAttachGizmos","gizmoManager","GizmoManager","positionGizmoEnabled","rotationGizmoEnabled","boundingBoxGizmoEnabled","scaleGizmoEnabled","usePointerToAttachGizmos","CameraBuilder","_sphericalCoordinates","_target","_name","floor","sphericalCoordinates","values","ArcRotateCamera","PositionalLightBuilder","_position","_intensity","intensity","light","PointLight","ReferentialBuilder","_isPickable","_boxParams","_size","isPickable","boxParams","axisX","Mesh","CreateLines","Zero","axisY","axisZ","localOrigin","MeshBuilder","CreateBox","GroundBuilder","_width","_height","_textureSrc","textureSrc","ground","CreateGround","translate","Space","WORLD","StandardMaterial","ambientTexture","Texture","uScale","vScale","DirectionalLightBuilder","_direction","direction","DirectionalLight","Box","DEFAULT_SIZE","maybeDict","orUndefined","boxMesh","Util3d","createBox","mapDict2Mesh","localPosition","GlobalRef","NAME","meshParent","meshParentPos","meshParentRotMat","getRotationMatrix","meshParentScaling","scaling","mul","getWorldCoordinates","positionInWorld","forwardCoordinates","worldPosition","getLocalCoordinatesFromWorld","computeLocalCoordinatesFromMesh","localRotationMatrix","maybeQuaternion","toRotationMatrix","orElseRun","ofBabylonMatrix","Red","normals","getVerticesData","VertexBuffer","NormalKind","positions","PositionKind","lines","FromArray","scaleInPlace","normalLines","CreateLineSystem","uArray","subtract","Dot","faces","updatable","vertexData","VertexData","indices","applyToMesh","polygon","triangulation","earcut","len","i3","vec3Poly","orientation","edge","arrayOfPoints","ZERO","randomDigits","parentView","rootMesh","arrayOfVector3","transform","isArray","Gray","segments","surface","orthogonalBasisFromVector","sign","Cross","theta","PI","cos","sin","zeroIndex","uIndex","meshFromPositionAndFaces","convertToFlatShadedMesh","diameter","sphere","CreateSphere","getMaterialFromColor","box","points","radius","CreateTube","path","sideOrientation","DOUBLESIDE","pickInfo","pick","pointerX","pointerY","hit","pickedPoint","none","pickedMesh","curve","distance","orientations","atan2","nbPoints","closed","Curve3","CreateCatmullRomSpline","getPoints","splineObj","getCurveOrientations","THETA","ROS_ORIGIN","rosOrigin","getRosOrigin","globalRefMesh","referentialBuilder","build","rotationMatrix","pos","abs","Action","memory","attachedMesh","camera","attachControl","canvas","highlightNodeInTree","highlightNodeInScene","closeContextDial","setContextActionIndex","AssetNodeItem","assetName","Map","DefaultScene","RotationGizmo","UtilityLayerRenderer","xGizmo","dragBehavior","detach","scaleRatio","yGizmo","COLLISION_RADIUS","cameraBuilder","inertia","collisionRadius","panningInertia","checkCollisions","panningSensibility","lowerRadiusLimit","directionalLightBuilder","wireframe","clearColor","Black","collisionsEnabled","_uid","getUniqueId","advancedTexture","AdvancedDynamicTexture","CreateFullscreenUI","text","TextBlock","addControl","MouseKeysAction","codeActionDict","Escape","buttonActionFactory","ACTIONS","orbit","KeyG","dragObjects","KeyP","drawPath","KeyB","drawBoxRegion","KeyR","drawRegion","KeyK","addKeyPoint","KeyC","drawGraph","code","action","setSelectedAction","DragObjectsAction","buttons","maybeSelectedMesh","pickMesh","currentMesh","detachControl","getGroundPosition","groundPosition","groundPositionInLocalCoordinates","mousePointInLocal","clickPointInLocal","shiftFromCenterOfMass","handleMeshRightClick","addGizmo","highlightMeshInScene","setProperties","getMouseCoordinatesFromRoot","mousePosRoot","handleRightClickWithoutMesh","setMouseContextActions","getPasteOnClick","pasteAction","paste","selectedMesh","currentLocal","getX","getY","notifyObservers","groundPos","bigDisplacement","updateNodeInServer","undoManager","addIt","getUndoAbleAction","predicateActionList","predicate","getDeleteButtonAction","ctrlKey","shiftKey","undo","redo","getHighlightedNodeName","getNodeFromTree","predicateAction","setPropertiesWithName","icon","UndoManager","nodeName","maybeNode","onDeleteNode","getContextActions","is2updateServer","displacement","obs","updatedPointMesh","actionBuilder","doAction","newPos","undoAction","invertDisplacement","KeyPoint","CreatePolyhedron","custom","TRIANGULAR_ANTIPRISM","axis","category","vertex","face","AddKeyPointAction","is2addInServer","keyPoint","setPositionWithLocalVector","Axis","Z","maybeMousePos","mousePos","oldMousePos","tempMesh","createKeyPoint","Constants","RADIUS","POINTS_DENSITY","CLOUD_FUNCTION_NAME","BoxRegion","corners","keyPoints","lower","scaleX","scaleY","worldCorners","oldDimensions","toForm","dimensions","isEqual","ofFormDimensions","newLowerPositionInWorldCoordinates","parseFloat","newLocalDimensions","localLowerPosition","notify","createBoxRegionMesh","backFaceCulling","visibility","createPlaceHolderKeyPoints","FACES","boxRegion","middlePoint","X","Y","h","boxRegionMesh","getKeyPointObserverFunction","boxRegionTreeNode","newBox","average","pointAverageVec3","newMesh","locallyTranslate","_children","k","j","createNewMeshFromOldUsingNewBox","corner","createSphere","Observable","BoxRegionAction","createBoxRegion","TEMP_BOX_REGION_NAME","renderMenus","region","localRegion","centeredRegion","boxRegionItem","Path","localPath","splinePath","selectedKeyPointIndex","selectedKeyPoint","formPosition","newPosInWorldCoordinates","localPos","spline","getSplineFromCurve","createTubeFromPoints","Identity","splineObj2redis","path2return","point","getMeshOnClick","defaultKeyPointUpdate","oldMesh","childrenCopy","kChild","getConeMesh","createNewMeshFromOldUsingNewPoints","newPoints","keyPointUpdateFunction","pointAverage","onAddNewPointKeyPointUpdate","addKeyPointInBetween","keyPointMesh","pathTreeNode","nextIndex","numberOfPoints","oldPoints","specialIndex","getKeyPointActions","deleteKeyPoint","curveMesh","getSphereMesh","setContextActions","createOrientedCone","DrawPathAction","mouseCurve","drawPathPoints","createCurve","TEMP_PATH_NAME","getDrawPathContextAction","contextActions","keyCodeActionMap","Enter","Backspace","localCurve","centeredCurve","pathItem","positiveMod","mod","PolygonRegion","localPolygon","createExtrudedPolygonMesh","keypoints","reverseOrientation","triangleIndice","polygonRegionMesh","lowerTriangulation","triangulatePolygon","upperTriangulation","slice","stitchTriangulation","computeOrientation","modi","stitchingBoundaries","polygonTreeNode","polygonMesh","PolygonRegionAction","createPolygonRegion","drawPolyPoints","getDrawPolygonContextAction","Yellow","polygonRegionItem","OrbitAction","Graph","edgeKey","addVertex","ijKey","jiKey","getEdgeProp","isSome","adjMap","vertices","edges","split","GraphEmbedding","graph","getVertexProp","vertexProp","NAMESPACES","rTreeVertices","RTreeVertices","rTreeEdges","RTreeEdges","vertexGenerator","getAdjMap","iIndex","isCurve","maybeVertexI","getVertex","vertexI","RVertex","setVertexProp","rVertex","delVertex","edgeIndexes","jIndex","rVertexI","rVertexJ","edgeIJ","getEdgeByIndex","REdge","edgeJI","addEdge","setEdgeProp","getEdge","rEdge","indexes","delEdge","hasEdge","queryArray","toBBox","getMinDistanceVertex","neighbors","getNeighbors","jId","vProp","vertexIndex","prop","propEdge","queryPoint","getMinDistanceEdge","edgeProp","rEdges","minDist","minDistIndex","dist","rVertices","vp","getVertices","getEdges","dataVertexI","dataVertexJ","dataEdgeIJ","weight","vertexPosition","vertexId","minX","minY","maxX","maxY","RBush","bEdgeIds","every","MIN_VALUE","vertexPosI","vertexPosJ","GraphItem","sceneId","graphItemInstances","isDisposed","graphPlaceHolder","getGraphPlaceHolder","graphFormMapper","getDefaultFormMapper","vertexMesh","getVertexMesh","Blue","addObserver2VertexMesh","addOnClickVertex","meshByVertexId","updateVertexPosition","updateCurvedNeighbors","getToFormVertex","edgePos","vertexPos","getToFormEdge","edgeMesh","getUndoManager","doIt","getUndoDeleteEdge","meshByEdgeId","getVertexByIndex","ids","key2Edge","ofForm","lodash","edgePositions","maybe","meanPoint","edgePosition","newEdgePosition","updateEdgeFromForm","isEdgeCurve","iIsCurve","jIsCurve","buildVertex","buildEdge","getCurveEdgePoints","partialEdge","abstractGraph","getAbstractGraph","doesVertexCollideWithEdge","resolveVertexEdgeCollision","buildSimpleVertex","maybeVertex","createVertexMesh","getVertexObs","movedVertexIds","getCurvedNeighbors","heatFlow","vertexIds","visitedVertex","vertexStack","pop","df","getUndoDeleteVertex","neigh","simpleNeigh","curvedPaths","getCurvedPathFromVertex","edgeIsCurve","meshes","highlightMeshesInScene","newPosition","protectEdge","updateVertex","isEdgeInPair","cata","edgeVec3","edgeBabylon","proj","vertexInEdge","importFeatures2Edge","leftEdge","rightEdge","getUndoResolveVertexEdgeCollision","oldEdge","oldEdgePositions","oldEdgeIndex","leftEdgePositions","leftEdgeIndex","rightEdgePositions","rightEdgeIndex","rEdgeWithData","uId","vId","rEdgePlus","importFeatures","rEdgeMinus","getEdgeMesh","addObserver2EdgeMesh","addOnClickEdge","getEdgeObs","getOnClickEdge","edgeVertex","maybeV","getUndoDelCurveEdge","getUndoDelLineEdge","curvedVertex","curvePath","graphItem","posIJ","importData","getCurveEdgeMesh","error","halfD2x","halfD2xNorm","CreateQuadraticBezier","One","DrawGraphAction","findIndex","ca","mousePosConsumer","MODES","line","onPointerDownLine","onPointerDownCurve","Green","onPointerMoveLine","onPointerMoveCurve","getGraph","graphNode","escapeAction","deletePreviewMeshes","previewMeshes","createEdge","edgeEmbedding","toLocalCoordinates","getEdgeWithVertexMeshes","addCurveEdge","getCurveEdgeWithVertexMeshes","edgeInWorldCoordinate","drawMethod","createGraphItemIfNone","free","MapLoader","yamlSrc","cachedMap","fetch","getMapUrl","response","parseYaml","image","resolution","origin","imageSize","yamlTxt","actionDict","parse","getImageSize","src","Promise","resolve","reject","img","Image","onload","naturalWidth","naturalHeight","AddMapAction","mapLoader","load","href","download","rootNodeMaybe","groundBuilder","originPos","rootNode","inverseCoordinates","setTarget","is2sendServer","createMeshGround","getObjectTree","addMap","Robot","meshTree","robot","oldTimeInMillis","robotAnimator","Date","getTime","requestAnimationFrameId","requestAnimationFrame","updateRobot","unsubscribe","Parameter","cancelAnimationFrame","newRobotTf","thetaX","boundingSphere","getBoundingInfo","center","tfSphereMesh","ONES","addRotation","spherePlaceHolder","child","createRobotMeshTreeRecursive","robotTree","robotMesh","RobotBuilder","dt","vel","rotate","LOCAL","tf","Value","updateRobotMeshTree","robot2Animate","_meshTree","_parentMesh","_id","_keyValueMap","_assetName","parentMesh","ofNull","PointCloud","pointCloudSubscribe","front_lidar","updatePointCloud","colors","fill","pointCloudMesh","disableLighting","pointsCloud","pointSize","MeshCache","meshCacheBySceneId","meshCache","setEnabled","cloneMesh","clone","orNull","MeshLoader","meshName","mapFunction","re","rej","hasKey","assetsManager","AssetsManager","meshTask","addMeshTask","MESH_URL","onSuccess","task","loadedMeshes","put","onError","exception","onFinish","RobotAction","robotAnimatorFactory","getDefaultAnimator","addRobot","createRobotMeshTree","builder","cloudPoint","parentObj","parentName","treeNode","actionMemoryClone","ROBOT_MESH_NAME","transformMesh","then","createRobotFromMesh","getParentMesh","getRobot","animate","isImport","getCloudPoint","AddMeshAction","addMesh2Scene","createNormals","finalName","meshItem","getMeshUrl","addMesh","ASSETS_TYPES","AssetsTypesFactory","loader","getSocketAnimator","Wall","localWall","createWallMesh","centeredWall","tangent","normal","wallMesh","wallNode","newWall","wall","NODE_ITEM_FACTORY_MAP","MainViewRetriever","serverScene","errors","importSceneRecursive","importDefaultScene","nodeDict","nodeItemClass","isAsset","importAsset","assetType","assetActionMap","getAssetsActionMap","retrievedAction","cause","solution","arrayTree","sortArrayTree","sort","importNodeItem","SceneServerUtils","sceneName","successCallback","DEFAULT_SUCCESS","failCallback","DEFAULT_FAILURE","cloudFunction","successFailIf","failureLocation","success","compareTreesRecursive","treeA","treeB","nodeEquality","nodeA","nodeB","expand","expanded","filterTree","tree","nod","flatten","TreeObject","getNodeRecursive","answer","childPredicate","getParentNodeRecursive","nodeMap","mapRecursive","newTree","mappedNode","forEachRecursive","TreeNode","TreeNodeBuilder","_title","_item","_expanded","_isVisible","TreeServerUtils","objectTree","getNode","childName","getParentNode","is2delInServer","deleteNodeInServer","getParentFromChild","node2Add","maybeParentNode","addNodeItem2Server","assets","assetsActionMap","retrieveAssetsFromDb","RobotName","getRobotNameUpdate","getRobotNameSub","File","FileLabel","getMapUpdater","signalObservers","getMapSubscriber","finishSub","getMeshUpdater","getMeshSubscriber","place","finishInitialSubscribers","subs","afterLoad","delAsset","robots","dataGetter","after","getMapFileData","fileName","filename","addAsset","maybeGet","getMeshFileData","observer","assetKey","asset","localRobot","deleteRobot","Animator","state","next","doWhile","requestAnimeId","stop","play","AnimatorBuilder","_state","_next","_end","end","DefaultMouseEvents","mousePosClick","mousePosMove","sceneMemory","mouseLocationText","toFixed","setMouseLocationTxt","panCamera","vBabylon","getBabylonCoordinates","initialState","T","nextState","vdt","animateCamera","filterActions","SceneViewer","ofScene","focusObject","setCameraToTarget","newObjectTree","_absolutePosition","onPointerDown","onPointerUp","onPointerMove","afterLoading","retrieveScene","errorList","importScene","setState","loadAssets","retrieveSceneFromServer","renderScene","getRenderingCanvas","addCanvasEventListeners","createMouseLocationText","createCamera","createLight","createGizmo","highlightLayer","hl","HighlightLayer","lastHlMeshes","prevProps","propVar","loadScene","addEventListener","resetErrorList","createScene","getErrorSolutionList","masterProps","augmentProps","formControl","Select","noneOption","hiddenLabel","labelId","CreateSVGIcon","viewBox","xmlns","xmlnsXlink","svgIcons","Close","ErrorOutline","InfoOutlined","ReportProblemOutlined","SuccessOutlined","defaultIconMapping","warning","Alert","closeText","iconMapping","severity","clsx","oneOf","filledSuccess","filledInfo","filledWarning","filledError","opacity","ReactConfirmAlert","close","closeOnClickOutside","onClickOutside","isClickOutside","overlay","removeBodyClass","removeElementReconfirm","closeOnEscape","onKeypressEscape","isKeyCodeEscape","keyCode","keyboardClose","autoClose","getElementById","autoHideDuration","removeEventListener","willUnmount","customUI","closable","dom","handleClickOverlay","renderCustomUI","elevation","unmountComponentAtNode","body","classList","snackbar","divTarget","createElementReconfirm","themeFactory","particular","typography","h1","h2","h3","h4","h5","h6","body1","Themes","dark","createMuiTheme","bottomNavigation","background","globalStats","borderColor","subTextColor","upperTextColor","primary","main","secondary","green","overrides","MuiButton","outlined","contained","containedPrimary","containedSecondary","MuiButtonGroup","groupedContainedPrimary","groupedOutlined","groupedText","MuiIconButton","MuiListItem","MuiFormControlLabel","MuiInputBase","font","MuiFilledInput","border","underline","localStorage","getItem","setItem","Style","createGlobalStyle","S"],"mappings":"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","file":"dist/index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MovaiReact\"] = factory();\n\telse\n\t\troot[\"MovaiReact\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 76);\n","module.exports = require(\"@babel/runtime/helpers/esm/defineProperty\");","module.exports = require(\"@babylonjs/core\");","module.exports = require(\"react\");","module.exports = require(\"@babel/runtime/helpers/esm/assertThisInitialized\");","module.exports = require(\"prop-types\");","module.exports = require(\"@babel/runtime/helpers/esm/getPrototypeOf\");","module.exports = require(\"monet\");","module.exports = require(\"@babel/runtime/helpers/esm/classCallCheck\");","module.exports = require(\"@babel/runtime/helpers/esm/createClass\");","module.exports = require(\"@babel/runtime/helpers/esm/extends\");","module.exports = require(\"@babel/runtime/helpers/esm/possibleConstructorReturn\");","module.exports = require(\"@babel/runtime/helpers/esm/get\");","module.exports = require(\"@babel/runtime/helpers/esm/inherits\");","module.exports = require(\"mov-fe-lib-core\");","module.exports = require(\"@babel/runtime/helpers/esm/classPrivateFieldGet\");","module.exports = require(\"@babel/runtime/helpers/esm/toConsumableArray\");","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"@material-ui/core/styles\");","module.exports = require(\"@babel/runtime/helpers/esm/slicedToArray\");","module.exports = require(\"@babel/runtime/helpers/esm/asyncToGenerator\");","module.exports = require(\"@material-ui/core\");","module.exports = require(\"@babel/runtime/helpers/esm/objectWithoutProperties\");","module.exports = require(\"@material-ui/icons/ChevronRight\");","module.exports = require(\"@material-ui/core/MenuItem\");","module.exports = require(\"@material-ui/core/Typography\");","module.exports = require(\"lodash\");","module.exports = require(\"@material-ui/icons/Search\");","module.exports = require(\"react-resize-detector\");","module.exports = require(\"@babel/runtime/helpers/esm/classPrivateFieldSet\");","module.exports = require(\"react-dom\");","module.exports = require(\"@material-ui/icons/Clear\");","module.exports = require(\"@babylonjs/gui/2D\");","module.exports = require(\"rbush\");","module.exports = require(\"@material-ui/core/Button\");","module.exports = require(\"@material-ui/core/Drawer\");","module.exports = require(\"@material-ui/icons/ExpandMore\");","module.exports = require(\"@material-ui/core/Collapse\");","module.exports = require(\"@material-ui/core/Menu\");","module.exports = require(\"material-table\");","module.exports = require(\"@material-ui/icons/AddBox\");","module.exports = require(\"@material-ui/icons/ArrowDownward\");","module.exports = require(\"@material-ui/icons/Check\");","module.exports = require(\"@material-ui/icons/ChevronLeft\");","module.exports = require(\"@material-ui/icons/DeleteOutline\");","module.exports = require(\"@material-ui/icons/Edit\");","module.exports = require(\"@material-ui/icons/FilterList\");","module.exports = require(\"@material-ui/icons/FirstPage\");","module.exports = require(\"@material-ui/icons/LastPage\");","module.exports = require(\"@material-ui/icons/Remove\");","module.exports = require(\"@material-ui/icons/SaveAlt\");","module.exports = require(\"@material-ui/icons/ViewColumn\");","module.exports = require(\"@material-ui/core/Tabs\");","module.exports = require(\"@material-ui/core/Tab\");","module.exports = require(\"@material-ui/core/TextField\");","module.exports = require(\"@material-ui/core/FormControlLabel\");","module.exports = require(\"@material-ui/core/Switch\");","module.exports = require(\"@material-ui/core/InputBase\");","module.exports = require(\"@material-ui/core/Breadcrumbs\");","module.exports = require(\"@material-ui/icons/NavigateNext\");","module.exports = require(\"earcut\");","module.exports = require(\"lodash.isequal\");","module.exports = require(\"@babylonjs/core/Maths/math\");","module.exports = require(\"@material-ui/core/InputLabel\");","module.exports = require(\"@material-ui/core/FormControl\");","module.exports = require(\"@material-ui/core/Select\");","module.exports = require(\"clsx\");","module.exports = require(\"@material-ui/core/IconButton\");","module.exports = require(\"@material-ui/core/utils\");","module.exports = require(\"@babel/runtime/helpers/esm/taggedTemplateLiteral\");","module.exports = require(\"styled-components\");","module.exports = require(\"@material-ui/core/colors\");","module.exports = require(\"@babylonjs/loaders\");","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!./Snackbar.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","\"use strict\";\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce = typeof __webpack_nonce__ !== 'undefined' ? __webpack_nonce__ : null;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && btoa) {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"body.react-confirm-alert-body-element {\\n  overflow: hidden;\\n}\\n\\n.react-confirm-alert-blur {\\n  filter: url(#gaussian-blur);\\n  filter: blur(2px);\\n  -webkit-filter: blur(2px);\\n}\\n\\n.react-confirm-alert-overlay {\\n  position: fixed;\\n  top: calc(100vh - 300px);\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  z-index: 99;\\n  display: -webkit-flex;\\n  display: -moz-flex;\\n  display: -ms-flex;\\n  display: -o-flex;\\n  display: flex;\\n  justify-content: flex-start;\\n  -ms-align-items: center;\\n  align-items: flex-end;\\n  opacity: 1;\\n}\\n\\n.react-confirm-alert-body {\\n  width: 400px;\\n  padding: 30px;\\n}\\n\\n.react-confirm-alert-svg {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n}\\n\\n.react-confirm-alert-body > h1 {\\n  margin-top: 0;\\n}\\n\\n.react-confirm-alert-body > h3 {\\n  margin: 0;\\n  font-size: 16px;\\n}\\n\\n.react-confirm-alert-button-group {\\n  display: -webkit-flex;\\n  display: -moz-flex;\\n  display: -ms-flex;\\n  display: -o-flex;\\n  display: flex;\\n  justify-content: flex-start;\\n  margin-top: 20px;\\n}\\n\\n.react-confirm-alert-button-group > button {\\n  outline: none;\\n  background: #333;\\n  border: none;\\n  display: inline-block;\\n  padding: 6px 18px;\\n  color: #eee;\\n  margin-right: 10px;\\n  border-radius: 5px;\\n  font-size: 12px;\\n  cursor: pointer;\\n}\\n\\n.icon-container {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\n.icon-container:hover {\\n  cursor: pointer;\\n}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}","import React from \"react\";\nimport MaterialButton from \"@material-ui/core/Button\";\nimport PropTypes from \"prop-types\";\n\nconst Button = props => {\n  return (\n    <MaterialButton\n      className={props.className}\n      style={props.style}\n      onClick={props.onClick}\n      color={props.color}\n      variant={props.variant}\n      size={props.size}\n      startIcon={props.startIcon}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </MaterialButton>\n  );\n};\n\nButton.propTypes = {\n  style: PropTypes.object,\n  onClick: PropTypes.func,\n  color: PropTypes.string,\n  variant: PropTypes.string,\n  size: PropTypes.string,\n  startIcon: PropTypes.element,\n  children: PropTypes.node.isRequired,\n  disabled: PropTypes.bool\n};\nButton.defaultProps = {\n  style: {},\n  onClick: () => console.log(\"Click MOV.AI button\"),\n  color: \"default\", // default, inherit, primary or secondary\n  variant: \"contained\", // text, outlined, contained\n  size: \"medium\", // small, medium, large\n  startIcon: undefined,\n  children: <div></div>,\n  disabled: false\n};\n\nexport default Button;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"../Button\";\nimport {\n  Card,\n  Typography,\n  CardContent,\n  Divider,\n  // Button,\n  CardActions,\n  Modal\n} from \"@material-ui/core\";\n\nconst style = {\n  margin: \"auto\",\n  position: \"absolute\",\n  overflow: \"auto\",\n  display: \"flex\",\n  flexDirection: \"column\"\n};\n\nconst AbstractModal = props => {\n  const onKeyPress = e => {\n    if (e.key === \"Enter\") {\n      submit();\n    }\n  };\n\n  const submit = () => {\n    props.onSubmit();\n  };\n\n  const cancel = () => {\n    props.onCancel();\n  };\n\n  return (\n    <Modal\n      onKeyPress={onKeyPress}\n      open={props.open}\n      onClose={cancel}\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      }}\n    >\n      <Card\n        style={{\n          ...style,\n          width: props.width,\n          height: props.height,\n          minWidth: \"260px\",\n          minHeight: \"280px\"\n        }}\n      >\n        <CardContent\n          style={{\n            flexGrow: 1,\n            display: \"flex\",\n            flexDirection: \"column\",\n            minHeight: 0\n          }}\n        >\n          <Typography\n            variant=\"h5\"\n            style={{\n              padding: \"12px 0px 12px 6px\",\n              fontWeight: 600\n            }}\n          >\n            {props.title}\n          </Typography>\n          <div\n            style={{\n              paddingLeft: \"6px\",\n              flexGrow: 1,\n              overflow: \"auto\",\n              minHeight: 0\n            }}\n          >\n            {props.children}\n          </div>\n        </CardContent>\n        <Divider />\n        <CardActions style={{ alignSelf: \"flex-end\" }}>\n          <Button onClick={cancel} variant=\"outlined\" color={props.cancelColor}>\n            {props.cancelText}\n          </Button>\n          <Button color={props.submitColor} onClick={submit}>\n            {props.submitText}\n          </Button>\n        </CardActions>\n      </Card>\n    </Modal>\n  );\n};\n\nAbstractModal.propTypes = {\n  onSubmit: PropTypes.func,\n  onCancel: PropTypes.func,\n  open: PropTypes.bool,\n  title: PropTypes.string,\n  submitText: PropTypes.string,\n  submitColor: PropTypes.string,\n  cancelText: PropTypes.string,\n  cancelColor: PropTypes.string,\n  width: PropTypes.string,\n  height: PropTypes.string\n};\n\nAbstractModal.defaultProps = {\n  onSubmit: () => {},\n  onCancel: () => {},\n  open: false,\n  title: \"New\",\n  submitText: \"Confirm\",\n  submitColor: \"primary\",\n  cancelText: \"Cancel\",\n  cancelColor: \"inherit\",\n  width: \"25%\",\n  height: \"25%\"\n};\n\nexport default AbstractModal;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport AbstractModal from \"./AbstractModal\";\n\nconst ConfirmAlertModal = props => {\n  return (\n    <AbstractModal\n      onSubmit={props.onSubmit}\n      onCancel={props.onCancel}\n      open={props.open}\n      title={props.title}\n      submitText={props.submitText}\n      submitColor={props.submitColor}\n      cancelText={props.cancelText}\n      cancelColor={props.cancelColor}\n    >\n      <div>{props.message}</div>\n      <div>{props.children}</div>\n    </AbstractModal>\n  );\n};\n\nConfirmAlertModal.propTypes = {\n  title: PropTypes.string,\n  message: PropTypes.string,\n  onSubmit: PropTypes.func,\n  onCancel: PropTypes.func,\n  open: PropTypes.bool,\n  submitText: PropTypes.string,\n  submitColor: PropTypes.string,\n  cancelText: PropTypes.string,\n  cancelColor: PropTypes.string\n};\n\nConfirmAlertModal.defaultProps = {\n  title: \"Insert Text here\",\n  message: \"Are you sure?\",\n  onSubmit: () => {},\n  onCancel: () => {},\n  open: false,\n  submitText: \"Delete\",\n  submitColor: \"secondary\",\n  cancelText: \"Cancel\",\n  cancelColor: \"primary\"\n};\n\nexport default ConfirmAlertModal;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport MaterialDrawer from \"@material-ui/core/Drawer\";\n\nconst Drawer = props => {\n  return (\n    <MaterialDrawer\n      style={props.style}\n      anchor={props.anchor}\n      open={props.open}\n      onClose={props.onClose}\n    >\n      {props.children}\n    </MaterialDrawer>\n  );\n};\n\nDrawer.propTypes = {\n  style: PropTypes.object,\n  anchor: PropTypes.string,\n  open: PropTypes.bool,\n  children: PropTypes.object\n};\n\nDrawer.defaultProps = {\n  style: {},\n  anchor: \"left\",\n  open: false,\n  children: <div></div>\n};\n\nDrawer.ANCHOR = { left: \"left\", right: \"right\", top: \"top\", bottom: \"bottom\" };\n\nexport default Drawer;\n","import React from \"react\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport PropTypes from \"prop-types\";\nimport MaterialCollapse from \"@material-ui/core/Collapse\";\nimport { Divider, ListItem, List } from \"@material-ui/core\";\n\nconst Collapse = props => {\n  const [open, setOpen] = React.useState(props.open);\n\n  React.useEffect(() => {\n    if (props.open !== open) {\n      setOpen(props.open);\n    }\n  }, [props.open]);\n\n  const handleClickFactory = clickLambda => () => {\n    setOpen(!open);\n    clickLambda();\n  };\n\n  return (\n    <List>\n      <ListItem button onClick={handleClickFactory(props.onClick)}>\n        {open ? (\n          <ExpandMore style={{ ...props.iconStyle }} />\n        ) : (\n          <ChevronRightIcon style={{ ...props.iconStyle }} />\n        )}\n        <div style={{ width: \"100%\" }}>{props.item}</div>\n      </ListItem>\n      {props.divided ? <Divider /> : []}\n      <MaterialCollapse\n        className={props.className}\n        style={props.style}\n        in={open}\n      >\n        {props.children}\n      </MaterialCollapse>\n    </List>\n  );\n};\n\nCollapse.propTypes = {\n  item: PropTypes.object,\n  onClick: PropTypes.func,\n  open: PropTypes.bool,\n  divided: PropTypes.bool,\n  iconStyle: PropTypes.object\n};\n\nCollapse.defaultProps = {\n  item: <div></div>,\n  onClick: () => {},\n  open: false,\n  divided: false,\n  style: {},\n  iconStyle: {}\n};\n\nexport default Collapse;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    height: \"100%\",\n    backgroundColor: props => props.backgroundColor,\n    width: props => props.width,\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  logoArea: {\n    padding: \"17px\",\n    textAlign: \"center\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  navigationArea: {\n    flexGrow: 1,\n    display: \"flex\",\n    flexDirection: \"column\",\n    //justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  accountArea: {\n    padding: \"17px\",\n    textAlign: \"center\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n}));\n\nconst VerticalBar = props => {\n  const classes = useStyles(props);\n  return (\n    <div className={classes.container}>\n      <div className={classes.logoArea}>{props.upperElement}</div>\n      <div className={classes.navigationArea}>\n        {props.navigationList.map((element, index) => {\n          return (\n            <div key={index} style={{ padding: \"15px 0px\" }}>\n              {element}\n            </div>\n          );\n        })}\n      </div>\n      <div className={classes.accountArea}>{props.lowerElement}</div>\n    </div>\n  );\n};\n\nVerticalBar.propTypes = {\n  upperElement: PropTypes.node.isRequired,\n  navigationList: PropTypes.array,\n  lowerElement: PropTypes.node.isRequired,\n  width: PropTypes.string,\n  backgroundColor: PropTypes.string\n};\nVerticalBar.defaultProps = {\n  upperElement: <div></div>,\n  navigationList: [<div></div>],\n  lowerElement: <div></div>,\n  width: \"68px\",\n  backgroundColor: \"#424242\"\n};\n\nexport default VerticalBar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nconst ContextMenu = (props) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      {React.cloneElement(props.element, {\n        onClick: (evt) => {\n          if (props.element.props.onClick !== undefined) {\n            props.element.props.onClick(); // If user defined a onClick\n          }\n          handleClick(evt); // opens the contextMenu\n        },\n      })}\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {props.menuList.reduce((result, item, index) => {\n          console.log(\"item\", item);\n          if (item && typeof item !== \"function\") {\n            result.push(\n              <MenuItem\n                onClick={() => {\n                  item.onClick();\n                  if (item.onClose || item.onClose === undefined) {\n                    handleClose();\n                  }\n                }}\n                key={index}\n              >\n                {item.element}\n              </MenuItem>\n            );\n          }\n          return result;\n        }, [])}\n      </Menu>\n    </div>\n  );\n};\n\nContextMenu.propTypes = {\n  element: PropTypes.node.isRequired,\n  navigationList: PropTypes.array,\n  lowerElement: PropTypes.node.isRequired,\n  width: PropTypes.string,\n  backgroundColor: PropTypes.string,\n};\nContextMenu.defaultProps = {\n  element: <div>Ahaha</div>,\n  menuList: [\n    {\n      onClick: () => console.log(\"clicked 1\"),\n      element: \"Profile\",\n      onClose: true,\n    },\n  ],\n  lowerElement: <div></div>,\n  width: \"68px\",\n  backgroundColor: \"#424242\",\n};\n\nexport default ContextMenu;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport MaterialTable from \"material-table\";\n\nimport { forwardRef } from \"react\";\n\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n};\n\n// More information in: https://material-table.com/#/docs/all-props\n\nconst Table = (props) => {\n  return (\n    <MaterialTable\n      style={props.style}\n      title={props.title}\n      columns={props.columns}\n      data={props.data}\n      icons={tableIcons}\n      actions={props.actions}\n      options={props.options}\n      components={props.components}\n      localization={props.localization}\n    />\n  );\n};\n\nTable.propTypes = {\n  style: PropTypes.object,\n  title: PropTypes.string,\n  columns: PropTypes.array,\n  data: PropTypes.array,\n  actions: PropTypes.array,\n  options: PropTypes.object,\n  components: PropTypes.object,\n  localization: PropTypes.object,\n};\nTable.defaultProps = {\n  style: {},\n  title: \"\",\n  columns: [],\n  data: [],\n  actions: [],\n  options: {\n    actionsColumnIndex: -1,\n    draggable: false,\n    grouping: false,\n    search: false,\n    toolbar: false,\n    searchFieldAlignment: \"left\",\n    paging: false,\n  },\n  components: {},\n};\n\nexport default Table;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MaterialTabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\n\nfunction TabPanel(props) {\n  const { children, selectedTab, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={selectedTab !== index}\n      id={`tabpanel-${index}`}\n      aria-labelledby={`tab-${index}`}\n      {...other}\n    >\n      {selectedTab === index && children}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  selectedTab: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `tab-${index}`,\n    \"aria-controls\": `tabpanel-${index}`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    height: \"100%\"\n  },\n  tabPanel: {\n    flexGrow: 1,\n    minHeight: 0,\n    height: \"calc(100% - 48px)\",\n    overflowY: \"auto\"\n  }\n}));\n\nexport default function Tabs(props) {\n  const classes = useStyles();\n  const [selectedTab, setSelectedTab] = React.useState(props.selectedTab);\n\n  React.useEffect(() => {\n    if (props.selectedTab !== selectedTab) {\n      setSelectedTab(props.selectedTab);\n    }\n  }, [props.selectedTab]);\n\n  const handleChange = (event, newSelectedTab) => {\n    setSelectedTab(newSelectedTab);\n  };\n\n  return (\n    <div className={classes.root}>\n      <MaterialTabs\n        value={selectedTab}\n        onChange={handleChange}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n      >\n        {props.tabList.map((tab, index) => (\n          <Tab key={index} label={tab.label} {...a11yProps(index)} />\n        ))}\n      </MaterialTabs>\n      {props.tabList.map((tab, index) => (\n        <TabPanel\n          key={index}\n          selectedTab={selectedTab}\n          index={index}\n          className={props.scrollable ? classes.tabPanel : undefined}\n        >\n          {tab.component}\n        </TabPanel>\n      ))}\n    </div>\n  );\n}\n\nTabs.propTypes = {\n  tabList: PropTypes.array,\n  selectedTab: PropTypes.number,\n  scrollable: PropTypes.bool\n};\n\nTabs.defaultProps = {\n  tabList: [\n    { label: \"Tab 1\", component: <div>Component 1</div> },\n    {\n      label: \"Tab 2\",\n      component: (\n        <div>\n          Lorem Ipsum is simply dummy text of the printing and typesetting\n          industry. Lorem Ipsum has been the industry standard dummy text ever\n          since the 1500s, when an unknown printer took a galley of type and\n          scrambled it to make a type specimen book. It has survived not only\n          five centuries, but also the leap into electronic typesetting,\n          remaining essentially unchanged. It was popularised in the 1960s with\n          the release of Letraset sheets containing Lorem Ipsum passages, and\n          more recently with desktop publishing software like Aldus PageMaker\n          including versions of Lorem Ipsum.\n        </div>\n      )\n    },\n    { label: \"Tab 3\", component: <div>Component 3</div> }\n  ],\n  selectedTab: 0,\n  scrollable: true\n};\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PropTypes from \"prop-types\";\n\nconst Text = props => {\n  return <TextField {...props}></TextField>;\n};\n\nText.propTypes = {};\nText.defaultProps = {};\n\nexport default Text;\n","import React from \"react\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { green, grey } from \"@material-ui/core/colors\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  label: {\n    fontFamily: \"Roboto\",\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fontSize: \"16px\",\n    marginLeft: 0,\n    marginRight: 0,\n  },\n}));\n\nconst Toggle = (props) => {\n  const classes = useStyles();\n  return (\n    <FormControlLabel\n      control={\n        <Switch\n          checked={props.toggle}\n          onChange={props.onToggle}\n          color={props.color}\n          disabled={props.disabled}\n          hidden={props.hidden}\n        />\n      }\n      labelPlacement={props.labelPlacement}\n      label={props.label}\n      classes={{ label: classes.label }}\n      style={{ ...props.style, marginLeft: 0, marginRight: 0 }}\n    />\n  );\n};\n\nToggle.propTypes = {\n  toggle: PropTypes.bool,\n  onToggle: PropTypes.func,\n  label: PropTypes.string,\n  color: PropTypes.string,\n  labelPlacement: PropTypes.string, // 'end', 'start', 'top', 'bottom'\n  style: PropTypes.object,\n};\nToggle.defaultProps = {\n  color: \"primary\", // or secondary\n};\n\nexport default Toggle;\n","import React, { Component } from \"react\";\nimport { fade, withStyles } from \"@material-ui/core/styles\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport PropTypes from \"prop-types\";\n\nconst styles = theme => ({\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(3),\n      width: \"auto\"\n    }\n  },\n  searchIcon: {\n    width: theme.spacing(7),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  inputRoot: {\n    color: \"inherit\"\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 7),\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: 200\n    }\n  }\n});\n\nclass SearchInput extends Component {\n  searchInput = undefined;\n  timer = undefined;\n\n  handleChange = evt => {\n    this.searchInput = evt.target.value;\n    if (this.props.enableTimeout) {\n      if (this.timer) {\n        clearTimeout(this.timer);\n      }\n      this.timer = setTimeout(this.handleSearch, this.props.time);\n    } else {\n      this.handleSearch();\n    }\n  };\n\n  handleSearch = () => {\n    if (this.searchInput !== undefined) this.props.onChange(this.searchInput);\n  };\n\n  render() {\n    const { classes, style, placeholder } = this.props;\n    return (\n      <div className={classes.search} style={style}>\n        <div className={classes.searchIcon}>\n          <SearchIcon />\n        </div>\n        <InputBase\n          ref={this.setSearchInput}\n          placeholder={placeholder}\n          classes={{\n            root: classes.inputRoot,\n            input: classes.inputInput\n          }}\n          inputProps={{ \"aria-label\": \"search\" }}\n          onChange={this.handleChange}\n        />\n      </div>\n    );\n  }\n}\n\nSearchInput.propTypes = {\n  placeholder: PropTypes.string,\n  onChange: PropTypes.func,\n  time: PropTypes.number,\n  enableTimeout: PropTypes.bool,\n  style: PropTypes.object\n};\n\nSearchInput.defaultProps = {\n  placeholder: \"Search...\",\n  onChange: input => {\n    console.log(input);\n  },\n  time: 250,\n  enableTimeout: true,\n  style: {}\n};\n\nexport default withStyles(styles, { withTheme: true })(SearchInput);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nimport Typography from \"@material-ui/core/Typography\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& > * + *\": {\n      marginTop: theme.spacing(2)\n    }\n  },\n  link: {\n    fontSize: \"24px\",\n    fontWeight: 800,\n    fontFamily: \"Avenir\",\n    \"&:hover\": {\n      cursor: \"pointer\",\n      textDecoration: \"underline\"\n    }\n  },\n  lastLabel: {\n    fontSize: \"24px\",\n    fontWeight: 800,\n    fontFamily: \"Avenir\"\n  }\n}));\n\nconst Breadcrumb = props => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Breadcrumbs\n        separator={<NavigateNextIcon fontSize=\"small\" />}\n        aria-label=\"breadcrumb\"\n        style={props.style}\n      >\n        {props.pathList.map((element, index) => {\n          if (props.pathList.length - 1 !== index) {\n            return (\n              <Typography\n                key={index}\n                color=\"primary\"\n                variant=\"inherit\"\n                className={classes.link}\n                onClick={element.function}\n              >\n                {element.label}\n              </Typography>\n            );\n          }\n        })}\n        <Typography color=\"textPrimary\" className={classes.lastLabel}>\n          {props.pathList[props.pathList.length - 1].label}\n        </Typography>\n      </Breadcrumbs>\n    </div>\n  );\n};\n\nBreadcrumb.propTypes = {\n  pathList: PropTypes.array\n};\n\nBreadcrumb.defaultProps = {\n  pathList: [\n    { label: \"Mov.ai\", function: () => console.log(\"pth1/\") },\n    { label: \"User\", function: () => console.log(\"path1/path2\") },\n    { label: \"John Doe\" }\n  ]\n};\n\nexport default Breadcrumb;\n","//========================================================================================\n/*                                                                                      *\n *         Based from https://doc.babylonjs.com/resources/babylonjs_and_reactjs         *\n *                                                                                      */\n//========================================================================================\n\nimport { Engine, Scene } from \"@babylonjs/core\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport ReactResizeDetector from \"react-resize-detector\";\nimport PropTypes from \"prop-types\";\nconst FLEX_STYLE = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  flexGrow: 1\n};\n\nconst BaseViewer = props => {\n  const reactCanvas = useRef(null);\n  const {\n    antialias,\n    engineOptions,\n    adaptToDeviceRatio,\n    sceneOptions,\n    onRender,\n    onSceneReady,\n    is2render,\n    sceneFactory,\n    ...rest\n  } = props;\n\n  const [loaded, setLoaded] = useState(false);\n  const [scene, setScene] = useState(null);\n  const [size, setSize] = useState({ width: 100, height: 100 });\n\n  useEffect(() => {\n    if (!loaded) {\n      setLoaded(true);\n      const engine = new Engine(\n        reactCanvas.current,\n        antialias,\n        engineOptions,\n        adaptToDeviceRatio\n      );\n      const scene = sceneFactory\n        ? sceneFactory(engine)\n        : new Scene(engine, sceneOptions);\n      setScene(scene);\n      if (scene.isReady()) {\n        props.onSceneReady(scene);\n      } else {\n        scene.onReadyObservable.addOnce(scene => props.onSceneReady(scene));\n      }\n      if (!is2render) return;\n      engine.runRenderLoop(() => {\n        if (typeof onRender === \"function\") {\n          onRender(scene);\n        }\n        scene.render();\n      });\n    }\n\n    return () => {\n      if (scene !== null) scene.dispose();\n    };\n  }, [reactCanvas]);\n\n  const onResize = (width, height) => {\n    setSize({\n      width,\n      height: height <= window.innerHeight ? height : window.innerHeight * 0.85\n    });\n    scene && scene.getEngine().resize();\n  };\n\n  loaded && reactCanvas.current.focus();\n  return (\n    <div style={{ ...FLEX_STYLE }}>\n      <canvas\n        ref={reactCanvas}\n        width={size.width}\n        height={size.height}\n        {...rest}\n      />\n      <ReactResizeDetector handleWidth handleHeight onResize={onResize} />\n    </div>\n  );\n};\n\nBaseViewer.propTypes = {\n  antialias: PropTypes.bool,\n  engineOptions: PropTypes.object,\n  adaptToDeviceRatio: PropTypes.bool,\n  sceneOptions: PropTypes.object,\n  onSceneReady: PropTypes.func,\n  onRender: PropTypes.func,\n  is2render: PropTypes.bool,\n  sceneFactory: PropTypes.func\n};\n\nBaseViewer.defaultProps = {\n  antialias: true,\n  onSceneReady: scene => {},\n  is2render: true\n};\n\nexport default BaseViewer;\n","//immutable class, not managing exceptions\nclass Vec2 {\n  constructor(x, y) {\n    this.vec = [x, y].map(z => (z ? z : 0));\n  }\n\n  get x() {\n    return this.vec[0];\n  }\n\n  get y() {\n    return this.vec[1];\n  }\n\n  toArray() {\n    return this.vec;\n  }\n\n  add(y) {\n    return this.op(y, (a, b) => a + b);\n  }\n\n  sub(y) {\n    return this.op(y, (a, b) => a - b);\n  }\n\n  mul(y) {\n    return this.op(y, (a, b) => a * b);\n  }\n\n  div(y) {\n    return this.op(y, (a, b) => a / b);\n  }\n\n  dot(y) {\n    return this.vec.reduce((acc, v, i) => acc + v * y.vec[i], 0);\n  }\n\n  prod(y) {\n    return new Vec2(this.x * y.x - this.y * y.y, this.x * y.y + this.y * y.x);\n  }\n\n  length() {\n    return Math.sqrt(this.dot(this));\n  }\n\n  normalize() {\n    return this.scale(1 / this.length());\n  }\n\n  dual() {\n    return new Vec2(-this.y, this.x);\n  }\n\n  sym() {\n    return this.scale(-1);\n  }\n\n  conj() {\n    return new Vec2(this.x, -this.y);\n  }\n\n  scale(r) {\n    return this.map(z => z * r);\n  }\n\n  map(lambda) {\n    return Vec2.fromArray(this.vec.map(lambda));\n  }\n\n  /**\n   * Returns a vec2 from the operation function bilambda\n   * @param {*} y\n   * @param {*} biLambda\n   */\n  op(y, biLambda) {\n    return Vec2.fromArray(this.vec.map((v, i) => biLambda(v, y.vec[i])));\n  }\n\n  reduce(fold, initial) {\n    return this.vec.reduce(fold, initial);\n  }\n\n  toObject() {\n    return { x: this.x, y: this.y };\n  }\n\n  toString() {\n    return `{x: ${this.x}, y:${this.y}}`;\n  }\n\n  static fromArray(array) {\n    if (array.length < 2) throw new Error(\"array must have size > 2\");\n    return new Vec2(array[0], array[1]);\n  }\n\n  static of(x, y) {\n    return new Vec2(x, y);\n  }\n\n  static ZERO = new Vec2(0, 0);\n  static e1 = new Vec2(1, 0);\n  static e2 = new Vec2(0, 1);\n}\n\nexport default Vec2;\n","import { Vector3 } from \"@babylonjs/core\";\nimport Vec2 from \"./Vec2\";\n\n/**\n * Class that describes immutable 3-vectors\n */\nclass Vec3 {\n  //no for's because performance\n  constructor(array) {\n    if (array.constructor !== Array || array.length < 3)\n      throw new Error(`${array} is not a valid 3-vector`);\n    this.vec3 = [...array];\n  }\n\n  get x() {\n    return this.vec3[0];\n  }\n\n  get y() {\n    return this.vec3[1];\n  }\n\n  get z() {\n    return this.vec3[2];\n  }\n\n  add(x) {\n    return this.op(x, (a, b) => a + b);\n  }\n\n  sub(x) {\n    return this.op(x, (a, b) => a - b);\n  }\n\n  mul(x) {\n    return this.op(x, (a, b) => a * b);\n  }\n\n  op(x, operation) {\n    const ans = [];\n    ans[0] = operation(this.vec3[0], x.vec3[0]);\n    ans[1] = operation(this.vec3[1], x.vec3[1]);\n    ans[2] = operation(this.vec3[2], x.vec3[2]);\n    return new Vec3(ans);\n  }\n\n  scale(r) {\n    return this.map(x => x * r);\n  }\n\n  dot(x) {\n    return (\n      this.vec3[0] * x.vec3[0] +\n      this.vec3[1] * x.vec3[1] +\n      this.vec3[2] * x.vec3[2]\n    );\n  }\n\n  map(f) {\n    return new Vec3(this.vec3.map(f));\n  }\n\n  length() {\n    return Math.sqrt(this.dot(this));\n  }\n\n  normalize = () => {\n    const l = this.length();\n    if (l === 0) throw new Error(\"You can't normalize a zero norm vector\");\n    return this.scale(1 / l);\n  };\n\n  toBabylon() {\n    return new Vector3(this.vec3[0], this.vec3[1], this.vec3[2]);\n  }\n\n  toArray() {\n    return this.vec3;\n  }\n\n  toVec2() {\n    return new Vec2(this.x, this.y);\n  }\n\n  equals(v) {\n    if (v.constructor !== this.constructor) return false;\n    return v.vec3\n      .map((x, index) => v.vec3[index] === x)\n      .reduce((e, v) => e && v, true);\n  }\n\n  reduce(binary, initialValue) {\n    return this.vec3.reduce(binary, initialValue);\n  }\n\n  getMax() {\n    return this.reduce((a, b) => Math.max(a, b), -Number.MAX_VALUE);\n  }\n\n  getMin() {\n    return this.reduce((a, b) => Math.min(a, b), Number.MAX_VALUE);\n  }\n\n  someNaNOrInfinite() {\n    return this.vec3.some(x => isNaN(x) || !isFinite(x));\n  }\n\n  static ofBabylon(babylon) {\n    return new Vec3([babylon.x, babylon.y, babylon.z]);\n  }\n\n  static of(array) {\n    return array ? new Vec3(array) : new Vec3([0, 0, 0]);\n  }\n\n  static fromArray(array) {\n    return Vec3.of(array);\n  }\n\n  static random() {\n    return new Vec3([1, 2, 3].map(Math.random()));\n  }\n\n  /**\n   *\n   * @param {*} u: Vec3\n   */\n  static orthogonalBasisFromVector(u) {\n    const identityMatrix = [Vec3.e1, Vec3.e2, Vec3.e3];\n    //choose pivot\n    let pivot = 0;\n    for (let i = 0; i < 3; i++) {\n      if (u.vec3[i] !== 0) {\n        pivot = i;\n        break;\n      }\n    }\n    let v = identityMatrix[(pivot + 1) % 3].add(\n      identityMatrix[pivot].scale(-u.vec3[(pivot + 1) % 3] / u.vec3[pivot])\n    );\n    v = v.normalize();\n    let w = identityMatrix[(pivot + 2) % 3].add(\n      identityMatrix[pivot].scale(-u.vec3[(pivot + 2) % 3] / u.vec3[pivot])\n    );\n    w = w.normalize();\n    w = w.sub(v.scale(v.dot(w)));\n    return { u: u.normalize(), v: v, w: w.normalize() };\n  }\n\n  static ONES = Vec3.of([1, 1, 1]);\n  static ZERO = Vec3.of([0, 0, 0]);\n  static e1 = new Vec3([1, 0, 0]);\n  static e2 = new Vec3([0, 1, 0]);\n  static e3 = new Vec3([0, 0, 1]);\n}\n\nexport default Vec3;\n","import { MasterDB } from \"mov-fe-lib-core\";\n\nclass AnnotationManager {\n  constructor() {\n    if (instance) return instance;\n    instance = this;\n    this.annotations = {};\n    this.observers = [];\n  }\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                   Getters & Setters                                  *\n   *                                                                                      */\n  //========================================================================================\n\n  getAnnotations = () => this.annotations;\n\n  load() {\n    this.retrieveAnnotationsFromDb();\n    return this;\n  }\n  /**\n   *\n   * @param {*} lambda: AnnotationManager -> {}\n   */\n  pushObserver(lambda) {\n    this.observers.push(lambda);\n    return this;\n  }\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                         Utils                                        *\n   *                                                                                      */\n  //========================================================================================\n\n  retrieveAnnotationsFromDb() {\n    MasterDB.subscribe(\n      { Scope: \"Annotation\", Name: \"*\" },\n      data => {\n        console.log(\"Annotation update\", data);\n        const actionMap = {\n          del: annotation => this.delAnnotation(annotation),\n          set: annotation => this.addAnnotation(annotation)\n        };\n        const annotation = data.key.Annotation;\n        if (data.event in actionMap) {\n          actionMap[data.event](annotation);\n          this.observers.forEach(f => f(this));\n        }\n      },\n      data => {\n        console.log(\"Annotation start\", data);\n        const annotation = data.value.Annotation;\n        this.addAnnotation(annotation);\n      }\n    );\n  }\n\n  delAnnotation(annotation) {\n    if (!annotation) return;\n    const names2delete = Object.keys(annotation).reduce((e, x) => {\n      e.push(x);\n      return e;\n    }, []);\n    Object.keys(this.annotations).forEach(annotationType => {\n      const value = this.annotations[annotationType];\n      value.names = value.names.filter(x => !names2delete.includes(x));\n      value.labels = value.labels.filter(x => !names2delete.includes(x));\n    });\n  }\n\n  addAnnotation(annotation) {\n    if (!annotation) return;\n    Object.keys(annotation).forEach(name => {\n      const annotationObj = annotation[name];\n      if (!annotationObj.Type) return;\n      const type = annotationObj.Type.toLowerCase();\n      const label = annotationObj.Label;\n      if (!(type in this.annotations)) {\n        this.annotations[type] = { names: [], labels: [] };\n      }\n      this.annotations[type].names.push(name);\n      this.annotations[type].labels.push(label ? label : name);\n    });\n  }\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                        Static                                        *\n   *                                                                                      */\n  //========================================================================================\n\n  static getInstance() {\n    return new AnnotationManager();\n  }\n\n  static getAnnotations() {\n    return AnnotationManager.getInstance().getAnnotations();\n  }\n}\nlet instance = null;\nexport default AnnotationManager;\n","import { Clipboard as Clip } from \"mov-fe-lib-core\";\n\nconst SCENE_CONTEXT = \"scene\";\n\nexport default class Clipboard {\n  static copy(value) {\n    Clip.write(SCENE_CONTEXT, value);\n  }\n  static paste() {\n    return Clip.read(SCENE_CONTEXT);\n  }\n}\n","import Vec3 from \"../Math/Vec3\";\nimport { Maybe } from \"monet\";\nimport { Utils } from \"mov-fe-lib-core\";\nimport AnnotationManager from \"../Utils/AnnotationManager\";\nimport { Quaternion, Color3, Vector3 } from \"@babylonjs/core\";\nimport Clipboard from \"../Utils/Clipboard\";\n\nconst { capitalize } = Utils;\n\nclass NodeItem {\n  constructor(mesh, keyValueMap = {}) {\n    this.name = mesh.name;\n    this.mesh = mesh;\n    this.mesh.getMouseContextActions = this.getMouseContextActions;\n    this.mesh.nodeItem = this;\n    this.keyValueMap = keyValueMap;\n    //Hack to load annotations\n    AnnotationManager.getInstance();\n  }\n\n  dispose() {\n    this.mesh.dispose();\n  }\n\n  toDict() {\n    return {\n      name: this.name,\n      type: this.getType(),\n      position: Vec3.ofBabylon(this.mesh.position).toArray(),\n      quaternion: Maybe.fromNull(this.mesh.rotationQuaternion)\n        .map(x => [x.w, x.x, x.y, x.z])\n        .orLazy(() => {\n          const q = Quaternion.RotationYawPitchRoll(\n            this.mesh.rotation.y,\n            this.mesh.rotation.x,\n            this.mesh.rotation.z\n          );\n          return [q.w, q.x, q.y, q.z];\n        }),\n      color: Maybe.fromNull(this.mesh.material)\n        .flatMap(x => Maybe.fromNull(x.diffuseColor).map(z => [z.r, z.g, z.b]))\n        .orSome([0, 0, 0]),\n      keyValueMap: this.keyValueMap,\n      isVisible: this.mesh.isEnabled()\n    };\n  }\n\n  /**\n   * Generates json based on https://github.com/rjsf-team/react-jsonschema-form\n   */\n  toForm() {\n    const info = this.toDict();\n    const color = new Color3(info.color[0], info.color[1], info.color[2]);\n    const schema = {\n      jsonSchema: {\n        type: \"object\",\n        properties: {\n          oldName: {\n            type: \"string\"\n          },\n          name: {\n            type: \"string\",\n            title: \"Name\"\n          },\n          type: {\n            type: \"string\",\n            title: \"Type\"\n          },\n          position: {\n            type: \"object\",\n            title: \"Position\",\n            properties: {\n              x: {\n                type: \"number\",\n                title: \"x\"\n              },\n              y: {\n                type: \"number\",\n                title: \"y\"\n              },\n              z: {\n                type: \"number\",\n                title: \"z\"\n              }\n            }\n          },\n          quaternion: {\n            type: \"object\",\n            title: \"Orientation\",\n            properties: {\n              w: {\n                type: \"number\",\n                title: \"w\"\n              },\n              x: {\n                type: \"number\",\n                title: \"x\"\n              },\n              y: {\n                type: \"number\",\n                title: \"y\"\n              },\n              z: {\n                type: \"number\",\n                title: \"z\"\n              }\n            }\n          },\n          color: {\n            type: \"string\",\n            title: \"Color\"\n          }\n        }\n      },\n      uiSchema: {\n        type: {\n          \"ui:disabled\": true\n        },\n        color: {\n          \"ui:widget\": \"color\"\n        },\n        oldName: {\n          \"ui:widget\": \"hidden\"\n        },\n        position: {\n          \"ui:widget\": \"collapse\"\n        },\n        quaternion: {\n          \"ui:widget\": \"collapse\"\n        }\n      },\n      data: {\n        oldName: info.name,\n        name: info.name,\n        type: info.type,\n        position: {\n          x: info.position[0],\n          y: info.position[1],\n          z: info.position[2]\n        },\n        quaternion: {\n          w: info.quaternion[0],\n          x: info.quaternion[1],\n          y: info.quaternion[2],\n          z: info.quaternion[3]\n        },\n        color: color.toHexString()\n      }\n    };\n\n    NodeItem.setAnnotations2Form(schema, this.keyValueMap);\n    return schema;\n  }\n\n  /**\n   * Changes NodeItem based on a form\n   *\n   * Warning: side effect function\n   * @param {*} form\n   */\n  ofForm(form) {\n    this.name = form.name;\n    this.mesh.name = form.name;\n\n    Maybe.fromNull(form.position).forEach(position => {\n      this.mesh.position = new Vector3(position.x, position.y, position.z);\n    });\n    Maybe.fromNull(form.quaternion).forEach(quaternion => {\n      this.mesh.rotationQuaternion = new Quaternion(\n        quaternion.x,\n        quaternion.y,\n        quaternion.z,\n        quaternion.w\n      ).normalize();\n    });\n    if (this.mesh.material) {\n      this.mesh.material.diffuseColor = Color3.FromHexString(form.color);\n      this.mesh.material.emissiveColor = Color3.FromHexString(form.color);\n    }\n    this.keyValueMap = { ...form.annotations };\n  }\n\n  getType = () => NodeItem.TYPE;\n\n  getMouseContextActions(mainView) {\n    return [\n      {\n        title: \"Copy\",\n        onClick: () =>\n          // mousePosFromRoot : Vector3\n          Clipboard.copy((mousePosFromRoot, someMainView) =>\n            // \"this\" comes from the mesh\n            someMainView.getSceneMemory().forEach(({ scene }) => {\n              const { item: rootItem } = someMainView.getRootNode();\n              const item = this.nodeItem;\n              const copyDict = item.toDict();\n              copyDict.name += \"*\";\n              const newPosArray = Vec3.ofBabylon(mousePosFromRoot).toArray();\n              // preserves z-coordinate\n              newPosArray[2] = copyDict.position[2];\n              copyDict.position = newPosArray;\n              const copiedNodeItem = item.ofDict(scene, copyDict, someMainView);\n              const { mesh: copiedMesh } = copiedNodeItem;\n              copiedMesh.parent = rootItem.mesh;\n              someMainView.addNodeItem2Tree(copiedNodeItem);\n            })\n          )\n      },\n      {\n        title: \"Delete\",\n        onClick: () => mainView.deleteNodeFromTreeUsingName(this.name)\n      }\n    ];\n  }\n\n  static TYPE = \"NodeItem\";\n\n  // side-effect function\n  static mapDict2Mesh(dict, mesh) {\n    if (!mesh) throw \"can't map a null mesh\";\n    Maybe.fromNull(dict).forEach(someDict => {\n      Maybe.fromNull(dict.name).forEach(name => (mesh.name = name));\n      Maybe.fromNull(someDict.position).forEach(\n        position => (mesh.position = Vec3.of(position).toBabylon())\n      );\n      Maybe.fromNull(someDict.quaternion).forEach(quaternion => {\n        const babylonQuaternion = new Quaternion(\n          quaternion[1],\n          quaternion[2],\n          quaternion[3],\n          quaternion[0]\n        );\n        mesh.rotationQuaternion = babylonQuaternion.normalize();\n      });\n      Maybe.fromNull(someDict.color).forEach(color => {\n        const babylonColor = new Color3(color[0], color[1], color[2]);\n        Maybe.fromNull(mesh.material).forEach(material => {\n          Maybe.fromNull(material.diffuseColor).forEach(\n            z => (mesh.material.diffuseColor = babylonColor)\n          );\n          Maybe.fromNull(material.emissiveColor).forEach(\n            z => (mesh.material.emissiveColor = babylonColor)\n          );\n        });\n      });\n    });\n    return mesh;\n  }\n\n  // side effect function\n  static setAnnotations2Form(schema, keyValueMap = {}) {\n    schema.jsonSchema.properties.annotations = {\n      title: \"Annotations\",\n      type: \"object\",\n      properties: {}\n    };\n    schema.uiSchema.annotations = {\n      \"ui:widget\": \"collapse\"\n    };\n    schema.data[\"annotations\"] = { ...keyValueMap };\n    const annotations = AnnotationManager.getAnnotations();\n    Object.keys(annotations).forEach(annotation => {\n      if (annotations[annotation].labels.length > 0) {\n        schema.jsonSchema.properties.annotations.properties[annotation] = {\n          title: capitalize(annotation),\n          type: \"string\",\n          enumNames: annotations[annotation].labels,\n          enum: annotations[annotation].names\n        };\n      }\n    });\n  }\n}\n\nexport default NodeItem;\n","import Vec3 from \"./Vec3\";\nimport { Matrix } from \"@babylonjs/core\";\n\nclass Mat3 {\n  constructor(v1, v2, v3) {\n    const v = [v1, v2, v3];\n    for (let i = 0; i < v.length; i++) {\n      if (v[i].constructor !== Array || v[i].length < 3)\n        throw Error(\"One of the inputs is not a array\");\n    }\n    this.mat3 = v.map(x => new Vec3(x));\n  }\n\n  /**\n   * Matrix prod with  3-vector\n   * @param {*} v: 3-vector\n   *\n   * returns 3-vector\n   */\n  prodVec(v) {\n    let ans = new Vec3([0, 0, 0]);\n    for (let i = 0; i < this.mat3.length; i++) {\n      ans = ans.add(this.mat3[i].scale(v.vec3[i]));\n    }\n    return ans;\n  }\n\n  /**\n   * Matrix transpose prod with 3-vec\n   * @param {*} v : 3-vector\n   */\n  dotVec(v) {\n    const ans = [0, 0, 0];\n    for (let i = 0; i < this.mat3.length; i++) {\n      ans[i] = this.mat3[i].dot(v);\n    }\n    return new Vec3(ans);\n  }\n\n  prod(m) {\n    const u = this.prodVec(m.mat3[0]);\n    const v = this.prodVec(m.mat3[1]);\n    const w = this.prodVec(m.mat3[2]);\n    return new Mat3(u.vec3, v.vec3, w.vec3);\n  }\n\n  dot(m) {\n    const u = this.dotVec(m.mat3[0]);\n    const v = this.dotVec(m.mat3[1]);\n    const w = this.dotVec(m.mat3[2]);\n    return new Mat3(u.vec3, v.vec3, w.vec3);\n  }\n\n  map(f) {\n    const u = this.mat3[0].map(f);\n    const v = this.mat3[1].map(f);\n    const w = this.mat3[2].map(f);\n    return new Mat3(u.vec3, v.vec3, w.vec3);\n  }\n\n  equals(mat) {\n    if (mat.constructor !== this.constructor) return false;\n    return this.mat3\n      .map((v, index) => v.equals(mat.mat3[index]))\n      .reduce((e, v) => e && v, true);\n  }\n\n  static ofBabylonMatrix(babylonMat) {\n    const arrayMat = Matrix.GetAsMatrix3x3(babylonMat);\n    const u = [arrayMat[0], arrayMat[1], arrayMat[2]];\n    const v = [arrayMat[3], arrayMat[4], arrayMat[5]];\n    const w = [arrayMat[6], arrayMat[7], arrayMat[8]];\n    return new Mat3(u, v, w);\n  }\n\n  static of(v1, v2, v3) {\n    return new Mat3(v1, v2, v3);\n  }\n\n  static eye() {\n    return new Mat3([1, 0, 0], [0, 1, 0], [0, 0, 1]);\n  }\n}\n\nexport default Mat3;\n","import { GizmoManager } from \"@babylonjs/core\";\n\nclass GizmoManagerBuilder {\n  constructor(scene) {\n    this._scene = scene;\n    this._isPosition = false;\n    this._isRotation = false;\n    this._isBoundingBox = false;\n    this._isScale = false;\n    this._usePointerToAttachGizmos = false;\n  }\n\n  isPosition(v) {\n    this._isPosition = v;\n    return this;\n  }\n\n  isRotation(v) {\n    this._isRotation = v;\n    return this;\n  }\n\n  isBoundingBox(v) {\n    this._isBoundingBox = v;\n    return this;\n  }\n\n  isScale(v) {\n    this._isScale = v;\n    return this;\n  }\n\n  usePointerToAttachGizmos(v) {\n    this._usePointerToAttachGizmos = v;\n    return this;\n  }\n\n  build() {\n    const gizmoManager = new GizmoManager(this._scene);\n    gizmoManager.positionGizmoEnabled = this._isPosition;\n    gizmoManager.rotationGizmoEnabled = this._isRotation;\n    gizmoManager.boundingBoxGizmoEnabled = this._isBoundingBox;\n    gizmoManager.scaleGizmoEnabled = this._isScale;\n    gizmoManager.usePointerToAttachGizmos = this._usePointerToAttachGizmos;\n    return gizmoManager;\n  }\n}\n\nexport default GizmoManagerBuilder;\n","import { ArcRotateCamera } from \"@babylonjs/core\";\n\nclass CameraBuilder {\n  constructor(scene) {\n    this._scene = scene;\n    this._sphericalCoordinates = null;\n    this._target = null;\n    this._name = `camera${Math.floor(Math.random() * 1e3)}`;\n  }\n\n  name(name) {\n    this._name = name;\n    return this;\n  }\n\n  sphericalCoordinates(sphericalCoordinates) {\n    this._sphericalCoordinates = sphericalCoordinates;\n    return this;\n  }\n\n  target(target) {\n    this._target = target;\n    return this;\n  }\n\n  build() {\n    const variables = Object.values(this);\n    variables.forEach(x => {\n      if (x === null)\n        throw `There are missing variables to build a camera, e.g ${x}`;\n    });\n    return new ArcRotateCamera(\n      this._name,\n      this._sphericalCoordinates.x,\n      this._sphericalCoordinates.y,\n      this._sphericalCoordinates.z,\n      this._target,\n      this._scene\n    );\n  }\n}\n\nexport default CameraBuilder;\n","import { PointLight } from \"@babylonjs/core\";\n\nclass PositionalLightBuilder {\n  constructor(scene) {\n    this._scene = scene;\n    this._position = null;\n    this._name = `light${Math.floor(Math.random() * 1e3)}`;\n    this._intensity = 1;\n  }\n\n  position(position) {\n    this._position = position;\n    return this;\n  }\n\n  name(name) {\n    this._name = name;\n    return this;\n  }\n\n  intensity(intensity) {\n    this._intensity = intensity;\n    return this;\n  }\n\n  build() {\n    const variables = Object.values(this);\n    variables.forEach(x => {\n      if (x === null)\n        throw `There are missing variables to build a light, e.g ${x}`;\n    });\n    const light = new PointLight(this._name, this._position, this._scene);\n    light.intensity = this._intensity;\n    return light;\n  }\n}\n\nexport default PositionalLightBuilder;\n","import { Mesh, Vector3, Color3, MeshBuilder } from \"@babylonjs/core\";\nclass ReferentialBuilder {\n  constructor(scene) {\n    this._scene = scene;\n    this._name = `referential${Math.floor(Math.random() * 1e3)}`;\n    this._isPickable = true;\n    this._boxParams = { isVisible: true, size: 0.25 };\n    this._size = 1;\n  }\n\n  name(name) {\n    this._name = name;\n    return this;\n  }\n\n  isPickable(isPickable) {\n    this._isPickable = isPickable;\n    return this;\n  }\n\n  boxParams(boxParams) {\n    this._boxParams = boxParams;\n    return this;\n  }\n\n  size(size) {\n    this._size = size;\n    return this;\n  }\n\n  build() {\n    const size = this._size;\n    const axisX = Mesh.CreateLines(\n      `axisX${this._name}`,\n      [\n        new Vector3.Zero(),\n        new Vector3(size, 0, 0),\n        new Vector3(size * 0.95, 0.05 * size, 0),\n        new Vector3(size, 0, 0),\n        new Vector3(size * 0.95, -0.05 * size, 0)\n      ],\n      this._scene\n    );\n    axisX.color = new Color3(1, 0, 0);\n    axisX.isPickable = false;\n    const axisY = Mesh.CreateLines(\n      `axisY${this._name}`,\n      [\n        new Vector3.Zero(),\n        new Vector3(0, size, 0),\n        new Vector3(-0.05 * size, size * 0.95, 0),\n        new Vector3(0, size, 0),\n        new Vector3(0.05 * size, size * 0.95, 0)\n      ],\n      this._scene\n    );\n    axisY.color = new Color3(0, 1, 0);\n    axisY.isPickable = false;\n    const axisZ = Mesh.CreateLines(\n      `axisZ${this._name}`,\n      [\n        new Vector3.Zero(),\n        new Vector3(0, 0, size),\n        new Vector3(0, -0.05 * size, size * 0.95),\n        new Vector3(0, 0, size),\n        new Vector3(0, 0.05 * size, size * 0.95)\n      ],\n      this._scene\n    );\n    axisZ.color = new Color3(0, 0, 1);\n    axisZ.isPickable = false;\n\n    const localOrigin = MeshBuilder.CreateBox(\n      this._name,\n      { size: this._boxParams.size },\n      this._scene\n    );\n    localOrigin.isVisible = this._boxParams.isVisible;\n    localOrigin.isPickable = this._isPickable;\n\n    axisX.parent = localOrigin;\n    axisY.parent = localOrigin;\n    axisZ.parent = localOrigin;\n\n    return localOrigin;\n  }\n}\n\nexport default ReferentialBuilder;\n","import {\n  Mesh,\n  Vector3,\n  StandardMaterial,\n  Texture,\n  Space\n} from \"@babylonjs/core\";\n\nclass GroundBuilder {\n  constructor(scene) {\n    this._scene = scene;\n    this._name = `camera${Math.floor(Math.random() * 1e3)}`;\n    this._width = 1;\n    this._height = 1;\n    this._textureSrc = null;\n    this._isPickable = false;\n  }\n\n  name(name) {\n    this._name = name;\n    return this;\n  }\n\n  width(width) {\n    this._width = width;\n    return this;\n  }\n\n  height(height) {\n    this._height = height;\n    return this;\n  }\n\n  textureSrc(textureSrc) {\n    this._textureSrc = textureSrc;\n    return this;\n  }\n\n  isPickable(isPickable) {\n    this._isPickable = isPickable;\n    return this;\n  }\n\n  build() {\n    const ground = Mesh.CreateGround(\n      this._name,\n      this._width,\n      this._height,\n      1,\n      this._scene\n    );\n    ground.translate(new Vector3(0, -1, 0), 1e-1, Space.WORLD);\n    if (this._textureSrc) {\n      ground.material = new StandardMaterial(\n        `Texture${this._name}`,\n        this._scene\n      );\n      ground.material.ambientTexture = new Texture(\n        this._textureSrc,\n        this._scene\n      );\n      ground.material.ambientTexture.uScale = 1;\n      ground.material.ambientTexture.vScale = 1;\n    }\n    ground.isPickable = this._isPickable;\n    return ground;\n  }\n}\n\nexport default GroundBuilder;\n","import { DirectionalLight } from \"@babylonjs/core\";\n\nclass DirectionalLightBuilder {\n  constructor(scene) {\n    this._scene = scene;\n    this._direction = null;\n    this._name = `Dlight${Math.floor(Math.random() * 1e3)}`;\n    this._intensity = 1;\n  }\n\n  direction(direction) {\n    this._direction = direction;\n    return this;\n  }\n\n  name(name) {\n    this._name = name;\n    return this;\n  }\n\n  intensity(intensity) {\n    this._intensity = intensity;\n    return this;\n  }\n\n  build() {\n    const variables = Object.values(this);\n    variables.forEach(x => {\n      if (x === null)\n        throw `There are missing variables to build a light, e.g ${x}`;\n    });\n    const light = new DirectionalLight(\n      this._name,\n      this._direction.normalize(),\n      this._scene\n    );\n    light.intensity = this._intensity;\n    return light;\n  }\n}\n\nexport default DirectionalLightBuilder;\n","import NodeItem from \"./NodeItem\";\nimport { Maybe } from \"monet\";\nimport Util3d from \"../Util3d/Util3d\";\nimport { Color3 } from \"@babylonjs/core\";\n\nclass Box extends NodeItem {\n  static DEFAULT_SIZE = 0.5;\n\n  constructor(mesh, size = Box.DEFAULT_SIZE, keyValueMap = {}) {\n    super(mesh, keyValueMap);\n    this.size = size;\n  }\n\n  toDict() {\n    const dict = super.toDict();\n    dict.size = this.size;\n    return dict;\n  }\n\n  ofDict(scene, dict = null, mainView = null) {\n    return Box.ofDict(scene, dict, mainView);\n  }\n\n  getType = () => Box.TYPE;\n\n  static TYPE = \"Box\";\n\n  static ofDict(scene, dict = null, mainView = null) {\n    const maybeDict = Maybe.fromNull(dict);\n    const size = maybeDict\n      .flatMap((z) => Maybe.fromNull(z.size))\n      .orSome(Box.DEFAULT_SIZE);\n    const name = maybeDict\n      .flatMap((z) => Maybe.fromNull(z.name))\n      .orSome(`Box${Math.floor(Math.random() * 1e3)}`);\n    const keyValueMap = maybeDict\n      .flatMap((d) => Maybe.fromNull(d.keyValueMap))\n      .orUndefined();\n\n    const boxMesh = Util3d.createBox(\n      scene,\n      new Color3(Math.random(), Math.random(), Math.random()),\n      size,\n      name\n    );\n    NodeItem.mapDict2Mesh(dict, boxMesh);\n    return new Box(boxMesh, size, keyValueMap);\n  }\n}\n\nexport default Box;\n","import Vec3 from \"../Math/Vec3\";\nimport Mat3 from \"../Math/Mat3\";\nimport { Maybe } from \"monet\";\nimport GizmoManagerBuilder from \"./GizmoManagerBuilder.js\";\nimport CameraBuilder from \"./CameraBuilder\";\nimport PositionalLightBuilder from \"./PositionalLightBuilder\";\nimport ReferentialBuilder from \"./ReferentialBuilder\";\nimport GroundBuilder from \"./GroundBuilder\";\nimport DirectionalLightBuilder from \"./DirectionalLightBuilder\";\nimport earcut from \"earcut\";\nimport {\n  Vector3,\n  Color3,\n  Quaternion,\n  StandardMaterial,\n  VertexData,\n  Mesh,\n  Matrix,\n  MeshBuilder,\n  VertexBuffer,\n  Curve3\n} from \"@babylonjs/core\";\nimport GlobalRef from \"../NodeItem/GlobalRef\";\nimport Box from \"../NodeItem/Box\";\n\nclass Util3d {\n  static getWorldCoordinates(mesh, localPosition) {\n    if (mesh.parent && mesh.parent.name === GlobalRef.NAME)\n      return Vec3.ofBabylon(localPosition);\n    const meshParent = mesh.parent;\n    const meshParentPos = Vec3.ofBabylon(meshParent.position);\n    const meshParentRotMat = Util3d.getRotationMatrix(meshParent);\n    const meshParentScaling = Vec3.ofBabylon(meshParent.scaling);\n    return meshParentRotMat\n      .prodVec(\n        meshParentScaling.mul(\n          Util3d.getWorldCoordinates(mesh.parent, localPosition)\n        )\n      )\n      .add(meshParentPos);\n  }\n\n  static getBabylonCoordinates(positionInWorld) {\n    return GlobalRef.forwardCoordinates(positionInWorld);\n  }\n\n  /**\n   *\n   * @param {*} mesh\n   * @param {*} worldPosition: Vector3\n   */\n  static getLocalCoordinatesFromWorld(mesh, worldPosition) {\n    if (mesh.parent && mesh.parent.name === GlobalRef.NAME)\n      return Vec3.ofBabylon(worldPosition);\n    const meshParent = mesh.parent;\n    const meshParentPos = Vec3.ofBabylon(meshParent.position);\n    const meshParentRotMat = Util3d.getRotationMatrix(meshParent);\n    const meshParentScaling = Vec3.ofBabylon(meshParent.scaling);\n    return meshParentScaling\n      .map(z => 1 / z)\n      .mul(\n        meshParentRotMat.dotVec(\n          Util3d.getLocalCoordinatesFromWorld(meshParent, worldPosition).sub(\n            meshParentPos\n          )\n        )\n      );\n  }\n\n  /**\n   *\n   * @param {*} mesh\n   * @param {*} worldPosition: Vec3\n   */\n  static computeLocalCoordinatesFromMesh(mesh, worldPosition) {\n    /// WARNING: very similar with getLocalCoordinatesFromWorld\n    if (!mesh.parent) {\n      return worldPosition;\n    }\n    const meshParent = mesh.parent;\n    const meshParentPos = Vec3.ofBabylon(meshParent.position);\n    const meshParentRotMat = Util3d.getRotationMatrix(meshParent);\n    const meshParentScaling = Vec3.ofBabylon(meshParent.scaling);\n    // assume scaling != 0\n    const inverseScaling = meshParentScaling.map(x => 1.0 / x);\n\n    return inverseScaling.mul(\n      meshParentRotMat.dotVec(\n        Util3d.computeLocalCoordinatesFromMesh(meshParent, worldPosition).sub(\n          meshParentPos\n        )\n      )\n    );\n  }\n\n  /**\n   *\n   * @param {*} parentView: MainView\n   */\n  static toLocalCoordinates = parentView => {\n    const rootMesh = parentView.getRootNode().item.mesh;\n    return arrayOfVector3 => {\n      const transform = p =>\n        Util3d.computeLocalCoordinatesFromMesh(\n          { parent: rootMesh },\n          Vec3.ofBabylon(p)\n        ).toBabylon();\n      if (Array.isArray(arrayOfVector3)) {\n        return arrayOfVector3.map(transform);\n      }\n      return transform(arrayOfVector3);\n    };\n  };\n\n  static getRotationMatrix(mesh) {\n    const localRotationMatrix = new Matrix();\n    const maybeQuaternion = Maybe.fromNull(mesh.rotationQuaternion);\n    maybeQuaternion.forEach(quaternion =>\n      quaternion.toRotationMatrix(localRotationMatrix)\n    );\n    maybeQuaternion.orElseRun(() => {\n      const quaternion = Quaternion.RotationYawPitchRoll(\n        mesh.rotation.y,\n        mesh.rotation.x,\n        mesh.rotation.z\n      );\n      quaternion.toRotationMatrix(localRotationMatrix);\n    });\n    return Mat3.ofBabylonMatrix(localRotationMatrix);\n  }\n\n  static showNormals(scene, mesh, size = 1, color = Color3.Red()) {\n    const normals = mesh.getVerticesData(VertexBuffer.NormalKind);\n    const positions = mesh.getVerticesData(VertexBuffer.PositionKind);\n    const lines = [];\n    for (let i = 0; i < normals.length; i += 3) {\n      const v1 = Vector3.FromArray(positions, i);\n      const v2 = v1.add(Vector3.FromArray(normals, i).scaleInPlace(size));\n      lines.push([v1.add(mesh.position), v2.add(mesh.position)]);\n    }\n    const normalLines = MeshBuilder.CreateLineSystem(\n      \"normalLines\",\n      { lines: lines },\n      scene\n    );\n    normalLines.color = color;\n    normalLines.parent = mesh;\n    return normalLines;\n  }\n\n  static orthogonalBasisFromVector(u) {\n    const identityMatrix = [\n      new Vector3(1, 0, 0),\n      new Vector3(0, 1, 0),\n      new Vector3(0, 0, 1)\n    ];\n    const uArray = [u.x, u.y, u.z];\n    // choose pivot\n    let pivot = 0;\n    for (let i = 0; i < 3; i++) {\n      if (uArray[i] !== 0) {\n        pivot = i;\n        break;\n      }\n    }\n    let v = identityMatrix[(pivot + 1) % 3].add(\n      identityMatrix[pivot].scale(-uArray[(pivot + 1) % 3] / uArray[pivot])\n    );\n    v = v.normalize();\n    let w = identityMatrix[(pivot + 2) % 3].add(\n      identityMatrix[pivot].scale(-uArray[(pivot + 2) % 3] / uArray[pivot])\n    );\n    w = w.normalize();\n    w = w.subtract(v.scale(Vector3.Dot(v, w)));\n    return { u: Vector3.FromArray(uArray).normalize(), v: v, w: w.normalize() };\n  }\n\n  static createOrientedCone = (\n    scene,\n    u = new Vector3(1, 0, 0),\n    color = Color3.Gray(),\n    name = `OrientedCone${randomDigits()}`,\n    isPickable = true,\n    segments = 16\n  ) => {\n    const surface = {\n      positions: [],\n      faces: []\n    };\n    const d = u.length() / 3;\n    const mat3 = Util3d.orthogonalBasisFromVector(u);\n    const v = mat3.v;\n    const w = mat3.w;\n\n    const orientation = Math.sign(Vector3.Dot(Vector3.Cross(v, w), u));\n    // positions\n    for (let i = 0; i < segments; i++) {\n      const theta = orientation * ((2 * Math.PI) / segments) * i;\n      surface.positions.push(\n        v.scale(d * Math.cos(theta)).add(w.scale(d * Math.sin(theta)))\n      );\n    }\n\n    surface.positions.push(Vector3.Zero());\n    surface.positions.push(u);\n\n    const zeroIndex = surface.positions.length - 1;\n    const uIndex = surface.positions.length - 2;\n\n    for (let i = 0; i < segments; i++) {\n      // bottom faces\n      surface.faces.push([zeroIndex, (i + 1) % segments, i]);\n      // cone faces\n      surface.faces.push([uIndex, i, (i + 1) % segments]);\n    }\n\n    // mesh\n    const mesh = Util3d.meshFromPositionAndFaces(\n      name,\n      scene,\n      surface.positions,\n      surface.faces\n    );\n    mesh.convertToFlatShadedMesh();\n    const material = new StandardMaterial(`OrientedConeMaterial${name}`, scene);\n    material.diffuseColor = color;\n    material.emissiveColor = color;\n    mesh.material = material;\n    mesh.isPickable = isPickable;\n    return mesh;\n  };\n\n  static createSphere = (\n    scene,\n    color = Color3.Gray(),\n    diameter = 1,\n    name = `Sphere${randomDigits()}`,\n    isPickable = true\n  ) => {\n    const sphere = Mesh.CreateSphere(name, 16, diameter, scene);\n    const material = Util3d.getMaterialFromColor(\n      color,\n      scene,\n      `SphereMaterial${name}`\n    );\n    sphere.material = material;\n    sphere.isPickable = isPickable;\n    return sphere;\n  };\n\n  static createBox = (\n    scene,\n    color = Color3.Gray(),\n    size = Box.DEFAULT_SIZE,\n    name = `Box${randomDigits()}`,\n    isPickable = true\n  ) => {\n    const box = Mesh.CreateBox(name, size, scene);\n    const material = new StandardMaterial(`BoxMaterial${name}`, scene);\n    material.diffuseColor = color;\n    material.emissiveColor = color;\n    box.material = material;\n    box.isPickable = isPickable;\n    return box;\n  };\n\n  static createTubeFromPoints = (\n    scene,\n    points,\n    color = Color3.Gray(),\n    radius = 1,\n    name = `Tube${randomDigits()}`,\n    isPickable = true\n  ) => {\n    const mesh = MeshBuilder.CreateTube(\n      name,\n      {\n        path: points,\n        radius: radius,\n        sideOrientation: Mesh.DOUBLESIDE,\n        updatable: true\n      },\n      scene\n    );\n    mesh.material = Util3d.getMaterialFromColor(\n      color,\n      scene,\n      `Material${name}`\n    );\n    mesh.isPickable = isPickable;\n    return mesh;\n  };\n\n  static positionalLightBuilder = scene => {\n    return new PositionalLightBuilder(scene);\n  };\n\n  static directionalLightBuilder = scene => {\n    return new DirectionalLightBuilder(scene);\n  };\n\n  static cameraBuilder(scene) {\n    return new CameraBuilder(scene);\n  }\n\n  static gizmoManagerBuilder(scene) {\n    return new GizmoManagerBuilder(scene);\n  }\n\n  static referentialBuilder = scene => {\n    return new ReferentialBuilder(scene);\n  };\n\n  /**\n   * Return a maybe position of intersection of the mouse and a ground mesh\n   *\n   * @param {Scene} scene Babylon scene\n   * @param {Ground} ground a Babylon mesh that represents the ground\n   * @returns {Maybe} a maybe 3-vector representing the mouse ground intersection\n   */\n  static getGroundPosition = function (scene, ground) {\n    // Use a predicate to get position on the ground\n    const pickInfo = scene.pick(\n      scene.pointerX,\n      scene.pointerY,\n      mesh => mesh === ground\n    );\n    if (pickInfo.hit) return Maybe.some(pickInfo.pickedPoint);\n    return Maybe.none();\n  };\n\n  static pickMesh = (scene, ground) => {\n    const pickInfo = scene.pick(\n      scene.pointerX,\n      scene.pointerY,\n      mesh => mesh !== ground && mesh.isEnabled()\n    );\n    if (pickInfo.hit && pickInfo.pickedMesh.isPickable) {\n      return Maybe.some(pickInfo.pickedMesh);\n    }\n    return Maybe.none();\n  };\n\n  static groundBuilder = scene => {\n    return new GroundBuilder(scene);\n  };\n\n  static meshFromPositionAndFaces(\n    name,\n    scene,\n    positions,\n    faces,\n    updatable = true\n  ) {\n    const vertexData = new VertexData();\n\n    vertexData.positions = positions.flatMap(z => [z.x, z.y, z.z]);\n    vertexData.indices = faces.flatMap(z => z);\n\n    let mesh = new Mesh(name, scene);\n    vertexData.applyToMesh(mesh, updatable);\n    // mesh.createNormals();\n    return mesh;\n  }\n\n  /**\n   *\n   * @param {*} polygon: Array of babylonjs vector3, representing a boundary of a polygon\n   */\n  static triangulatePolygon(polygon) {\n    const triangulation = earcut(\n      polygon.map(x => [x.x, x.y, x.z]).flatMap(x => x),\n      null,\n      3\n    );\n    const len = triangulation.length / 3;\n    const ans = [];\n    for (let i = 0; i < len; i++) {\n      const i3 = 3 * i;\n      ans.push([\n        triangulation[i3],\n        triangulation[i3 + 1],\n        triangulation[i3 + 2]\n      ]);\n    }\n    return ans;\n  }\n\n  /**\n   *\n   * @param {*} polygon: Array of babylonjs vector3, representing a boundary of a polygon\n   * Returns a real number representing the orientation of the curve, if positive represents a counterclockwise orientation, clockwise otherwise.\n   */\n  static computeOrientation(polygon) {\n    const n = polygon.length;\n    const vec3Poly = polygon.map(x => Vec3.ofBabylon(x));\n    let orientation = 0;\n    vec3Poly.forEach((a, i) => {\n      const modi = (i + 1) % n;\n      const edge = vec3Poly[modi].sub(vec3Poly[i]);\n      orientation += Vec3.of([-a.y, a.x, a.z]).dot(edge);\n    });\n    return orientation / 2;\n  }\n\n  /**\n   * @param {*} arrayOfPoints: array of babylon vec3\n   * Returns the average\n   */\n  static pointAverage(arrayOfPoints) {\n    if (!arrayOfPoints || arrayOfPoints.length === 0) return Vector3.Zero();\n    return arrayOfPoints\n      .reduce((e, x) => e.add(x), Vector3.Zero())\n      .scale(1 / arrayOfPoints.length);\n  }\n\n  static pointAverageVec3(arrayOfPoints) {\n    if (!arrayOfPoints || arrayOfPoints.length === 0) return Vec3.ZERO;\n    return arrayOfPoints\n      .reduce((e, x) => e.add(x), Vec3.ZERO)\n      .scale(1 / arrayOfPoints.length);\n  }\n\n  static randomVector3(a, b) {\n    return new Vector3.FromArray(\n      [0, 0, 0].map(x => a + (b - a) * Math.random())\n    );\n  }\n\n  static getMaterialFromColor(\n    color,\n    scene,\n    name = `MaterialFromColor${randomDigits()}`\n  ) {\n    const material = new StandardMaterial(name, scene);\n    material.diffuseColor = color;\n    material.emissiveColor = color;\n    return material;\n  }\n\n  static piecewiseCurveDistance = curve => {\n    let distance = 0;\n    for (let i = 0; i < curve.length - 1; i++) {\n      const v = curve[i + 1].subtract(curve[i]);\n      distance += v.length();\n    }\n    return distance;\n  };\n\n  static getCurveOrientations = curve => {\n    const orientations = [];\n    for (let i = 0; i < curve.length - 1; i++) {\n      const v = curve[i + 1].subtract(curve[i]);\n      orientations.push(Math.atan2(v.y, v.x));\n    }\n    orientations.push(orientations[orientations.length - 1]);\n    return orientations;\n  };\n\n  static getSplineFromCurve = (curve, nbPoints = 7) => {\n    const closed = false;\n    return {\n      points: Curve3.CreateCatmullRomSpline(curve, nbPoints, closed).getPoints()\n    };\n  };\n\n  static splineObj2redis = splineObj => {\n    const orientations = Util3d.getCurveOrientations(splineObj.points);\n    return splineObj.points.map((x, i) => {\n      return [x.x, x.y, orientations[i]];\n    });\n  };\n}\n\nconst randomDigits = () => {\n  return Math.floor(Math.random() * 1e3);\n};\n\nexport default Util3d;\n","import NodeItem from \"./NodeItem\";\nimport Vec3 from \"../Math/Vec3\";\nimport Util3d from \"../Util3d/Util3d\";\nimport { Maybe } from \"monet\";\nimport { Quaternion, MeshBuilder } from \"@babylonjs/core\";\n\n// ROS/RVIZ default referential\nconst THETA = -Math.PI / 2;\nconst ROS_ORIGIN = {\n  position: [0, 0, 0],\n  scaling: [1, -1, 1],\n  quaternion: [Math.cos(THETA / 2), Math.sin(THETA / 2), 0, 0]\n};\n\nclass GlobalRef extends NodeItem {\n  constructor(mesh, keyValueMap = {}) {\n    super(mesh, keyValueMap);\n  }\n\n  toForm() {\n    const form = super.toForm();\n    form.uiSchema.name = {\n      \"ui:disabled\": true\n    };\n    return form;\n  }\n\n  getMouseContextActions() {\n    return [];\n  }\n\n  getType = () => GlobalRef.TYPE;\n\n  static TYPE = \"GlobalRef\";\n\n  static NAME = \"Global ref\";\n\n  static ofDict(scene, dict = null, mainView = null) {\n    const rosOrigin = GlobalRef.getRosOrigin(scene);\n\n    const globalRefMesh = Util3d.referentialBuilder(scene)\n      .name(GlobalRef.NAME)\n      .isPickable(true)\n      .boxParams({ isVisible: true, size: 0.25 })\n      .build();\n\n    globalRefMesh.parent = rosOrigin;\n\n    NodeItem.mapDict2Mesh(dict, globalRefMesh);\n\n    return new GlobalRef(\n      globalRefMesh,\n      Maybe.fromNull(dict)\n        .flatMap(d => Maybe.fromNull(d.keyValueMap))\n        .orUndefined()\n    );\n  }\n\n  static getRosOrigin(scene) {\n    const rosOrigin = MeshBuilder.CreateBox(\n      \"ROS_ORIGIN\",\n      { size: 1e-3 },\n      scene\n    );\n    rosOrigin.isVisible = false;\n    rosOrigin.isPickable = false;\n    rosOrigin.position = Vec3.of(ROS_ORIGIN.position).toBabylon();\n    rosOrigin.scaling = Vec3.of(ROS_ORIGIN.scaling).toBabylon();\n    const quaternion = new Quaternion(\n      ROS_ORIGIN.quaternion[1],\n      ROS_ORIGIN.quaternion[2],\n      ROS_ORIGIN.quaternion[3],\n      ROS_ORIGIN.quaternion[0]\n    );\n    rosOrigin.rotationQuaternion = quaternion.normalize();\n    return rosOrigin;\n  }\n\n  /**\n   *\n   * @param {*} x: Babylon Vector3 in World coordinates\n   *\n   * returns Babylon Vector3 vector in ROS coordinates\n   */\n  static inverseCoordinates(x) {\n    /**\n     * Solves RS\\eta + p = x\n     *\n     * \\eta = S^(⁻1)R^T(x-p)\n     */\n    const quaternion = ROS_ORIGIN.quaternion;\n    const rotationMatrix = Util3d.getRotationMatrix({\n      rotationQuaternion: new Quaternion(\n        quaternion[1],\n        quaternion[2],\n        quaternion[3],\n        quaternion[0]\n      )\n    });\n    const scaling = Vec3.of(ROS_ORIGIN.scaling).map(z => 1 / z);\n    const pos = Vec3.of(ROS_ORIGIN.position);\n    const result = scaling.mul(\n      rotationMatrix.dotVec(Vec3.ofBabylon(x).sub(pos))\n    );\n    return result.map(z => (Math.abs(z) < 1e-5 ? 0 : z)).toBabylon();\n  }\n\n  /**\n   *\n   * @param {*} x: Babylon Vector3 in ROS coordinates\n   *\n   * returns Babylon Vector3 vector in World coordinates\n   */\n  static forwardCoordinates(x) {\n    /**\n     * computes RS\\eta + p = x\n     */\n    const quaternion = ROS_ORIGIN.quaternion;\n    const rotationMatrix = Util3d.getRotationMatrix({\n      rotationQuaternion: new Quaternion(\n        quaternion[1],\n        quaternion[2],\n        quaternion[3],\n        quaternion[0]\n      )\n    });\n    const scaling = Vec3.of(ROS_ORIGIN.scaling);\n    const pos = Vec3.of(ROS_ORIGIN.position);\n    const result = rotationMatrix\n      .prodVec(scaling.mul(Vec3.ofBabylon(x)))\n      .add(pos);\n    return result.map(z => (Math.abs(z) < 1e-5 ? 0 : z)).toBabylon();\n  }\n}\n\nexport default GlobalRef;\n","class Action {\n  constructor() {\n    this.memory = {};\n  }\n\n  action(parentView) {\n    parentView.getSceneMemory().forEach(memory => {\n      memory.gizmoManager.attachedMesh = null;\n      memory.camera.attachControl(memory.canvas, true);\n    });\n    parentView.highlightNodeInTree && parentView.highlightNodeInTree();\n    parentView.highlightNodeInScene && parentView.highlightNodeInScene();\n    parentView.closeContextDial && parentView.closeContextDial();\n    parentView.setContextActionIndex && parentView.setContextActionIndex();\n  }\n}\n\nexport default Action;\n","import NodeItem from \"./NodeItem\";\n\nclass AssetNodeItem extends NodeItem {\n  constructor(mesh, assetName, keyValueMap = {}) {\n    super(mesh, keyValueMap);\n    this.assetName = assetName;\n  }\n\n  toDict() {\n    const ans = super.toDict();\n    ans.assetName = this.assetName;\n    return ans;\n  }\n}\n\nexport default AssetNodeItem;\n","import AssetNodeItem from \"./AssetNodeItem\";\n\nclass Map extends AssetNodeItem {\n  constructor(mesh, size, textureSrc, assetName) {\n    super(mesh, assetName);\n    this.size = size;\n    this.textureSrc = textureSrc;\n  }\n\n  dispose() {\n    super.dispose();\n  }\n\n  toDict() {\n    const dict = super.toDict();\n    dict[\"size\"] = this.size;\n    dict[\"textureSrc\"] = this.textureSrc;\n    return dict;\n  }\n\n  toForm() {\n    const info = this.toDict();\n    const schema = {\n      jsonSchema: {\n        type: \"object\",\n        properties: {\n          oldName: {\n            type: \"string\",\n          },\n          name: {\n            type: \"string\",\n            title: \"Name\",\n          },\n          type: {\n            type: \"string\",\n            title: \"Type\",\n          },\n          assetName: {\n            type: \"string\",\n            title: \"Asset Name\",\n          },\n        },\n      },\n      uiSchema: {\n        type: {\n          \"ui:disabled\": true,\n        },\n        assetName: {\n          \"ui:disabled\": true,\n        },\n        oldName: {\n          \"ui:widget\": \"hidden\",\n        },\n      },\n      data: {\n        oldName: info.name,\n        name: info.name,\n        type: info.type,\n        assetName: info.assetName,\n      },\n    };\n    return schema;\n  }\n\n  ofForm(form) {\n    this.name = form.name;\n    this.mesh.name = form.name;\n    this.keyValueMap = { ...form.annotations };\n  }\n\n  getType = () => Map.TYPE;\n\n  static TYPE = \"Map\";\n}\n\nexport default Map;\n","import {\n  Scene,\n  Color3,\n  RotationGizmo,\n  UtilityLayerRenderer,\n  Vector3,\n  StandardMaterial,\n  Mesh,\n  Space\n} from \"@babylonjs/core\";\nimport { TextBlock, AdvancedDynamicTexture } from \"@babylonjs/gui/2D\";\nimport Util3d from \"../Util3d/Util3d\";\n// import \"@babylonjs/core/Debug/debugLayer\";\n// import \"@babylonjs/inspector\";\n\nclass DefaultScene {\n  static createGizmo = scene => {\n    const gizmoManager = new RotationGizmo(new UtilityLayerRenderer(scene));\n    gizmoManager.xGizmo.dragBehavior.detach();\n    gizmoManager.xGizmo.scaleRatio = 0.0;\n    gizmoManager.yGizmo.dragBehavior.detach();\n    gizmoManager.yGizmo.scaleRatio = 0.0;\n    return gizmoManager;\n  };\n\n  static createCamera = (scene, canvas, forEach = camera => {}) => {\n    const COLLISION_RADIUS = 1;\n    const camera = Util3d.cameraBuilder(scene)\n      .sphericalCoordinates(new Vector3(0, 0, 14))\n      .target(Vector3.Zero())\n      .name(\"camera\")\n      .build();\n    camera.attachControl(canvas, false);\n    camera.inertia = 0.7;\n    camera.collisionRadius = new Vector3(\n      COLLISION_RADIUS,\n      COLLISION_RADIUS,\n      COLLISION_RADIUS\n    );\n    camera.panningInertia = 0.5;\n    camera.checkCollisions = true;\n    camera.panningSensibility = 0;\n    camera.lowerRadiusLimit = 2;\n\n    forEach(camera);\n    return camera;\n  };\n\n  static createLight = scene => {\n    return Util3d.directionalLightBuilder(scene)\n      .name(\"light\")\n      .direction(new Vector3(0, -1, 0))\n      .intensity(0.35)\n      .build();\n  };\n\n  static createMeshGround = (scene, width = 20, height = 20) => {\n    const ground = Mesh.CreateGround(\"groundMesh\", width, height, 20, scene);\n    ground.translate(new Vector3(0, -1, 0), 1e-2, Space.WORLD);\n    ground.material = new StandardMaterial(\"wireframe\", scene);\n    ground.material.wireframe = true;\n    ground.isPickable = false;\n    ground.checkCollisions = true;\n    return ground;\n  };\n\n  static createScene = engine => {\n    const scene = new Scene(engine);\n    scene.clearColor = Color3.Black;\n    scene.collisionsEnabled = true;\n    scene._uid = scene.getUniqueId();\n    // scene.debugLayer.show();\n    return scene;\n  };\n\n  static createMouseLocationText = scene => {\n    const advancedTexture = AdvancedDynamicTexture.CreateFullscreenUI(\n      \"UI\",\n      true,\n      scene\n    );\n    const text = new TextBlock();\n    text.text = \"\";\n    text.color = \"white\";\n    text.fontSize = 17;\n    text.left = -560;\n    text.top = -145;\n    advancedTexture.addControl(text);\n    return text;\n  };\n}\n\nexport default DefaultScene;\n","import Action from \"./Action\";\nimport { ACTIONS } from \"../MainView/MainViewActions\";\n\nclass MouseKeysAction extends Action {\n  constructor() {\n    super();\n  }\n\n  onPointerDown(evt, parentView) {\n    // to be implemented on sub classes\n  }\n\n  onPointerMove(evt, parentView) {\n    // to be implemented on sub classes\n  }\n\n  onPointerUp(parentView) {\n    // to be implemented on sub classes\n  }\n\n  onKeyDown(evt, parentView) {\n    const codeActionDict = {\n      Escape: buttonActionFactory(ACTIONS.orbit),\n      KeyG: buttonActionFactory(ACTIONS.dragObjects),\n      KeyP: buttonActionFactory(ACTIONS.drawPath),\n      KeyB: buttonActionFactory(ACTIONS.drawBoxRegion),\n      KeyR: buttonActionFactory(ACTIONS.drawRegion),\n      KeyK: buttonActionFactory(ACTIONS.addKeyPoint),\n      KeyC: buttonActionFactory(ACTIONS.drawGraph)\n    };\n    if (evt.code in codeActionDict) {\n      codeActionDict[evt.code](parentView);\n    }\n  }\n}\n\nconst buttonActionFactory = action => parentView => {\n  action.action(parentView);\n  parentView.setSelectedAction(action);\n};\n\nexport default MouseKeysAction;\n","import Util3d from \"../Util3d/Util3d\";\nimport Vec3 from \"../Math/Vec3\";\nimport { Maybe } from \"monet\";\nimport MouseKeysAction from \"./MouseKeysAction\";\nimport React from \"react\";\nimport { Vector3 } from \"@babylonjs/core\";\nimport { UndoManager } from \"mov-fe-lib-core\";\nimport Clipboard from \"../Utils/Clipboard\";\n\nclass DragObjectsAction extends MouseKeysAction {\n  constructor() {\n    if (instance) return instance;\n    super();\n    this.key = \"dragObject\";\n    this.name = \"Grab Objects [G]\";\n    this.icon = props => <i className=\"fas fa-mouse-pointer\" {...props}></i>;\n    this.maybeSelectedMesh = Maybe.none();\n    this.shiftFromCenterOfMass = Vec3.ZERO;\n    this.mousePointInLocal = Vec3.ZERO;\n    this.clickPointInLocal = Vec3.ZERO;\n    this.undoManager = new UndoManager();\n    instance = this;\n  }\n\n  action = parentView => {\n    super.action(parentView);\n    parentView.setSelectedAction(this);\n  };\n\n  onPointerDown = (evt, parentView) => {\n    if (!(evt.buttons === 1 || evt.buttons === 2)) return;\n    parentView.getSceneMemory().forEach(memory => {\n      const { scene, ground, camera, canvas } = memory;\n      this.maybeSelectedMesh = Util3d.pickMesh(scene, ground);\n      this.maybeSelectedMesh.forEach(currentMesh => {\n        camera.detachControl(canvas);\n        Util3d.getGroundPosition(scene, ground).forEach(groundPosition => {\n          const groundPositionInLocalCoordinates = Util3d.computeLocalCoordinatesFromMesh(\n            currentMesh,\n            Vec3.ofBabylon(groundPosition)\n          );\n\n          this.mousePointInLocal = groundPositionInLocalCoordinates;\n          this.clickPointInLocal = groundPositionInLocalCoordinates;\n          this.shiftFromCenterOfMass = groundPositionInLocalCoordinates.sub(\n            Vec3.ofBabylon(currentMesh.position)\n          );\n\n          currentMesh.onClick\n            ? currentMesh.onClick()\n            : parentView.closeContextDial();\n\n          this.handleMeshRightClick(evt, parentView, currentMesh);\n\n          parentView.addGizmo(currentMesh.name);\n          parentView.highlightNodeInTree(currentMesh.name);\n          parentView.highlightMeshInScene([currentMesh]);\n          this.setProperties(parentView, currentMesh.name);\n        });\n      });\n      this.maybeSelectedMesh.orLazy(() =>\n        parentView\n          .getMouseCoordinatesFromRoot()\n          .forEach(mousePosRoot =>\n            this.handleRightClickWithoutMesh(evt, parentView, mousePosRoot)\n          )\n      );\n    });\n  };\n\n  handleMeshRightClick = (evt, parentView, mesh) => {\n    if (!(evt.buttons === 2)) return;\n    if (!mesh || !mesh.getMouseContextActions) return;\n    parentView.setMouseContextActions(\n      evt,\n      mesh.getMouseContextActions(parentView)\n    );\n  };\n\n  /**\n   * @param evt: event\n   * @param parentView: MainView\n   * @param mousePosFromRoot: Vector3\n   */\n  handleRightClickWithoutMesh = (evt, parentView, mousePosFromRoot) => {\n    if (!(evt.buttons === 2)) return;\n    parentView.setMouseContextActions(evt, [\n      {\n        title: \"Paste\",\n        onClick: this.getPasteOnClick(mousePosFromRoot, parentView)\n      }\n    ]);\n  };\n\n  getPasteOnClick = (mousePosFromRoot, parentView) => () => {\n    const pasteAction = Clipboard.paste();\n    if (pasteAction && typeof pasteAction === \"function\") {\n      pasteAction(mousePosFromRoot, parentView);\n    }\n  };\n\n  onPointerMove = (evt, parentView) => {\n    if (!(evt.buttons === 1)) return;\n    parentView.getSceneMemory().forEach(memory => {\n      const { scene, ground } = memory;\n      const maybeGroundPosition = Util3d.getGroundPosition(scene, ground);\n      maybeGroundPosition.forEach(current => {\n        this.maybeSelectedMesh.forEach(selectedMesh => {\n          const currentLocal = Util3d.computeLocalCoordinatesFromMesh(\n            selectedMesh,\n            Vec3.ofBabylon(current)\n          );\n\n          const v = currentLocal.sub(this.shiftFromCenterOfMass);\n          selectedMesh.position = new Vector3(\n            v.getX(),\n            v.getY(),\n            selectedMesh.position.z\n          );\n          this.notifyObservers(\n            selectedMesh,\n            false,\n            currentLocal.sub(this.mousePointInLocal)\n          );\n          this.mousePointInLocal = currentLocal;\n        });\n      });\n    });\n  };\n\n  onPointerUp = parentView => {\n    parentView.getSceneMemory().forEach(memory => {\n      const { camera, scene, ground, canvas } = memory;\n      this.maybeSelectedMesh.forEach(selectedMesh => {\n        Util3d.getGroundPosition(scene, ground).forEach(groundPos => {\n          const groundPosInLocal = Util3d.computeLocalCoordinatesFromMesh(\n            selectedMesh,\n            Vec3.ofBabylon(groundPos)\n          );\n          const bigDisplacement = groundPosInLocal.sub(this.clickPointInLocal);\n          this.notifyObservers(selectedMesh, true, Vec3.ZERO);\n          this.setProperties(parentView, selectedMesh.name);\n          parentView.updateNodeInServer(selectedMesh.name);\n\n          this.undoManager.addIt(\n            this.getUndoAbleAction(selectedMesh, bigDisplacement, parentView)\n          );\n        });\n      });\n      this.maybeSelectedMesh = Maybe.none();\n      this.shiftFromCenterOfMass = Vec3.ZERO;\n      this.mousePointInLocal = Vec3.ZERO;\n      camera.attachControl(canvas, true);\n    });\n  };\n\n  onKeyDown = (evt, parentView) => {\n    const defaultAction = () => super.onKeyDown(evt, parentView);\n    const predicateActionList = [\n      {\n        predicate: e => [\"Backspace\", \"Delete\"].includes(e.code),\n        action: this.getDeleteButtonAction(parentView)\n      },\n      {\n        predicate: e => e.ctrlKey && !e.shiftKey && e.code === \"KeyZ\",\n        action: () => this.undoManager.undo()\n      },\n      {\n        predicate: e => e.ctrlKey && e.shiftKey && e.code === \"KeyZ\",\n        action: () => this.undoManager.redo()\n      },\n      {\n        predicate: e => e.ctrlKey && e.code === \"KeyC\",\n        action: () =>\n          Maybe.fromNull(parentView.getHighlightedNodeName()).forEach(name =>\n            parentView.getNodeFromTree(name).forEach(({ item }) => {\n              const { mesh } = item;\n              mesh.getMouseContextActions &&\n                mesh.getMouseContextActions(parentView)[0].onClick();\n            })\n          )\n      },\n      {\n        predicate: e => e.ctrlKey && e.code === \"KeyV\",\n        action: () => {\n          parentView\n            .getMouseCoordinatesFromRoot()\n            .forEach(mousePosRoot =>\n              this.getPasteOnClick(mousePosRoot, parentView)()\n            );\n        }\n      },\n      { predicate: e => true, action: defaultAction }\n    ];\n    for (let i = 0; i < predicateActionList.length; i++) {\n      const predicateAction = predicateActionList[i];\n      if (predicateAction.predicate(evt)) {\n        predicateAction.action();\n        break;\n      }\n    }\n  };\n\n  getDeleteButtonAction(parentView) {\n    return () =>\n      Maybe.fromNull(parentView.getHighlightedNodeName()).forEach(nodeName => {\n        const maybeNode = parentView.getNodeFromTree(nodeName);\n        maybeNode.forEach(() => parentView.onDeleteNode(nodeName));\n        maybeNode.orElseRun(() => {\n          const contextActions = parentView.getContextActions();\n          contextActions[0].action(parentView);\n        });\n      });\n  }\n\n  notifyObservers(mesh, is2updateServer, displacement) {\n    Maybe.fromNull(mesh.observers).forEach(obs =>\n      obs.notifyObservers({\n        updatedPointMesh: mesh,\n        is2updateServer: is2updateServer,\n        displacement: displacement.toBabylon()\n      })\n    );\n  }\n\n  setProperties = (parentView, name) =>\n    setTimeout(() => parentView.setPropertiesWithName(name), 100);\n\n  /**\n   *\n   * @param {*} selectedMesh: babylon js Mesh\n   * @param {*} displacement: Vec3\n   * @param {*} parentView: mainView instance\n   */\n  getUndoAbleAction(selectedMesh, displacement, parentView) {\n    return UndoManager.actionBuilder()\n      .doAction(() => {\n        const newPos = Vec3.ofBabylon(selectedMesh.position).add(displacement);\n        selectedMesh.position = newPos.toBabylon();\n        this.notifyObservers(selectedMesh, true, displacement);\n        parentView.updateNodeInServer(selectedMesh.name);\n      })\n      .undoAction(() => {\n        const invertDisplacement = displacement.scale(-1);\n        const newPos = Vec3.ofBabylon(selectedMesh.position).add(\n          invertDisplacement\n        );\n        selectedMesh.position = newPos.toBabylon();\n        this.notifyObservers(selectedMesh, true, invertDisplacement);\n        parentView.updateNodeInServer(selectedMesh.name);\n      })\n      .build();\n  }\n\n  static getInstance() {\n    return new DragObjectsAction();\n  }\n}\n\nlet instance = null;\n\nexport default DragObjectsAction;\n","import NodeItem from \"./NodeItem\";\nimport Util3d from \"../Util3d/Util3d\";\nimport { Maybe } from \"monet\";\nimport { MeshBuilder, StandardMaterial } from \"@babylonjs/core\";\n\nclass KeyPoint extends NodeItem {\n  constructor(mesh, keyValueMap) {\n    super(mesh, keyValueMap);\n  }\n\n  ofDict(scene, dict = null, mainView = null) {\n    return KeyPoint.ofDict(scene, dict, mainView);\n  }\n\n  getType = () => KeyPoint.TYPE;\n\n  static TYPE = \"KeyPoint\";\n\n  static ofDict(scene, dict = null, mainView = null) {\n    const name = Maybe.fromNull(dict)\n      .map((x) => x.name)\n      .orSome(`KeyPoint${Math.floor(Math.random() * 1e3)}`);\n\n    const mesh = MeshBuilder.CreatePolyhedron(\n      name,\n      { custom: TRIANGULAR_ANTIPRISM, size: KeyPoint.DEFAULT_SIZE },\n      scene\n    );\n    const material = new StandardMaterial(`KeyPointMaterial${name}`, scene);\n    mesh.material = material;\n    mesh.convertToFlatShadedMesh();\n\n    const axis = Util3d.referentialBuilder(scene)\n      .isPickable(false)\n      .boxParams({ isVisible: false, size: 0.1 * KeyPoint.DEFAULT_SIZE })\n      .name(`${name}Axis`)\n      .build();\n    axis.parent = mesh;\n\n    NodeItem.mapDict2Mesh(dict, mesh);\n    return new KeyPoint(mesh, dict.keyValueMap);\n  }\n\n  static DEFAULT_SIZE = 0.25;\n}\n\nconst TRIANGULAR_ANTIPRISM = {\n  name: \"Triangular Antiprism (Octahedron)\",\n  category: [\"Antiprism\"],\n  vertex: [\n    [0, 0, 1.414214],\n    [1.414214, 0, 0],\n    [0, 1.414214, 0],\n    [-1.414214, 0, 0],\n    [0, -1.414214, 0],\n    [0, 0, -1.414214],\n  ],\n  face: [\n    [0, 1, 2],\n    [0, 2, 3],\n    [0, 3, 4],\n    [0, 4, 1],\n    [1, 4, 5],\n    [1, 5, 2],\n    [2, 5, 3],\n    [3, 5, 4],\n  ],\n};\n\nexport default KeyPoint;\n","import Util3d from \"../Util3d/Util3d\";\nimport KeyPoint from \"../NodeItem/KeyPoint\";\nimport Vec3 from \"../Math/Vec3\";\nimport { Maybe } from \"monet\";\nimport React from \"react\";\nimport MouseKeysAction from \"./MouseKeysAction\";\nimport { Color3, Axis } from \"@babylonjs/core\";\n\nlet instance = null;\n\nconst TEMP_KEY_POINT_NAME = \"temp_key_point\";\n\nclass AddKeyPointAction extends MouseKeysAction {\n  constructor() {\n    if (instance) return instance;\n    super();\n    this.key = \"addKeyPoint\";\n    this.name = \"Add Key Point [K]\";\n    this.maybeMousePos = Maybe.none();\n    this.tempMesh = null;\n    this.icon = props => <i className=\"fas fa-map-marker\" {...props}></i>;\n    instance = this;\n  }\n\n  static getInstance() {\n    return new AddKeyPointAction();\n  }\n\n  createKeyPoint = (\n    position,\n    name,\n    scene,\n    parentView,\n    is2addInServer = true,\n    color = Color3.Gray()\n  ) => {\n    const rootMesh = parentView.getRootNode().item.mesh;\n\n    const keyPoint = KeyPoint.ofDict(scene, {\n      name: name,\n      color: [color.r, color.g, color.b]\n    });\n    const mesh = keyPoint.mesh;\n    mesh.parent = rootMesh;\n\n    const localPosition = Util3d.computeLocalCoordinatesFromMesh(\n      { parent: rootMesh },\n      Vec3.ofBabylon(position)\n    ).toBabylon();\n\n    mesh.setPositionWithLocalVector(\n      localPosition.add(Axis.Z.scale(KeyPoint.DEFAULT_SIZE))\n    );\n\n    if (is2addInServer) {\n      parentView.addNodeItem2Tree(keyPoint, rootMesh.name, is2addInServer);\n    }\n    return mesh;\n  };\n\n  action = parentView => {\n    super.action(parentView);\n    parentView.setSelectedAction(this);\n  };\n\n  onPointerDown = (evt, parentView) => {\n    if (evt.button !== 0) {\n      return;\n    }\n    parentView.getSceneMemory().forEach(memory => {\n      const { scene, ground, camera } = memory;\n      this.maybeMousePos = Util3d.getGroundPosition(scene, ground);\n      this.maybeMousePos.forEach(mousePos => {\n        camera.detachControl(memory.canvas);\n      });\n    });\n  };\n\n  onPointerMove = (evt, parentView) => {\n    parentView.getSceneMemory().forEach(memory => {\n      const scene = memory.scene;\n      const ground = memory.ground;\n      const maybeCurrent = Util3d.getGroundPosition(scene, ground);\n      maybeCurrent.forEach(current => {\n        this.maybeMousePos.forEach(oldMousePos => {\n          if (this.tempMesh) this.tempMesh.dispose();\n          this.tempMesh = this.createKeyPoint(\n            current,\n            TEMP_KEY_POINT_NAME,\n            scene,\n            parentView,\n            false\n          );\n        });\n      });\n    });\n  };\n\n  onPointerUp = parentView => {\n    parentView.getSceneMemory().forEach(memory => {\n      const scene = memory.scene;\n      const camera = memory.camera;\n      const ground = memory.ground;\n      const maybeCurrent = Util3d.getGroundPosition(scene, ground);\n      maybeCurrent.forEach(current => {\n        this.maybeMousePos.forEach(oldMousePos => {\n          if (this.tempMesh) this.tempMesh.dispose();\n          const name = `KeyPoint${Math.floor(Math.random() * 1e3)}`;\n          this.createKeyPoint(\n            current,\n            name,\n            scene,\n            parentView,\n            true,\n            new Color3(Math.random(), Math.random(), Math.random())\n          );\n          parentView.setPropertiesWithName(name);\n        });\n      });\n      this.maybeMousePos = Maybe.none();\n      camera.attachControl(memory.canvas, true);\n    });\n  };\n}\n\nexport default AddKeyPointAction;\n","const Constants = {\n  RADIUS: 0.4,\n  POINTS_DENSITY: 2,\n  CLOUD_FUNCTION_NAME: \"backend.viewer\",\n};\n\nexport default Constants;\n","import NodeItem from \"./NodeItem\";\nimport Util3d from \"../Util3d/Util3d\";\nimport Vec3 from \"../Math/Vec3\";\nimport { Maybe } from \"monet\";\nimport Constants from \"../Utils/Constants\";\nimport {\n  Vector3,\n  Axis,\n  Color3,\n  Observable,\n  StandardMaterial,\n  Quaternion,\n} from \"@babylonjs/core\";\nimport isEqual from \"lodash.isequal\";\n\nclass BoxRegion extends NodeItem {\n  constructor(mesh, corners, keyPoints, keyValueMap = {}) {\n    super(mesh, keyValueMap);\n    this.corners = corners; // in local coordinates, in relation to center of mass\n    this.keyPoints = keyPoints;\n  }\n\n  toDict() {\n    const dict = super.toDict();\n    dict.corners = this.corners;\n    return dict;\n  }\n\n  toForm() {\n    const schema = super.toForm();\n    schema.jsonSchema.properties[\"dimensions\"] = {\n      type: \"object\",\n      title: \"Dimensions\",\n      properties: {\n        lower: {\n          type: \"object\",\n          title: \"Lower Corner\",\n          properties: {\n            x: {\n              type: \"number\",\n              title: \"x\",\n            },\n            y: {\n              type: \"number\",\n              title: \"y\",\n            },\n          },\n        },\n        size: {\n          type: \"object\",\n          title: \"Size\",\n          properties: {\n            scaleX: {\n              type: \"number\",\n              title: \"scale-X\",\n            },\n            scaleY: {\n              type: \"number\",\n              title: \"scale-Y\",\n            },\n          },\n        },\n      },\n    };\n    schema.uiSchema[\"dimensions\"] = { \"ui:widget\": \"collapse\" };\n    // global ref coordinates\n    const worldCorners = this.keyPoints\n      .map((x) => Util3d.getWorldCoordinates(x, x.position))\n      .map((x) => x.toArray());\n    schema.data[\"dimensions\"] = {\n      lower: {\n        x: worldCorners[0][0],\n        y: worldCorners[0][1],\n      },\n      size: {\n        // TODO: warning, doesn't take into account possible scaling\n        scaleX: this.corners[1][0] - this.corners[0][0],\n        scaleY: this.corners[1][1] - this.corners[0][1],\n      },\n    };\n    return schema;\n  }\n\n  ofForm(form) {\n    const oldForm = this.toForm();\n    const oldDimensions = oldForm.data.dimensions;\n    if (isEqual(oldDimensions, form.dimensions)) {\n      super.ofForm(form);\n    } else {\n      this.ofFormDimensions(form);\n    }\n  }\n\n  ofDict(scene, dict = null, mainView = null) {\n    return BoxRegion.ofDict(scene, dict, mainView);\n  }\n\n  getType = () => BoxRegion.TYPE;\n\n  static TYPE = \"BoxRegion\";\n\n  ofFormDimensions(form) {\n    const newLowerPositionInWorldCoordinates = Vector3.FromArray(\n      [form.dimensions.lower.x, form.dimensions.lower.y, 0].map(\n        Number.parseFloat\n      )\n    );\n    const newLocalDimensions = [\n      form.dimensions.size.scaleX,\n      form.dimensions.size.scaleY,\n    ].map(Number.parseFloat);\n    const localLowerPosition = Util3d.getLocalCoordinatesFromWorld(\n      this.keyPoints[0],\n      newLowerPositionInWorldCoordinates\n    ).toArray();\n    const notify = (i) =>\n      this.keyPoints[i].observers.notifyObservers({\n        updatedPointMesh: this.keyPoints[i],\n        is2updateServer: false,\n      });\n    this.keyPoints[0].position = new Vector3(\n      localLowerPosition[0],\n      localLowerPosition[1],\n      this.keyPoints[0].position.z\n    );\n    notify(0);\n    this.keyPoints[1].position = new Vector3(\n      localLowerPosition[0] + newLocalDimensions[0],\n      localLowerPosition[1] + newLocalDimensions[1],\n      this.keyPoints[1].position.z\n    );\n    notify(1);\n  }\n\n  static ofDict(scene, dict = null, mainView = null) {\n    if (!dict) throw \"null dictionary describing Box region\";\n    const name = Maybe.fromNull(dict.name).orSome(\n      `BoxRegion${Math.floor(Math.random() * 1e3)}`\n    );\n    const mesh = createBoxRegionMesh(dict, name, scene);\n\n    const material = new StandardMaterial(`BoxRegionMaterial${name}`, scene);\n    const color = new Color3(dict.color[0], dict.color[1], dict.color[2]);\n    material.diffuseColor = color;\n    material.emissiveColor = color;\n    material.backFaceCulling = false;\n    mesh.material = material;\n\n    mesh.visibility = 0.25;\n\n    Maybe.fromNull(dict.quaternion).forEach((quaternion) => {\n      const babylonQuaternion = new Quaternion(\n        quaternion[1],\n        quaternion[2],\n        quaternion[3],\n        quaternion[0]\n      );\n      mesh.rotationQuaternion = babylonQuaternion.normalize();\n    });\n\n    const keyPoints = createPlaceHolderKeyPoints(\n      scene,\n      dict.corners.map((x) => Vec3.of(x).toBabylon()),\n      mesh,\n      mainView\n    );\n    return new BoxRegion(mesh, dict.corners, keyPoints, dict.keyValueMap);\n  }\n}\n\nconst RADIUS = Constants.RADIUS;\nconst FACES = [\n  [0, 1, 2],\n  [2, 3, 0],\n  [4, 5, 6],\n  [6, 7, 4],\n  [0, 1, 5],\n  [5, 4, 0],\n  [3, 2, 6],\n  [6, 7, 3],\n  [1, 2, 6],\n  [6, 5, 1],\n  [0, 3, 7],\n  [7, 4, 0],\n];\n\n/**\n * @param boxRegion: {position: 3-array, corners: array of 3-arrays }\n */\nfunction createBoxRegionMesh(boxRegion, name, scene) {\n  // centered corners vec\n  const corners = boxRegion.corners.map((x) => Vec3.of(x).toBabylon());\n  const d = corners[1].subtract(corners[0]);\n  const middlePoint = Vec3.of(boxRegion.position).toBabylon();\n  const shape = [\n    corners[0],\n    corners[0].add(Axis.X.scale(d.x)),\n    corners[0].add(new Vector3(d.x, d.y, 0)),\n    corners[0].add(Axis.Y.scale(d.y)),\n  ];\n  const h = new Vector3(0, 0, d.z);\n  const boxRegionMesh = {\n    positions: [\n      shape[0],\n      shape[1],\n      shape[2],\n      shape[3],\n      shape[0].add(h),\n      shape[1].add(h),\n      shape[2].add(h),\n      shape[3].add(h),\n    ],\n    faces: FACES,\n  };\n  const mesh = Util3d.meshFromPositionAndFaces(\n    name,\n    scene,\n    boxRegionMesh.positions,\n    boxRegionMesh.faces\n  );\n  mesh.position = middlePoint;\n  return mesh;\n}\n\nfunction createNewMeshFromOldUsingNewBox(newBox, scene, mesh, item) {\n  const average = Util3d.pointAverageVec3(\n    newBox.corners.map((x) => Vec3.of(x))\n  );\n  newBox.position = average.toArray();\n  newBox.corners = newBox.corners.map((x) => Vec3.of(x).sub(average).toArray());\n\n  const newMesh = createBoxRegionMesh(newBox, mesh.name, scene);\n  newMesh.position = mesh.position;\n  newMesh.rotationQuaternion = mesh.rotationQuaternion;\n  newMesh.locallyTranslate(average.toBabylon());\n  newMesh.material = mesh.material;\n  newMesh.visibility = mesh.visibility;\n  newMesh.parent = mesh.parent;\n\n  item.mesh = newMesh;\n  item.corners = newBox.corners;\n\n  const childrenCopy = [...mesh._children];\n  childrenCopy.forEach((c) => {\n    mesh.removeChild(c);\n    c.parent = newMesh;\n  });\n  item.keyPoints.forEach((k, j) => {\n    k.position = Vec3.of(newBox.corners[j]).toBabylon();\n  });\n  // dispose old mesh\n  mesh.dispose();\n}\n\nconst getKeyPointObserverFunction = (mainView, scene) => {\n  return ({ updatedPointMesh, is2updateServer }) => {\n    mainView\n      .getNodeFromTree(updatedPointMesh.parent.name)\n      .forEach((boxRegionTreeNode) => {\n        const index = updatedPointMesh.index;\n        const item = boxRegionTreeNode.item;\n        const mesh = item.mesh;\n        const name = mesh.name;\n\n        let newBox = {\n          position: Vec3.ofBabylon(mesh.position).toArray(),\n          corners: item.corners,\n        };\n        newBox.corners[index] = Vec3.ofBabylon(\n          updatedPointMesh.position\n        ).toArray();\n\n        createNewMeshFromOldUsingNewBox(newBox, scene, mesh, item);\n        mainView.addGizmo();\n\n        if (is2updateServer) {\n          mainView.updateNodeInServer(name);\n          mainView.getNodeFromTree(name).forEach((node) => {\n            mainView.setProperties(node.item.toForm());\n          });\n        }\n      });\n  };\n};\n\nconst createPlaceHolderKeyPoints = (\n  scene,\n  corners,\n  boxRegionMesh,\n  mainView\n) => {\n  const keyPoints = [];\n  corners.forEach((corner, i) => {\n    const p = corner;\n\n    const keyPoint = Util3d.createSphere(\n      scene,\n      new Color3(0.25, 0.25, 0.25),\n      RADIUS,\n      `${boxRegionMesh.name}keyPoint${i}`,\n      true\n    );\n\n    keyPoint.parent = boxRegionMesh;\n    keyPoint.position = p;\n    keyPoint.index = i;\n    keyPoint.observers = new Observable();\n    keyPoint.observers.add(getKeyPointObserverFunction(mainView, scene));\n    keyPoints.push(keyPoint);\n  });\n  return keyPoints;\n};\n\nexport default BoxRegion;\n","import { Maybe } from \"monet\";\nimport MouseKeysAction from \"./MouseKeysAction\";\nimport BoxRegion from \"../NodeItem/BoxRegion\";\nimport Vec3 from \"../Math/Vec3\";\nimport Util3d from \"../Util3d/Util3d\";\nimport React from \"react\";\nimport { Color3 } from \"@babylonjs/core\";\n\nclass BoxRegionAction extends MouseKeysAction {\n  constructor() {\n    if (instance) return instance;\n    super();\n    this.key = \"drawBoxRegion\";\n    this.name = \"Draw Box Region [B]\";\n    this.maybeMousePos = Maybe.none();\n    this.tempMesh = null;\n    this.icon = props => <i className=\"fas fa-square\" {...props} />;\n    instance = this;\n  }\n\n  action = parentView => {\n    super.action(parentView);\n    parentView.setSelectedAction(this);\n  };\n\n  onPointerDown = (evt, parentView) => {\n    if (!(evt.buttons === 1)) return;\n    parentView.getSceneMemory().forEach(memory => {\n      const scene = memory.scene;\n      const ground = memory.ground;\n      const camera = memory.camera;\n      const maybeMousePos = Util3d.getGroundPosition(scene, ground);\n      this.maybeMousePos = maybeMousePos;\n      maybeMousePos.forEach(mousePos => {\n        camera.detachControl(memory.canvas);\n      });\n    });\n  };\n\n  onPointerMove = (evt, parentView) => {\n    parentView.getSceneMemory().forEach(memory => {\n      const scene = memory.scene;\n      const ground = memory.ground;\n      const maybeCurrent = Util3d.getGroundPosition(scene, ground);\n      maybeCurrent.forEach(current => {\n        this.maybeMousePos.forEach(oldMousePos => {\n          if (this.tempMesh) this.tempMesh.dispose();\n          this.tempMesh = this.createBoxRegion(\n            [oldMousePos, current],\n            TEMP_BOX_REGION_NAME,\n            scene,\n            parentView,\n            false\n          );\n        });\n      });\n    });\n  };\n\n  onPointerUp = parentView => {\n    parentView.getSceneMemory().forEach(memory => {\n      const scene = memory.scene;\n      const camera = memory.camera;\n      const ground = memory.ground;\n      const maybeCurrent = Util3d.getGroundPosition(scene, ground);\n      maybeCurrent.forEach(current => {\n        this.maybeMousePos.forEach(oldMousePos => {\n          this.tempMesh.dispose();\n          const name = `BoxRegion${Math.floor(Math.random() * 1e3)}`;\n          this.createBoxRegion(\n            [oldMousePos, current],\n            name,\n            scene,\n            parentView,\n            true\n          );\n          parentView.setPropertiesWithName(name);\n        });\n      });\n      this.maybeMousePos = Maybe.none();\n      camera.attachControl(memory.canvas, true);\n      parentView.renderMenus();\n    });\n  };\n\n  createBoxRegion = (\n    region,\n    name,\n    scene,\n    parentView,\n    is2addInServer = true,\n    color = Color3.Red(),\n    height = 1\n  ) => {\n    const rootMesh = parentView.getRootNode().item.mesh;\n\n    const localRegion = region.map(r =>\n      Util3d.computeLocalCoordinatesFromMesh(\n        { parent: rootMesh },\n        Vec3.ofBabylon(r)\n      )\n    );\n\n    localRegion[1] = localRegion[1].add(Vec3.of([0, 0, height]));\n    const middlePoint = localRegion[0].add(localRegion[1]).scale(0.5);\n    const centeredRegion = localRegion.map(r => r.sub(middlePoint));\n\n    const boxRegionItem = BoxRegion.ofDict(\n      scene,\n      {\n        name: name,\n        position: middlePoint.toArray(),\n        color: [color.r, color.g, color.b],\n        corners: centeredRegion.map(x => x.toArray())\n      },\n      parentView\n    );\n    boxRegionItem.mesh.parent = rootMesh;\n    if (is2addInServer) {\n      parentView.addNodeItem2Tree(boxRegionItem, rootMesh.name, is2addInServer);\n    }\n    return boxRegionItem.mesh;\n  };\n\n  static getInstance() {\n    return new BoxRegionAction();\n  }\n}\n\nlet instance = null;\n\nconst TEMP_BOX_REGION_NAME = \"temp_box_region\";\n\nexport default BoxRegionAction;\n","import NodeItem from \"./NodeItem\";\nimport Vec3 from \"../Math/Vec3\";\nimport Util3d from \"../Util3d/Util3d\";\nimport React from \"react\";\nimport { Maybe } from \"monet\";\nimport Constants from \"../Utils/Constants\";\nimport {\n  Observable,\n  Color3,\n  MeshBuilder,\n  Quaternion,\n  Vector3\n} from \"@babylonjs/core\";\n\nconst RADIUS = Constants.RADIUS;\n\nclass Path extends NodeItem {\n  /**\n   * @param {*} mesh\n   * @param {*} localPath: is an array of 3-arrays of numbers of the local coordinates in relation to mesh.position and quaternion\n   * @param {*} keyPoints: are the keyPoints meshes array\n   * @param {*} splinePath: is an array of 3-arrays of numbers of the local coordinates in relation to mesh.position and quaternion\n   */\n  constructor(mesh, localPath, keyPoints, splinePath, keyValueMap = {}) {\n    super(mesh, keyValueMap);\n    // Array<Vector3> points in relation to its mean\n    this.localPath = localPath;\n    // Array<Meshes> representing key points of the curve\n    this.keyPoints = keyPoints;\n    // spline points from local path\n    this.splinePath = splinePath;\n    this.selectedKeyPointIndex = -1;\n  }\n\n  toDict() {\n    const dict = super.toDict();\n    dict.localPath = this.localPath;\n    dict.splinePath = this.splinePath;\n    return dict;\n  }\n\n  toForm() {\n    const schema = super.toForm();\n    if (this.selectedKeyPointIndex >= 0) {\n      schema.jsonSchema.properties[\"selectedKeyPoint\"] = {\n        type: \"object\",\n        title: `KeyPoint ${this.selectedKeyPointIndex}`,\n        properties: {\n          x: {\n            type: \"number\",\n            title: \"x\"\n          },\n          y: {\n            type: \"number\",\n            title: \"y\"\n          },\n          z: {\n            type: \"number\",\n            title: \"z\"\n          }\n        }\n      };\n\n      schema.uiSchema[\"selectedKeyPoint\"] = {\n        \"ui:widget\": \"collapse\"\n      };\n      schema.uiSchema[\"position\"] = { \"ui:widget\": \"hidden\" };\n      schema.uiSchema[\"quaternion\"] = { \"ui:widget\": \"hidden\" };\n      schema.uiSchema[\"color\"] = { \"ui:widget\": \"hidden\" };\n      schema.uiSchema[\"annotations\"] = { \"ui:widget\": \"hidden\" };\n      const selectedMesh = this.keyPoints[this.selectedKeyPointIndex];\n      const position = Util3d.getWorldCoordinates(\n        selectedMesh,\n        selectedMesh.position\n      ).toArray();\n      schema.data[\"selectedKeyPoint\"] = {\n        x: position[0],\n        y: position[1],\n        z: position[2]\n      };\n      return schema;\n    }\n    return schema;\n  }\n\n  ofForm(form) {\n    super.ofForm(form);\n    if (this.selectedKeyPointIndex >= 0) {\n      const selectedKeyPoint = this.keyPoints[this.selectedKeyPointIndex];\n      const formPosition = form.selectedKeyPoint;\n      const newPosInWorldCoordinates = Vector3.FromArray(\n        [formPosition.x, formPosition.y, formPosition.z].map(Number.parseFloat)\n      );\n      const localPos = Util3d.getLocalCoordinatesFromWorld(\n        selectedKeyPoint,\n        newPosInWorldCoordinates\n      ).toArray();\n      selectedKeyPoint.position = new Vector3(\n        localPos[0],\n        localPos[1],\n        localPos[2]\n      );\n      selectedKeyPoint.observers.notifyObservers({\n        updatedPointMesh: selectedKeyPoint,\n        is2updateServer: false\n      });\n    }\n  }\n\n  ofDict(scene, dict = null, mainView = null) {\n    return Path.ofDict(scene, dict, mainView);\n  }\n\n  getType = () => Path.TYPE;\n\n  static TYPE = \"Path\";\n\n  static ofDict(scene, dict = null, mainView = null) {\n    if (!dict || !mainView)\n      throw \"null dictionary describing path or null mainView\";\n\n    const name = dict.name;\n    const curve = dict.localPath.map(z => Vec3.of(z).toBabylon());\n    const spline = Util3d.getSplineFromCurve(curve);\n    const { points } = spline;\n    let mesh = null;\n    //hack\n    if (points.length === 1) {\n      mesh = MeshBuilder.CreateLines(\n        name,\n        { points: points, updatable: true },\n        scene\n      );\n    } else {\n      mesh = Util3d.createTubeFromPoints(\n        scene,\n        points,\n        Color3.Gray(),\n        RADIUS / 8,\n        name\n      );\n    }\n    mesh.position = Vec3.of(dict.position).toBabylon();\n    mesh.material = Util3d.getMaterialFromColor(\n      Color3.FromArray(dict.color),\n      scene,\n      `PathMaterial${name}`\n    );\n    mesh.rotationQuaternion = Maybe.fromNull(dict.quaternion)\n      .map(quaternion =>\n        new Quaternion(\n          quaternion[1],\n          quaternion[2],\n          quaternion[3],\n          quaternion[0]\n        ).normalize()\n      )\n      .orSome(Quaternion.Identity());\n    const splinePath = Util3d.splineObj2redis(spline);\n    const keyPoints = createPlaceHolderKeyPoints(\n      scene,\n      { ...dict, mesh, splinePath },\n      mainView\n    );\n\n    const path2return = new Path(\n      mesh,\n      curve.map(point => [point.x, point.y, point.z]),\n      keyPoints,\n      splinePath,\n      dict.keyValueMap\n    );\n    mesh.onClick = getMeshOnClick(mainView, path2return);\n    return path2return;\n  }\n}\n\nexport default Path;\n\nconst getMeshOnClick = (mainView, nodeItem) => () => {\n  mainView.closeContextDial();\n  mainView\n    .getNodeFromTree(nodeItem.name)\n    .forEach(node => (node.item.selectedKeyPointIndex = -1));\n};\n\nfunction defaultKeyPointUpdate(scene, mainView, oldMesh, item) {\n  // used when keypoint is updated\n  const childrenCopy = [...oldMesh._children];\n  const spline = item.splinePath.map(z => new Vector3(z[0], z[1], 0));\n  childrenCopy.forEach(c => {\n    c.parent = item.mesh;\n  });\n  return item.keyPoints.map((k, i) => {\n    k.index = i;\n    k.name = `${oldMesh.name}keyPointSpline${i}`;\n    k.position = Vec3.of(item.localPath[i]).toBabylon();\n    k.rotationQuaternion = Quaternion.Identity();\n    if (i > 0 && i < item.keyPoints.length - 1) {\n      k._children.forEach(kChild => kChild.dispose());\n      const c = getConeMesh(\n        scene,\n        k.material.diffuseColor,\n        item.mesh,\n        i,\n        spline,\n        k.position\n      )();\n      c.parent = k;\n    }\n    return k;\n  });\n}\n\nfunction createNewMeshFromOldUsingNewPoints(\n  newPoints,\n  scene,\n  oldMesh,\n  item,\n  mainView,\n  keyPointUpdateFunction = defaultKeyPointUpdate\n) {\n  const average = Util3d.pointAverage(newPoints);\n  newPoints = newPoints.map(x => x.subtract(average));\n\n  const spline = Util3d.getSplineFromCurve(newPoints);\n  // const newMesh = MeshBuilder.CreateLines(\n  //   oldMesh.name,\n  //   { points: spline.points, updatable: true },\n  //   scene\n  // );\n\n  const newMesh = Util3d.createTubeFromPoints(\n    scene,\n    spline.points,\n    Color3.Gray(),\n    RADIUS / 8,\n    oldMesh.name\n  );\n\n  newMesh.position = oldMesh.position;\n  newMesh.rotationQuaternion = oldMesh.rotationQuaternion;\n  newMesh.locallyTranslate(average);\n  newMesh.material = oldMesh.material;\n  newMesh.visibility = oldMesh.visibility;\n  newMesh.parent = oldMesh.parent;\n  newMesh.onClick = oldMesh.onClick;\n\n  item.localPath = newPoints.map(x => Vec3.ofBabylon(x).toArray());\n  item.splinePath = Util3d.splineObj2redis(spline);\n  item.mesh = newMesh;\n\n  item.keyPoints = keyPointUpdateFunction(scene, mainView, oldMesh, item);\n\n  oldMesh.dispose();\n  return newPoints;\n}\n\nconst getKeyPointObserverFunction = (scene, mainView) => {\n  return ({ updatedPointMesh, is2updateServer }) => {\n    if (!updatedPointMesh.parent) return;\n    mainView\n      .getNodeFromTree(updatedPointMesh.parent.name)\n      .forEach(pathTreeNode => {\n        const index = updatedPointMesh.index;\n        const item = pathTreeNode.item;\n        const mesh = item.mesh;\n        let newPoints = item.localPath.map(x => Vec3.of(x).toBabylon());\n        newPoints[index] = updatedPointMesh.position;\n\n        createNewMeshFromOldUsingNewPoints(\n          newPoints,\n          scene,\n          mesh,\n          item,\n          mainView\n        );\n\n        if (index > 0 && index < newPoints.length - 1) {\n          // we know by construction that this keyPoint has children\n          mainView.highlightMeshInScene([item.keyPoints[index]._children[0]]);\n        }\n\n        if (is2updateServer) {\n          mainView.updateNodeInServer(mesh.name);\n          mainView.getNodeFromTree(mesh.name).forEach(node => {\n            node.item.selectedKeyPointIndex = index;\n            mainView.setProperties(node.item.toForm());\n          });\n        }\n      });\n  };\n};\n\nconst deleteKeyPoint = (scene, keyPointMesh, mainView) => {\n  const index = keyPointMesh.index;\n  const name = keyPointMesh.parent.name;\n  mainView.getNodeFromTree(name).forEach(pathTreeNode => {\n    const item = pathTreeNode.item;\n    const mesh = item.mesh;\n\n    let newPoints = item.localPath.map(x => Vec3.of(x).toBabylon());\n\n    newPoints.splice(index, 1);\n    item.keyPoints.splice(index, 1)[0].dispose();\n\n    createNewMeshFromOldUsingNewPoints(\n      newPoints,\n      scene,\n      mesh,\n      item,\n      mainView,\n      onAddNewPointKeyPointUpdate\n    );\n\n    mainView.updateNodeInServer(name);\n  });\n};\n\nfunction onAddNewPointKeyPointUpdate(scene, mainView, oldMesh, item) {\n  // used when new keypoint is added\n  return createPlaceHolderKeyPoints(scene, item, mainView);\n}\n/**\n *\n * @param {*} scene\n * @param {*} keyPointMesh\n * @param {*} curveMesh\n * @param {*} mainView\n * @param {*} orientation: it belongs to the set {-1,1}, represents orientation\n */\nconst addKeyPointInBetween = (scene, keyPointMesh, mainView, orientation) => {\n  const index = keyPointMesh.index;\n  const name = keyPointMesh.parent.name;\n  mainView.getNodeFromTree(name).forEach(pathTreeNode => {\n    const nextIndex = index + orientation;\n    const item = pathTreeNode.item;\n    const numberOfPoints = item.localPath.length;\n    const mesh = item.mesh;\n    let newPoints = [];\n    const oldPoints = item.localPath.map(x => Vec3.of(x).toBabylon());\n\n    if (nextIndex < 0) {\n      newPoints = [\n        oldPoints[0].scale(3).subtract(oldPoints[1]).scale(0.5)\n      ].concat(oldPoints);\n    } else if (nextIndex > numberOfPoints - 1) {\n      newPoints = oldPoints.concat([\n        oldPoints[numberOfPoints - 1]\n          .scale(3)\n          .subtract(oldPoints[numberOfPoints - 2])\n          .scale(0.5)\n      ]);\n    } else {\n      const specialIndex = index + Math.max(0, orientation);\n      for (let i = 0; i < specialIndex; i++) {\n        newPoints.push(oldPoints[i]);\n      }\n      newPoints.push(oldPoints[nextIndex].add(oldPoints[index]).scale(0.5));\n      for (let i = specialIndex; i < numberOfPoints; i++) {\n        newPoints.push(oldPoints[i]);\n      }\n    }\n\n    createNewMeshFromOldUsingNewPoints(\n      newPoints,\n      scene,\n      mesh,\n      item,\n      mainView,\n      onAddNewPointKeyPointUpdate\n    );\n\n    mainView.updateNodeInServer(name);\n  });\n};\n\nconst getKeyPointActions = (scene, keyPointMesh, mainView) => {\n  const actions = [];\n\n  mainView.getNodeFromTree(keyPointMesh.parent.name).forEach(pathTreeNode => {\n    const item = pathTreeNode.item;\n    const curve = item.localPath;\n\n    if (curve.length !== 2) {\n      actions.push({\n        icon: props => <i className=\"fas fa-trash\" {...props}></i>,\n        action: parentView => {\n          deleteKeyPoint(scene, keyPointMesh, parentView);\n          parentView.closeContextDial();\n        },\n        name: \"Delete node [DEL]\"\n      });\n    }\n\n    actions.push({\n      icon: props => <i className=\"fas fa-less-than\" {...props}></i>,\n      action: parentView => {\n        addKeyPointInBetween(scene, keyPointMesh, parentView, -1);\n        parentView.closeContextDial();\n      },\n      name: \"Add previous\"\n    });\n\n    actions.push({\n      icon: props => <i className=\"fas fa-greater-than\" {...props}></i>,\n      action: parentView => {\n        addKeyPointInBetween(scene, keyPointMesh, parentView, 1);\n        parentView.closeContextDial();\n      },\n      name: \"Add next\"\n    });\n  });\n\n  return actions;\n};\n\nconst createPlaceHolderKeyPoints = (scene, item, mainView) => {\n  const color = new Color3(0.25, 0.25, 0.25);\n  const keyPoints = [];\n  const curve = item.localPath.map(z => Vec3.of(z).toBabylon());\n  const spline = item.splinePath.map(z => new Vector3(z[0], z[1], 0));\n  const curveMesh = item.mesh;\n  curve.forEach((p, i) => {\n    const sphere = getSphereMesh(scene, color, curveMesh, i);\n    const cone = () => {\n      const c = getConeMesh(scene, color, curveMesh, i, spline, p)();\n      const s = getSphereMesh(scene, color, curveMesh, i)();\n      s.visibility = 0.1;\n      c.parent = s;\n      return s;\n    };\n\n    const keyPoint = i === 0 || i === curve.length - 1 ? sphere() : cone();\n    keyPoint.parent = curveMesh;\n    keyPoint.position = p;\n    keyPoint.index = i;\n    keyPoint.observers = new Observable();\n\n    keyPoints.push(keyPoint);\n\n    keyPoint.observers.add(getKeyPointObserverFunction(scene, mainView));\n  });\n\n  keyPoints.forEach(x => {\n    x.onClick = () => {\n      mainView.setContextActions(getKeyPointActions(scene, x, mainView));\n    };\n  });\n  return keyPoints;\n};\n\nfunction getConeMesh(scene, color, curveMesh, i, spline, p) {\n  return () => {\n    const index = spline\n      .map(z => p.subtract(z).length())\n      .reduce((e, x, i) => (e.value < x ? e : { value: x, index: i }), {\n        value: Number.MAX_VALUE,\n        index: -1\n      }).index;\n    const u = spline[index + 1]\n      .subtract(spline[index])\n      .normalize()\n      .scale(RADIUS);\n    const c = Util3d.createOrientedCone(\n      scene,\n      u,\n      color,\n      `${curveMesh.name}keyPointCone${i}`,\n      false\n    );\n    return c;\n  };\n}\n\nfunction getSphereMesh(scene, color, curveMesh, i) {\n  return () =>\n    Util3d.createSphere(\n      scene,\n      color,\n      RADIUS,\n      `${curveMesh.name}keyPointSpline${i}`,\n      true\n    );\n}\n","import Util3d from \"../Util3d/Util3d\";\nimport Vec3 from \"../Math/Vec3\";\nimport Path from \"../NodeItem/Path\";\nimport MouseKeysAction from \"./MouseKeysAction\";\nimport React from \"react\";\nimport { Color3 } from \"@babylonjs/core\";\n\nclass DrawPathAction extends MouseKeysAction {\n  constructor() {\n    if (instance) return instance;\n    super();\n    this.key = \"drawPath\";\n    this.name = \"Draw Path [P]\";\n    this.mouseCurve = [];\n    this.icon = props => <i className=\"fas fa-bezier-curve\" {...props}></i>;\n    instance = this;\n  }\n\n  static getInstance() {\n    return new DrawPathAction();\n  }\n\n  action = parentView => {\n    super.action(parentView);\n    parentView.setSelectedAction(this);\n  };\n\n  onPointerDown = (evt, parentView) => {\n    if (!(evt.buttons === 1)) return;\n    parentView.getSceneMemory().forEach(memory => {\n      const { scene, ground, camera, canvas } = memory;\n      const maybeMousePos = Util3d.getGroundPosition(scene, ground);\n      maybeMousePos.forEach(mousePos => {\n        camera.detachControl(canvas);\n        this.mouseCurve.push(mousePos);\n        const drawPathPoints =\n          this.mouseCurve.length === 1\n            ? [this.mouseCurve[0], this.mouseCurve[0]]\n            : this.mouseCurve;\n\n        this.createCurve(\n          drawPathPoints,\n          TEMP_PATH_NAME,\n          scene,\n          parentView,\n          false\n        );\n        parentView.setContextActions(\n          this.getDrawPathContextAction(camera, canvas, scene)\n        );\n      });\n    });\n  };\n\n  onPointerMove = (evt, parentView) => {\n    // empty\n  };\n\n  onPointerUp = parentView => {\n    // empty\n  };\n\n  onKeyDown = (evt, parentView) => {\n    parentView.getSceneMemory().forEach(memory => {\n      const { scene, camera, canvas } = memory;\n      const contextActions = this.getDrawPathContextAction(\n        camera,\n        canvas,\n        scene\n      );\n      const keyCodeActionMap = {\n        Enter: () => contextActions[1].action(parentView),\n        Delete: () => contextActions[0].action(parentView),\n        Backspace: () => contextActions[0].action(parentView),\n        Escape: () => {\n          if (this.mouseCurve.length === 0) {\n            super.onKeyDown(evt, parentView);\n          }\n          contextActions[0].action(parentView);\n        }\n      };\n      if (evt.code in keyCodeActionMap) {\n        keyCodeActionMap[evt.code]();\n      } else {\n        super.onKeyDown(evt, parentView);\n      }\n    });\n  };\n\n  createCurve = (\n    curve,\n    name,\n    scene,\n    parentView,\n    is2addInServer = true,\n    color = Color3.Gray()\n  ) => {\n    const rootMesh = parentView.getRootNode().item.mesh;\n\n    const localCurve = curve.map(w =>\n      Util3d.computeLocalCoordinatesFromMesh(\n        { parent: rootMesh },\n        Vec3.ofBabylon(w)\n      ).toBabylon()\n    );\n    const middlePoint = Util3d.pointAverage(localCurve);\n    const centeredCurve = localCurve.map(w => w.subtract(middlePoint));\n\n    const pathItem = Path.ofDict(\n      scene,\n      {\n        name: name,\n        position: Vec3.ofBabylon(middlePoint).toArray(),\n        color: [color.r, color.g, color.b],\n        localPath: centeredCurve.map(z => Vec3.ofBabylon(z).toArray())\n      },\n      parentView\n    );\n    pathItem.mesh.parent = rootMesh;\n    parentView.addNodeItem2Tree(pathItem, rootMesh.name, is2addInServer);\n  };\n\n  getDrawPathContextAction = (camera, canvas, scene) => {\n    const ans = [];\n    ans.push({\n      icon: props => <i className=\"fas fa-trash\" {...props}></i>,\n      action: parentView => {\n        camera.attachControl(canvas, true);\n        parentView.deleteNodeFromTreeUsingName(TEMP_PATH_NAME, false);\n        this.mouseCurve = [];\n        parentView.closeContextDial();\n      },\n      name: \"Clear Path [ESC | DEL | Backspace]\"\n    });\n    if (this.mouseCurve.length > 1) {\n      ans.push({\n        icon: props => <i className=\"fas fa-check\" {...props}></i>,\n        action: parentView => {\n          camera.attachControl(canvas, true);\n          parentView.deleteNodeFromTreeUsingName(TEMP_PATH_NAME, false);\n          const name = `Path${Math.floor(Math.random() * 1e3)}`;\n          this.createCurve(this.mouseCurve, name, scene, parentView, true);\n          this.mouseCurve = [];\n          parentView.setPropertiesWithName(name);\n          parentView.closeContextDial();\n        },\n        name: \"Create Path [Enter]\"\n      });\n    }\n    return ans;\n  };\n}\n\nlet instance = null;\nconst TEMP_PATH_NAME = \"temp_curve\";\nexport default DrawPathAction;\n","import NodeItem from \"./NodeItem\";\nimport Vec3 from \"../Math/Vec3\";\nimport Util3d from \"../Util3d/Util3d\";\nimport { Maybe } from \"monet\";\nimport React from \"react\";\nimport { Utils } from \"mov-fe-lib-core\";\nimport Constants from \"../Utils/Constants\";\nimport {\n  Vector3,\n  Observable,\n  Color3,\n  StandardMaterial,\n  Quaternion\n} from \"@babylonjs/core\";\n\nconst RADIUS = Constants.RADIUS;\nconst positiveMod = Utils.mod;\n\nclass PolygonRegion extends NodeItem {\n  /**\n   * @param {*} mesh\n   * @param {*} localPolygon: is an array of 3-arrays of numbers of the local coordinates in relation to mesh.position and quaternion\n   * @param {*} keyPoints: are the keyPoints meshes array\n   */\n  constructor(mesh, localPolygon, height, keyPoints, keyValueMap = {}) {\n    super(mesh, keyValueMap);\n    this.localPolygon = localPolygon;\n    this.height = height;\n    this.keyPoints = keyPoints;\n  }\n\n  toDict() {\n    const dict = super.toDict();\n    dict.localPolygon = this.localPolygon;\n    dict.height = this.height;\n    return dict;\n  }\n\n  ofDict(scene, dict = null, mainView = null) {\n    return PolygonRegion.ofDict(scene, dict, mainView);\n  }\n\n  getType = () => PolygonRegion.TYPE;\n\n  static TYPE = \"PolygonRegion\";\n\n  static ofDict(scene, dict = null, mainView = null) {\n    if (!dict || !mainView)\n      throw \"null dictionary describing polygon or null mainView\";\n\n    const polygon = dict.localPolygon.map(z => Vec3.of(z).toBabylon());\n    const middlePoint = Vec3.of(dict.position).toBabylon();\n\n    const mesh = createExtrudedPolygonMesh(\n      scene,\n      polygon,\n      dict.height,\n      dict.name\n    );\n    mesh.position = middlePoint;\n\n    const material = new StandardMaterial(`PolygonMaterial${dict.name}`, scene);\n    const color = new Color3(dict.color[0], dict.color[1], dict.color[2]);\n    material.diffuseColor = color;\n    material.emissiveColor = color;\n    mesh.material = material;\n    mesh.visibility = 0.5;\n    Maybe.fromNull(dict.quaternion).forEach(quaternion => {\n      const babylonQuaternion = new Quaternion(\n        quaternion[1],\n        quaternion[2],\n        quaternion[3],\n        quaternion[0]\n      );\n      mesh.rotationQuaternion = babylonQuaternion.normalize();\n    });\n\n    const keypoints = createPlaceHolderKeyPoints(\n      scene,\n      polygon,\n      mesh,\n      mainView\n    );\n\n    return new PolygonRegion(\n      mesh,\n      polygon.map(point => [point.x, point.y, point.z]),\n      dict.height,\n      keypoints,\n      dict.keyValueMap\n    );\n  }\n}\n\n/**\n *\n * @param {*} polygon: boundary as babylonjs vec3\n */\nconst stitchingBoundaries = polygon => {\n  const n = polygon.length;\n  const orientation = Util3d.computeOrientation(polygon);\n  const ans = [];\n  for (let i = 0; i < n; i++) {\n    const modi = (i + 1) % n;\n    ans.push([i, n + modi, modi]);\n    ans.push([i, n + i, n + modi]);\n  }\n  return orientation > 0 ? ans : ans.map(reverseOrientation);\n};\n\nconst reverseOrientation = triangleIndice => {\n  const ans = [];\n  ans.push(triangleIndice[1]);\n  ans.push(triangleIndice[0]);\n  ans.push(triangleIndice[2]);\n  return ans;\n};\n\n/**\n *\n * @param {*} scene\n * @param {*} polygon array of babylon js vector3\n * @param {*} height\n * @param {*} name\n */\nconst createExtrudedPolygonMesh = (scene, polygon, height, name) => {\n  const h = new Vector3(0, 0, height);\n  const polygonRegionMesh = {\n    positions: [],\n    faces: []\n  };\n\n  polygonRegionMesh.positions = [...polygon];\n  for (let i = 0; i < polygon.length; i++) {\n    polygonRegionMesh.positions.push(polygon[i].add(h));\n  }\n\n  const n = polygon.length;\n  const lowerTriangulation = Util3d.triangulatePolygon(polygon);\n  const upperTriangulation = Util3d.triangulatePolygon(\n    polygonRegionMesh.positions.slice(n)\n  )\n    .map(x => x.map(z => z + n))\n    .map(reverseOrientation);\n\n  const stitchTriangulation = stitchingBoundaries(polygon);\n\n  polygonRegionMesh.faces = lowerTriangulation\n    .concat(upperTriangulation)\n    .concat(stitchTriangulation);\n\n  const mesh = Util3d.meshFromPositionAndFaces(\n    name,\n    scene,\n    polygonRegionMesh.positions,\n    polygonRegionMesh.faces\n  );\n  return mesh;\n};\n\nfunction defaultKeyPointUpdate(scene, mainView, oldMesh, item) {\n  // used when keypoint is updated or deleted\n  const childrenCopy = [...oldMesh._children];\n  childrenCopy.forEach(c => {\n    oldMesh.removeChild(c);\n    c.parent = item.mesh;\n  });\n\n  return item.keyPoints.map((k, i) => {\n    k.observers = new Observable();\n    k.observers.add(getKeyPointObserverFunction(scene, mainView));\n    k.index = i;\n    k.name = `${oldMesh.name}keyPoint${i}`;\n    k.position = Vec3.of(item.localPolygon[i]).toBabylon();\n    return k;\n  });\n}\n\nfunction createNewMeshFromOldUsingNewPoints(\n  newPoints,\n  scene,\n  mesh,\n  item,\n  mainView,\n  keyPointUpdateFunction = defaultKeyPointUpdate\n) {\n  const average = Util3d.pointAverage(newPoints);\n  newPoints = newPoints.map(x => x.subtract(average));\n  // update mesh\n  const newMesh = createExtrudedPolygonMesh(\n    scene,\n    newPoints,\n    item.height,\n    mesh.name\n  );\n  newMesh.position = mesh.position;\n  newMesh.rotationQuaternion = mesh.rotationQuaternion;\n  newMesh.locallyTranslate(average);\n  newMesh.material = mesh.material;\n  newMesh.visibility = mesh.visibility;\n  newMesh.parent = mesh.parent;\n\n  item.localPolygon = newPoints.map(x => Vec3.ofBabylon(x).toArray());\n  item.mesh = newMesh;\n\n  item.keyPoints = keyPointUpdateFunction(scene, mainView, mesh, item);\n  // dispose old mesh\n  mesh.dispose();\n  return newPoints;\n}\n\nconst getKeyPointObserverFunction = (scene, mainView) => {\n  return ({ updatedPointMesh, is2updateServer }) => {\n    if (!updatedPointMesh.parent) return;\n    mainView\n      .getNodeFromTree(updatedPointMesh.parent.name)\n      .forEach(polygonTreeNode => {\n        const index = updatedPointMesh.index;\n        const item = polygonTreeNode.item;\n        const mesh = item.mesh;\n        const name = mesh.name;\n        let newPoints = item.localPolygon.map(x => Vec3.of(x).toBabylon());\n        newPoints[index] = updatedPointMesh.position;\n        createNewMeshFromOldUsingNewPoints(\n          newPoints,\n          scene,\n          mesh,\n          item,\n          mainView\n        );\n\n        if (is2updateServer) {\n          mainView.updateNodeInServer(name);\n        }\n      });\n  };\n};\n\nfunction onAddNewPointKeyPointUpdate(scene, mainView, oldMesh, item) {\n  // used when new keypoint is added\n  return createPlaceHolderKeyPoints(\n    scene,\n    item.localPolygon.map(x => Vec3.of(x).toBabylon()),\n    item.mesh,\n    mainView\n  );\n}\n\n/**\n *\n * @param {*} scene\n * @param {*} keyPointMesh\n * @param {*} curveMesh\n * @param {*} mainView\n * @param {*} orientation: it belongs to the set {-1,1}, represents orientation\n */\nconst addKeyPointInBetween = (scene, keyPointMesh, mainView, orientation) => {\n  const index = keyPointMesh.index;\n  const name = keyPointMesh.parent.name;\n  mainView.getNodeFromTree(name).forEach(pathTreeNode => {\n    const item = pathTreeNode.item;\n    const numberOfPoints = item.localPolygon.length;\n    const nextIndex = positiveMod(index + orientation, numberOfPoints);\n    const mesh = item.mesh;\n    const oldPoints = item.localPolygon.map(x => Vec3.of(x).toBabylon());\n\n    let newPoints = [];\n    const specialIndex = index + Math.max(0, orientation);\n\n    for (let i = 0; i < specialIndex; i++) {\n      newPoints.push(oldPoints[i]);\n    }\n\n    newPoints.push(oldPoints[nextIndex].add(oldPoints[index]).scale(0.5));\n\n    for (let i = specialIndex; i < numberOfPoints; i++) {\n      newPoints.push(oldPoints[i]);\n    }\n\n    createNewMeshFromOldUsingNewPoints(\n      newPoints,\n      scene,\n      mesh,\n      item,\n      mainView,\n      onAddNewPointKeyPointUpdate\n    );\n\n    // mainView.updateNodeInServer(name);\n  });\n};\n\nconst deleteKeyPoint = (scene, keyPointMesh, mainView) => {\n  const index = keyPointMesh.index;\n  const name = keyPointMesh.parent.name;\n  mainView.getNodeFromTree(name).forEach(pathTreeNode => {\n    const item = pathTreeNode.item;\n    const mesh = item.mesh;\n\n    let newPoints = item.localPolygon.map(x => Vec3.of(x).toBabylon());\n\n    newPoints.splice(index, 1);\n    item.keyPoints.splice(index, 1)[0].dispose();\n\n    createNewMeshFromOldUsingNewPoints(newPoints, scene, mesh, item, mainView);\n\n    mainView.updateNodeInServer(name);\n  });\n};\n\nconst getKeyPointActions = (scene, keyPointMesh, mainView) => {\n  const actions = [];\n\n  mainView.getNodeFromTree(keyPointMesh.parent.name).forEach(pathTreeNode => {\n    const item = pathTreeNode.item;\n    const polygon = item.localPolygon;\n\n    if (polygon.length > 3) {\n      actions.push({\n        icon: props => <i className=\"fas fa-trash\" {...props}></i>,\n        action: parentView => {\n          deleteKeyPoint(scene, keyPointMesh, parentView);\n          parentView.closeContextDial();\n        },\n        name: \"Delete node [DEL]\"\n      });\n    }\n\n    actions.push({\n      icon: props => <i className=\"fas fa-less-than\" {...props}></i>,\n      action: parentView => {\n        addKeyPointInBetween(scene, keyPointMesh, parentView, -1);\n        parentView.closeContextDial();\n      },\n      name: \"Add previous\"\n    });\n\n    actions.push({\n      icon: props => <i className=\"fas fa-greater-than\" {...props}></i>,\n      action: parentView => {\n        addKeyPointInBetween(scene, keyPointMesh, parentView, 1);\n        parentView.closeContextDial();\n      },\n      name: \"Add next\"\n    });\n  });\n\n  return actions;\n};\n\nconst createPlaceHolderKeyPoints = (scene, polygon, polygonMesh, mainView) => {\n  const keyPoints = [];\n  polygon.forEach((p, i) => {\n    const color = new Color3(0.25, 0.25, 0.25);\n    const keyPoint = Util3d.createSphere(\n      scene,\n      color,\n      RADIUS,\n      `${polygonMesh.name}keyPointPolygon${i}`,\n      true\n    );\n    keyPoint.parent = polygonMesh;\n    keyPoint.position = p;\n    keyPoint.index = i;\n    keyPoint.observers = new Observable();\n\n    keyPoints.push(keyPoint);\n\n    keyPoint.observers.add(getKeyPointObserverFunction(scene, mainView));\n  });\n\n  keyPoints.forEach(x => {\n    x.onClick = () => {\n      mainView.setContextActions(getKeyPointActions(scene, x, mainView));\n    };\n  });\n\n  return keyPoints;\n};\n\nexport default PolygonRegion;\n","import MouseKeysAction from \"./MouseKeysAction\";\nimport Vec3 from \"../Math/Vec3\";\nimport Util3d from \"../Util3d/Util3d\";\nimport React from \"react\";\nimport PolygonRegion from \"../NodeItem/PolygonRegion\";\nimport { Color3 } from \"@babylonjs/core\";\n\nlet instance = null;\n\nconst TEMP_POLYGON_REGION_NAME = \"temp_polygon_region\";\n\n// Similar 2 Draw Action Path\nclass PolygonRegionAction extends MouseKeysAction {\n  constructor() {\n    if (instance) return instance;\n    super();\n    this.key = \"drawPolygonRegion\";\n    this.name = \"Draw Polygon Region [R]\";\n    this.mouseCurve = [];\n    this.icon = props => <i className=\"fas fa-draw-polygon\" {...props}></i>;\n    instance = this;\n  }\n\n  static getInstance() {\n    return new PolygonRegionAction();\n  }\n\n  action = parentView => {\n    super.action(parentView);\n    parentView.setSelectedAction(this);\n  };\n\n  getDrawPolygonContextAction = (camera, canvas, scene) => {\n    const ans = [];\n    ans.push({\n      icon: props => <i className=\"fas fa-trash\" {...props}></i>,\n      action: parentView => {\n        camera.attachControl(canvas, true);\n        parentView.deleteNodeFromTreeUsingName(TEMP_POLYGON_REGION_NAME, false);\n        this.mouseCurve = [];\n        parentView.closeContextDial();\n      },\n      name: \"Clear Polygon [ESC | DEL | Backspace]\"\n    });\n    if (this.mouseCurve.length > 2) {\n      ans.push({\n        icon: props => <i className=\"fas fa-check\" {...props}></i>,\n        action: parentView => {\n          camera.attachControl(canvas, true);\n          parentView.deleteNodeFromTreeUsingName(\n            TEMP_POLYGON_REGION_NAME,\n            false\n          );\n          const name = `PolygonRegion${Math.floor(Math.random() * 1e3)}`;\n          this.createPolygonRegion(\n            this.mouseCurve,\n            name,\n            scene,\n            parentView,\n            true\n          );\n          this.mouseCurve = [];\n          parentView.setPropertiesWithName(name);\n          parentView.closeContextDial();\n        },\n        name: \"Create Polygon [Enter]\"\n      });\n    }\n    return ans;\n  };\n\n  onPointerDown = (evt, parentView) => {\n    parentView.getSceneMemory().forEach(memory => {\n      const scene = memory.scene;\n      const ground = memory.ground;\n      const camera = memory.camera;\n      const maybeMousePos = Util3d.getGroundPosition(scene, ground);\n      maybeMousePos.forEach(mousePos => {\n        camera.detachControl(memory.canvas);\n        this.mouseCurve.push(mousePos);\n        const drawPolyPoints =\n          this.mouseCurve.length === 1\n            ? [this.mouseCurve[0], this.mouseCurve[0]]\n            : this.mouseCurve;\n        this.createPolygonRegion(\n          drawPolyPoints,\n          TEMP_POLYGON_REGION_NAME,\n          scene,\n          parentView,\n          false\n        );\n        parentView.setContextActions(\n          this.getDrawPolygonContextAction(camera, memory.canvas, scene)\n        );\n      });\n    });\n  };\n\n  onPointerMove = (evt, parentView) => {\n    // empty\n  };\n\n  onPointerUp = parentView => {\n    // empty\n  };\n\n  onKeyDown = (evt, parentView) => {\n    // Warning: code duplication with PathAction\n    parentView.getSceneMemory().forEach(memory => {\n      const scene = memory.scene;\n      const camera = memory.camera;\n      const contextActions = this.getDrawPolygonContextAction(\n        camera,\n        memory.canvas,\n        scene\n      );\n      const keyCodeActionMap = {\n        Enter: () => contextActions[1].action(parentView),\n        Delete: () => contextActions[0].action(parentView),\n        Backspace: () => contextActions[0].action(parentView),\n        Escape: () => {\n          if (this.mouseCurve.length === 0) {\n            super.onKeyDown(evt, parentView);\n          }\n          contextActions[0].action(parentView);\n        }\n      };\n      if (evt.code in keyCodeActionMap) {\n        keyCodeActionMap[evt.code]();\n      } else {\n        super.onKeyDown(evt, parentView);\n      }\n    });\n  };\n\n  createPolygonRegion = (\n    region,\n    name,\n    scene,\n    parentView,\n    is2addInServer = true,\n    color = Color3.Yellow(),\n    height = 1\n  ) => {\n    const rootMesh = parentView.getRootNode().item.mesh;\n\n    const localRegion = region.map(r =>\n      Util3d.computeLocalCoordinatesFromMesh(\n        { parent: rootMesh },\n        Vec3.ofBabylon(r)\n      )\n    );\n\n    const middlePoint = Util3d.pointAverageVec3(localRegion);\n    const centeredRegion = localRegion.map(r => r.sub(middlePoint));\n\n    const polygonRegionItem = PolygonRegion.ofDict(\n      scene,\n      {\n        name: name,\n        position: middlePoint.toArray(),\n        color: [color.r, color.g, color.b],\n        localPolygon: centeredRegion.map(x => x.toArray()),\n        height: height\n      },\n      parentView\n    );\n\n    polygonRegionItem.mesh.parent = rootMesh;\n\n    parentView.addNodeItem2Tree(\n      polygonRegionItem,\n      rootMesh.name,\n      is2addInServer\n    );\n  };\n}\n\nexport default PolygonRegionAction;\n","import { Maybe } from \"monet\";\nimport MouseKeysAction from \"./MouseKeysAction\";\nimport React from \"react\";\n\nclass OrbitAction extends MouseKeysAction {\n  constructor() {\n    if (instance) return instance;\n    super();\n    this.key = \"orbit\";\n    this.name = \"Orbit [ESC]\";\n    this.maybeSelectedMesh = Maybe.none();\n    this.icon = props => <i className=\"fas fa-globe\" {...props}></i>;\n    instance = this;\n  }\n\n  static getInstance() {\n    return new OrbitAction();\n  }\n\n  action = parentView => {\n    super.action(parentView);\n    parentView.setSelectedAction(this);\n  };\n\n  onPointerDown = (evt, parentView) => {};\n\n  onPointerMove = (evt, parentView) => {};\n\n  onPointerUp = parentView => {};\n}\n\nlet instance = null;\n\nexport default OrbitAction;\n","import { Maybe } from \"monet\";\n\n/**\n * Undirected Graph data structure\n */\nclass Graph {\n  #adjMap = {};\n  #vertices = {};\n  #edges = {};\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                      Public API                                      *\n   *                                                                                      */\n  //========================================================================================\n\n  addVertex(i) {\n    if (!(i in this.#vertices)) {\n      this.#vertices[i] = {};\n      this.#adjMap[i] = {};\n    }\n  }\n\n  delVertex(i) {\n    if (i in this.#vertices) {\n      delete this.#vertices[i];\n      // delete neighbors edge properties\n      Object.keys(this.#adjMap[i]).forEach(j => {\n        delete this.#edges[Graph.edgeKey(i, j)];\n        delete this.#edges[Graph.edgeKey(j, i)];\n      });\n      delete this.#adjMap[i];\n      Object.keys(this.#adjMap).forEach(j => {\n        if (i in this.#adjMap[j]) {\n          delete this.#adjMap[j][i];\n        }\n      });\n    }\n  }\n\n  /**\n   *\n   * If edge already exists, this function overwrites previous edge\n   *\n   * @param {*} i: vertex id\n   * @param {*} j: vertex id\n   */\n  addEdge(i, j) {\n    this.addVertex(i);\n    this.addVertex(j);\n    this.#edges[Graph.edgeKey(i, j)] = {};\n    this.#edges[Graph.edgeKey(j, i)] = {};\n    this.#adjMap[i][j] = true;\n    this.#adjMap[j][i] = true;\n    return this;\n  }\n\n  delEdge(i, j) {\n    const ijKey = Graph.edgeKey(i, j);\n    const jiKey = Graph.edgeKey(j, i);\n    if (ijKey in this.#edges || jiKey in this.#edges) {\n      delete this.#edges[ijKey];\n      delete this.#edges[jiKey];\n      delete this.#adjMap[i][j];\n      delete this.#adjMap[j][i];\n    }\n  }\n\n  hasEdge(i, j) {\n    return this.getEdgeProp(i, j).isSome();\n  }\n\n  getNeighbors(i) {\n    if (i in this.#adjMap) return Object.keys(this.#adjMap[i]);\n    return [];\n  }\n\n  getEdgeProp(i, j) {\n    const edgeKey = Graph.edgeKey(i, j);\n    if (edgeKey in this.#edges) {\n      return Maybe.some(this.#edges[edgeKey]);\n    }\n    return Maybe.none();\n  }\n\n  setEdgeProp(i, j, props) {\n    const edgeKey = Graph.edgeKey(i, j);\n    if (edgeKey in this.#edges) {\n      this.#edges[edgeKey] = props;\n    }\n    return this;\n  }\n\n  getVertexProp(i) {\n    if (i in this.#vertices) {\n      return Maybe.some(this.#vertices[i]);\n    }\n    return Maybe.none();\n  }\n\n  setVertexProp(i, props) {\n    if (i in this.#vertices) {\n      this.#vertices[i] = props;\n    }\n    return this;\n  }\n\n  getEdges() {\n    return this.#edges;\n  }\n\n  getVertices() {\n    return this.#vertices;\n  }\n\n  getAdjMap() {\n    return this.#adjMap;\n  }\n\n  setAdjacentMap(adjMap) {\n    this.#adjMap = adjMap;\n  }\n\n  setVertices(vertices) {\n    this.#vertices = vertices;\n  }\n\n  setEdges(edges) {\n    this.#edges = edges;\n  }\n\n  static edgeKey = (i, j) => `${i}_${j}`;\n  static key2Edge = key => key.split(\"_\");\n}\n\nexport default Graph;\n","import Graph from \"./Graph\";\nimport RBush from \"rbush\";\nimport Constants from \"../Utils/Constants\";\nimport { Maybe } from \"monet\";\nimport Vec3 from \"../Math/Vec3\";\nimport Util3d from \"../Util3d/Util3d\";\n\nexport default class GraphEmbedding {\n  constructor() {\n    this.graph = new Graph();\n    this.rTreeVertices = new RTreeVertices();\n    this.rTreeEdges = new RTreeEdges();\n    this.vertexGenerator = 0;\n  }\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                      Public API                                      *\n   *                                                                                      */\n  //========================================================================================\n\n  getAbstractGraph() {\n    return this.graph;\n  }\n\n  getAdjMap() {\n    return this.graph.getAdjMap();\n  }\n\n  /**\n   *\n   * @param {*} i: Vector3\n   * @param {*} iIndex: integer representing index of vertex i (can be undefined)\n   *\n   */\n  addVertex(i, iIndex, isCurve = false) {\n    const maybeVertexI = this.getVertex(i);\n    maybeVertexI.orElseRun(() => {\n      const vertexI = new RVertex(\n        i,\n        iIndex ? iIndex : this.vertexGenerator++,\n        isCurve\n      );\n      this.rTreeVertices.insert(vertexI);\n      this.graph.addVertex(vertexI.id);\n      this.graph.setVertexProp(vertexI.id, {\n        [GraphEmbedding.NAMESPACES.vertex]: vertexI\n      });\n    });\n  }\n\n  /**\n   *\n   * @param {*} i: Vector3\n   */\n  delVertex(i) {\n    this.getVertex(i).forEach(rVertex => {\n      const { id } = rVertex;\n      this.rTreeVertices.remove(rVertex);\n      this.graph.delVertex(id);\n    });\n  }\n\n  addEdge(edge, edgeIndexes = []) {\n    const [i, j] = edge;\n    const [iIndex, jIndex] = edgeIndexes;\n    this.addVertex(i, iIndex);\n    this.addVertex(j, jIndex);\n    this.getVertex(i).forEach(rVertexI =>\n      this.getVertex(j).forEach(rVertexJ => {\n        const edgeIJ = this.getEdgeByIndex(rVertexI.id, rVertexJ.id).orLazy(\n          () => new REdge(rVertexI, rVertexJ)\n        );\n        const edgeJI = this.getEdgeByIndex(rVertexJ.id, rVertexI.id).orLazy(\n          () => new REdge(rVertexJ, rVertexI)\n        );\n\n        this.rTreeEdges.remove(edgeIJ, (a, b) => a.equals(b));\n        this.rTreeEdges.insert(edgeIJ);\n\n        this.graph.addEdge(rVertexI.id, rVertexJ.id);\n\n        //add edge properties\n        this.graph.setEdgeProp(rVertexI.id, rVertexJ.id, {\n          [GraphEmbedding.NAMESPACES.edge]: edgeIJ\n        });\n        this.graph.setEdgeProp(rVertexJ.id, rVertexI.id, {\n          [GraphEmbedding.NAMESPACES.edge]: edgeJI\n        });\n      })\n    );\n    return this;\n  }\n\n  /**\n   *\n   * @param {*} i: Vector3 Position of vertex\n   * @param {*} j: Vector3 Position of vertex\n   */\n  delEdge(i, j) {\n    this.getEdge(i, j).forEach(rEdge => {\n      const indexes = rEdge.edge.map(v => v.id);\n      this.graph.delEdge(...indexes);\n      this.rTreeEdges.remove(rEdge, (a, b) => a.equals(b));\n    });\n  }\n\n  /**\n   *\n   * @param {*} i: Vector3 Position of vertex\n   * @param {*} j: Vector3 Position of vertex\n   */\n  hasEdge(i, j) {\n    return this.getVertex(i)\n      .flatMap(rVertexI =>\n        this.getVertex(j).map(rVertexJ =>\n          this.graph.hasEdge(rVertexI.id, rVertexJ.id)\n        )\n      )\n      .orSome(false);\n  }\n\n  /**\n   *\n   * @param {*} i: Vector3 Position of vertex\n   */\n  getVertex(i) {\n    const queryArray = this.rTreeVertices.search(RVertex.of(i).toBBox());\n    if (queryArray.length > 0) {\n      return Maybe.some(\n        queryArray.length > 1\n          ? this.getMinDistanceVertex(queryArray, i)\n          : queryArray[0]\n      );\n    }\n    return Maybe.none();\n  }\n\n  getVertexByIndex = index => {\n    return this.graph\n      .getVertexProp(index)\n      .flatMap(vertexProp =>\n        Maybe.fromNull(vertexProp[GraphEmbedding.NAMESPACES.vertex])\n      );\n  };\n\n  /**\n   *\n   * @param {*} i: Vector3 Position of vertex\n   *\n   * Returns Array<RVertex>\n   */\n  getNeighbors(i) {\n    const neighbors = [];\n    this.getVertex(i).forEach(rVertex => {\n      this.graph.getNeighbors(rVertex.id).forEach(jId => {\n        this.graph.getVertexProp(jId).forEach(vProp => {\n          neighbors.push(vProp[GraphEmbedding.NAMESPACES.vertex]);\n        });\n      });\n    });\n    return neighbors;\n  }\n\n  updateVertex(vertexIndex, position) {\n    this.graph.getVertexProp(vertexIndex).forEach(prop => {\n      const rVertex = prop[GraphEmbedding.NAMESPACES.vertex];\n      rVertex.position = position;\n      this.rTreeVertices.remove(rVertex);\n      this.rTreeVertices.insert(rVertex);\n      this.graph.getNeighbors(vertexIndex).forEach(j => {\n        this.graph.getEdgeProp(vertexIndex, j).forEach(propEdge => {\n          const rEdge = propEdge[GraphEmbedding.NAMESPACES.edge];\n          this.rTreeEdges.remove(rEdge, (a, b) => a.equals(b));\n          // rEdge has a pointer to the already altered rVertex\n          this.rTreeEdges.insert(rEdge);\n        });\n      });\n    });\n  }\n\n  /**\n   *\n   * @param {*} i: Vector3 Position of vertex\n   * @param {*} j: Vector3 Position of vertex\n   */\n  getEdge(i, j) {\n    const queryPoint = j ? i.add(j).scale(0.5) : i;\n    const queryArray = this.rTreeEdges.search(RVertex.of(queryPoint).toBBox());\n    if (queryArray.length > 0) {\n      return Maybe.some(\n        queryArray.length > 1\n          ? this.getMinDistanceEdge(queryArray, queryPoint)\n          : queryArray[0]\n      );\n    }\n    return Maybe.none();\n  }\n\n  getEdgeByIndex(iIndex, jIndex) {\n    return this.graph\n      .getEdgeProp(iIndex, jIndex)\n      .map(edgeProp => edgeProp[GraphEmbedding.NAMESPACES.edge]);\n  }\n\n  /**\n   *\n   * @param {*} rEdges: Array<REdge>\n   * @param {*} queryPoint: Vector3\n   */\n  getMinDistanceEdge(rEdges, queryPoint) {\n    let minDist = Number.MAX_VALUE;\n    let minDistIndex = -1;\n    rEdges.forEach((rEdge, i) => {\n      const edge = rEdge.edge.map(v => v.position).map(Vec3.ofBabylon);\n      const e = edge[1].sub(edge[0]);\n      const x = Vec3.ofBabylon(queryPoint).sub(edge[0]);\n      const dot = e.dot(x) / e.dot(e);\n      const dist = x.sub(e.scale(dot)).length();\n      if (minDist > dist) {\n        minDist = dist;\n        minDistIndex = i;\n      }\n    });\n    return rEdges[minDistIndex];\n  }\n\n  getMinDistanceVertex(rVertices, queryPoint) {\n    let minDist = Number.MAX_VALUE;\n    let minDistIndex = -1;\n    rVertices.forEach((rVertex, i) => {\n      const vp = Vec3.ofBabylon(rVertex.position);\n      const x = Vec3.ofBabylon(queryPoint);\n      const dist = vp.sub(x).length();\n      if (minDist > dist) {\n        minDist = dist;\n        minDistIndex = i;\n      }\n    });\n    return rVertices[minDistIndex];\n  }\n\n  getVertices() {\n    return this.graph.getVertices();\n  }\n\n  getEdges() {\n    return this.graph.getEdges();\n  }\n\n  /**\n   *\n   * @param {*} data: {adjMap, vertices, edges}\n   */\n  importData(data) {\n    const { adjMap } = data;\n    // add vertices data\n    // add edges data\n    const vertices = { ...data.vertices };\n    const edges = { ...data.edges };\n    Object.keys(adjMap).forEach(i => {\n      Object.keys(adjMap[i]).forEach(j => {\n        const dataVertexI = vertices[i];\n        const dataVertexJ = vertices[j];\n        const dataEdgeIJ = edges[Graph.edgeKey(i, j)];\n        this.graph.getVertexProp(i).forEach(prop => {\n          prop[GraphEmbedding.NAMESPACES.vertex].keyValueMap =\n            dataVertexI.keyValueMap;\n        });\n        this.graph.getVertexProp(j).forEach(prop => {\n          prop[GraphEmbedding.NAMESPACES.vertex].keyValueMap =\n            dataVertexJ.keyValueMap;\n        });\n        this.graph.getEdgeProp(i, j).forEach(prop => {\n          const rEdge = prop[GraphEmbedding.NAMESPACES.edge];\n          rEdge.keyValueMap = dataEdgeIJ.keyValueMap;\n          rEdge.weight = dataEdgeIJ.weight;\n        });\n      });\n    });\n    this.vertexGenerator = data.vertexGenerator;\n  }\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                   Static Functions                                   *\n   *                                                                                      */\n  //========================================================================================\n\n  static NAMESPACES = {\n    vertex: \"rVertex\",\n    edge: \"rEdge\"\n  };\n}\n\n/**\n * Should be Immutable vertex object\n */\nclass RVertex {\n  constructor(vertexPosition, vertexId, isCurve, keyValueMap = {}) {\n    this.position = vertexPosition;\n    this.id = vertexId;\n    this.keyValueMap = keyValueMap;\n    this.isCurve = isCurve;\n  }\n\n  toBBox() {\n    const { position } = this;\n    return {\n      minX: position.x - Constants.RADIUS / 4,\n      minY: position.y - Constants.RADIUS / 4,\n      maxX: position.x + Constants.RADIUS / 4,\n      maxY: position.y + Constants.RADIUS / 4\n    };\n  }\n\n  static of(position) {\n    return new RVertex(position);\n  }\n}\n\nclass RTreeVertices extends RBush {\n  toBBox(rVertex) {\n    return rVertex.toBBox();\n  }\n\n  compareMinX(a, b) {\n    return a.position.x - b.position.x;\n  }\n  compareMinY(a, b) {\n    return a.position.y - b.position.y;\n  }\n}\n\nclass REdge {\n  constructor(rVertexI, rVertexJ, keyValueMap = {}) {\n    this.edge = [rVertexI, rVertexJ];\n    this.keyValueMap = keyValueMap;\n    this.weight = 1.0;\n  }\n\n  equals(b) {\n    if (!(b instanceof REdge)) return false;\n    const bEdgeIds = b.edge.map(v => v.id);\n    return this.edge\n      .map(v => v.id)\n      .map(id => bEdgeIds.includes(id))\n      .every(x => x);\n  }\n\n  toBBox() {\n    const { edge } = this;\n    return {\n      minX: edge.reduce(\n        (e, v) => Math.min(e, v.position.x - Constants.RADIUS / 4),\n        Number.MAX_VALUE\n      ),\n      minY: edge.reduce(\n        (e, v) => Math.min(e, v.position.y - Constants.RADIUS / 4),\n        Number.MAX_VALUE\n      ),\n      maxX: edge.reduce(\n        (e, v) => Math.max(e, v.position.x + Constants.RADIUS / 4),\n        Number.MIN_VALUE\n      ),\n      maxY: edge.reduce(\n        (e, v) => Math.max(e, v.position.y + Constants.RADIUS / 4),\n        Number.MIN_VALUE\n      )\n    };\n  }\n\n  static of(vertexPosI, vertexPosJ) {\n    return new REdge(RVertex.of(vertexPosI), RVertex.of(vertexPosJ));\n  }\n}\n\nclass RTreeEdges extends RBush {\n  toBBox(rEdge) {\n    return rEdge.toBBox();\n  }\n\n  compareMinX(a, b) {\n    const aMin = a.toBBox().minX;\n    const bMin = b.toBBox().minX;\n    return aMin - bMin;\n  }\n\n  compareMinY(a, b) {\n    const aMin = a.toBBox().minY;\n    const bMin = b.toBBox().minY;\n    return aMin - bMin;\n  }\n}\n","import NodeItem from \"./NodeItem\";\nimport Util3d from \"../Util3d/Util3d\";\nimport { Color3, Vector3, Observable, Curve3 } from \"@babylonjs/core\";\nimport Constants from \"../Utils/Constants\";\nimport { Quaternion } from \"@babylonjs/core/Maths/math\";\nimport GraphEmbedding from \"../Graph/GraphEmbedding\";\nimport Graph from \"../Graph/Graph\";\nimport Vec3 from \"../Math/Vec3\";\nimport { Maybe } from \"monet\";\nimport React from \"react\";\nimport lodash from \"lodash\";\nimport { UndoManager } from \"mov-fe-lib-core\";\n\n/**\n * One graph per scene\n */\nclass GraphItem extends NodeItem {\n  constructor(scene, mainView, name = GraphItem.NAME, keyValueMap = {}) {\n    const sceneId = scene.getUniqueId();\n    // super() must be called before using _this_.\n    if (\n      sceneId in graphItemInstances &&\n      !graphItemInstances[sceneId].mesh.isDisposed()\n    ) {\n      return graphItemInstances[sceneId];\n    }\n\n    const graphPlaceHolder = getGraphPlaceHolder(scene, name);\n    graphPlaceHolder.onClick = () =>\n      (this.graphFormMapper = this.getDefaultFormMapper());\n\n    super(graphPlaceHolder, keyValueMap);\n    graphItemInstances[sceneId] = this;\n\n    // object properties\n    this.graph = new GraphEmbedding();\n    this.scene = scene;\n    this.mainView = mainView;\n    this.meshByEdgeId = {};\n    this.meshByVertexId = {};\n    this.graphFormMapper = this.getDefaultFormMapper();\n  }\n\n  getType = () => GraphItem.TYPE;\n\n  toDict() {\n    const dict = super.toDict();\n    const adjMap = this.graph.getAdjMap();\n    const vertices = { ...this.graph.getVertices() };\n    const edges = { ...this.graph.getEdges() };\n\n    Object.keys(vertices).forEach(k => {\n      this.graph\n        .getVertexByIndex(k)\n        .forEach(({ position, id, keyValueMap }) => {\n          vertices[k] = {\n            position: Vec3.ofBabylon(position).toArray(),\n            id: id,\n            keyValueMap: keyValueMap\n          };\n        });\n    });\n\n    Object.keys(edges).forEach(k => {\n      const ids = Graph.key2Edge(k);\n      this.graph\n        .getEdgeByIndex(...ids)\n        .forEach(({ edge, keyValueMap, weight }) => {\n          edges[k] = {\n            ids: ids,\n            positions: edge.map(({ position }) =>\n              Vec3.ofBabylon(position).toArray()\n            ),\n            keyValueMap: keyValueMap,\n            weight: weight,\n            isCurve: edge.map(v => v.isCurve)\n          };\n        });\n    });\n\n    dict[\"adjMap\"] = adjMap;\n    dict[\"vertices\"] = vertices;\n    dict[\"edges\"] = edges;\n    dict[\"vertexGenerator\"] = this.graph.vertexGenerator;\n    return dict;\n  }\n\n  toForm() {\n    const form = super.toForm();\n    delete form.jsonSchema.properties.position;\n    delete form.jsonSchema.properties.quaternion;\n    delete form.jsonSchema.properties.color;\n    delete form.uiSchema.position;\n    delete form.uiSchema.quaternion;\n    delete form.uiSchema.color;\n    delete form.data.position;\n    delete form.data.quaternion;\n    delete form.data.color;\n    return this.graphFormMapper.toForm(form);\n  }\n\n  ofForm(form) {\n    this.name = form.name;\n    this.mesh.name = form.name;\n    this.graphFormMapper.ofForm(form);\n  }\n\n  getDefaultFormMapper() {\n    return {\n      toForm: form => form,\n      ofForm: form => (this.keyValueMap = { ...form.annotations })\n    };\n  }\n\n  getToFormVertex(vertexMesh) {\n    return {\n      toForm: form =>\n        this.graph\n          .getVertex(vertexMesh.position)\n          .map(rVertex => {\n            form.jsonSchema.properties[\"positionVertex\"] = {\n              type: \"object\",\n              title: `Position Vertex ${rVertex.id}`,\n              properties: {\n                x: {\n                  type: \"number\",\n                  title: \"x\"\n                },\n                y: {\n                  type: \"number\",\n                  title: \"y\"\n                },\n                z: {\n                  type: \"number\",\n                  title: \"z\"\n                }\n              }\n            };\n\n            form.uiSchema[\"positionVertex\"] = {\n              \"ui:widget\": \"collapse\"\n            };\n\n            form.data[\"positionVertex\"] = {\n              x: vertexMesh.position.x,\n              y: vertexMesh.position.y,\n              z: vertexMesh.position.z\n            };\n            NodeItem.setAnnotations2Form(form, rVertex.keyValueMap);\n            form.jsonSchema.properties[\n              \"annotations\"\n            ].title = `Annotations Vertex ${rVertex.id}`;\n            return form;\n          })\n          .orSome(form),\n      ofForm: form => {\n        let position = lodash.get(form, \"positionVertex\", vertexMesh.position);\n        position = [position.x, position.y, position.z].map(Number.parseFloat);\n        this.graph\n          .getVertex(vertexMesh.position)\n          .forEach(\n            rVertex =>\n              (rVertex.keyValueMap = { ...lodash.get(form, \"annotations\", {}) })\n          );\n        this.updateVertexPosition(\n          vertexMesh.vertexId,\n          Vector3.FromArray(position),\n          false\n        );\n      }\n    };\n  }\n\n  getToFormEdge(edgeMesh) {\n    return {\n      toForm: form => {\n        const edgePositions = edgeMesh.edgeIndexes\n          .map(index =>\n            Maybe.fromNull(this.meshByVertexId[index]).map(\n              mesh => mesh.position\n            )\n          )\n          .filter(maybe => maybe.isSome())\n          .map(maybe => maybe.some());\n        console.log(\"FORM2EDGE\", edgePositions);\n        if (edgePositions.length === 0) return form;\n        return this.graph\n          .getEdge(edgePositions[0], edgePositions[1])\n          .map(rEdge => {\n            form.jsonSchema.properties[\"positionEdge\"] = {\n              type: \"object\",\n              title: `Position Edge ${edgeMesh.edgeIndexes}`,\n              properties: {\n                x: {\n                  type: \"number\",\n                  title: \"x\"\n                },\n                y: {\n                  type: \"number\",\n                  title: \"y\"\n                },\n                z: {\n                  type: \"number\",\n                  title: \"z\"\n                }\n              }\n            };\n            form.jsonSchema.properties[\"weight\"] = {\n              type: \"number\",\n              title: \"Weight\"\n            };\n\n            form.uiSchema[\"positionEdge\"] = {\n              \"ui:widget\": \"collapse\"\n            };\n\n            const meanPoint = Util3d.pointAverage(edgePositions);\n            form.data[\"positionEdge\"] = {\n              x: meanPoint.x,\n              y: meanPoint.y,\n              z: meanPoint.z\n            };\n            form.data[\"weight\"] = rEdge.weight;\n            NodeItem.setAnnotations2Form(form, rEdge.keyValueMap);\n            form.jsonSchema.properties[\n              \"annotations\"\n            ].title = `Annotations Edge ${edgeMesh.edgeIndexes}`;\n            return form;\n          })\n          .orSome(form);\n      },\n      ofForm: form => {\n        const { edgeIndexes } = edgeMesh;\n\n        //update edges positions\n        const edgePositions = edgeIndexes.map(\n          index => this.meshByVertexId[index].position\n        );\n        const edgePosition = Util3d.pointAverage(edgePositions);\n        let newEdgePosition = lodash.get(form, \"positionEdge\", edgePosition);\n        newEdgePosition = [\n          newEdgePosition.x,\n          newEdgePosition.y,\n          newEdgePosition.z\n        ].map(Number.parseFloat);\n        newEdgePosition = Vector3.FromArray(newEdgePosition);\n        edgePositions.forEach((vertexPos, i) =>\n          this.updateVertexPosition(\n            edgeIndexes[i],\n            vertexPos.add(newEdgePosition.subtract(edgePosition)),\n            false\n          )\n        );\n\n        const updateEdgeFromForm = rEdge => {\n          rEdge.keyValueMap = { ...lodash.get(form, \"annotations\", {}) };\n          rEdge.weight = Number.parseFloat(form.weight);\n        };\n        this.graph\n          .getEdgeByIndex(edgeIndexes[0], edgeIndexes[1])\n          .forEach(updateEdgeFromForm);\n        this.graph\n          .getEdgeByIndex(edgeIndexes[1], edgeIndexes[0])\n          .forEach(updateEdgeFromForm);\n      }\n    };\n  }\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                   Graph Operations                                   *\n   *                                                                                      */\n  //========================================================================================\n\n  addEdge(edge, edgeIndexes = [], isEdgeCurve = [false, false]) {\n    const [i, j] = edge;\n    const [iIndex, jIndex] = edgeIndexes;\n    const [iIsCurve, jIsCurve] = isEdgeCurve;\n    if (this.hasEdge(i, j)) return;\n    this.buildVertex(i, iIndex, iIsCurve);\n    this.buildVertex(j, jIndex, jIsCurve);\n    this.buildEdge(i, j);\n    return this;\n  }\n\n  addCurveEdge(edge) {\n    const points = GraphItem.getCurveEdgePoints(edge, 0.75);\n    for (let i = 0; i < points.length - 1; i++) {\n      const partialEdge = [points[i], points[i + 1]];\n      this.addEdge(partialEdge, [], [i !== 0, i !== points.length - 2]);\n    }\n    return this;\n  }\n\n  delEdge(i, j) {\n    //Warning: multiple call of getEdge, check for optimization\n    this.graph.getEdge(i, j).forEach(({ edge }) => {\n      const ids = edge.map(v => v.id);\n      const ijKey = Graph.edgeKey(ids[0], ids[1]);\n      const jiKey = Graph.edgeKey(ids[1], ids[0]);\n      Maybe.fromNull(this.meshByEdgeId[ijKey]).forEach(mesh => mesh.dispose());\n      delete this.meshByEdgeId[ijKey];\n      delete this.meshByEdgeId[jiKey];\n      this.graph.delEdge(...edge.map(e => e.position));\n\n      // remove vertex if have no neighbors\n      const abstractGraph = this.graph.getAbstractGraph();\n      edge.forEach(({ id, position }) => {\n        const neighbors = abstractGraph.getNeighbors(id);\n        if (neighbors.length === 0) {\n          this.delVertex(position);\n        }\n      });\n    });\n  }\n\n  delCurveEdge(edge) {\n    const points = GraphItem.getCurveEdgePoints(edge, 0.75);\n    for (let k = 0; k < points.length - 1; k++) {\n      const [i, j] = [points[k], points[k + 1]];\n      this.delEdge(i, j);\n    }\n    return this;\n  }\n\n  /**\n   *\n   * @param {*} i: Vector3\n   * @param {*} j: Vector3\n   */\n  hasEdge(i, j) {\n    return this.graph.hasEdge(i, j);\n  }\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                    Private Methods                                   *\n   *                                                                                      */\n  //========================================================================================\n\n  /**\n   *\n   * @param {*} vertex: Vector3\n   * @param {*} vertexIndex: integer representing index of vertex (can be undefined)\n   *\n   */\n  buildVertex(vertex, vertexIndex, isCurve = false) {\n    if (this.doesVertexCollideWithEdge(vertex)) {\n      this.resolveVertexEdgeCollision(vertex);\n    }\n    this.buildSimpleVertex(vertex, vertexIndex, isCurve);\n  }\n\n  buildSimpleVertex(vertex, vertexIndex, isCurve = false) {\n    const maybeVertex = this.graph.getVertex(vertex);\n    maybeVertex.forEach(rVertex => {\n      const { isCurve, id } = rVertex;\n      if (isCurve) {\n        const degree = this.graph.getAbstractGraph().getNeighbors(id).length;\n        if (degree >= 2) {\n          rVertex.isCurve = false;\n          this.meshByVertexId[rVertex.id].dispose();\n          this.createVertexMesh(rVertex);\n        }\n      }\n    });\n    maybeVertex.orElseRun(() => {\n      // if vertex doesn't exist\n      this.graph.addVertex(vertex, vertexIndex, isCurve);\n      this.graph.getVertex(vertex).forEach(this.createVertexMesh);\n    });\n  }\n\n  createVertexMesh = rVertex => {\n    const { isCurve } = rVertex;\n    const vertexMesh = GraphItem.getVertexMesh(\n      this.scene,\n      rVertex.position,\n      isCurve ? Color3.Blue() : Color3.Gray(),\n      isCurve ? (2 * Constants.RADIUS) / 3 : Constants.RADIUS\n    );\n    vertexMesh.parent = this.mesh;\n    vertexMesh.vertexId = rVertex.id;\n    this.addObserver2VertexMesh(vertexMesh);\n    this.addOnClickVertex(vertexMesh);\n    this.meshByVertexId[rVertex.id] = vertexMesh;\n  };\n\n  /**\n   * Side effect function beware\n   */\n  addObserver2VertexMesh(vertexMesh) {\n    vertexMesh.observers = new Observable();\n    vertexMesh.observers.add(this.getVertexObs());\n  }\n\n  getVertexObs = () => ({ updatedPointMesh, is2updateServer }) => {\n    const position = updatedPointMesh.position;\n    const id = updatedPointMesh.vertexId;\n    this.updateVertexPosition(id, position, is2updateServer);\n    this.updateCurvedNeighbors([id], is2updateServer);\n    if (is2updateServer) {\n      this.graphFormMapper = this.getToFormVertex(updatedPointMesh);\n      this.mainView.setProperties(this.toForm());\n    }\n  };\n\n  updateCurvedNeighbors(movedVertexIds, is2updateServer) {\n    this.getCurvedNeighbors(movedVertexIds)\n      .map(({ id, position }) => ({\n        id,\n        position: this.heatFlow(id, position)\n      }))\n      .forEach(({ id, position }) =>\n        this.updateVertexPosition(id, position, is2updateServer)\n      );\n  }\n\n  getCurvedNeighbors(vertexIds) {\n    const result = [];\n    const visitedVertex = {};\n    vertexIds.forEach(id => (visitedVertex[id] = true));\n    const abstractGraph = this.graph.getAbstractGraph();\n    const vertexStack = vertexIds\n      .map(id => abstractGraph.getNeighbors(id))\n      .flatMap(n => n)\n      .filter(id => !(id in visitedVertex));\n    while (vertexStack.length > 0) {\n      const u = vertexStack.pop();\n      visitedVertex[u] = true;\n      this.graph.getVertexByIndex(u).forEach(rVertex => {\n        const { isCurve, id } = rVertex;\n        if (isCurve) {\n          result.push(rVertex);\n          vertexStack.push(\n            ...abstractGraph.getNeighbors(id).filter(j => !(j in visitedVertex))\n          );\n        }\n      });\n    }\n    return result;\n  }\n\n  heatFlow(id, position) {\n    const dt = 0.1;\n    const abstractGraph = this.graph.getAbstractGraph();\n    const neighbors = abstractGraph\n      .getNeighbors(id)\n      .map(this.graph.getVertexByIndex)\n      .filter(m => m.isSome())\n      .map(m => m.some())\n      .map(v => v.position);\n    const x = position;\n    const df = x\n      .scale(neighbors.length)\n      .subtract(neighbors.reduce((e, v) => e.add(v), Vector3.Zero()));\n    return x.add(df.scale(-dt));\n  }\n\n  addOnClickVertex(vertexMesh) {\n    vertexMesh.onClick = () => {\n      const actions = [];\n      actions.push({\n        icon: props => <i className=\"fas fa-trash\" {...props}></i>,\n        action: () => {\n          this.mainView\n            .getUndoManager()\n            .doIt(this.getUndoDeleteVertex(vertexMesh));\n        },\n        name: \"Delete Node [Del]\"\n      });\n      this.mainView.setContextActions(actions);\n    };\n  }\n\n  getUndoDeleteVertex(vertexMesh) {\n    const p = vertexMesh.position;\n    const id = vertexMesh.vertexId;\n    const rVertex = this.graph.getVertexByIndex(id).some();\n    const isCurve = rVertex.isCurve;\n    const neigh = this.graph.getNeighbors(rVertex.position);\n    const simpleNeigh = neigh.filter(x => !x.isCurve);\n    const curveNeigh = neigh.filter(x => x.isCurve);\n    const curvedPaths = curveNeigh.map(v =>\n      this.graph.getCurvedPathFromVertex(v.position)\n    );\n    return UndoManager.actionBuilder()\n      .doAction(() => {\n        if (!isCurve)\n          simpleNeigh.forEach(v => {\n            this.delEdge(p, v.position);\n          });\n        curvedPaths.forEach(path => {\n          for (let i = 0; i < path.length - 1; i++) {\n            this.delEdge(path[i].position, path[i + 1].position);\n          }\n        });\n        this.mainView.closeContextDial();\n        this.mainView.updateNodeInServer(this.name);\n      })\n      .undoAction(() => {\n        if (!isCurve)\n          simpleNeigh.forEach(v => {\n            this.addEdge([p, v.position], [id, v.id]);\n          });\n        curvedPaths.forEach(path => {\n          for (let i = 0; i < path.length - 1; i++) {\n            const edge = [path[i], path[i + 1]];\n            const edgeIndexes = edge.map(({ id }) => id);\n            const edgePos = edge.map(({ position }) => position);\n            const edgeIsCurve = edge.map(({ isCurve }) => isCurve);\n            this.addEdge(edgePos, edgeIndexes, edgeIsCurve);\n          }\n        });\n        this.mainView.updateNodeInServer(this.name);\n      })\n      .build();\n  }\n\n  highlightCurveEdge(vertexId) {\n    const meshes = this.getCurvedNeighbors([vertexId]).map(\n      ({ id }) => this.meshByVertexId[id]\n    );\n    this.mainView.highlightMeshesInScene(meshes);\n  }\n\n  delVertex(i) {\n    this.graph.getVertex(i).forEach(({ id }) => {\n      const neighbors = this.graph.getNeighbors(i);\n      neighbors.forEach(({ position }) => this.delEdge(i, position));\n      Maybe.fromNull(this.meshByVertexId[id]).forEach(mesh => mesh.dispose());\n      delete this.meshByVertexId[id];\n      this.graph.delVertex(i);\n      // delete neighbor if belong to curve\n      neighbors\n        .filter(({ isCurve }) => isCurve)\n        .forEach(({ position }) => this.delVertex(position));\n    });\n  }\n\n  /**\n   *\n   * @param {*} id: vertex to be updated id\n   * @param {*} newPosition: Vector3, new vertex position\n   * @param {*} is2updateServer: is to update in server boolean var\n   * @param {*} protectEdge: Pair<Int> with vertex indices\n   */\n  updateVertexPosition(\n    id,\n    newPosition,\n    is2updateServer = true,\n    protectEdge = []\n  ) {\n    this.meshByVertexId[id].position = newPosition; // redundant when called from addObserver2VertexMesh\n    this.graph.updateVertex(id, newPosition);\n    this.graph.getNeighbors(newPosition).forEach(rVertex => {\n      const i = id;\n      const j = rVertex.id;\n      if (!this.isEdgeInPair(i, j, protectEdge)) {\n        this.meshByEdgeId[Graph.edgeKey(i, j)].dispose();\n        this.graph.getEdgeByIndex(i, j).forEach(rEdge => {\n          this.buildEdge(newPosition, rVertex.position);\n        });\n      }\n      if (is2updateServer) this.mainView.updateNodeInServer(this.name);\n    });\n  }\n\n  isEdgeInPair(iIndex, jIndex, edgeIndexes) {\n    return (\n      edgeIndexes.length > 0 &&\n      edgeIndexes.includes(iIndex) &&\n      edgeIndexes.includes(jIndex)\n    );\n  }\n\n  /**\n   *\n   * @param {*} vertex: Vector3\n   */\n  doesVertexCollideWithEdge(vertex, radius = Constants.RADIUS / 4) {\n    /**\n     * if collides with vertex return false\n     * else compute distance from edge, if close enough return true else false\n     */\n    return this.graph\n      .getVertex(vertex)\n      .cata(\n        () =>\n          this.graph.getEdge(vertex).map(rEdge => {\n            const edge = rEdge.edge.map(v => v.position).map(Vec3.ofBabylon);\n            const e = edge[1].sub(edge[0]);\n            const x = Vec3.ofBabylon(vertex).sub(edge[0]);\n            const dot = e.dot(x) / e.dot(e);\n            if (dot < 0 || dot > 1) return false;\n            const dist = x.sub(e.scale(dot)).length();\n            return dist <= radius;\n          }),\n        rVertex => Maybe.none()\n      )\n      .orSome(false);\n  }\n\n  /**\n   * Deletes colliding edge and create 2 new edge with the split\n   *\n   * @param {*} vertex: Vector3\n   */\n  resolveVertexEdgeCollision(vertex) {\n    this.graph.getEdge(vertex).forEach(rEdge => {\n      const edgeVec3 = rEdge.edge\n        .map(({ position }) => position)\n        .map(Vec3.ofBabylon);\n      const edgeBabylon = rEdge.edge.map(v => v.position);\n\n      // compute intersection\n      const e = edgeVec3[1].sub(edgeVec3[0]).normalize();\n      const x = Vec3.ofBabylon(vertex).sub(edgeVec3[0]);\n      const proj = e.scale(x.dot(e));\n      const vertexInEdge = edgeVec3[0].add(proj).toBabylon();\n\n      // split operation\n      this.delEdge(edgeBabylon[0], edgeBabylon[1]);\n      this.addEdge([edgeBabylon[0], vertexInEdge]);\n      this.addEdge([vertexInEdge, edgeBabylon[1]]);\n      //import features\n      this.importFeatures2Edge(rEdge, edgeBabylon[0], vertexInEdge);\n      this.importFeatures2Edge(rEdge, vertexInEdge, edgeBabylon[1]);\n\n      this.graph.getEdge(edgeBabylon[0], vertexInEdge).forEach(leftEdge => {\n        this.graph.getEdge(vertexInEdge, edgeBabylon[1]).forEach(rightEdge => {\n          this.mainView\n            .getUndoManager()\n            .addIt(\n              this.getUndoResolveVertexEdgeCollision(rEdge, leftEdge, rightEdge)\n            );\n        });\n      });\n    });\n  }\n\n  getUndoResolveVertexEdgeCollision(oldEdge, leftEdge, rightEdge) {\n    const oldEdgePositions = oldEdge.edge.map(({ position }) => position);\n    const oldEdgeIndex = oldEdge.edge.map(({ id }) => id);\n    const leftEdgePositions = leftEdge.edge.map(({ position }) => position);\n    const leftEdgeIndex = leftEdge.edge.map(({ id }) => id);\n    const rightEdgePositions = rightEdge.edge.map(({ position }) => position);\n    const rightEdgeIndex = rightEdge.edge.map(({ id }) => id);\n    return UndoManager.actionBuilder()\n      .doAction(() => {\n        // split operation\n        this.delEdge(...oldEdgePositions);\n        this.addEdge(leftEdgePositions, leftEdgeIndex);\n        this.addEdge(rightEdgePositions, rightEdgeIndex);\n\n        //import features\n        this.importFeatures2Edge(oldEdge, ...leftEdgePositions);\n        this.importFeatures2Edge(oldEdge, ...rightEdgePositions);\n      })\n      .undoAction(() => {\n        // split operation\n        this.delEdge(...leftEdgePositions);\n        this.delEdge(...rightEdgePositions);\n        this.addEdge(oldEdgePositions, oldEdgeIndex);\n\n        //import features\n        this.importFeatures2Edge(oldEdge, ...oldEdgePositions);\n      })\n      .build();\n  }\n\n  /**\n   * Copy feature data of rEdgeWithData to edge (i,j)\n   * @param {*} rEdgeWithData\n   * @param {*} i\n   * @param {*} j\n   */\n  importFeatures2Edge(rEdgeWithData, i, j) {\n    this.graph.getEdge(i, j).forEach(({ edge }) => {\n      const [uId, vId] = edge.map(({ id }) => id);\n      this.graph\n        .getEdgeByIndex(uId, vId)\n        .forEach(rEdgePlus => rEdgePlus.importFeatures(rEdgeWithData));\n      this.graph\n        .getEdgeByIndex(vId, uId)\n        .forEach(rEdgeMinus => rEdgeMinus.importFeatures(rEdgeWithData));\n    });\n  }\n\n  /**\n   *\n   * @param {*} i: Vector3\n   * @param {*} j: Vector3\n   */\n  buildEdge(i, j) {\n    const { graph } = this;\n    graph.addEdge([i, j]);\n    graph.getVertex(i).forEach(rVertexI =>\n      graph.getVertex(j).forEach(rVertexJ => {\n        const edgeMesh = GraphItem.getEdgeMesh(this.scene, [\n          rVertexI.position,\n          rVertexJ.position\n        ]);\n        edgeMesh.parent = this.mesh;\n        const iIndex = rVertexI.id;\n        const jIndex = rVertexJ.id;\n        edgeMesh.edgeIndexes = [iIndex, jIndex];\n        this.addObserver2EdgeMesh(edgeMesh);\n        this.addOnClickEdge(edgeMesh);\n        this.meshByEdgeId[Graph.edgeKey(iIndex, jIndex)] = edgeMesh;\n        this.meshByEdgeId[Graph.edgeKey(jIndex, iIndex)] = edgeMesh;\n      })\n    );\n  }\n\n  addObserver2EdgeMesh(edgeMesh) {\n    edgeMesh.observers = new Observable();\n    edgeMesh.observers.add(this.getEdgeObs());\n  }\n\n  getEdgeObs = () => ({ updatedPointMesh, is2updateServer, displacement }) => {\n    const { edgeIndexes } = updatedPointMesh;\n\n    const edgePos = edgeIndexes\n      .map(i => this.meshByVertexId[i].position)\n      .map(Vec3.ofBabylon);\n\n    const v = Vec3.ofBabylon(displacement);\n    edgePos.forEach((vertexPos, i) =>\n      this.updateVertexPosition(\n        edgeIndexes[i],\n        vertexPos.add(v).toBabylon(),\n        is2updateServer,\n        edgeIndexes\n      )\n    );\n    this.updateCurvedNeighbors(edgeIndexes, is2updateServer);\n    if (is2updateServer) {\n      this.graphFormMapper = this.getToFormEdge(updatedPointMesh);\n      this.mainView.setProperties(this.toForm());\n    }\n  };\n\n  addOnClickEdge(edgeMesh) {\n    edgeMesh.onClick = this.getOnClickEdge(edgeMesh);\n  }\n\n  getOnClickEdge = edgeMesh => () => {\n    const actions = [];\n\n    actions.push({\n      icon: props => <i className=\"fas fa-trash\" {...props}></i>,\n      action: () => {\n        this.mainView.getUndoManager().doIt(this.getUndoDeleteEdge(edgeMesh));\n      },\n      name: \"Delete Edge [Del]\"\n    });\n    this.mainView.setContextActions(actions);\n  };\n\n  getUndoDeleteEdge(edgeMesh) {\n    const { edgeIndexes } = edgeMesh;\n    const edgeVertex = edgeIndexes\n      .map(i => this.graph.getVertexByIndex(i))\n      .map(maybeV => maybeV.some());\n    const edgeIsCurve = edgeVertex.some(v => v.isCurve);\n    return edgeIsCurve\n      ? this.getUndoDelCurveEdge(edgeVertex)\n      : this.getUndoDelLineEdge(edgeVertex);\n  }\n\n  getUndoDelCurveEdge(edgeVertex) {\n    // there should be at least one vertex is curve\n    const curvedVertex = edgeVertex.filter(v => v.isCurve)[0].position;\n    const curvePath = this.graph.getCurvedPathFromVertex(curvedVertex);\n    return UndoManager.actionBuilder()\n      .doAction(() => {\n        for (let i = 0; i < curvePath.length - 1; i++) {\n          this.delEdge(curvePath[i].position, curvePath[i + 1].position);\n        }\n        this.mainView.closeContextDial();\n        this.mainView.updateNodeInServer(this.name);\n      })\n      .undoAction(() => {\n        for (let i = 0; i < curvePath.length - 1; i++) {\n          const edge = [curvePath[i], curvePath[i + 1]];\n          const edgeIndexes = edge.map(({ id }) => id);\n          const edgePos = edge.map(({ position }) => position);\n          const edgeIsCurve = edge.map(({ isCurve }) => isCurve);\n          this.addEdge(edgePos, edgeIndexes, edgeIsCurve);\n        }\n        this.mainView.updateNodeInServer(this.name);\n      })\n      .build();\n  }\n\n  getUndoDelLineEdge(edgeVertex) {\n    const edgeIndexes = edgeVertex.map(({ id }) => id);\n    const edgePos = edgeVertex.map(({ position }) => position);\n    const edgeIsCurve = edgeVertex.map(({ isCurve }) => isCurve);\n    return UndoManager.actionBuilder()\n      .doAction(() => {\n        this.delEdge(...edgePos);\n        this.mainView.closeContextDial();\n        this.mainView.updateNodeInServer(this.name);\n      })\n      .undoAction(() => {\n        this.addEdge(edgePos, edgeIndexes, edgeIsCurve);\n        this.mainView.updateNodeInServer(this.name);\n      })\n      .build();\n  }\n\n  //========================================================================================\n  /*                                                                                      *\n   *                             Static Methods and Variables                             *\n   *                                                                                      */\n  //========================================================================================\n\n  static TYPE = \"GraphItem\";\n\n  static NAME = \"Roads\";\n\n  static ofDict(scene, dict = null, mainView = null) {\n    const graphItem = new GraphItem(\n      scene,\n      mainView,\n      dict.name,\n      dict.keyValueMap\n    );\n    const { adjMap, edges } = dict;\n    // create mesh of graph using addEdge\n    Object.keys(adjMap).forEach(i => {\n      Object.keys(adjMap[i]).forEach(j => {\n        if (i < j) {\n          const edge = edges[Graph.edgeKey(i, j)];\n          const posIJ = edge.positions.map(Vec3.of).map(p => p.toBabylon());\n          graphItem.addEdge(posIJ, [i, j], edge.isCurve);\n        }\n      });\n    });\n    //import dict data to graph Embedding structure\n    graphItem.graph.importData(dict);\n    return graphItem;\n  }\n\n  /**\n   *\n   * @param {*} scene: Babylon js scene\n   * @param {*} edgePositions: Array<Vector3>\n   * @param {*} color: Color3\n   */\n  static getEdgeWithVertexMeshes(\n    scene,\n    edgePositions,\n    color = Color3.Gray(),\n    radius = Constants.RADIUS\n  ) {\n    const ans = edgePositions.map(p =>\n      GraphItem.getVertexMesh(scene, p, color, radius)\n    );\n    ans.push(GraphItem.getEdgeMesh(scene, edgePositions, color, radius));\n    return ans;\n  }\n\n  static getCurveEdgeWithVertexMeshes(\n    scene,\n    edgePositions,\n    color = Color3.Gray(),\n    radius = Constants.RADIUS\n  ) {\n    const ans = [];\n    const i = edgePositions[0];\n    const j = edgePositions[2];\n    ans.push(GraphItem.getVertexMesh(scene, i, color, radius));\n    ans.push(GraphItem.getVertexMesh(scene, j, color, radius));\n    ans.push(GraphItem.getCurveEdgeMesh(scene, edgePositions, color, radius));\n    return ans;\n  }\n\n  static getVertexMesh(\n    scene,\n    vertexPosition,\n    color = Color3.Gray(),\n    radius = Constants.RADIUS\n  ) {\n    const sphere = Util3d.createSphere(scene, color, radius);\n    sphere.position = vertexPosition;\n    return sphere;\n  }\n\n  static getEdgeMesh(\n    scene,\n    edge,\n    color = Color3.Gray(),\n    radius = Constants.RADIUS\n  ) {\n    return Util3d.createTubeFromPoints(scene, edge, color, radius / 4);\n  }\n\n  static getCurveEdgeMesh(\n    scene,\n    edge,\n    color = Color3.Gray(),\n    radius = Constants.RADIUS,\n    error = 0.25\n  ) {\n    return Util3d.createTubeFromPoints(\n      scene,\n      GraphItem.getCurveEdgePoints(edge, error),\n      color,\n      radius / 4\n    );\n  }\n\n  static getCurveEdgePoints(edge, error = 0.25) {\n    const [i, k, j] = edge;\n    const halfD2x = i.subtract(k.scale(2)).add(j);\n    const halfD2xNorm = halfD2x.length();\n    let numberOfPoints =\n      halfD2xNorm < 1e-3 ? 2 : halfD2xNorm / Math.max(1e-6, error);\n    numberOfPoints = Math.floor(numberOfPoints);\n    // console.log(\"NUMBER OF POINTS\", numberOfPoints, halfD2x.length());\n    return Curve3.CreateQuadraticBezier(i, k, j, numberOfPoints).getPoints();\n  }\n}\n\nconst graphItemInstances = {};\n\nconst getGraphPlaceHolder = (scene, name) => {\n  const graphPlaceHolder = Util3d.createSphere(\n    scene,\n    Color3.Gray(),\n    Number.MIN_VALUE,\n    name,\n    false\n  );\n  graphPlaceHolder.position = Vector3.Zero();\n  graphPlaceHolder.scaling = Vector3.One();\n  graphPlaceHolder.rotationQuaternion = Quaternion.Identity();\n  graphPlaceHolder.visibility = 0.0;\n  return graphPlaceHolder;\n};\nexport default GraphItem;\n","import MouseKeysAction from \"./MouseKeysAction\";\nimport React from \"react\";\nimport Util3d from \"../Util3d/Util3d\";\nimport { Color3 } from \"@babylonjs/core\";\nimport Vec3 from \"../Math/Vec3\";\nimport GraphItem from \"../NodeItem/GraphItem\";\nimport Constants from \"../Utils/Constants\";\n\nclass DrawGraphAction extends MouseKeysAction {\n  constructor() {\n    if (instance) return instance;\n    super();\n    this.key = \"drawGraph\";\n    this.name = \"Draw Graph [C]\";\n    this.icon = props => <i className=\"fas fa-project-diagram\" {...props}></i>;\n\n    this.mouseCurve = [];\n    this.previewMeshes = [];\n    this.mode = MODES.line;\n    instance = this;\n  }\n\n  static getInstance() {\n    return new DrawGraphAction();\n  }\n\n  //========================================================================================\n  /*                                                                                      *\n   *                            Mouse Key Action Implementation                           *\n   *                                                                                      */\n  //========================================================================================\n\n  action = parentView => {\n    super.action(parentView);\n    parentView.setSelectedAction(this);\n    const contextActions = this.getContextActions();\n    parentView.setContextActions(contextActions);\n    parentView.setContextActionIndex(\n      contextActions.findIndex(ca => ca.mode === this.mode)\n    );\n  };\n\n  onPointerDown = (evt, parentView) => {\n    if (!(evt.buttons === 1)) return;\n    this.mousePosConsumer(parentView)((mousePos, memory) => {\n      const handlePointerDownByMode = {\n        [MODES.line]: this.onPointerDownLine,\n        [MODES.curve]: this.onPointerDownCurve\n      };\n      handlePointerDownByMode[this.mode](mousePos, memory, parentView);\n    });\n  };\n\n  onPointerMove = (evt, parentView) => {\n    this.mousePosConsumer(parentView)((mousePos, memory) => {\n      const { scene, ground } = memory;\n      Util3d.pickMesh(scene, ground).cata(\n        () => parentView.highlightMeshInScene(),\n        pickedMesh =>\n          parentView.highlightMeshInScene([pickedMesh], Color3.Green())\n      );\n      if (this.mouseCurve.length === 0) return;\n      const handlePointerMoveByMode = {\n        [MODES.line]: this.onPointerMoveLine,\n        [MODES.curve]: this.onPointerMoveCurve\n      };\n      handlePointerMoveByMode[this.mode](mousePos, memory, parentView);\n    });\n  };\n\n  onPointerUp = parentView => {\n    parentView\n      .getGraph()\n      .forEach(graphNode =>\n        parentView.setPropertiesWithName(graphNode.item.name)\n      );\n  };\n\n  onKeyDown = (evt, parentView) => {\n    const keyCodeActionMap = {\n      Delete: () => this.escapeAction(evt, parentView),\n      Backspace: () => this.escapeAction(evt, parentView),\n      Escape: () => this.escapeAction(evt, parentView)\n    };\n    if (evt.code in keyCodeActionMap) {\n      keyCodeActionMap[evt.code]();\n    } else {\n      super.onKeyDown(evt, parentView);\n    }\n  };\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                  Auxiliary functions                                  *\n   *                                                                                      */\n  //========================================================================================\n\n  escapeAction = (evt, parentView) => {\n    if (this.mouseCurve.length > 0) {\n      this.deletePreviewMeshes();\n      this.mouseCurve = [];\n    } else {\n      super.onKeyDown(evt, parentView);\n    }\n  };\n\n  deletePreviewMeshes = () => {\n    this.previewMeshes.forEach(mesh => mesh.dispose());\n    this.previewMeshes = [];\n  };\n\n  mousePosConsumer = parentView => lambda => {\n    parentView.getSceneMemory().forEach(memory => {\n      const scene = memory.scene;\n      const ground = memory.ground;\n      const maybeCurrent = Util3d.getGroundPosition(scene, ground);\n      maybeCurrent.forEach(mousePos => lambda(mousePos, memory));\n    });\n  };\n\n  createGraphItemIfNone = (scene, parentView) =>\n    parentView.getGraph().orElseRun(() => {\n      const graphItem = new GraphItem(scene, parentView);\n      graphItem.mesh.parent = parentView.getRootNode().item.mesh;\n      parentView.addNodeItem2Tree(graphItem);\n    });\n\n  getContextActions() {\n    return [\n      {\n        icon: props => (\n          <i className=\"fas fa-grip-lines-vertical\" {...props}></i>\n        ),\n        action: parentView => {\n          parentView.setContextActionIndex(0);\n          this.mode = MODES.line;\n          this.mouseCurve = [];\n          this.previewMeshes.forEach(mesh => mesh.dispose());\n          this.previewMeshes = [];\n        },\n        name: \"Line Mode\",\n        mode: MODES.line\n      },\n      {\n        icon: props => <i className=\"fas fa-bezier-curve\" {...props}></i>,\n        action: parentView => {\n          parentView.setContextActionIndex(1);\n          this.mode = MODES.curve;\n          this.mouseCurve = [];\n          this.previewMeshes.forEach(mesh => mesh.dispose());\n          this.previewMeshes = [];\n        },\n        name: \"Curve Mode\",\n        mode: MODES.curve\n      }\n    ];\n  }\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                       Line Edge                                      *\n   *                                                                                      */\n  //========================================================================================\n\n  onPointerDownLine = (mousePos, memory, parentView) => {\n    const { camera, canvas, scene } = memory;\n    camera.detachControl(canvas);\n    if (this.mouseCurve.length === 0) {\n      this.mouseCurve.push(mousePos);\n    } else {\n      //mouseCurve.length > 0\n      this.createEdge(\n        [this.mouseCurve[0], mousePos],\n        scene,\n        parentView,\n        graphItem => edge => graphItem.addEdge(edge)\n      );\n      this.mouseCurve = [];\n      camera.attachControl(canvas, true);\n    }\n  };\n\n  onPointerMoveLine = (mousePos, memory, parentView) => {\n    // preview line\n    const visibility = 0.25;\n    const { scene } = memory;\n    const rootMesh = parentView.getRootNode().item.mesh;\n    const edgeEmbedding = toLocalCoordinates(parentView)([\n      this.mouseCurve[0],\n      mousePos\n    ]);\n    this.deletePreviewMeshes();\n    this.previewMeshes = GraphItem.getEdgeWithVertexMeshes(\n      scene,\n      edgeEmbedding,\n      Color3.Blue(),\n      Constants.RADIUS / 2\n    );\n    this.previewMeshes.forEach(mesh => {\n      mesh.visibility = visibility;\n      mesh.parent = rootMesh;\n    });\n  };\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                      Curved Edge                                     *\n   *                                                                                      */\n  //========================================================================================\n\n  onPointerDownCurve = (mousePos, memory, parentView) => {\n    const { camera, canvas, scene } = memory;\n    camera.detachControl(canvas);\n    if (this.mouseCurve.length <= 1) {\n      this.mouseCurve.push(mousePos);\n    } else {\n      //mouseCurve.length > 1\n      this.createEdge(\n        [this.mouseCurve[0], this.mouseCurve[1], mousePos],\n        scene,\n        parentView,\n        graphItem => edge => graphItem.addCurveEdge(edge)\n      );\n      this.mouseCurve = [];\n      camera.attachControl(canvas, true);\n    }\n  };\n\n  onPointerMoveCurve = (mousePos, memory, parentView) => {\n    if (this.mouseCurve.length < 2) {\n      this.onPointerMoveLine(mousePos, memory, parentView);\n    } else {\n      // mouse curve >= 2\n      const visibility = 0.25;\n      const { scene } = memory;\n      const rootMesh = parentView.getRootNode().item.mesh;\n      const edgeEmbedding = toLocalCoordinates(parentView)([\n        ...this.mouseCurve,\n        mousePos\n      ]);\n      this.deletePreviewMeshes();\n      this.previewMeshes = GraphItem.getCurveEdgeWithVertexMeshes(\n        scene,\n        edgeEmbedding,\n        Color3.Green(),\n        Constants.RADIUS / 2\n      )\n        .concat(\n          GraphItem.getEdgeWithVertexMeshes(\n            scene,\n            [edgeEmbedding[0], edgeEmbedding[1]],\n            Color3.Blue(),\n            Constants.RADIUS / 2\n          )\n        )\n        .concat(\n          GraphItem.getEdgeWithVertexMeshes(\n            scene,\n            [edgeEmbedding[1], edgeEmbedding[2]],\n            Color3.Blue(),\n            Constants.RADIUS / 2\n          )\n        );\n      this.previewMeshes.forEach(mesh => {\n        mesh.visibility = visibility;\n        mesh.parent = rootMesh;\n      });\n    }\n  };\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                    Draw functions                                    *\n   *                                                                                      */\n  //========================================================================================\n\n  createEdge = (edgeInWorldCoordinate, scene, parentView, drawMethod) => {\n    const edge = toLocalCoordinates(parentView)(edgeInWorldCoordinate);\n    this.createGraphItemIfNone(scene, parentView);\n    parentView.getGraph().forEach(graphNode => {\n      const { item: graphItem } = graphNode;\n      drawMethod(graphItem)(edge);\n      parentView.updateNodeInServer(graphItem.name);\n    });\n    this.deletePreviewMeshes();\n  };\n}\n\nlet instance = null;\nconst MODES = {\n  line: \"line\",\n  curve: \"curve\",\n  free: \"free\"\n};\n\nconst toLocalCoordinates = parentView => {\n  const rootMesh = parentView.getRootNode().item.mesh;\n  return arrayOfVector3 =>\n    arrayOfVector3.map(p =>\n      Util3d.computeLocalCoordinatesFromMesh(\n        { parent: rootMesh },\n        Vec3.ofBabylon(p)\n      ).toBabylon()\n    );\n};\nexport default DrawGraphAction;\n","import DragObjectsAction from \"../Actions/DragObjectsAction\";\nimport AddKeyPointAction from \"../Actions/AddKeyPointAction\";\nimport BoxRegionAction from \"../Actions/BoxRegionAction\";\nimport DrawPathAction from \"../Actions/DrawPathAction\";\nimport PolygonRegionAction from \"../Actions/PolygonRegionAction\";\n// import DrawWallAction from \"../Actions/DrawWallAction\";\n// import RobotAction from \"../Actions/RobotAction\";\nimport OrbitAction from \"../Actions/OrbitAction\";\nimport DrawGraphAction from \"../Actions/DrawGraphAction\";\n\nexport const ACTIONS = {\n  orbit: OrbitAction.getInstance(),\n  dragObjects: DragObjectsAction.getInstance(),\n  drawPath: DrawPathAction.getInstance(),\n  drawBoxRegion: BoxRegionAction.getInstance(),\n  addKeyPoint: AddKeyPointAction.getInstance(),\n  drawRegion: PolygonRegionAction.getInstance(),\n  drawGraph: DrawGraphAction.getInstance(),\n  // drawWalls: DrawWallAction.getInstance()\n  // addRobot: new RobotAction({\n  //   id: \"Test\",\n  //   name: \"Test\",\n  //   robotTree: {\n  //     name: \"Test\",\n  //     position: { x: 0, y: 0, z: 0 },\n  //     orientation: {\n  //       w: 1,\n  //       x: 0,\n  //       y: 0,\n  //       z: 0\n  //     },\n  //     child: [\n  //       {\n  //         name: \"TestTF\",\n  //         position: { x: 1, y: 0, z: 1 },\n  //         orientation: {\n  //           w: Math.cos(-Math.PI / 4),\n  //           x: 0,\n  //           y: Math.sin(-Math.PI / 4),\n  //           z: 0\n  //         },\n  //         child: []\n  //       }\n  //     ]\n  //   }\n  // })\n};\n","export default class MapLoader {\n  constructor(yamlSrc) {\n    this.yamlSrc = yamlSrc;\n    this.cachedMap = null;\n  }\n\n  async load() {\n    if (this.cachedMap) return this.cachedMap;\n    const response = await fetch(MapLoader.getMapUrl(this.yamlSrc));\n    const map = await this.parseYaml(await response.text());\n    const ans = {\n      textureSrc: map.image,\n      resolution: map.resolution,\n      origin: map.origin,\n      imageSize: map.size\n    };\n    this.cachedMap = ans;\n    return ans;\n  }\n\n  async parseYaml(yamlTxt) {\n    const ans = {};\n    const actionDict = {\n      image: (k, v) => (ans[k] = MapLoader.getMapUrl(v)),\n      resolution: (k, v) => (ans[k] = Number.parseFloat(v)),\n      origin: (k, v) => (ans[k] = JSON.parse(v))\n    };\n    console.log(\"Yaml text\", yamlTxt);\n    yamlTxt\n      .split(\"\\n\")\n      .map(s => s.split(\": \"))\n      .filter(split => split.length >= 2)\n      .filter(split => split[0] in actionDict)\n      .forEach(split => actionDict[split[0]](split[0], split[1]));\n    ans[\"size\"] = await this.getImageSize(ans[\"image\"]);\n    return ans;\n  }\n\n  getImageSize(src) {\n    return new Promise((resolve, reject) => {\n      const img = new Image();\n      img.src = src;\n      img.onload = () => resolve([img.naturalWidth, img.naturalHeight]);\n    });\n  }\n  static getMapUrl = src => `/static/maps/${src}`;\n}\n","import Util3d from \"../Util3d/Util3d\";\nimport Vec3 from \"../Math/Vec3\";\nimport Action from \"./Action\";\nimport Map from \"../NodeItem/Map\";\nimport { Maybe } from \"monet\";\nimport React from \"react\";\nimport GlobalRef from \"../NodeItem/GlobalRef\";\nimport { Vector3 } from \"@babylonjs/core\";\nimport DefaultScene from \"../Utils/DefaultScene\";\nimport { ACTIONS } from \"../MainView/MainViewActions\";\nimport { MasterDB } from \"mov-fe-lib-core\";\nimport Constants from \"../Utils/Constants\";\nimport MapLoader from \"../AssetsManager/MapLoader\";\n\nclass AddMapAction extends Action {\n  constructor(name, mapLoader) {\n    super();\n    this.name = name;\n    this.key = `addMap${name}`;\n    this.mapLoader = mapLoader;\n    this.icon = props => <i {...props} className=\"fas fa-map\"></i>;\n  }\n\n  addMap(parentView) {\n    const rootNodeMaybe = Maybe.fromNull(parentView.getRootNode());\n    parentView.getSceneMemory().forEach(async memory => {\n      const scene = memory.scene;\n      const camera = memory.camera;\n      const {\n        textureSrc,\n        resolution,\n        origin,\n        imageSize\n      } = await this.mapLoader.load();\n\n      const width = resolution * imageSize[0];\n      const height = resolution * imageSize[1];\n      const mesh = Util3d.groundBuilder(scene)\n        .name(Maybe.fromNull(this.memory[\"name\"]).orSome(this.name))\n        .width(width)\n        .height(height)\n        .textureSrc(textureSrc)\n        .build();\n\n      const originPos = Vec3.of([-width / 2, -height / 2, 0]).sub(\n        Vec3.of(origin)\n      );\n\n      rootNodeMaybe.forEach(rootNode => {\n        const parent = rootNode.item.mesh.parent;\n        parent.position = GlobalRef.inverseCoordinates(originPos.toBabylon());\n        camera.setTarget(\n          new Vector3(parent.position.x, parent.position.y, parent.position.z)\n        );\n      });\n\n      const map = new Map(\n        mesh,\n        [width, height],\n        this.textureSrc,\n        Maybe.fromNull(this.memory[\"assetName\"]).orSome(this.name)\n      );\n\n      const is2sendServer = Maybe.fromNull(this.memory[\"isImport\"])\n        .map(x => !x)\n        .orSome(true);\n      parentView.addNodeItem2Tree(map, null, is2sendServer);\n      memory.ground.dispose();\n      memory.ground = DefaultScene.createMeshGround(scene, width, height);\n    });\n  }\n\n  action(parentView) {\n    super.action(parentView);\n    const maybeNode = parentView.getNodeFromTree(this.name);\n    maybeNode.forEach(node => {});\n    maybeNode.orElseRun(() => {\n      if (parentView.getObjectTree().length < 2) {\n        return this.addMap(parentView);\n      } else {\n        // empty\n      }\n    });\n    parentView.setSelectedAction(ACTIONS.orbit);\n  }\n\n  getType = () => AddMapAction.TYPE;\n\n  deleteAsset = () => {};\n\n  download = async () => {\n    const { textureSrc } = await this.mapLoader.load();\n    const { yamlSrc } = this.mapLoader;\n    const downloadLinks = (\n      <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n          <div style={{ marginRight: \"5px\" }}>Image:</div>\n          <a href={textureSrc} download>\n            {textureSrc}\n          </a>\n        </div>\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n          <div style={{ marginRight: \"5px\" }}>Yaml:</div>\n          <a href={MapLoader.getMapUrl(yamlSrc)} download>\n            {yamlSrc}\n          </a>\n        </div>\n      </div>\n    );\n  };\n\n  static TYPE = \"AddMapAction\";\n}\n\nexport default AddMapAction;\n","import Vec3 from \"../Math/Vec3\";\nimport Util3d from \"../Util3d/Util3d\";\nimport { MasterDB } from \"mov-fe-lib-core\";\nimport AssetNodeItem from \"./AssetNodeItem\";\nimport { Axis, Space, Vector3, Quaternion, Color3 } from \"@babylonjs/core\";\n\nclass Robot extends AssetNodeItem {\n  static ROBOT_MESH_NAME = \"Tugbot.stl\";\n\n  constructor(meshTree, assetName, keyValueMap = {}) {\n    super(meshTree.mesh, assetName, keyValueMap);\n    this.requestAnimationFrameId = null;\n    this.meshTree = meshTree;\n  }\n\n  toDict() {\n    let dict = super.toDict();\n    return dict;\n  }\n\n  toForm() {\n    const schema = super.toForm();\n    schema.jsonSchema.properties = {\n      oldName: schema.jsonSchema.properties.oldName,\n      name: schema.jsonSchema.properties.name,\n      type: schema.jsonSchema.properties.type,\n      assetName: {\n        type: \"string\",\n        title: \"Asset Name\"\n      },\n      position: schema.jsonSchema.properties.position,\n      quaternion: schema.jsonSchema.properties.quaternion,\n      color: schema.jsonSchema.properties.color,\n      annotations: schema.jsonSchema.properties.annotations\n    };\n    schema.uiSchema[\"assetName\"] = {\n      \"ui:disabled\": true\n    };\n    schema.data[\"assetName\"] = this.assetName;\n    return schema;\n  }\n\n  dispose() {\n    super.dispose();\n    MasterDB.unsubscribe({\n      Scope: \"Robot\",\n      Name: this.meshTree.id,\n      Parameter: \"tf\"\n    });\n    window.cancelAnimationFrame(this.requestAnimationFrameId);\n  }\n\n  updateRobot = (robot, oldTimeInMillis, robotAnimator) => {\n    const time = new Date().getTime();\n    const dt = 1e-3 * (time - oldTimeInMillis);\n    robotAnimator(robot, dt);\n    this.requestAnimationFrameId = requestAnimationFrame(() =>\n      this.updateRobot(robot, time, robotAnimator)\n    );\n  };\n\n  animate = robotAnimator => {\n    this.requestAnimationFrameId = requestAnimationFrame(() =>\n      this.updateRobot(this, new Date().getTime(), robotAnimator)\n    );\n  };\n\n  getType = () => Robot.TYPE;\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                   Static Functions                                   *\n   *                                                                                      */\n  //========================================================================================\n\n  static TYPE = \"Robot\";\n\n  static getDefaultAnimator = parentView => (robot, dt) => {\n    const mesh = robot.mesh;\n    const speed = 3;\n    const vel = Util3d.getRotationMatrix(mesh)\n      .prodVec(new Vec3([speed, 0, 0]))\n      .toBabylon();\n    mesh.position = mesh.position.add(vel.scale(dt));\n    mesh.rotate(Axis.Z, (-Math.PI / 2) * dt, Space.LOCAL);\n    if (Math.random() < 0.01) parentView.updateNodeInServer(mesh.name);\n  };\n\n  static updateRobotMeshTree(newRobotTf, robot) {\n    robot.mesh.position = new Vector3(\n      newRobotTf.position.x,\n      newRobotTf.position.y,\n      newRobotTf.position.z\n    );\n    const quaternion = new Quaternion(\n      newRobotTf.orientation.x,\n      newRobotTf.orientation.y,\n      newRobotTf.orientation.z,\n      newRobotTf.orientation.w\n    );\n    robot.mesh.rotationQuaternion = quaternion.normalize();\n  }\n\n  static getSocketAnimator = (robot, parentView) => {\n    MasterDB.subscribe(\n      { Scope: \"Robot\", Name: robot.meshTree.id, Parameter: \"tf\" },\n      data => {\n        const tf = data.key.Robot[robot.meshTree.id].Parameter.tf.Value;\n        if (tf) {\n          console.log(\"ROBOT TF UPDATE...\", tf);\n          Robot.updateRobotMeshTree(tf, robot);\n          console.log(\"Updating robot \", robot);\n          if (Math.random() < 0.01) parentView.updateNodeInServer(robot.name);\n        }\n      },\n      data => {\n        console.log(\"ROBOT INIT SUB...\", data.value);\n        const tf = data.value.Robot[robot.meshTree.id].Parameter.tf.Value;\n        Robot.updateRobotMeshTree(tf, robot);\n        console.log(\"Updating robot \", robot);\n        parentView.updateNodeInServer(robot.name);\n      }\n    );\n    return (robot2Animate, dt) => {\n      // empty animation\n    };\n  };\n\n  /**\n   * Side effect function\n   */\n  static transformMesh(mesh, scene) {\n    const thetaX = Math.PI / 2;\n    const translate = 0.25;\n    const boundScale = 1.9;\n\n    const boundingSphere = mesh.getBoundingInfo().boundingSphere;\n    mesh.position.set(\n      -boundingSphere.center.x,\n      -boundingSphere.center.y,\n      -boundingSphere.center.z\n    );\n\n    const tfSphereMesh = Util3d.createSphere(\n      scene,\n      new Color3(0.0, 0.0, 0.0),\n      0.5 * boundingSphere.radius,\n      `tfsphere${mesh.name}`,\n      false\n    );\n    tfSphereMesh.visibility = 0.25;\n    tfSphereMesh.scaling = Vec3.ONES.scale(\n      1 / boundingSphere.radius\n    ).toBabylon();\n\n    tfSphereMesh.addRotation(thetaX, 0, 0);\n    tfSphereMesh.position.set(0, 0, translate);\n    const spherePlaceHolder = Util3d.createSphere(\n      scene,\n      new Color3(0.0, 0.0, 0.0),\n      boundScale,\n      mesh.name,\n      true\n    );\n    spherePlaceHolder.visibility = 0.1;\n\n    mesh.parent = tfSphereMesh;\n    tfSphereMesh.parent = spherePlaceHolder;\n    return spherePlaceHolder;\n  }\n\n  static createRobotMeshTreeRecursive(node, mesh, parent, scene) {\n    if (!mesh) {\n      mesh = Util3d.createSphere(\n        scene,\n        new Color3(0.0, 0.0, 0.0),\n        0.5,\n        node.name,\n        false\n      );\n    }\n    const meshTree = {\n      mesh: mesh,\n      children: []\n    };\n    const position = new Vector3(\n      node.position.x,\n      node.position.y,\n      node.position.z\n    );\n    const quaternion = new Quaternion(\n      node.orientation.x,\n      node.orientation.y,\n      node.orientation.z,\n      node.orientation.w\n    );\n    mesh.position = position;\n    mesh.rotationQuaternion = quaternion;\n    if (parent) {\n      mesh.parent = parent;\n    }\n    meshTree[\"children\"] = node.child.map(child => {\n      this.createRobotMeshTreeRecursive(\n        child,\n        Util3d.referentialBuilder(scene)\n          .boxParams({ isVisible: false, size: 0.1 })\n          .build(),\n        mesh,\n        scene\n      );\n    });\n    return meshTree;\n  }\n\n  static createRobotMeshTree(robotTree, robotMesh, scene) {\n    return Robot.createRobotMeshTreeRecursive(\n      robotTree,\n      robotMesh,\n      null,\n      scene\n    );\n  }\n\n  static builder() {\n    return new RobotBuilder();\n  }\n}\n\nclass RobotBuilder {\n  constructor() {\n    this._name = null;\n    this._meshTree = null;\n    this._parentMesh = null;\n    this._scene = null;\n    this._isPickable = true;\n    this._id = null;\n    this._keyValueMap = {};\n    this._assetName = null;\n  }\n\n  name(name) {\n    this._name = name;\n    return this;\n  }\n\n  meshTree(meshTree) {\n    this._meshTree = meshTree;\n    return this;\n  }\n\n  parentMesh(parentMesh) {\n    this._parentMesh = parentMesh;\n    return this;\n  }\n\n  scene(scene) {\n    this._scene = scene;\n    return this;\n  }\n\n  isPickable(isPickable) {\n    this._isPickable = isPickable;\n    return this;\n  }\n\n  id(id) {\n    this._id = id;\n    return this;\n  }\n\n  keyValueMap(keyValueMap) {\n    this._keyValueMap = keyValueMap;\n    return this;\n  }\n\n  assetName(assetName) {\n    this._assetName = assetName;\n    return this;\n  }\n\n  build() {\n    const variables = Object.keys(this)\n      .filter(x => x !== \"_parentMesh\")\n      .map(x => this[x]);\n\n    variables.forEach(x => {\n      if (x === null)\n        throw `There are missing variables to build a robot, e.g ${x}`;\n    });\n\n    this._meshTree.id = this._id;\n    this._meshTree.name = this._name;\n    this._meshTree.mesh.name = this._name;\n    this._meshTree.mesh.isPickable = this._isPickable;\n    this._meshTree.mesh.parent = this._parentMesh;\n\n    const baseAxis = Util3d.referentialBuilder(this._scene)\n      .isPickable(false)\n      .boxParams({ isVisible: false, size: 0.1 })\n      .name(`${this._name}Axis`)\n      .build();\n    baseAxis.parent = this._meshTree.mesh;\n\n    return new Robot(this._meshTree, this._assetName, this._keyValueMap);\n  }\n}\n\nexport default Robot;\n","import NodeItem from \"./NodeItem\";\nimport { Mesh, StandardMaterial, Color3, VertexData } from \"@babylonjs/core\";\nimport { Maybe } from \"monet\";\nimport { Utils, MasterDB } from \"mov-fe-lib-core\";\n\nconst ofNull = Utils.ofNull;\nclass PointCloud extends NodeItem {\n  /**\n   *\n   * @param {*} mesh\n   * @param {*} robot: {name: string, id: string} representing a robot\n   */\n  constructor(mesh, robot) {\n    super(mesh);\n    this.robot = robot;\n    this.pointCloudSubscribe();\n  }\n\n  pointCloudSubscribe() {\n    MasterDB.subscribe(\n      {\n        Scope: \"Robot\",\n        Name: this.robot.id,\n        Parameter: \"front_lidar\"\n      },\n      data => {\n        Maybe.fromNull(data)\n          .flatMap(d => ofNull(d.key))\n          .flatMap(k => ofNull(k.Robot[this.robot.id]))\n          .flatMap(r => ofNull(r.Parameter))\n          .flatMap(p => ofNull(p.front_lidar))\n          .flatMap(f => ofNull(f.Value))\n          .flatMap(v => ofNull(v.points))\n          .forEach(points => this.updatePointCloud(points));\n      },\n      data => {\n        Maybe.fromNull(data.value)\n          .flatMap(v => ofNull(v.Robot))\n          .flatMap(r => ofNull(r[this.robot.id]))\n          .flatMap(r => ofNull(r.Parameter))\n          .flatMap(p => ofNull(p.front_lidar))\n          .flatMap(f => ofNull(f.Value))\n          .flatMap(v => ofNull(v.points))\n          .forEach(points => this.updatePointCloud(points));\n      }\n    );\n  }\n\n  /**\n   *\n   * @param {*} points: Array<3-Array>\n   */\n  updatePointCloud(points) {\n    const vertexData = new VertexData();\n    //Assign positions\n    vertexData.positions = points.flatMap(x => x);\n    const colors = new Array(4 * points.length);\n    vertexData.colors = colors.fill(1.0);\n    //Apply vertexData to custom mesh\n    vertexData.applyToMesh(this.mesh, true);\n  }\n\n  dispose() {\n    super.dispose();\n    MasterDB.unsubscribe({\n      Scope: \"Robot\",\n      Name: this.robot.id,\n      Parameter: \"front_lidar\"\n    });\n  }\n\n  getType = () => PointCloud.TYPE;\n\n  static TYPE = \"PointCloud\";\n\n  static ofDict(scene, dict = null, mainView = null) {\n    if (!dict || !mainView)\n      throw \"null dictionary describing point cloud or null mainView\";\n\n    const pointCloudMesh = new Mesh(`cloudPoint${dict.name}`, scene);\n    const mat = new StandardMaterial(`cloudPoint${dict.name}Material`, scene);\n    mat.emissiveColor = new Color3(1, 1, 1);\n    mat.disableLighting = true;\n    mat.pointsCloud = true;\n    mat.pointSize = 2;\n    pointCloudMesh.material = mat;\n\n    return new PointCloud(pointCloudMesh, dict);\n  }\n}\n\nexport default PointCloud;\n","import { Maybe } from \"monet\";\n/**\n * Mesh cache for each scene.\n *\n * Each mesh is associated with a scene therefore we must have a cache per scene.\n *\n */\nclass MeshCache {\n  constructor() {\n    if (instance) return instance;\n    instance = this;\n    this.meshCacheBySceneId = {};\n    this.count = 0;\n  }\n\n  static getInstance() {\n    return new MeshCache();\n  }\n\n  hasKey(key, scene) {\n    const sceneId = scene._uid;\n    return Maybe.fromNull(this.meshCacheBySceneId[sceneId])\n      .flatMap(meshCache => ofNull(meshCache[key]))\n      .cata(\n        () => false,\n        () => true\n      );\n  }\n\n  put(key, scene, mesh) {\n    const sceneId = scene._uid;\n    if (!(sceneId in this.meshCacheBySceneId)) {\n      this.meshCacheBySceneId[sceneId] = {};\n    }\n    this.meshCacheBySceneId[sceneId][key] = mesh;\n    mesh.setEnabled(false);\n    return this;\n  }\n\n  get(key, scene) {\n    const sceneId = scene._uid;\n    return Maybe.fromNull(this.meshCacheBySceneId[sceneId])\n      .flatMap(meshCache => ofNull(meshCache[key]))\n      .map(mesh => {\n        console.log(\n          \"#Mesh: Found Mesh in cache, retrieving copy number\",\n          this.count\n        );\n        const cloneMesh = mesh.clone(`${key}${this.count++}`);\n        console.log(\"#Mesh:\", cloneMesh);\n        return cloneMesh;\n      })\n      .orNull();\n  }\n\n  del(scene) {\n    const sceneId = scene._uid;\n    if (sceneId in this.meshCacheBySceneId) {\n      delete this.meshCacheBySceneId[sceneId];\n    }\n  }\n}\n\nconst ofNull = x => Maybe.fromNull(x);\n// private instance\nlet instance = null;\nexport default MeshCache;\n","import MeshCache from \"./MeshCache\";\nimport { AssetsManager } from \"@babylonjs/core\";\nimport \"@babylonjs/loaders\";\n\nclass MeshLoader {\n  constructor(scene) {\n    this.scene = scene;\n  }\n\n  static of(scene) {\n    return new MeshLoader(scene);\n  }\n\n  load = (meshName, mapFunction = mesh => mesh) =>\n    new Promise((re, rej) => {\n      const meshCache = MeshCache.getInstance();\n      if (meshCache.hasKey(meshName, this.scene)) {\n        console.log(`Found Mesh ${meshName} in cache for scene ${this.scene}`);\n        re(mapFunction(meshCache.get(meshName, this.scene)));\n      } else {\n        console.log(\"Loading mesh....\");\n        const assetsManager = new AssetsManager(this.scene);\n        const meshTask = assetsManager.addMeshTask(\"\", \"\", MESH_URL, meshName);\n        meshTask.onSuccess = task => {\n          console.log(\"Load Success\", meshName);\n          const mesh = task.loadedMeshes[0];\n          mesh.name = meshName;\n          meshCache.put(meshName, this.scene, mesh);\n        };\n        meshTask.onError = (task, message, exception) =>\n          rej({ message, exception });\n        assetsManager.onFinish = task => {\n          console.log(\"Load finish \");\n          re(mapFunction(meshCache.get(meshName, this.scene)));\n        };\n        assetsManager.load();\n      }\n    });\n\n  static getMeshUrl = src => `${MESH_URL}${src}`;\n}\n\nconst MESH_URL = `/static/meshes/`;\nexport default MeshLoader;\n","import Robot from \"../NodeItem/Robot\";\nimport Action from \"./Action\";\nimport { Maybe } from \"monet\";\nimport React from \"react\";\nimport PointCloud from \"../NodeItem/PointCloud\";\nimport { ACTIONS } from \"../MainView/MainViewActions\";\nimport MeshLoader from \"../Utils/MeshLoader\";\n\nclass RobotAction extends Action {\n  constructor(\n    robot,\n    robotAnimatorFactory = (robot, parentView) =>\n      Robot.getDefaultAnimator(parentView)\n  ) {\n    super();\n    this.robot = robot;\n    this.key = `robotAction${robot.name}`;\n    this.name = robot.name;\n    this.robotAnimatorFactory = robotAnimatorFactory;\n    this.icon = props => <i className=\"fas fa-robot\" {...props}></i>;\n  }\n\n  action = parentView => {\n    super.action(parentView);\n    // if robot already exists, do nothing\n    parentView\n      .getNodeFromTree(this.robot.name)\n      .orElseRun(() => this.addRobot(parentView));\n    parentView.setSelectedAction(ACTIONS.dragObjects);\n  };\n\n  addRobot(parentView) {\n    parentView.getSceneMemory().forEach(memory => {\n      const scene = memory.scene;\n      const actionMemoryClone = { ...this.memory };\n      MeshLoader.of(scene)\n        .load(Robot.ROBOT_MESH_NAME, mesh => Robot.transformMesh(mesh, scene))\n        .then(mesh =>\n          this.createRobotFromMesh(mesh, scene, parentView, actionMemoryClone)\n        );\n    });\n    this.memory[\"isImport\"] = false;\n  }\n\n  createRobotFromMesh(mesh, scene, parentView, memory) {\n    const parentMesh = this.getParentMesh(parentView);\n\n    const robot = this.getRobot(scene, mesh, parentMesh);\n    robot.animate(this.robotAnimatorFactory(robot, parentView));\n    const isImport = Maybe.fromNull(memory[\"isImport\"]).orSome(false);\n    parentView.addNodeItem2Tree(robot, parentMesh.name, !isImport);\n\n    const cloudPoint = this.getCloudPoint(scene, parentView, robot);\n    parentView.addNodeItem2Tree(cloudPoint, robot.name, false);\n\n    parentView.renderMenus();\n  }\n\n  getRobot = (scene, mesh, parentMesh) => {\n    const meshTree = Robot.createRobotMeshTree(\n      this.robot.robotTree,\n      mesh,\n      scene\n    );\n    const dict = Maybe.fromNull(this.memory[\"nodeItemDict\"]);\n    return Robot.builder()\n      .id(this.robot.id)\n      .name(Maybe.fromNull(this.memory[\"name\"]).orSome(this.robot.name))\n      .assetName(\n        Maybe.fromNull(this.memory[\"assetName\"]).orSome(this.robot.name)\n      )\n      .meshTree(meshTree)\n      .parentMesh(parentMesh)\n      .scene(scene)\n      .keyValueMap(dict.map(x => x.keyValueMap).orSome({}))\n      .build();\n  };\n\n  getCloudPoint = (scene, parentView, robot) => {\n    const cloudPoint = PointCloud.ofDict(\n      scene,\n      { name: this.robot.name, id: this.robot.id },\n      parentView\n    );\n    cloudPoint.mesh.parent = robot.mesh;\n    return cloudPoint;\n  };\n\n  getParentMesh = parentView => {\n    return Maybe.fromNull(this.memory[\"parentObj\"])\n      .map(parentObj => parentObj.parent)\n      .flatMap(parentName => parentView.getNodeFromTree(parentName))\n      .map(treeNode => treeNode.item.mesh)\n      .orSome(parentView.getRootNode().item.mesh);\n  };\n\n  getType = () => RobotAction.TYPE;\n\n  static TYPE = \"RobotAction\";\n}\n\nexport default RobotAction;\n","import AssetNodeItem from \"./AssetNodeItem\";\n\nclass Mesh extends AssetNodeItem {\n  constructor(mesh, assetName, keyValueMap = {}) {\n    super(mesh, assetName, keyValueMap);\n  }\n\n  toDict() {\n    let dict = super.toDict();\n    return dict;\n  }\n\n  toForm() {\n    const schema = super.toForm();\n    schema.jsonSchema.properties = {\n      oldName: schema.jsonSchema.properties.oldName,\n      name: schema.jsonSchema.properties.name,\n      type: schema.jsonSchema.properties.type,\n      assetName: {\n        type: \"string\",\n        title: \"Asset Name\"\n      },\n      position: schema.jsonSchema.properties.position,\n      quaternion: schema.jsonSchema.properties.quaternion,\n      color: schema.jsonSchema.properties.color,\n      annotations: schema.jsonSchema.properties.annotations\n    };\n    schema.uiSchema[\"assetName\"] = {\n      \"ui:disabled\": true\n    };\n    schema.data[\"assetName\"] = this.assetName;\n    return schema;\n  }\n\n  getMouseContextActions(mainView) {\n    return super\n      .getMouseContextActions(mainView)\n      .filter(x => x.title === \"Delete\");\n  }\n\n  getType = () => Mesh.TYPE;\n  static TYPE = \"Mesh\";\n}\n\nexport default Mesh;\n","import Action from \"./Action\";\nimport React from \"react\";\nimport { MasterDB } from \"mov-fe-lib-core\";\nimport Constants from \"../Utils/Constants\";\nimport { ACTIONS } from \"../MainView/MainViewActions\";\nimport MeshLoader from \"../Utils/MeshLoader\";\nimport { Maybe } from \"monet\";\nimport Mesh from \"../NodeItem/Mesh\";\nimport { Vector3, Quaternion, Color3, StandardMaterial } from \"@babylonjs/core\";\n\nclass AddMeshAction extends Action {\n  constructor(mesh) {\n    super();\n    this.key = mesh.id;\n    this.name = mesh.name;\n    this.icon = props => <i {...props} className=\"fas fa-draw-polygon\"></i>;\n  }\n\n  action(parentView) {\n    super.action(parentView);\n    console.log(`Mesh ${this.key} : ${this.name}`, this.memory);\n    this.addMesh(parentView);\n    parentView.setSelectedAction(ACTIONS.dragObjects);\n  }\n\n  addMesh = parentView => {\n    parentView.getSceneMemory().forEach(memory => {\n      const scene = memory.scene;\n      const actionMemoryClone = { ...this.memory };\n      MeshLoader.of(scene)\n        .load(this.key)\n        .then(this.transformMesh(parentView, scene, actionMemoryClone))\n        .then(this.addMesh2Scene(parentView, scene, actionMemoryClone));\n    });\n    this.memory[\"isImport\"] = false;\n  };\n\n  transformMesh = (parentView, scene, memory) => mesh => {\n    const parentMesh = this.getParentMesh(parentView);\n    mesh.parent = parentMesh;\n    mesh.createNormals();\n    const isImport = Maybe.fromNull(memory[\"isImport\"]).orSome(false);\n    const maybeDict = Maybe.fromNull(memory[\"nodeItemDict\"]);\n    mesh.position = maybeDict\n      .flatMap(d => (isImport ? Maybe.some(d.position) : Maybe.none()))\n      .map(Vector3.FromArray)\n      .orSome(Vector3.Zero());\n    mesh.rotationQuaternion = maybeDict\n      .flatMap(d => (isImport ? Maybe.some(d.quaternion) : Maybe.none()))\n      .map(\n        quaternion =>\n          new Quaternion(\n            quaternion[1],\n            quaternion[2],\n            quaternion[3],\n            quaternion[0]\n          )\n      )\n      .orSome(Quaternion.Identity());\n    const material = new StandardMaterial(`Mesh${mesh.name}`, scene);\n    const color = maybeDict\n      .flatMap(d => (isImport ? Maybe.some(d.color) : Maybe.none()))\n      .map(Color3.FromArray)\n      .orSome(Color3.Gray());\n    material.diffuseColor = color;\n    material.emissiveColor = color;\n    mesh.material = material;\n    return mesh;\n  };\n\n  addMesh2Scene = (parentView, scene, memory) => mesh => {\n    const parentMesh = this.getParentMesh(parentView);\n    const isImport = Maybe.fromNull(memory[\"isImport\"]).orSome(false);\n    const finalName = Maybe.fromNull(memory[\"nodeItemDict\"])\n      .flatMap(d => (isImport ? Maybe.some(d.name) : Maybe.none()))\n      .orSome(`${this.name}${Math.floor(Math.random() * 100)}`);\n    mesh.name = finalName;\n\n    const meshItem = new Mesh(\n      mesh,\n      this.name,\n      Maybe.fromNull(memory[\"nodeItemDict\"])\n        .flatMap(x => (isImport ? Maybe.some(x.keyValueMap) : Maybe.none()))\n        .orSome({})\n    );\n\n    parentView.addNodeItem2Tree(meshItem, parentMesh.name, !isImport);\n    parentView.renderMenus();\n  };\n\n  getParentMesh = parentView => {\n    return Maybe.fromNull(this.memory[\"parentObj\"])\n      .map(parentObj => parentObj.parent)\n      .flatMap(parentName => parentView.getNodeFromTree(parentName))\n      .map(treeNode => treeNode.item.mesh)\n      .orSome(parentView.getRootNode().item.mesh);\n  };\n\n  getType = () => AddMeshAction.TYPE;\n  static TYPE = \"AddMeshAction\";\n\n  deleteAsset = () => {};\n\n  download = async () => {\n    const downloadLinks = (\n      <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n          <div style={{ marginRight: \"5px\" }}>Mesh:</div>\n          <a href={MeshLoader.getMeshUrl(this.key)} download>\n            {this.key}\n          </a>\n        </div>\n      </div>\n    );\n  };\n}\n\nexport default AddMeshAction;\n","import AddMapAction from \"../Actions/AddMapAction\";\nimport RobotAction from \"../Actions/RobotAction\";\nimport Robot from \"../NodeItem/Robot\";\nimport AddMeshAction from \"../Actions/AddMeshAction\";\n\nexport const ASSETS_TYPES = {\n  Map: \"Map\",\n  Robot: \"Robot\",\n  Mesh: \"Mesh\"\n};\n\nexport const AssetsTypesFactory = {\n  Map: map => new AddMapAction(map.name, map.loader),\n  Robot: robot => new RobotAction(robot, Robot.getSocketAnimator),\n  Mesh: mesh => new AddMeshAction(mesh)\n};\n","import NodeItem from \"./NodeItem\";\nimport Vec3 from \"../Math/Vec3\";\nimport { Maybe } from \"monet\";\nimport Util3d from \"../Util3d/Util3d\";\nimport Constants from \"../Utils/Constants\";\nimport { Vector3, Color3, Observable, StandardMaterial } from \"@babylonjs/core\";\n\nclass Wall extends NodeItem {\n  constructor(mesh, localWall, size, keyPoints = {}, keyValueMap = {}) {\n    super(mesh, keyValueMap);\n    this.localWall = localWall;\n    this.size = size;\n    this.keyPoints = keyPoints;\n  }\n\n  toDict() {\n    const dict = super.toDict();\n    dict.localWall = this.localWall;\n    dict.size = this.size;\n    return dict;\n  }\n\n  ofDict(scene, dict = null, mainView = null) {\n    return Wall.ofDict(scene, dict, mainView);\n  }\n\n  getType = () => Wall.TYPE;\n\n  static TYPE = \"Wall\";\n\n  static ofDict(scene, dict = null, mainView = null) {\n    if (!dict) throw \"null dictionary describing wall\";\n    const name = Maybe.fromNull(dict.name).orSome(\n      `Wall${Math.floor(Math.random() * 1e3)}`\n    );\n    const mesh = createWallMesh(dict, name, scene);\n\n    const material = new StandardMaterial(`WallMaterial${name}`, scene);\n    const color = new Color3(dict.color[0], dict.color[1], dict.color[2]);\n    material.diffuseColor = color;\n    material.emissiveColor = color;\n    mesh.material = material;\n    // babylonjs highlight shader flickers when floor intersect\n    mesh.position.z += 1e-3;\n\n    const keypoints = createPlaceHolderKeyPoints(\n      scene,\n      dict.localWall.map(x => Vec3.of(x).toBabylon()),\n      mesh,\n      mainView\n    );\n    return new Wall(\n      mesh,\n      dict.localWall,\n      dict.size,\n      keypoints,\n      dict.keyValueMap\n    );\n  }\n}\n\nconst RADIUS = Constants.RADIUS;\nconst FACES = [\n  [0, 1, 2],\n  [2, 3, 0],\n  [4, 6, 5],\n  [6, 4, 7],\n  [0, 5, 1],\n  [5, 0, 4],\n  [3, 2, 6],\n  [6, 7, 3],\n  [1, 6, 2],\n  [6, 1, 5],\n  [0, 3, 7],\n  [7, 4, 0]\n];\n\nfunction createWallMesh(dict, name, scene) {\n  const centeredWall = dict.localWall.map(x => Vec3.of(x).toBabylon());\n  const middlePoint = Vec3.of(dict.position).toBabylon();\n  const tangent = centeredWall[1].subtract(centeredWall[0]).normalize();\n  const normal = new Vector3(-tangent.y, tangent.x, 0);\n  const shape = [\n    centeredWall[0].add(normal.scale(dict.size.width)),\n    centeredWall[0].subtract(normal.scale(dict.size.width)),\n    centeredWall[1].subtract(normal.scale(dict.size.width)),\n    centeredWall[1].add(normal.scale(dict.size.width))\n  ];\n  const h = new Vector3(0, 0, dict.size.height);\n  const wallMesh = {\n    positions: [\n      shape[0],\n      shape[1],\n      shape[2],\n      shape[3],\n      shape[0].add(h),\n      shape[1].add(h),\n      shape[2].add(h),\n      shape[3].add(h)\n    ],\n    faces: FACES\n  };\n  const mesh = Util3d.meshFromPositionAndFaces(\n    name,\n    scene,\n    wallMesh.positions,\n    wallMesh.faces\n  );\n  mesh.position = middlePoint;\n  return mesh;\n}\n\nfunction createNewMeshFromOldUsingNewPoints(newWall, scene, mesh, item) {\n  const average = Util3d.pointAverageVec3(\n    newWall.localWall.map(x => Vec3.of(x))\n  );\n  newWall.position = average.toArray();\n  newWall.localWall = newWall.localWall.map(x =>\n    Vec3.of(x).sub(average).toArray()\n  );\n\n  const newMesh = createWallMesh(newWall, mesh.name, scene);\n  newMesh.position = mesh.position;\n  newMesh.rotationQuaternion = mesh.rotationQuaternion;\n  newMesh.locallyTranslate(average.toBabylon());\n  newMesh.material = mesh.material;\n  newMesh.visibility = mesh.visibility;\n  newMesh.parent = mesh.parent;\n\n  item.mesh = newMesh;\n  item.localWall = newWall.localWall;\n\n  const childrenCopy = [...mesh._children];\n  childrenCopy.forEach(c => {\n    mesh.removeChild(c);\n    c.parent = newMesh;\n  });\n  item.keyPoints.forEach((k, j) => {\n    k.position = Vec3.of(newWall.localWall[j]).toBabylon();\n  });\n  // dispose old mesh\n  mesh.dispose();\n}\n\nconst getKeyPointObserverFunction = (mainView, scene) => {\n  return ({ updatedPointMesh, is2updateServer }) => {\n    mainView.getNodeFromTree(updatedPointMesh.parent.name).forEach(wallNode => {\n      const index = updatedPointMesh.index;\n      const item = wallNode.item;\n      const mesh = item.mesh;\n      let newWall = {\n        position: Vec3.ofBabylon(mesh.position).toArray(),\n        localWall: item.localWall,\n        size: item.size\n      };\n      newWall.localWall[index] = Vec3.ofBabylon(\n        updatedPointMesh.position\n      ).toArray();\n\n      createNewMeshFromOldUsingNewPoints(newWall, scene, mesh, item);\n\n      if (is2updateServer) {\n        mainView.updateNodeInServer(mesh.name);\n      }\n    });\n  };\n};\n\nconst createPlaceHolderKeyPoints = (scene, wall, wallMesh, mainView) => {\n  const keyPoints = [];\n  wall.forEach((p, i) => {\n    const keyPoint = Util3d.createSphere(\n      scene,\n      new Color3(0.25, 0.25, 0.25),\n      RADIUS,\n      `${wallMesh.name}keyPointWall${i}`,\n      true\n    );\n    keyPoint.parent = wallMesh;\n    keyPoint.position = p;\n    keyPoint.index = i;\n    keyPoint.observers = new Observable();\n    keyPoint.observers.add(getKeyPointObserverFunction(mainView, scene));\n    keyPoints.push(keyPoint);\n  });\n  return keyPoints;\n};\n\nexport default Wall;\n","import GlobalRef from \"../NodeItem/GlobalRef\";\nimport Box from \"../NodeItem/Box\";\nimport KeyPoint from \"../NodeItem/KeyPoint\";\nimport Path from \"../NodeItem/Path\";\nimport Wall from \"../NodeItem/Wall\";\nimport BoxRegion from \"../NodeItem/BoxRegion\";\nimport PolygonRegion from \"../NodeItem/PolygonRegion\";\nimport GraphItem from \"../NodeItem/GraphItem\";\n\nconst NODE_ITEM_FACTORY_MAP = {\n  GlobalRef: GlobalRef,\n  Box: Box,\n  KeyPoint: KeyPoint,\n  Path: Path,\n  Wall: Wall,\n  BoxRegion: BoxRegion,\n  PolygonRegion: PolygonRegion,\n  GraphItem: GraphItem\n};\n\nexport default NODE_ITEM_FACTORY_MAP;\n","import GlobalRef from \"../NodeItem/GlobalRef\";\nimport { Maybe } from \"monet\";\nimport { ASSETS_TYPES } from \"../Utils/AssetsTypesFactory\";\nimport NODE_ITEM_FACTORY_MAP from \"./NodeItemFactoryMap\";\n\nclass MainViewRetriever {\n  static importScene(mainView, serverScene = [], parent = null) {\n    console.log(\"Importing scene...\", mainView, serverScene);\n    const errors = [];\n    if (serverScene.length > 0) {\n      importSceneRecursive(mainView, serverScene, parent, errors);\n    } else {\n      importDefaultScene(mainView);\n    }\n    console.log(\"End Importing scene\");\n    return errors;\n  }\n\n  static importNodeItem(mainView, nodeDict, parent, is2addInServer = false) {\n    const nodeItemClass = NODE_ITEM_FACTORY_MAP[nodeDict.type]; //retrieve default export\n    if (nodeItemClass) {\n      mainView.getSceneMemory().forEach(({ scene }) => {\n        const nodeItem = nodeItemClass.ofDict(scene, nodeDict, mainView);\n        // pseudo lazy migration of isVisible prop\n        const isVisible =\n          nodeDict.isVisible === undefined ? true : nodeDict.isVisible;\n        nodeItem.mesh.setEnabled(isVisible);\n        mainView.getNodeFromTree(parent).forEach(treeNode => {\n          nodeItem.mesh.parent = treeNode.item.mesh;\n        });\n        mainView.addNodeItem2Tree(\n          nodeItem,\n          parent,\n          is2addInServer,\n          isVisible,\n          false\n        );\n      });\n    }\n  }\n}\n\nfunction isAsset(nodeDict) {\n  return nodeDict.type in ASSETS_TYPES;\n}\n\nfunction importAsset(mainView, nodeDict, parent, errors) {\n  const assetType = nodeDict.type;\n  const assetName = Maybe.fromNull(nodeDict.assetName).orSome(nodeDict.name);\n  const assetActionMap = mainView.getAssetsActionMap();\n  // legacy\n  const retrievedAction = Maybe.fromNull(assetActionMap[assetName]).orLazy(\n    () => assetActionMap[assetName.split(\".\")[0]]\n  );\n  if (!retrievedAction) {\n    errors.push({\n      cause: `Asset of type ${assetType} with name ${assetName}, was not found`,\n      solution: `please upload ${assetType} ${assetName}`\n    });\n    return;\n  }\n  retrievedAction.memory[\"parentObj\"] = { parent: parent };\n  retrievedAction.memory[\"nodeItemDict\"] = nodeDict;\n  retrievedAction.memory[\"assetName\"] = assetName;\n  retrievedAction.memory[\"name\"] = nodeDict.name;\n  retrievedAction.memory[\"isImport\"] = true;\n  retrievedAction.memory[\"isVisible\"] =\n    nodeDict.isVisible === undefined ? true : nodeDict.isVisible;\n  retrievedAction.action(mainView);\n}\n\nfunction importSceneRecursive(mainView, arrayTree, parent = null, errors = []) {\n  if (!arrayTree) return;\n  const sortArrayTree = arrayTree.sort((a, b) => {\n    if (a.item.type === \"GlobalRef\") return -1;\n    return a.name < b.name ? -1 : a.name > b.name ? 1 : 0;\n  });\n  sortArrayTree.forEach(node => {\n    if (isAsset(node.item)) {\n      importAsset(mainView, node.item, parent, errors);\n    } else {\n      MainViewRetriever.importNodeItem(mainView, node.item, parent);\n    }\n    if (node.children.length > 0) {\n      importSceneRecursive(mainView, node.children, node.name, errors);\n    }\n  });\n}\n\nfunction importDefaultScene(mainView) {\n  mainView.getSceneMemory().forEach(memory => {\n    const scene = memory.scene;\n    const send2server = true;\n    mainView.addNodeItem2Tree(GlobalRef.ofDict(scene), null, send2server);\n  });\n}\n\nexport default MainViewRetriever;\n","import { MasterDB } from \"mov-fe-lib-core\";\nimport Constants from \"./Constants\";\n\nclass SceneServerUtils {\n  static retrieveScene = (\n    sceneName,\n    successCallback = DEFAULT_SUCCESS,\n    failCallback = DEFAULT_FAILURE(\"retrieving scene\")\n  ) => {\n    MasterDB.cloudFunction(\n      Constants.CLOUD_FUNCTION_NAME,\n      \"retrieveScene\",\n      sceneName,\n      data => successFailIf(data, successCallback, failCallback)\n    );\n  };\n}\n\nconst DEFAULT_FAILURE = failureLocation => data => {\n  throw \"\" + `Exception caught in ${failureLocation}: ${data.error}`;\n};\n\nconst DEFAULT_SUCCESS = data => {};\n\nconst successFailIf = (data, successCallback, failCallback) => {\n  if (data.success) {\n    successCallback(data);\n  } else {\n    failCallback(data);\n  }\n};\nexport default SceneServerUtils;\n","import { Maybe } from \"monet\";\n\nfunction getNodeRecursive(tree, predicate) {\n  for (let i = 0; i < tree.length; i++) {\n    const node = tree[i];\n    if (predicate(node)) return Maybe.some(node);\n    const answer = getNodeRecursive(node.children, predicate);\n    if (answer.isSome()) return answer;\n  }\n  return Maybe.none();\n}\n\nfunction getParentNodeRecursive(tree, predicate, parent) {\n  const foundChild = tree\n    .map(x => predicate(x))\n    .reduce((e, x) => e || x, false);\n  if (foundChild) return Maybe.fromNull(parent);\n  for (let i = 0; i < tree.length; i++) {\n    const node = tree[i];\n    const answer = getParentNodeRecursive(node.children, predicate, node);\n    if (answer.isSome()) return answer;\n  }\n  return Maybe.none();\n}\n\nfunction compareTreesRecursive(treeA, treeB, nodeEquality) {\n  if (treeA.length === treeB.length) {\n    let ans = true;\n    for (let i = 0; i < treeA.length; i++) {\n      const nodeA = treeA[i];\n      const nodeB = treeB[i];\n      if (nodeEquality(nodeA, nodeB)) {\n        ans =\n          ans &&\n          compareTreesRecursive(nodeA.children, nodeB.children, nodeEquality);\n      } else {\n        return false;\n      }\n    }\n    return ans;\n  }\n  return false;\n}\n\nfunction mapRecursive(tree, newTree, map) {\n  tree.forEach(nod => {\n    const node = { ...nod };\n    const mappedNode = map(node);\n    mappedNode.children = mapRecursive(node.children, [], map);\n    newTree.push(mappedNode);\n  });\n  return newTree;\n}\n\nfunction forEachRecursive(tree = [], forEach = () => {}) {\n  tree.forEach(node => {\n    forEach(node);\n    forEachRecursive(node.children, forEach);\n  });\n}\n\nfunction expand(node) {\n  node.expanded = true;\n  return node;\n}\n\nfunction filterTree(tree = [], predicate = node => true) {\n  if (!tree || tree.length === 0) return [];\n  let result = [];\n  tree.forEach(nod => {\n    const node = { ...nod };\n    if (predicate(node)) {\n      const expanded = expand(node);\n      expanded.children = filterTree(expanded.children, predicate);\n      result.push(expanded);\n    } else if (node.children) {\n      const children = filterTree(node.children, predicate);\n      if (children.length !== 0) {\n        node.children = children;\n        result.push(expand(node));\n      }\n    }\n  });\n  return result;\n}\n\nfunction flatten(tree = [], predicate = node => true) {\n  if (!tree || tree.length === 0) return [];\n  let result = [];\n  tree.forEach(nod => {\n    const node = { ...nod };\n    if (predicate(node)) result.push(node);\n    result = result.concat(flatten(node.children, predicate));\n  });\n  return result;\n}\n\n/**\n * General purpose tree\n *\n * It just need a basic structure as input:\n *  Tree: Array<Node>\n *  Node: {children: Array<Node>}\n */\nclass TreeObject {\n  constructor(tree) {\n    this.tree = tree;\n  }\n  /**\n   * Return maybe node based on predicate\n   * @param {*} predicate\n   */\n  getNode(predicate) {\n    return getNodeRecursive(this.tree, predicate);\n  }\n\n  /**\n   * return maybe parent node based on the child predicate\n   * @param {*} childPredicate\n   */\n  getParentNode(childPredicate) {\n    return getParentNodeRecursive(this.tree, childPredicate, null);\n  }\n\n  equals(tree, nodeEquality = (a, b) => a === b) {\n    if (tree.constructor === TreeObject) {\n      return compareTreesRecursive(this.tree, tree.tree, nodeEquality);\n    }\n    return compareTreesRecursive(this.tree, tree, nodeEquality);\n  }\n\n  map(nodeMap) {\n    return new TreeObject(mapRecursive(this.tree, [], nodeMap));\n  }\n\n  filter(predicate = node => true) {\n    return new TreeObject(filterTree(this.tree, predicate));\n  }\n\n  /**\n   *\n   * @param {*} predicate: node => Boolean\n   * @returns Array with flattened tree while filtering values with predicate\n   */\n  flatten(predicate = node => true) {\n    return flatten(this.tree, predicate);\n  }\n\n  forEach(map) {\n    forEachRecursive(this.tree, map);\n  }\n}\n\nexport default TreeObject;\n","class TreeNode {\n  constructor(title, item, children, expanded, isVisible) {\n    this.title = title;\n    this.item = item;\n    this.children = children;\n    this.expanded = expanded;\n    this.isVisible = isVisible;\n  }\n\n  static dispose(node) {\n    /*\n     * function must be defined here, otherwise it wouldn't work on the UI Tree change method\n     */\n    node.item.dispose();\n    node.children.forEach(child => {\n      TreeNode.dispose(child);\n    });\n  }\n\n  /**\n   *\n   * @param {*} node\n   */\n  static toDict(node) {\n    /*\n     * function must be defined here, otherwise it wouldn't work on the UI Tree change method\n     */\n    return {\n      name: node.title,\n      item: node.item.toDict(),\n      children: node.children.map(child => TreeNode.toDict(child))\n    };\n  }\n\n  static builder() {\n    return new TreeNodeBuilder();\n  }\n}\n\nclass TreeNodeBuilder {\n  constructor() {\n    this._title = null;\n    this._item = {};\n    this._children = [];\n    this._expanded = true;\n    this._isVisible = true;\n  }\n\n  title(title) {\n    this._title = title;\n    return this;\n  }\n\n  item(item) {\n    this._item = item;\n    return this;\n  }\n\n  children(children) {\n    this._children = children;\n    return this;\n  }\n\n  expanded(expanded) {\n    this._expanded = expanded;\n    return this;\n  }\n\n  isVisible(isVisible) {\n    this._isVisible = isVisible;\n    return this;\n  }\n\n  build() {\n    Object.values(this).forEach(value => {\n      if (value === null)\n        throw `There are missing variables to build a TreeNode, e.g ${value}`;\n    });\n    return new TreeNode(\n      this._title,\n      this._item,\n      this._children,\n      this._expanded,\n      this._isVisible\n    );\n  }\n}\n\nexport default TreeNode;\n","import TreeObject from \"../TreeObject/TreeObject\";\nimport TreeNode from \"../TreeObject/TreeNode\";\nimport GlobalRef from \"../NodeItem/GlobalRef\";\nimport { MasterDB } from \"mov-fe-lib-core\";\nimport Constants from \"./Constants\";\n\nconst CLOUD_FUNCTION_NAME = Constants.CLOUD_FUNCTION_NAME;\n\nclass TreeServerUtils {\n  constructor(sceneName) {\n    this.sceneName = sceneName;\n  }\n\n  static ofScene(sceneName) {\n    return new TreeServerUtils(sceneName);\n  }\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                    Util functions                                    *\n   *                                                                                      */\n  //========================================================================================\n\n  getNodeFromTree = (name, objectTree) => {\n    return new TreeObject(objectTree).getNode(x => name === x.title);\n  };\n\n  getParentFromChild = (childName, objectTree) => {\n    return new TreeObject(objectTree).getParentNode(x => childName === x.title);\n  };\n\n  deleteNodeFromTreeUsingName = (name, objectTree, is2delInServer = true) => {\n    this.getNodeFromTree(name, objectTree).forEach(node => {\n      // destroy treeNode\n      TreeNode.dispose(node);\n\n      if (is2delInServer) {\n        this.deleteNodeInServer(name);\n      }\n\n      const maybeParent = this.getParentFromChild(name, objectTree);\n      maybeParent.forEach(parentNode => {\n        parentNode.children = parentNode.children.filter(x => x.title !== name);\n      });\n\n      objectTree = objectTree.filter(x => x.title !== name);\n    });\n    return objectTree;\n  };\n\n  getNodeFromTreeWithPredicate = (predicate, objectTree) => {\n    return new TreeObject(objectTree).getNode(predicate);\n  };\n\n  addNodeItem2Tree = (\n    objectTree,\n    nodeItem,\n    parentName = GlobalRef.NAME,\n    is2addInServer = true,\n    isVisible = true\n  ) => {\n    // delete if already exist\n    this.deleteNodeFromTreeUsingName(nodeItem.name, objectTree, is2addInServer);\n\n    const node2Add = TreeNode.builder()\n      .title(nodeItem.name)\n      .item(nodeItem)\n      .isVisible(isVisible)\n      .build();\n\n    if (parentName) {\n      const maybeParentNode = this.getNodeFromTree(parentName, objectTree);\n      maybeParentNode.forEach(parentNode => {\n        if (is2addInServer) this.addNodeItem2Server(node2Add, parentNode.title);\n        parentNode.children.push(node2Add);\n      });\n    } else {\n      objectTree.push(node2Add);\n      if (is2addInServer) this.addNodeItem2Server(node2Add, null);\n    }\n    return objectTree;\n  };\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                   Server functions                                   *\n   *                                                                                      */\n  //========================================================================================\n\n  updateNodeInServer = (name, objectTree, oldName = null) => {\n    console.log(\"updateNodeInServer!\", this.sceneName);\n    this.getNodeFromTree(name, objectTree).forEach(node => {\n      const parentName = this.getParentFromChild(name, objectTree)\n        .map(x => x.title)\n        .orNull();\n      MasterDB.cloudFunction(\n        CLOUD_FUNCTION_NAME,\n        \"updateNode\",\n        [TreeNode.toDict(node), parentName, oldName, this.sceneName],\n        data => {\n          console.log(\"Update node with success?\", data.success);\n        }\n      );\n    });\n  };\n\n  addNodeItem2Server = (treeNode, parentName) => {\n    MasterDB.cloudFunction(\n      CLOUD_FUNCTION_NAME,\n      \"addNodeItem\",\n      [TreeNode.toDict(treeNode), parentName, this.sceneName],\n      data => {\n        console.log(\"Add node with success?\", data.success);\n      }\n    );\n  };\n\n  deleteNodeInServer = name => {\n    MasterDB.cloudFunction(\n      CLOUD_FUNCTION_NAME,\n      \"deleteNodeByName\",\n      [name, this.sceneName],\n      data => {\n        console.log(\"Deleted node with success?\", data.success);\n      }\n    );\n  };\n}\n\nexport default TreeServerUtils;\n","import { Maybe } from \"monet\";\nimport { ASSETS_TYPES, AssetsTypesFactory } from \"../Utils/AssetsTypesFactory\";\nimport { MasterDB } from \"mov-fe-lib-core\";\nimport MapLoader from \"./MapLoader\";\n\n/**\n *  Graphic Assets Manager, retrieves and manages the assets that are in DB.\n */\nclass AssetsManager {\n  constructor() {\n    if (instance) return instance;\n    instance = this;\n    this.assets = {};\n    this.assetsActionMap = {};\n    this.robots = {};\n    this.observers = [];\n    this.afterLoad = [];\n    this.finishInitialSubscribers = 0;\n  }\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                  Getters and Setters                                 *\n   *                                                                                      */\n  //========================================================================================\n\n  getAssets = () => this.assets;\n\n  getAssetsActionMap = () => this.assetsActionMap;\n\n  load = async () => {\n    await this.retrieveAssetsFromDb();\n    return this;\n  };\n\n  addAfterLoad(afterLoad) {\n    this.afterLoad.push(afterLoad);\n    return this;\n  }\n\n  addObserver(observer) {\n    this.observers.push(observer);\n    return this;\n  }\n\n  signalObservers = () => this.observers.forEach(obs => obs(this));\n\n  addAsset(assetKey, asset) {\n    try {\n      this.assets[assetKey] = asset;\n      this.assetsActionMap[assetKey] = AssetsTypesFactory[asset.type](asset);\n    } catch (e) {\n      console.log(\"Caught exception while adding asset\", e);\n      throw Error(`Caught exception while adding asset ${e}`);\n    }\n  }\n\n  delAsset(assetKey) {\n    if (assetKey in this.assets) delete this.assets[assetKey];\n    if (assetKey in this.assetsActionMap) delete this.assetsActionMap[assetKey];\n    this.signalObservers();\n  }\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                      Subscribers                                     *\n   *                                                                                      */\n  //========================================================================================\n\n  subs = [\n    resolve =>\n      MasterDB.subscribe(\n        {\n          Scope: \"Robot\",\n          Name: \"*\",\n          RobotName: \"*\"\n        },\n        this.getRobotNameUpdate(),\n        this.getRobotNameSub(({ value }) => value, resolve)\n      ),\n    resolve =>\n      MasterDB.subscribe(\n        {\n          Scope: \"Package\",\n          File: \"*\",\n          Name: \"maps\",\n          FileLabel: \"*\"\n        },\n        this.getMapUpdater(({ key }) => key, this.signalObservers),\n        this.getMapSubscriber(\n          ({ value }) => value,\n          () => this.finishSub(\"Maps\", resolve)\n        )\n      ),\n    resolve =>\n      MasterDB.subscribe(\n        { Scope: \"Package\", File: \"*\", Name: \"meshes\", FileLabel: \"*\" },\n        this.getMeshUpdater(),\n        this.getMeshSubscriber(\n          ({ value }) => value,\n          () => this.finishSub(\"Meshes\", resolve)\n        )\n      )\n  ];\n\n  retrieveAssetsFromDb() {\n    return new Promise((re, rej) => {\n      this.subs.forEach(f => f(re));\n    });\n  }\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                         Utils                                        *\n   *                                                                                      */\n  //========================================================================================\n\n  finishSub = (place, resolve) => {\n    console.log(\"FINISH SUB \", place, this.finishInitialSubscribers);\n    if (++this.finishInitialSubscribers > this.subs.length - 1) {\n      this.afterLoad.forEach(f => f(this));\n      resolve(true);\n    }\n  };\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                        Robots                                        *\n   *                                                                                      */\n  //========================================================================================\n\n  deleteRobot = id => {\n    this.delAsset(this.robots[id].name);\n    if (id in this.robots) delete this.robots[id];\n  };\n\n  addRobot(id, name = null) {\n    if (!(id in this.robots)) {\n      this.robots[id] = {\n        id: id,\n        name: null\n      };\n    }\n    ofNull(name).forEach(name => (this.robots[id].name = name));\n    if (Object.values(this.robots[id]).every(x => x !== null)) {\n      const localRobot = this.robots[id];\n      this.addAsset(localRobot.name, {\n        name: localRobot.name,\n        id: id,\n        type: ASSETS_TYPES.Robot,\n        robotTree: {\n          name: localRobot.name,\n          position: { x: 0, y: 0, z: 0 },\n          orientation: {\n            w: 1,\n            x: 0,\n            y: 0,\n            z: 0\n          },\n          child: []\n        }\n      });\n    }\n  }\n\n  getRobotNameSub(getter, resolve) {\n    return data => {\n      ofNull(getter(data))\n        .flatMap(maybeGet(\"Robot\"))\n        .forEach(r =>\n          Object.keys(r).forEach(id => this.addRobot(id, r[id].RobotName))\n        );\n      this.finishSub(\"RobotName\", resolve);\n    };\n  }\n\n  getRobotNameUpdate() {\n    const actionMap = {\n      del: data =>\n        ofNull(data.key)\n          .flatMap(maybeGet(\"Robot\"))\n          .forEach(r => Object.keys(r).forEach(this.deleteRobot)),\n      set: this.getRobotNameSub(({ key }) => key)\n    };\n    return data => {\n      console.log(\"Robot NAME UPDATE\", data);\n      actionMap[data.event](data);\n    };\n  }\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                         Maps                                         *\n   *                                                                                      */\n  //========================================================================================\n\n  getMapSubscriber = (dataGetter, after = () => {}) => {\n    return data =>\n      this.getMapFileData(dataGetter, data).forEach(fileName => {\n        Object.keys(fileName)\n          .filter(f => f.includes(\".yaml\"))\n          .forEach(this.addMap);\n        after();\n      });\n  };\n\n  getMapUpdater = (dataGetter, after = () => {}) => {\n    const actionMap = {\n      del: data => {\n        this.getMapFileData(dataGetter, data).forEach(f => {\n          let filename = Object.keys(f)[0];\n          filename = filename.split(\".\")[0];\n          delete this.assets[filename];\n          delete this.assetsActionMap[filename];\n        });\n        after();\n      },\n      set: this.getMapSubscriber(dataGetter, after),\n      subscribe: this.getMapSubscriber(dataGetter, after)\n    };\n    return data => {\n      console.log(\"MAP UPDATE\", data);\n      actionMap[data.event](data);\n    };\n  };\n\n  addMap = yamlSrc => {\n    const map = {\n      name: yamlSrc.split(\".\")[0],\n      loader: new MapLoader(yamlSrc),\n      type: ASSETS_TYPES.Map\n    };\n    this.addAsset(map.name, map);\n  };\n\n  getMapFileData = (dataGetter, data) =>\n    ofNull(dataGetter(data))\n      .flatMap(maybeGet(\"Package\"))\n      .flatMap(maybeGet(\"maps\"))\n      .flatMap(maybeGet(\"File\"));\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                         Mesh                                         *\n   *                                                                                      */\n  //========================================================================================\n\n  getMeshSubscriber = (dataGetter, after = () => {}) => data => {\n    this.getMeshFileData(dataGetter, data).forEach(d =>\n      Object.keys(d).forEach(id => {\n        const mesh = { id: id, name: d[id].FileLabel, type: ASSETS_TYPES.Mesh };\n        this.addAsset(mesh.name, mesh);\n      })\n    );\n    after();\n  };\n\n  getMeshUpdater = () => {\n    const actionMap = {\n      del: data => {\n        this.getMeshFileData(d => d.key, data).forEach(f => {\n          let filename = Object.keys(f)[0];\n          delete this.assets[filename];\n          delete this.assetsActionMap[filename];\n        });\n        this.signalObservers();\n      },\n      set: this.getMeshSubscriber(d => d.key, this.signalObservers),\n      subscribe: this.getMeshSubscriber(d => d.key, this.signalObservers)\n    };\n    return data => actionMap[data.event](data);\n  };\n\n  getMeshFileData = (dataGetter, data) =>\n    ofNull(dataGetter(data))\n      .flatMap(maybeGet(\"Package\"))\n      .flatMap(maybeGet(\"meshes\"))\n      .flatMap(maybeGet(\"File\"));\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                        static                                        *\n   *                                                                                      */\n  //========================================================================================\n\n  static getInstance() {\n    return new AssetsManager();\n  }\n}\n\n// private variable\nlet instance = null;\n\n// auxiliary functions\nconst ofNull = Maybe.fromNull;\nconst get = prop => obj => obj[prop];\nconst dot = f => g => x => f(g(x));\nconst maybeGet = prop => dot(ofNull)(get(prop));\n\nexport default AssetsManager;\n","export class Animator {\n  constructor(state, next, doWhile) {\n    this.state = state;\n    this.next = next;\n    this.while = doWhile;\n    this.requestAnimeId = null;\n  }\n\n  play() {\n    this.requestAnimeId = requestAnimationFrame(() => {\n      if (!this.while(this.state)) return this.stop();\n      this.state = this.next(this.state);\n      this.play();\n    });\n    return this;\n  }\n\n  stop() {\n    cancelAnimationFrame(this.requestAnimeId);\n    return this;\n  }\n\n  static builder() {\n    return new AnimatorBuilder();\n  }\n}\n\nclass AnimatorBuilder {\n  constructor() {\n    this._state = null;\n    this._next = null;\n    this._end = null;\n  }\n\n  initialState(state) {\n    this._state = state;\n    return this;\n  }\n\n  nextState(next) {\n    this._next = next;\n    return this;\n  }\n\n  while(end) {\n    this._end = end;\n    return this;\n  }\n\n  build() {\n    const someAreEmpty = [this._state, this._next, this._end].some(\n      x => x === null || x === undefined\n    );\n    if (someAreEmpty) throw \"Animator properties are missing\";\n    return new Animator(this._state, this._next, this._end);\n  }\n}\n","import { Vector3 } from \"@babylonjs/core\";\nimport Util3d from \"../Util3d/Util3d\";\nimport { Animator } from \"./Animator\";\n\nexport default class DefaultMouseEvents {\n  static onPointerDown = mainView => evt => {\n    mainView.mousePosClick = mainView\n      .getMouseCoordinatesFromRoot()\n      .orSome(Vector3.Zero());\n    mainView.mousePosMove = mainView.mousePosClick;\n    mainView.sceneMemory.forEach(({ camera, canvas }) => {\n      if (evt.buttons === 2 || evt.buttons === 4 || evt.ctrlKey) {\n        camera.detachControl(canvas);\n      }\n    });\n  };\n\n  static onPointerUp = mainView => evt => {\n    mainView.sceneMemory.forEach(({ camera, canvas }) => {\n      camera.attachControl(canvas, true);\n    });\n  };\n\n  static onPointerMove = mainView => evt => {\n    mainView.sceneMemory.forEach(({ mouseLocationText, camera }) => {\n      mainView.getMouseCoordinatesFromRoot().forEach(currentLocal => {\n        setMouseLocationTxt(mouseLocationText, currentLocal);\n        const panCamera = () => {\n          const v = currentLocal.subtract(mainView.mousePosMove);\n          const vBabylon = Util3d.getBabylonCoordinates(v).scale(-1);\n          animateCamera(camera, vBabylon);\n          mainView.mousePosMove = currentLocal;\n        };\n        const mouseButtonActions = [\n          { predicate: evt.ctrlKey && evt.buttons === 1, action: panCamera },\n          { predicate: evt.buttons === 4, action: panCamera }\n        ];\n        const filterActions = mouseButtonActions.filter(\n          ({ predicate }) => predicate\n        );\n        if (filterActions.length > 0) filterActions[0].action();\n      });\n    });\n  };\n}\n\nfunction animateCamera(camera, v) {\n  Animator.builder()\n    .initialState({\n      camera: camera,\n      time: 0,\n      T: new Date().getTime()\n    })\n    .nextState(s => {\n      const { camera, time } = s;\n      const dt = 0.1; //(new Date().getTime() - T) / 1000;\n      const vdt = v.scale(dt);\n      camera.position = camera.position.add(vdt);\n      camera.setTarget(camera.target.add(vdt));\n      return {\n        camera: camera,\n        time: time + dt,\n        T: new Date().getTime()\n      };\n    })\n    .while(s => s.time <= 1)\n    .build()\n    .play();\n}\n\nfunction setMouseLocationTxt(mouseLocationText, currentLocal) {\n  mouseLocationText.text = `x: ${currentLocal.x.toFixed(\n    2\n  )}, y: ${currentLocal.y.toFixed(2)}`;\n}\n","import React, { Component } from \"react\";\nimport BaseViewer from \"./BaseViewer/BaseViewer\";\nimport PropTypes from \"prop-types\";\nimport { HighlightLayer } from \"@babylonjs/core\";\nimport { Maybe } from \"monet\";\nimport MainViewRetriever from \"./MainView/MainViewRetriever\";\nimport DefaultScene from \"./Utils/DefaultScene\";\nimport GlobalRef from \"./NodeItem/GlobalRef\";\nimport SceneServerUtils from \"./Utils/SceneServerUtils\";\nimport TreeServerUtils from \"./Utils/TreeServerUtils\";\nimport AssetsManager from \"./AssetsManager/AssetsManager\";\nimport TreeObject from \"./TreeObject/TreeObject\";\nimport GraphItem from \"./NodeItem/GraphItem\";\nimport DefaultMouseEvents from \"./Utils/DefaultMouseEvents\";\nimport Util3d from \"./Util3d/Util3d\";\nimport Vec3 from \"./Math/Vec3\";\nimport ReactResizeDetector from \"react-resize-detector\";\nimport ConfirmAlertModal from \"../Modal/ConfirmAlertModal\";\n\n//========================================================================================\n/*                                                                                      *\n *                                      SceneViewer                                     *\n *                                                                                      */\n//========================================================================================\n\nclass SceneViewer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { errorList: [] };\n    this.sceneName = props.sceneName.Value;\n    this.sceneMemory = Maybe.none();\n    this.objectTree = [];\n  }\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                   Getters & Setters                                  *\n   *                                                                                      */\n  //========================================================================================\n\n  getSceneMemory = () => this.sceneMemory;\n\n  getAssetsActionMap = () => AssetsManager.getInstance().getAssetsActionMap();\n\n  getRootNode = (tree = [...this.objectTree]) => {\n    return tree.filter(x => x.title === GlobalRef.NAME)[0];\n  };\n\n  getObjectTree = () => this.objectTree;\n\n  setSelectedAction = () => {\n    /* empty */\n  };\n\n  getGraph() {\n    return new TreeObject(this.objectTree).getNode(\n      x => GraphItem.TYPE === x.item.getType()\n    );\n  }\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                    Utils functions                                   *\n   *                                                                                      */\n  //========================================================================================\n\n  getNodeFromTree = (name, objectTree = [...this.objectTree]) => {\n    return TreeServerUtils.ofScene(this.sceneName).getNodeFromTree(\n      name,\n      objectTree\n    );\n  };\n\n  deleteNodeFromTreeUsingName = () => {\n    throw new Error(\"Delete Node in viewer Exception\");\n  };\n\n  updateNodeInServer = (name, oldName = null) => {\n    if (this.props.focusObject.Value === name) this.setCameraToTarget();\n    TreeServerUtils.ofScene(this.sceneName).updateNodeInServer(\n      name,\n      [...this.objectTree],\n      oldName\n    );\n  };\n\n  addNodeItem2Tree = (\n    nodeItem,\n    parentName = GlobalRef.NAME,\n    is2addInServer = true,\n    isVisible = true\n  ) => {\n    const newObjectTree = TreeServerUtils.ofScene(\n      this.sceneName\n    ).addNodeItem2Tree(\n      [...this.objectTree],\n      nodeItem,\n      parentName,\n      is2addInServer,\n      isVisible\n    );\n    this.objectTree = newObjectTree;\n  };\n\n  setCameraToTarget = () => {\n    this.sceneMemory.forEach(({ camera }) => {\n      const focusObject = this.props.focusObject.Value;\n      this.getNodeFromTree(focusObject).cata(\n        () => {\n          console.log(\n            \"Set Camera\",\n            this.getRootNode().item.mesh._absolutePosition\n          );\n          camera.setTarget(\n            this.getRootNode().item.mesh._absolutePosition.clone()\n          );\n        },\n        x => {\n          console.log(\"Set Camera, Found Object\", x.item.mesh);\n          camera.setTarget(x.item.mesh._absolutePosition.clone());\n        }\n      );\n    });\n  };\n\n  addCanvasEventListeners(canvas) {\n    const events = [\n      {\n        name: \"pointerdown\",\n        function: evt => this.onPointerDown(evt)\n      },\n      { name: \"pointerup\", function: evt => this.onPointerUp(evt) },\n      {\n        name: \"pointermove\",\n        function: evt => this.onPointerMove(evt)\n      }\n    ];\n    events.forEach(event =>\n      canvas.addEventListener(event.name, event.function, false)\n    );\n  }\n\n  onPointerDown = evt => {\n    DefaultMouseEvents.onPointerDown(this)(evt);\n  };\n\n  onPointerUp = evt => {\n    DefaultMouseEvents.onPointerUp(this)(evt);\n  };\n\n  onPointerMove = evt => {\n    DefaultMouseEvents.onPointerMove(this)(evt);\n  };\n\n  getMouseCoordinatesFromRoot() {\n    return this.sceneMemory.flatMap(({ scene, ground }) => {\n      const maybeCurrent = Util3d.getGroundPosition(scene, ground);\n      return maybeCurrent.flatMap(current =>\n        Maybe.fromNull(this.getRootNode()).map(rootNode =>\n          Util3d.computeLocalCoordinatesFromMesh(\n            rootNode.item.mesh,\n            Vec3.ofBabylon(current)\n          ).toBabylon()\n        )\n      );\n    });\n  }\n\n  onResize = (w, h) => {\n    if (w === 0 && h === 0) return;\n    this.getSceneMemory().forEach(({ mouseLocationText }) => {\n      mouseLocationText.left = -w / 2 + w / 17;\n      mouseLocationText.top = -h / 2 + h / 30;\n    });\n  };\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                    Scene functions                                   *\n   *                                                                                      */\n  //========================================================================================\n\n  retrieveSceneFromServer = (afterLoading = () => {}) => {\n    SceneServerUtils.retrieveScene(this.sceneName, data => {\n      const errorList = MainViewRetriever.importScene(this, data.result);\n      this.setState({ errorList });\n      afterLoading();\n    });\n  };\n\n  loadAssets = async () => {\n    await AssetsManager.getInstance().load();\n  };\n\n  loadScene = async () => {\n    await this.loadAssets();\n    this.retrieveSceneFromServer(this.renderScene);\n  };\n\n  renderScene = () => {\n    this.getSceneMemory().forEach(({ engine, scene }) =>\n      engine.runRenderLoop(() => scene.render())\n    );\n    this.setCameraToTarget();\n  };\n\n  onSceneReady = scene => {\n    const engine = scene.getEngine();\n    const canvas = engine.getRenderingCanvas();\n    this.addCanvasEventListeners(canvas);\n    const mouseLocationText = DefaultScene.createMouseLocationText(scene);\n    this.sceneMemory = Maybe.some({\n      engine: engine,\n      canvas: canvas,\n      scene: scene,\n      camera: DefaultScene.createCamera(scene, canvas),\n      light: DefaultScene.createLight(scene),\n      ground: DefaultScene.createMeshGround(scene),\n      gizmoManager: DefaultScene.createGizmo(scene),\n      highlightLayer: {\n        hl: new HighlightLayer(\"hl1\", scene),\n        lastHlMeshes: []\n      },\n      mouseLocationText: mouseLocationText\n    });\n    return scene;\n  };\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                   Render functions                                   *\n   *                                                                                      */\n  //========================================================================================\n\n  renderMenus = () => {\n    // to implement interface of MainView\n  };\n\n  componentDidUpdate = prevProps => {\n    const predicateAction = [\n      {\n        propVar: x => x.sceneName.Value,\n        action: () => (this.sceneName = this.props.sceneName.Value)\n      },\n      {\n        propVar: x => x.focusObject.Value,\n        action: this.setCameraToTarget\n      }\n    ];\n    predicateAction.forEach(({ propVar, action }) => {\n      if (propVar(this.props) !== propVar(prevProps)) {\n        action();\n      }\n    });\n  };\n\n  componentDidMount = () => {\n    console.log(\"SceneViewer Did Mount!! \");\n    this.loadScene();\n  };\n\n  render() {\n    const { errorList } = this.state;\n    const resetErrorList = () => this.setState({ errorList: [] });\n    return (\n      <div style={{ display: \"flex\", flexGrow: 1 }}>\n        <BaseViewer\n          onSceneReady={this.onSceneReady}\n          is2render={false}\n          sceneFactory={DefaultScene.createScene}\n        />\n        <ConfirmAlertModal\n          onSubmit={resetErrorList}\n          onCancel={resetErrorList}\n          open={errorList?.length > 0}\n          title={\"Scene Viewer\"}\n          message={\"An error occurred while loading the scene\"}\n          submitText={\"OK\"}\n          submitColor={\"primary\"}\n          cancelText={\"Cancel\"}\n          cancelColor={\"secondary\"}\n        >\n          {getErrorSolutionList(errorList)}\n        </ConfirmAlertModal>\n        <ReactResizeDetector\n          handleWidth\n          handleHeight\n          onResize={this.onResize}\n        />\n      </div>\n    );\n  }\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                   Static functions                                   *\n   *                                                                                      */\n  //========================================================================================\n\n  static getComponentFactory(sceneName) {\n    return masterProps => {\n      const augmentProps = {\n        sceneName,\n        ...masterProps\n      };\n      return <SceneViewer {...augmentProps} />;\n    };\n  }\n\n  static EXTENSION = \".3d\";\n}\n\nSceneViewer.propTypes = {\n  sceneName: PropTypes.shape({ Value: PropTypes.string }),\n  focusObject: PropTypes.shape({ Value: PropTypes.string })\n};\n\nSceneViewer.defaultProps = {\n  sceneName: { Value: \"Pedro\" },\n  focusObject: { Value: \"\" }\n};\n\nfunction getErrorSolutionList(errorList) {\n  return !errorList ? (\n    []\n  ) : (\n    <ul>\n      {errorList.map(({ cause, solution }, i) => {\n        return <li key={\"error\" + i}>{`${cause}, ${solution}`}</li>;\n      })}\n    </ul>\n  );\n}\n\nexport default SceneViewer;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport MaterialSelect from \"@material-ui/core/Select\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  }\n}));\n\nconst Select = props => {\n  const classes = useStyles();\n\n  let noneOption = <div></div>;\n  if (props.noneOption) {\n    noneOption = (\n      <MenuItem value=\"\">\n        <em>None</em>\n      </MenuItem>\n    );\n  }\n\n  return (\n    <FormControl\n      variant={props.variant}\n      className={classes.formControl}\n      style={props.style}\n      hiddenLabel={props.label === undefined ? true : false}\n    >\n      <InputLabel id=\"movai-react-select\">{props.label}</InputLabel>\n      <MaterialSelect\n        labelId=\"movai-react-select\"\n        id={props.id}\n        value={props.value}\n        onChange={props.onChange}\n        inputProps={props.inputProps}\n      >\n        {noneOption}\n        {props.options.map((element, index) => {\n          return (\n            <MenuItem key={index} value={element}>\n              {element}\n            </MenuItem>\n          );\n        })}\n      </MaterialSelect>\n    </FormControl>\n  );\n};\n\nSelect.propTypes = {\n  value: PropTypes.string,\n  options: PropTypes.array,\n  noneOption: PropTypes.bool,\n  label: PropTypes.string,\n  variant: PropTypes.string,\n  style: PropTypes.object,\n  onChange: PropTypes.func,\n  id: PropTypes.string,\n  inputProps: PropTypes.object\n};\nSelect.defaultProps = {\n  value: \"option2\",\n  options: [\"option1\", \"option2\", \"option3\"],\n  variant: \"filled\",\n  noneOption: true,\n  onChange: evt => console.log(evt.target.value),\n  id: \"movai-react-select\"\n};\n\nexport default Select;\n","// import * as React from \"react\";\n// import SvgIcon from \"@material-ui/core/SvgIcon\";\n\n// export default function createSvgIcon({\n//   path = \"\",\n//   style = {},\n//   fill = \"#fff\",\n//   width = \"100%\",\n//   className = \"\",\n//   height = \"100%\",\n//   viewBox = \"0 0 32 32\"\n// }) {\n//   return (\n//     <svg\n//       width={width}\n//       style={style}\n//       height={height}\n//       viewBox={viewBox}\n//       className={className}\n//       xmlns=\"http://www.w3.org/2000/svg\"\n//       xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n//     >\n//       <path d={path} fill={fill} />\n//     </svg>\n//   );\n// }\n\n// export default function createSvgIcon(path, displayName) {\n//   const Component = React.memo(\n//     React.forwardRef((props, ref) => (\n//       <SvgIcon data-mui-test={`${displayName}Icon`} ref={ref} {...props}>\n//         {path}\n//       </SvgIcon>\n//       <SvgIcon>\n//         {path}\n//       </SvgIcon>\n//     ))\n//   );\n\n//   if (process.env.NODE_ENV !== \"production\") {\n//     Component.displayName = `${displayName}Icon`;\n//   }\n\n//   Component.muiName = SvgIcon.muiName;\n\n//   return Component;\n// }\n\nimport React from \"react\";\n\nconst CreateSVGIcon = ({\n  path = \"\",\n  style = {},\n  fill = \"#fff\",\n  width = \"100%\",\n  height = \"100%\",\n  className = \"\",\n  viewBox = \"0 0 24 24\"\n}) => (\n  <svg\n    width={width}\n    style={style}\n    height={height}\n    viewBox={viewBox}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className={`svg-icon ${className || \"\"}`}\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n  >\n    <path fill={fill} d={path} />\n  </svg>\n);\n\nexport default CreateSVGIcon;\n","import React from \"react\";\nimport CreateSVGIcon from \"./CreateSVGIcon\";\n\nexport const svgIcons = {\n  Close: (\n    <CreateSVGIcon\n      width={24}\n      path=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n    />\n  ),\n  ErrorOutline: (\n    <CreateSVGIcon\n      width={24}\n      path=\"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n    ></CreateSVGIcon>\n  ),\n  InfoOutlined: (\n    <CreateSVGIcon\n      width={24}\n      path=\"M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z\"\n    ></CreateSVGIcon>\n  ),\n  ReportProblemOutlined: (\n    <CreateSVGIcon\n      width={24}\n      path=\"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z\"\n    ></CreateSVGIcon>\n  ),\n  SuccessOutlined: (\n    <CreateSVGIcon\n      width={24}\n      path=\"M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z\"\n    ></CreateSVGIcon>\n  )\n};\n","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { capitalize } from \"@material-ui/core/utils\";\nimport { svgIcons } from \"./svg-icons/svgIcons\";\n\nexport const styles = () => {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      // borderRadius: theme.shape.borderRadius,\n      backgroundColor: \"transparent\",\n      display: \"flex\",\n      padding: \"6px 16px\"\n    },\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"success\"`. */\n    filledSuccess: {\n      color: \"#fff\",\n      // fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: \"#4caf50\"\n    },\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"info\"`. */\n    filledInfo: {\n      color: \"#fff\",\n      // fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: \"#2196f3\"\n    },\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"warning\"`. */\n    filledWarning: {\n      color: \"#fff\",\n      // fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: \"#ff9800\"\n    },\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"error\"`. */\n    filledError: {\n      color: \"#fff\",\n      // fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: \"#f44336\"\n    },\n    /* Styles applied to the icon wrapper element. */\n    icon: {\n      marginRight: 12,\n      padding: \"7px 0\",\n      display: \"flex\",\n      fontSize: 22,\n      opacity: 0.9\n    },\n    /* Styles applied to the message wrapper element. */\n    message: {\n      padding: \"8px 0\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\"\n    },\n    /* Styles applied to the action wrapper element if `action` is provided. */\n    action: {\n      display: \"flex\",\n      alignItems: \"center\",\n      marginLeft: \"auto\",\n      paddingLeft: 16,\n      marginRight: -8\n    }\n  };\n};\n\nconst defaultIconMapping = {\n  success: svgIcons.SuccessOutlined,\n  warning: svgIcons.ReportProblemOutlined,\n  error: svgIcons.ErrorOutline,\n  info: svgIcons.InfoOutlined\n};\n\nconst Alert = props => {\n  const {\n    action,\n    children,\n    classes,\n    className,\n    closeText = \"Close\",\n    color,\n    icon,\n    iconMapping = defaultIconMapping,\n    onClose,\n    role = \"alert\",\n    severity = \"success\",\n    variant = \"standard\",\n    theme,\n    ...other\n  } = props;\n\n  console.log(\"action\", action);\n\n  return (\n    <div\n      className={clsx(\n        classes.root,\n        classes[`${variant}${capitalize(color || severity)}`],\n        className\n      )}\n      {...other}\n    >\n      {icon !== false ? (\n        <div className={classes.icon}>\n          {icon || iconMapping[severity] || defaultIconMapping[severity]}\n        </div>\n      ) : null}\n      <div className={classes.message}>{children}</div>\n      {action != null ? <div className={classes.action}>{action}</div> : null}\n      {action == null && onClose ? (\n        <div className={classes.action}>\n          <IconButton\n            size=\"small\"\n            aria-label={closeText}\n            title={closeText}\n            color=\"inherit\"\n            onClick={onClose}\n          >\n            {svgIcons.Close}\n          </IconButton>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nAlert.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The action to display. It renders after the message, at the end of the alert.\n   */\n  action: PropTypes.node,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Override the default label for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  closeText: PropTypes.string,\n  /**\n   * The main color for the alert. Unless provided, the value is taken from the `severity` prop.\n   */\n  color: PropTypes.oneOf([\"error\", \"info\", \"success\", \"warning\"]),\n  /**\n   * Override the icon displayed before the children.\n   * Unless provided, the icon is mapped to the value of the `severity` prop.\n   */\n  icon: PropTypes.node,\n  /**\n   * The component maps the `severity` prop to a range of different icons,\n   * for instance success to `<SuccessOutlined>`.\n   * If you wish to change this mapping, you can provide your own.\n   * Alternatively, you can use the `icon` prop to override the icon displayed.\n   */\n  iconMapping: PropTypes.shape({\n    error: PropTypes.node,\n    info: PropTypes.node,\n    success: PropTypes.node,\n    warning: PropTypes.node\n  }),\n  /**\n   * Callback fired when the component requests to be closed.\n   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n  /**\n   * The ARIA role attribute of the element.\n   */\n  role: PropTypes.string,\n  /**\n   * The severity of the alert. This defines the color and icon used.\n   */\n  severity: PropTypes.oneOf([\"error\", \"info\", \"success\", \"warning\"]),\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf([\"filled\", \"outlined\", \"standard\"])\n};\n\nexport default withStyles(styles, { name: \"MuiAlert\" })(Alert);\n","// Inspired from https://github.com/GA-MO/react-confirm-alert\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { render, unmountComponentAtNode } from \"react-dom\";\n// import { Alert } from \"@material-ui/lab\";\nimport Alert from \"./Alert/Alert\";\n\nimport \"./Snackbar.css\";\n\nimport { svgIcons } from \"./Alert/svg-icons/svgIcons\";\n\nclass ReactConfirmAlert extends Component {\n  static propTypes = {\n    message: PropTypes.string,\n    customUI: PropTypes.func,\n    closeOnClickOutside: PropTypes.bool,\n    closeOnEscape: PropTypes.bool,\n    willUnmount: PropTypes.func,\n    onClickOutside: PropTypes.func,\n    onKeypressEscape: PropTypes.func,\n    // new props\n    severity: PropTypes.string,\n    closeText: PropTypes.string,\n    autoHideDuration: PropTypes.number,\n    closable: PropTypes.bool\n  };\n\n  autoClose = null;\n\n  static defaultProps = {\n    closeOnClickOutside: true,\n    closeOnEscape: true,\n    willUnmount: () => null,\n    onClickOutside: () => null,\n    onKeypressEscape: () => null,\n    // new props\n    severity: \"info\", // error, warning, info or success\n    closeText: \"Close\",\n    autoHideDuration: 6000,\n    closable: true\n  };\n\n  handleClickButton = button => {\n    if (button.onClick) button.onClick();\n    this.close();\n  };\n\n  handleClickOverlay = e => {\n    const { closeOnClickOutside, onClickOutside } = this.props;\n    const isClickOutside = e.target === this.overlay;\n\n    if (closeOnClickOutside && isClickOutside) {\n      onClickOutside();\n      this.close();\n    }\n  };\n\n  close = () => {\n    removeBodyClass();\n    removeElementReconfirm();\n  };\n\n  keyboardClose = event => {\n    const { closeOnEscape, onKeypressEscape } = this.props;\n    const isKeyCodeEscape = event.keyCode === 27;\n\n    if (closeOnEscape && isKeyCodeEscape) {\n      onKeypressEscape(event);\n      this.close();\n    }\n  };\n\n  componentDidMount = () => {\n    document.addEventListener(\"keydown\", this.keyboardClose, false);\n    this.autoClose = setTimeout(() => {\n      if (\n        document.getElementById(\"react-confirm-alert\") ||\n        document.getElementById(\"react-confirm-alert-body-element\")\n      ) {\n        this.close();\n      }\n    }, this.props.autoHideDuration);\n  };\n\n  componentWillUnmount = () => {\n    document.removeEventListener(\"keydown\", this.keyboardClose, false);\n    clearTimeout(this.autoClose);\n    this.props.willUnmount();\n  };\n\n  renderCustomUI = () => {\n    const { title, message, customUI } = this.props;\n    const dataCustomUI = {\n      title,\n      message,\n      onClose: this.close\n    };\n\n    return customUI(dataCustomUI);\n  };\n\n  render() {\n    const {\n      message,\n      customUI,\n      severity,\n      closeText,\n      closable,\n      theme\n    } = this.props;\n\n    return (\n      <div\n        className=\"react-confirm-alert-overlay\"\n        ref={dom => (this.overlay = dom)}\n        onClick={this.handleClickOverlay}\n      >\n        <div className=\"react-confirm-alert\">\n          {customUI ? (\n            this.renderCustomUI()\n          ) : (\n            <div className=\"react-confirm-alert-body\">\n              <Alert\n                theme={theme}\n                elevation={6}\n                variant=\"filled\"\n                severity={severity}\n                closeText={closeText}\n                action={\n                  closable ? (\n                    <div\n                      className=\"icon-container\"\n                      onClick={() => this.close()}\n                    >\n                      {svgIcons.Close}\n                    </div>\n                  ) : (\n                    undefined\n                  )\n                }\n              >\n                {message}\n              </Alert>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction createElementReconfirm(properties, theme) {\n  let divTarget = document.getElementById(\"react-confirm-alert\");\n  if (divTarget) {\n    // Rerender - the mounted ReactConfirmAlert\n    render(<ReactConfirmAlert {...properties} theme={theme} />, divTarget);\n  } else {\n    // Mount the ReactConfirmAlert component\n    document.body.children[0].classList.add(\"react-confirm-alert-blur\");\n    divTarget = document.createElement(\"div\");\n    divTarget.id = \"react-confirm-alert\";\n    document.body.appendChild(divTarget);\n    render(<ReactConfirmAlert {...properties} theme={theme} />, divTarget);\n  }\n}\n\nfunction removeElementReconfirm() {\n  const target = document.getElementById(\"react-confirm-alert\");\n  unmountComponentAtNode(target);\n  target.parentNode.removeChild(target);\n}\n\nfunction addBodyClass() {\n  document.body.classList.add(\"react-confirm-alert-body-element\");\n}\n\nfunction removeBodyClass() {\n  document.body.classList.remove(\"react-confirm-alert-body-element\");\n}\n\nexport function snackbar(properties, theme) {\n  addBodyClass();\n  createElementReconfirm(properties, theme);\n}\n\nexport default ReactConfirmAlert;\n","import { createMuiTheme } from \"@material-ui/core/styles\";\n\nconst themeFactory = particular => ({\n  ...particular,\n  typography: {\n    fontFamily: \"Roboto\",\n    h1: {\n      fontFamily: \"Avenir\"\n    },\n    h2: {\n      fontFamily: \"Avenir\"\n    },\n    h3: {\n      fontFamily: \"Avenir\"\n    },\n    h4: {\n      fontFamily: \"Avenir\"\n    },\n    h5: {\n      fontFamily: \"Avenir\"\n    },\n    h6: {\n      fontFamily: \"Avenir\"\n    },\n    body1: {\n      fontFamily: \"Roboto\"\n    }\n  }\n});\n\nconst Themes = {\n  dark: createMuiTheme(\n    themeFactory({\n      label: \"dark\",\n      backgroundColor:\n        \"linear-gradient(114.01deg, #212121 0%, #050505 100.43%)\",\n      bottomNavigation: { background: \"#212121\" },\n      globalStats: {\n        borderColor: \"#474747\",\n        subTextColor: \"#CDCDCD\",\n        upperTextColor: \"#E6E6E6\"\n      },\n      palette: {\n        type: \"dark\", // Switching the dark mode on, is a single property value change.\n        primary: {\n          main: \"#36b5e6\"\n        },\n        secondary: {\n          main: \"#CF6679\"\n        },\n        green: {\n          main: \"#03DAC5\"\n        }\n      },\n      overrides: {\n        MuiButton: {\n          outlined: {\n            margin: \"8px\"\n          },\n          text: {\n            margin: \"8px\"\n          },\n          contained: {\n            margin: \"8px\"\n          },\n          containedPrimary: {\n            color: \"inherit\",\n            margin: \"8px\"\n          },\n          containedSecondary: {\n            color: \"inherit\",\n            margin: \"8px\"\n          }\n        },\n        MuiButtonGroup: {\n          root: {\n            margin: \"0\"\n          },\n          groupedContainedPrimary: {\n            margin: \"0\"\n          },\n          groupedOutlined: {\n            margin: \"0\"\n          },\n          groupedText: {\n            margin: \"0\"\n          }\n        },\n        MuiIconButton: {\n          root: {\n            color: \"#36b5e6\"\n          }\n        },\n        MuiListItem: {\n          button: {\n            \"&:hover\": {\n              backgroundColor: \"rgba(54,181,230, 0.15)\"\n            }\n          }\n        },\n        MuiFormControlLabel: {\n          label: {\n            color: \"rgba(255,255,255,0.8)\"\n          }\n        },\n        MuiInputBase: {\n          input: {\n            font: \"Roboto\"\n          }\n        },\n        MuiFilledInput: {\n          root: {\n            border: \"4px\"\n          },\n          underline: {\n            \"&::before\": {\n              borderRadius: \"4px\"\n            }\n          }\n        }\n      }\n    })\n  ),\n  light: createMuiTheme(\n    themeFactory({\n      label: \"light\",\n      backgroundColor:\n        \"linear-gradient(122.19deg, #FFFFFF 2.58%, #FFFFFF 76.23%)\", // it was white before\n      bottomNavigation: { background: \"#c3c3c3\" },\n      globalStats: {\n        borderColor: \"#E6E6E6\",\n        subTextColor: \"#717171\",\n        upperTextColor: \"#474747\"\n      },\n      palette: {\n        primary: {\n          main: \"#007197\"\n        },\n        secondary: {\n          main: \"#BE2424\"\n        },\n        green: {\n          main: \"#03DAC5\"\n        }\n      },\n      overrides: {\n        MuiButton: {\n          outlined: {\n            margin: \"8px\"\n          },\n          text: {\n            margin: \"8px\"\n          },\n          contained: {\n            margin: \"8px\"\n          },\n          containedPrimary: {\n            color: \"white\",\n            margin: \"8px\"\n          },\n          containedSecondary: {\n            color: \"white\",\n            margin: \"8px\"\n          }\n        },\n        MuiButtonGroup: {\n          root: {\n            margin: \"0\"\n          },\n          groupedContainedPrimary: {\n            margin: \"0\"\n          },\n          groupedOutlined: {\n            margin: \"0\"\n          },\n          groupedText: {\n            margin: \"0\"\n          }\n        },\n        MuiIconButton: {\n          root: {\n            color: \"#007197\"\n          }\n        },\n        MuiListItem: {\n          button: {\n            \"&:hover\": {\n              backgroundColor: \"rgba(0,113,151, 0.15)\"\n            }\n          }\n        },\n        MuiFormControlLabel: {\n          label: {\n            color: \"rgba(0,0,0,0.8)\"\n          }\n        },\n        MuiInputBase: {\n          input: {\n            font: \"Roboto\"\n          }\n        },\n        MuiFilledInput: {\n          root: {\n            border: \"4px\"\n          },\n          underline: {\n            \"&::before\": {\n              borderRadius: \"4px\"\n            }\n          }\n        }\n      }\n    })\n  )\n};\n\nThemes.getTheme = () => {\n  const theme = window.localStorage.getItem(\"movai.theme\"); // dark or light\n  return theme ? theme : \"dark\";\n};\n\nThemes.setTheme = value => {\n  window.localStorage.setItem(\"movai.theme\", value);\n};\n\nexport default Themes;\n","import { createGlobalStyle } from \"styled-components\";\nimport { Style as S } from \"mov-fe-lib-core\";\n\nconst Style = createGlobalStyle`${S}`;\nexport default Style;\n"],"sourceRoot":""}