{"version":3,"sources":["webpack://MovaiReact/webpack/universalModuleDefinition","webpack://MovaiReact/webpack/bootstrap","webpack://MovaiReact/external \"react\"","webpack://MovaiReact/external \"@babel/runtime/helpers/esm/defineProperty\"","webpack://MovaiReact/external \"@babylonjs/core\"","webpack://MovaiReact/external \"@babel/runtime/helpers/esm/assertThisInitialized\"","webpack://MovaiReact/external \"prop-types\"","webpack://MovaiReact/external \"@babel/runtime/helpers/esm/getPrototypeOf\"","webpack://MovaiReact/external \"@babel/runtime/helpers/esm/classCallCheck\"","webpack://MovaiReact/external \"@babel/runtime/helpers/esm/createClass\"","webpack://MovaiReact/external \"monet\"","webpack://MovaiReact/external \"@material-ui/core\"","webpack://MovaiReact/external \"@babel/runtime/helpers/esm/possibleConstructorReturn\"","webpack://MovaiReact/external \"mov-fe-lib-core\"","webpack://MovaiReact/external \"@babel/runtime/helpers/esm/extends\"","webpack://MovaiReact/external \"@babel/runtime/helpers/esm/inherits\"","webpack://MovaiReact/external \"@babel/runtime/helpers/esm/get\"","webpack://MovaiReact/external \"@babel/runtime/helpers/esm/toConsumableArray\"","webpack://MovaiReact/external \"@babel/runtime/helpers/esm/slicedToArray\"","webpack://MovaiReact/external \"@material-ui/core/styles\"","webpack://MovaiReact/external \"@babel/runtime/helpers/esm/classPrivateFieldGet\"","webpack://MovaiReact/external \"@babel/runtime/regenerator\"","webpack://MovaiReact/external \"@babel/runtime/helpers/esm/asyncToGenerator\"","webpack://MovaiReact/external \"lodash/get\"","webpack://MovaiReact/external \"@material-ui/core/MenuItem\"","webpack://MovaiReact/external \"@babel/runtime/helpers/esm/objectWithoutProperties\"","webpack://MovaiReact/external \"@material-ui/core/Typography\"","webpack://MovaiReact/external \"@material-ui/core/IconButton\"","webpack://MovaiReact/external \"@material-ui/core/FormControl\"","webpack://MovaiReact/external \"@material-ui/core/Divider\"","webpack://MovaiReact/external \"@material-ui/icons/Search\"","webpack://MovaiReact/external \"@material-ui/core/Grid\"","webpack://MovaiReact/external \"@material-ui/icons/ChevronRight\"","webpack://MovaiReact/external \"react-dom\"","webpack://MovaiReact/external \"@material-ui/core/Input\"","webpack://MovaiReact/external \"@material-ui/core/Menu\"","webpack://MovaiReact/external \"@babylonjs/gui/2D\"","webpack://MovaiReact/external \"@material-ui/core/Select\"","webpack://MovaiReact/external \"clsx\"","webpack://MovaiReact/external \"@material-ui/core/Avatar\"","webpack://MovaiReact/external \"@material-ui/icons/Clear\"","webpack://MovaiReact/external \"@material-ui/core/InputLabel\"","webpack://MovaiReact/external \"@material-ui/core/Button\"","webpack://MovaiReact/external \"@material-ui/icons/Close\"","webpack://MovaiReact/external \"@material-ui/icons/ExpandMore\"","webpack://MovaiReact/external \"react-resize-detector\"","webpack://MovaiReact/external \"@material-ui/icons/Settings\"","webpack://MovaiReact/external \"lodash/isEqual\"","webpack://MovaiReact/external \"@material-ui/core/CircularProgress\"","webpack://MovaiReact/external \"@material-ui/core/colors\"","webpack://MovaiReact/external \"@material-ui/core/InputAdornment\"","webpack://MovaiReact/external \"@material-ui/core/ListItemText\"","webpack://MovaiReact/external \"@material-ui/core/Checkbox\"","webpack://MovaiReact/external \"@material-ui/pickers\"","webpack://MovaiReact/external \"react-virtualized\"","webpack://MovaiReact/external \"lodash/set\"","webpack://MovaiReact/external \"@material-ui/core/List\"","webpack://MovaiReact/external \"lodash/capitalize\"","webpack://MovaiReact/external \"@material-ui/core/TableCell\"","webpack://MovaiReact/external \"@material-ui/core/FormHelperText\"","webpack://MovaiReact/external \"lodash/cloneDeep\"","webpack://MovaiReact/external \"@material-ui/lab/Alert\"","webpack://MovaiReact/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://MovaiReact/./node_modules/css-loader/dist/runtime/api.js","webpack://MovaiReact/external \"@material-ui/icons/Schedule\"","webpack://MovaiReact/external \"@material-ui/icons/Warning\"","webpack://MovaiReact/external \"@material-ui/icons/ViewModule\"","webpack://MovaiReact/external \"@material-ui/icons/Chat\"","webpack://MovaiReact/external \"@material-ui/core/Drawer\"","webpack://MovaiReact/external \"@material-ui/core/Collapse\"","webpack://MovaiReact/external \"material-table\"","webpack://MovaiReact/external \"@material-ui/icons/AddBox\"","webpack://MovaiReact/external \"@material-ui/icons/ArrowDownward\"","webpack://MovaiReact/external \"@material-ui/icons/Check\"","webpack://MovaiReact/external \"@material-ui/icons/ChevronLeft\"","webpack://MovaiReact/external \"@material-ui/icons/DeleteOutline\"","webpack://MovaiReact/external \"@material-ui/icons/Edit\"","webpack://MovaiReact/external \"@material-ui/icons/FilterList\"","webpack://MovaiReact/external \"@material-ui/icons/FirstPage\"","webpack://MovaiReact/external \"@material-ui/icons/LastPage\"","webpack://MovaiReact/external \"@material-ui/icons/Remove\"","webpack://MovaiReact/external \"@material-ui/icons/SaveAlt\"","webpack://MovaiReact/external \"@material-ui/icons/ViewColumn\"","webpack://MovaiReact/external \"@material-ui/core/Tabs\"","webpack://MovaiReact/external \"@material-ui/core/Tab\"","webpack://MovaiReact/external \"@material-ui/core/TextField\"","webpack://MovaiReact/external \"@material-ui/core/FormControlLabel\"","webpack://MovaiReact/external \"@material-ui/core/Switch\"","webpack://MovaiReact/external \"@material-ui/core/InputBase\"","webpack://MovaiReact/external \"@material-ui/core/Breadcrumbs\"","webpack://MovaiReact/external \"@material-ui/icons/NavigateNext\"","webpack://MovaiReact/external \"earcut\"","webpack://MovaiReact/external \"lodash/uniqBy\"","webpack://MovaiReact/external \"@babylonjs/core/Maths/math\"","webpack://MovaiReact/external \"lodash.isequal\"","webpack://MovaiReact/external \"@material-ui/core/utils\"","webpack://MovaiReact/external \"@babel/runtime/helpers/esm/taggedTemplateLiteral\"","webpack://MovaiReact/external \"styled-components\"","webpack://MovaiReact/external \"@material-ui/core/styles/colorManipulator\"","webpack://MovaiReact/external \"@material-ui/icons/Label\"","webpack://MovaiReact/external \"@material-ui/core/Chip\"","webpack://MovaiReact/external \"@material-ui/icons/Add\"","webpack://MovaiReact/external \"@material-ui/icons/Today\"","webpack://MovaiReact/external \"@date-io/date-fns\"","webpack://MovaiReact/external \"@babel/runtime/helpers/esm/typeof\"","webpack://MovaiReact/external \"lodash/isEmpty\"","webpack://MovaiReact/./src/Components/LoginForm/movai_red.svg","webpack://MovaiReact/external \"@material-ui/core/Paper\"","webpack://MovaiReact/external \"react-virtualized-tree\"","webpack://MovaiReact/external \"@material-ui/core/Box\"","webpack://MovaiReact/external \"@material-ui/core/Backdrop\"","webpack://MovaiReact/external \"@material-ui/styles\"","webpack://MovaiReact/external \"jwt-decode\"","webpack://MovaiReact/external \"@babylonjs/core/Debug/debugLayer\"","webpack://MovaiReact/external \"@babylonjs/inspector\"","webpack://MovaiReact/external \"@babylonjs/loaders\"","webpack://MovaiReact/./src/Components/Snackbar/Snackbar.css?c276","webpack://MovaiReact/./src/Components/Snackbar/Snackbar.css","webpack://MovaiReact/external \"fontsource-roboto\"","webpack://MovaiReact/external \"fontsource-open-sans\"","webpack://MovaiReact/./src/Components/Logs/Logs.css?4c9f","webpack://MovaiReact/./src/Components/Logs/Logs.css","webpack://MovaiReact/external \"material-icons/css/material-icons.css\"","webpack://MovaiReact/external \"react-virtualized/styles.css\"","webpack://MovaiReact/external \"react-virtualized-tree/lib/main.css\"","webpack://MovaiReact/./src/Components/Button.js","webpack://MovaiReact/./src/Components/Modal/AbstractModal.js","webpack://MovaiReact/./src/Components/Modal/ConfirmAlertModal.js","webpack://MovaiReact/./src/Components/Modal/RobotLogModal.js","webpack://MovaiReact/./src/Components/Drawer.js","webpack://MovaiReact/./src/Components/Collapse.js","webpack://MovaiReact/./src/Components/VerticalBar.js","webpack://MovaiReact/./src/Components/ContextMenu.js","webpack://MovaiReact/./src/Components/Table.js","webpack://MovaiReact/./src/Components/Tabs.js","webpack://MovaiReact/./src/Components/Text.js","webpack://MovaiReact/./src/Components/Toggle.js","webpack://MovaiReact/./src/Components/SearchInput.js","webpack://MovaiReact/./src/Components/Breadcrumb.js","webpack://MovaiReact/./src/Components/Viewer/BaseViewer/BaseViewer.js","webpack://MovaiReact/./src/Components/Viewer/Utils/Clipboard.js","webpack://MovaiReact/./src/Components/Viewer/Math/Vec2.js","webpack://MovaiReact/./src/Components/Viewer/Math/Vec3.js","webpack://MovaiReact/./src/Components/Viewer/Utils/AnnotationManager.js","webpack://MovaiReact/./src/Components/Viewer/NodeItem/NodeItem.js","webpack://MovaiReact/./src/Components/Viewer/Math/Mat3.js","webpack://MovaiReact/./src/Components/Viewer/Util3d/GizmoManagerBuilder.js","webpack://MovaiReact/./src/Components/Viewer/Util3d/CameraBuilder.js","webpack://MovaiReact/./src/Components/Viewer/Util3d/PositionalLightBuilder.js","webpack://MovaiReact/./src/Components/Viewer/Util3d/ReferentialBuilder.js","webpack://MovaiReact/./src/Components/Viewer/Util3d/GroundBuilder.js","webpack://MovaiReact/./src/Components/Viewer/Util3d/DirectionalLightBuilder.js","webpack://MovaiReact/./src/Components/Viewer/NodeItem/Box.js","webpack://MovaiReact/./src/Components/Viewer/Util3d/Util3d.js","webpack://MovaiReact/./src/Components/Viewer/NodeItem/GlobalRef.js","webpack://MovaiReact/./src/Components/Viewer/Actions/Action.js","webpack://MovaiReact/./src/Components/Viewer/NodeItem/AssetNodeItem.js","webpack://MovaiReact/./src/Components/Viewer/NodeItem/Map.js","webpack://MovaiReact/./src/Components/Viewer/Utils/DefaultScene.js","webpack://MovaiReact/./src/Components/Viewer/Actions/MouseKeysAction.js","webpack://MovaiReact/./src/Components/Viewer/Utils/Utils.js","webpack://MovaiReact/./src/Components/Viewer/NodeItem/KeyPoint.js","webpack://MovaiReact/./src/Components/Viewer/MainView/MeshSelector.js","webpack://MovaiReact/./src/Components/Viewer/Util3d/SelectionPlaceHolder.js","webpack://MovaiReact/./src/Components/Viewer/TreeObject/TreeObject.js","webpack://MovaiReact/./src/Components/Viewer/Utils/Constants.js","webpack://MovaiReact/./src/Components/Viewer/Graph/Graph.js","webpack://MovaiReact/./src/Components/Viewer/NodeItem/Path.js","webpack://MovaiReact/./src/Components/Viewer/NodeItem/GraphItem.js","webpack://MovaiReact/./src/Components/Viewer/Actions/DragObjectsAction.js","webpack://MovaiReact/./src/Components/Viewer/Actions/AddKeyPointAction.js","webpack://MovaiReact/./src/Components/Viewer/NodeItem/BoxRegion.js","webpack://MovaiReact/./src/Components/Viewer/Actions/BoxRegionAction.js","webpack://MovaiReact/./src/Components/Viewer/Actions/DrawPathAction.js","webpack://MovaiReact/./src/Components/Viewer/NodeItem/PolygonRegion.js","webpack://MovaiReact/./src/Components/Viewer/Actions/PolygonRegionAction.js","webpack://MovaiReact/./src/Components/Viewer/Actions/OrbitAction.js","webpack://MovaiReact/./src/Components/Viewer/Actions/DrawGraphAction.js","webpack://MovaiReact/./src/Components/Viewer/Actions/MeasureAction.js","webpack://MovaiReact/./src/Components/Viewer/MainView/MainViewActions.js","webpack://MovaiReact/./src/Components/Viewer/AssetsManager/MapLoader.js","webpack://MovaiReact/./src/Components/Viewer/AssetsManager/AssetsManager.js","webpack://MovaiReact/./src/Components/Viewer/Actions/AddMapAction.js","webpack://MovaiReact/./src/Components/Viewer/NodeItem/Robot.js","webpack://MovaiReact/./src/Components/Viewer/NodeItem/PointCloud.js","webpack://MovaiReact/./src/Components/Viewer/Utils/MeshCache.js","webpack://MovaiReact/./src/Components/Viewer/Utils/MeshLoader.js","webpack://MovaiReact/./src/Components/Viewer/Actions/RobotAction.js","webpack://MovaiReact/./src/Components/Viewer/NodeItem/Mesh.js","webpack://MovaiReact/./src/Components/Viewer/Actions/AddMeshAction.js","webpack://MovaiReact/./src/Components/Viewer/Utils/AssetsTypesFactory.js","webpack://MovaiReact/./src/Components/Viewer/NodeItem/Wall.js","webpack://MovaiReact/./src/Components/Viewer/MainView/NodeItemFactoryMap.js","webpack://MovaiReact/./src/Components/Viewer/MainView/MainViewRetriever.js","webpack://MovaiReact/./src/Components/Viewer/Utils/SceneServerUtils.js","webpack://MovaiReact/./src/Components/Viewer/TreeObject/TreeNode.js","webpack://MovaiReact/./src/Components/Viewer/Utils/TreeServerUtils.js","webpack://MovaiReact/./src/Components/Viewer/Utils/Animator.js","webpack://MovaiReact/./src/Components/Viewer/Utils/DefaultMouseEvents.js","webpack://MovaiReact/./src/Components/Viewer/SceneViewer.js","webpack://MovaiReact/./src/Components/Select.js","webpack://MovaiReact/./src/Components/Snackbar/Alert/svg-icons/CreateSVGIcon.js","webpack://MovaiReact/./src/Components/Snackbar/Alert/svg-icons/svgIcons.js","webpack://MovaiReact/./src/Components/Snackbar/Alert/Alert.js","webpack://MovaiReact/./src/Components/Snackbar/Snackbar.js","webpack://MovaiReact/./src/styles/Themes.js","webpack://MovaiReact/./src/styles/Style.js","webpack://MovaiReact/./src/Components/Logs/LogsFilterBar/FiltersIcon/FiltersIcon.js","webpack://MovaiReact/./src/Components/Logs/LogsFilterBar/LogsFilterBar.js","webpack://MovaiReact/./src/Components/Logs/utils/Utils.js","webpack://MovaiReact/./src/Components/Logs/LogsTable/LogsTable.js","webpack://MovaiReact/./src/Components/Logs/Logs.js","webpack://MovaiReact/./src/Components/LoginForm/LoginForm.js","webpack://MovaiReact/./src/Components/ProfileMenu.js","webpack://MovaiReact/./src/Components/Tree/TreeSearch.js","webpack://MovaiReact/./src/Components/Tree/BasicVirtualizedTree.js","webpack://MovaiReact/./src/Components/Modal/SelectScopeModal.js","webpack://MovaiReact/./src/Components/HOCs/withOfflineValidation.js","webpack://MovaiReact/./src/Components/HOCs/withAuthentication.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","memo","isOldIE","Boolean","document","all","atob","getTarget","target","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","e","stylesInDom","getIndexByIdentifier","identifier","result","length","modulesToDom","list","options","idCountMap","identifiers","item","id","base","count","concat","index","obj","css","media","sourceMap","references","updater","push","addStyle","insertStyleElement","style","createElement","attributes","nonce","keys","forEach","setAttribute","insert","Error","appendChild","textStore","replaceText","replacement","filter","join","applyToSingletonTag","remove","styleSheet","cssText","cssNode","createTextNode","childNodes","removeChild","insertBefore","applyToTag","removeAttribute","btoa","unescape","encodeURIComponent","JSON","stringify","firstChild","singleton","singletonCounter","update","styleIndex","parentNode","removeStyleElement","newObj","lastIdentifiers","newList","toString","newLastIdentifiers","_i","_index","splice","useSourceMap","this","map","content","cssMapping","sourceMapping","base64","data","sourceURLs","sources","source","sourceRoot","cssWithMappingToString","mediaQuery","dedupe","alreadyImportedModules","api","default","locals","___CSS_LOADER_API_IMPORT___","Button","props","className","onClick","color","variant","size","startIcon","disabled","children","propTypes","PropTypes","func","string","isRequired","element","node","bool","defaultProps","console","log","undefined","margin","position","overflow","display","flexDirection","maxHeight","maxWidth","closeButtonStyle","cursor","top","right","AbstractModal","submit","onSubmit","cancel","onCancel","onKeyPress","open","onClose","alignItems","justifyContent","minWidth","width","minHeight","height","flexGrow","overflowY","title","component","onMouseEnter","evt","onMouseLeave","marginBottom","paddingTop","hasSubmitButton","submitColor","submitText","hasCancelButton","cancelColor","cancelText","ConfirmAlertModal","message","RobotLogModal","hasButton","alert","state","time","Date","alertButton","button","parse","replace","toLocaleTimeString","action","robot","service","buttonText","label","buttonAction","getRobotAlertAction","setState","callback","MasterDB","cloudFunction","res","classes","primary","includes","breakWord","renderAlertInfo","Component","array","withStyles","theme","wordBreak","withTheme","Drawer","anchor","ANCHOR","left","bottom","Collapse","React","useState","setOpen","useEffect","clickLambda","iconStyle","divided","in","useStyles","makeStyles","container","backgroundColor","logoArea","padding","textAlign","navigationArea","accountArea","unsetAccountAreaPadding","VerticalBar","upperElement","navigationList","lowerElement","ContextMenu","anchorEl","setAnchorEl","handleClose","cloneElement","currentTarget","keepMounted","menuList","reduce","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","Table","columns","icons","actions","components","localization","actionsColumnIndex","draggable","grouping","search","toolbar","searchFieldAlignment","paging","TabPanel","selectedTab","other","role","hidden","aria-labelledby","any","tabPanel","Tabs","setSelectedTab","onChange","event","newSelectedTab","indicatorColor","textColor","tabList","tab","a11yProps","scrollable","number","Text","fontFamily","fontStyle","fontWeight","fontSize","marginLeft","marginRight","colorSwitchBase","grey","green","colorBar","colorChecked","Toggle","control","checked","toggle","onToggle","switchBase","track","labelPlacement","SearchInput","searchInput","enableTimeout","timer","clearTimeout","setTimeout","handleSearch","placeholder","searchIcon","setSearchInput","inputRoot","input","inputInput","inputProps","handleChange","borderRadius","shape","fade","palette","common","white","spacing","breakpoints","up","pointerEvents","transition","transitions","marginTop","link","textDecoration","lastLabel","Breadcrumb","separator","aria-label","pathList","function","FLEX_STYLE","BaseViewer","antialias","engineOptions","adaptToDeviceRatio","sceneOptions","onRender","onSceneReady","is2render","sceneFactory","rest","reactCanvas","useRef","loaded","setLoaded","scene","setScene","setSize","engine","Engine","current","nScene","runRenderLoop","render","renderScene","Scene","isReady","onReadyObservable","addOnce","setUpScene","dispose","getEngine","handleWidth","handleHeight","onResize","resize","preserveDrawingBuffer","stencil","COPY_PASTE_UID","Clipboard","Clip","write","read","Vec2","x","y","vec","z","op","a","b","acc","v","Math","sqrt","dot","scale","lambda","fromArray","biLambda","fold","initial","vector3","Vec3","constructor","Array","vec3","operation","ans","f","Vector3","binary","initialValue","max","Number","MAX_VALUE","min","some","isNaN","isFinite","babylon","of","random","u","identityMatrix","e1","e2","e3","pivot","add","normalize","w","sub","AnnotationManager","annotations","instance","observersBySceneId","retrieveAnnotationsFromDb","sceneId","_uid","subscribe","Scope","Name","actionMap","del","annotation","delAnnotation","set","addAnnotation","Annotation","k","names2delete","annotationType","names","labels","annotationObj","Type","type","toLowerCase","Label","getInstance","getAnnotations","NodeItem","mesh","keyValueMap","TYPE","mainView","copy","getCopyFunction","getNodeFromTree","onDeleteNode","getMouseContextActions","nodeItem","getType","ofBabylon","toArray","quaternion","Maybe","fromNull","rotationQuaternion","orLazy","q","Quaternion","RotationYawPitchRoll","rotation","material","flatMap","diffuseColor","g","orSome","isVisible","isEnabled","info","toDict","Color3","schema","jsonSchema","properties","oldName","uiSchema","toHexString","setAnnotations2Form","form","pos","parseFloat","FromArray","quat","FromHexString","emissiveColor","isForceUpdate","mousePosFromRoot","someMainView","getSceneMemory","rootItem","getRootNode","copyDict","getUID","newPosArray","copiedNodeItem","ofDict","parent","addNodeItem2Tree","GlobalRef","NAME","delVertex","graphVertex","childrenWithDelVertex","_children","childMesh","dict","someDict","toBabylon","babylonQuaternion","babylonColor","_capitalize","scopeList","Mat3","v1","v2","v3","mat3","prodVec","dotVec","mat","equals","babylonMat","arrayMat","Matrix","GetAsMatrix3x3","GizmoManagerBuilder","_scene","_isPosition","_isRotation","_isBoundingBox","_isScale","_usePointerToAttachGizmos","gizmoManager","GizmoManager","positionGizmoEnabled","rotationGizmoEnabled","boundingBoxGizmoEnabled","scaleGizmoEnabled","usePointerToAttachGizmos","CameraBuilder","_sphericalCoordinates","_target","_name","floor","sphericalCoordinates","values","ArcRotateCamera","PositionalLightBuilder","_position","_intensity","intensity","light","PointLight","ReferentialBuilder","_isPickable","_boxParams","_size","isPickable","boxParams","axisX","Mesh","CreateLines","Zero","axisY","axisZ","localOrigin","MeshBuilder","CreateBox","GroundBuilder","_width","_height","_textureSrc","textureSrc","ground","CreateGround","translate","Space","WORLD","StandardMaterial","ambientTexture","Texture","uScale","vScale","DirectionalLightBuilder","_direction","direction","DirectionalLight","Box","DEFAULT_SIZE","maybeDict","orUndefined","boxMesh","Util3d","createBox","mapDict2Mesh","localPosition","meshParent","meshParentPos","meshParentRotMat","getRotationMatrix","meshParentScaling","scaling","mul","getGlobalCoordinates","childPos","getGlobalCoord","positionInWorld","forwardCoordinates","worldPosition","withTranslation","ZERO","getLocalCoordFromGlobal","inverseScaling","getLocalCoordFromWorld","localRotationMatrix","maybeQuaternion","toRotationMatrix","orElseRun","ofBabylonMatrix","Red","normals","getVerticesData","VertexBuffer","NormalKind","positions","PositionKind","lines","scaleInPlace","normalLines","CreateLineSystem","uArray","subtract","Dot","faces","updatable","vertexData","VertexData","indices","applyToMesh","polygon","triangulation","earcut","len","i3","vec3Poly","orientation","edge","arrayOfPoints","randomDigits","parentView","rootMesh","arrayOfVector3","transform","isArray","Gray","segments","surface","orthogonalBasisFromVector","sign","Cross","theta","PI","cos","sin","zeroIndex","uIndex","meshFromPositionAndFaces","convertToFlatShadedMesh","diameter","sphere","CreateSphere","getMaterialFromColor","box","points","radius","CreateTube","path","sideOrientation","DOUBLESIDE","cap","CAP_ALL","pickInfo","pick","pointerX","pointerY","hit","pickedPoint","none","pickedMesh","curve","distance","orientations","atan2","nbPoints","closed","Curve3","CreateCatmullRomSpline","getPoints","splineObj","getCurveOrientations","THETA","ROS_ORIGIN","rosOrigin","getRosOrigin","globalRefMesh","referentialBuilder","build","rotationMatrix","abs","Action","memory","attachedMesh","camera","attachControl","canvas","closeContextDial","setContextActionIndex","AssetNodeItem","assetName","Map","DefaultScene","RotationGizmo","UtilityLayerRenderer","xGizmo","dragBehavior","detach","scaleRatio","yGizmo","COLLISION_RADIUS","cameraBuilder","inertia","collisionRadius","panningInertia","checkCollisions","panningSensibility","lowerRadiusLimit","directionalLightBuilder","wireframe","clearColor","Black","collisionsEnabled","getUniqueId","advancedTexture","AdvancedDynamicTexture","CreateFullscreenUI","text","TextBlock","addControl","MouseKeysAction","selectOneAction","predicateActionList","defaultAction","predicate","predicateAction","KeyPoint","CreatePolyhedron","custom","TRIANGULAR_ANTIPRISM","axis","category","vertex","face","MeshSelector","placeHolderInstance","meshSelectionSet","Set","isSubtractive","has","meshes","filteredSet","SelectionPlaceHolder","arrayOfMeshes","angleByMeshName","_uniqBy","getAngleFromMesh","placeHolderPosition","pointAverage","createPlaceHolderIn","isDisposed","Identity","getShaderMaterial","that","addGizmo2Mesh","clear","ofMainView","highlightMeshesInScene","highlightNodesInTree","isSelectionPlaceHolder","HEIGHT","observers","Observable","getPlaceHolderObs","placeHolder","updatedPointMesh","is2updateServer","displacement","filteredMeshes","dTheta","localDisplacement","newPos","handleTranslation","baseCoord","toVec2","rV","prod","finalV","finalTheta","handleRotation","handleMotion","updateNodeInServer","obs","notifyObservers","vertexObs","VERTEX","frag","FRAG","Effect","ShadersStore","shaderMaterial","ShaderMaterial","fragment","uniforms","backFaceCulling","T","getTime","onBindObservable","dt","setFloat","compareTreesRecursive","treeA","treeB","nodeEquality","nodeA","nodeB","expand","expanded","filterTree","tree","nod","flatten","TreeObject","getNodeRecursive","answer","isSome","childPredicate","getParentNodeRecursive","nodeMap","mapRecursive","newTree","mappedNode","forEachRecursive","Constants","RADIUS","POINTS_DENSITY","CLOUD_FUNCTION_NAME","Graph","j","edgeKey","addVertex","edgeProps","ijKey","jiKey","getNeighbors","getEdge","split","Path","localPath","keyPoints","splinePath","weight","selectedKeyPointIndex","selectedMesh","newSchema","selectedKeyPoint","formPosition","newPosInWorldCoordinates","localPos","updatePathEdgeWithForm","getGraph","graphItem","graph","edgeIds","edgeData","copiedPath","kp","isPathOnGraph","updateGraph","spline","getSplineFromCurve","createTubeFromPoints","splineObj2redis","createPlaceHolderKeyPoints","path2return","point","getMeshOnClick","getMeshObserver","newPoints","keyPointUpdateFunction","defaultKeyPointUpdate","oldMesh","average","newMesh","rotMat3","scaleVec3","averageInParentCoord","visibility","oldKeyPoints","keyPointMesh","copyPosition","getUndoManager","doIt","getUndoDeleteKeyPoint","UndoManager","actionBuilder","doAction","copyPoints","createNewMeshFromOldUsingNewPoints","onAddNewPointKeyPointUpdate","undoAction","getUndoAddKeyPointInBetween","nextIndex","numberOfPoints","oldPoints","specialIndex","oldKpMeshes","pathItem","isTopologyChange","delVertexFromMesh","edgeMeshes","addEdge","keypoints","childrenCopy","kChild","getConeMesh","curveMesh","getSphereMesh","keyPoint","setProperties","toForm","getKeyPointObserverFunction","setContextActions","pathTreeNode","icon","deleteKeyPoint","addKeyPointInBetween","getKeyPointActions","createOrientedCone","createSphere","every","GraphItem","graphItemInstances","graphPlaceHolder","getGraphPlaceHolder","graphFormMapper","getDefaultFormMapper","edgeMesh","getUndoDeleteEdge","vLocal","getToFormEdge","meshByEdgeId","vertexGenerator","vertices","getVertices","edges","getEdges","getVertex","String","ids","key2Edge","belongsSrcMesh","belongsTrgMesh","belongsSrc","exportBelongToData","belongsTrg","doMeshesBelong2SamePath","ofForm","edgeIndexes","lodashGet","delVertexRecursively","iMesh","jMesh","iIndex","jIndex","hasEdge","buildVertex","buildEdge","getVertexIdFromMesh","delEdge","_","maybeV","newPosition","iData","jData","nodeTree","vertexMesh","vertexIndex","vId","builder","addObs2VertexMesh","vData","getVertexMeshObs","updateVertexPosition","sort","iVertexD","jVertexD","EdgeData","doVerticesBelong2SamePath","getEdgeMesh","edgeGlobalCoord","Yellow","getEdgeMouseCtxActions","addObserver2EdgeMesh","addOnClickEdge","getEdgeObs","getOnClickEdge","getUndoDelLineEdge","edgeVertexD","isMeshBelong2Path","iParentNodeItem","jParentNodeItem","vertexCounter","MIN_VALUE","getMeshesFromEdgeData","dataEdge","importFeatures","vertexPosition","One","ind","vertexDataI","vertexDataJ","DragObjectsAction","setSelectedAction","buttons","maybeSelectedMesh","pickMesh","currentMesh","dragDownMesh","dragDownWithoutMesh","getGroundPosition","groundPos","dragMoveMesh","dragMoveWithoutMesh","dragUpMesh","dragUpWithoutMesh","destroySelectionDiv","corners","code","getDeleteButtonAction","ctrlKey","getCopyAction","getPasteAction","setMouseContextActions","getPasteOnClick","pasteAction","paste","setPropertiesWithName","clickPointInWorld","movePointInWorld","startDivPos","detachControl","addSelectedMesh","handleMeshRightClick","updateMouseVars","selectMeshUpdateUI","meshSelector","selectionPlaceHolder","selectedMeshes","addGizmo2Name","getMouseCoordsFromRoot","mousePosRoot","handleRightClickWithoutMesh","shiftKey","createSelectionDiv","selector","newMousePosInWorld","updateSelectionDiv","selectPlaceHolder","bigDisplacement","addIt","getUndoAbleAction","addArray","selectObjectsInside","groundPosInGlobal","isOne","maybeNode","contextActions","getContextActions","forceUpdate","copiedMesh","nodeCopyActionPairs","nodeActionPairs","copiedItems","copyAction","toGlobalCoord","absolutePosition","maybe","copiedMeshes","copiedNames","invertDisplacement","findMouseInDom","outerDiv","ID","body","ReactDOM","getElementById","newMouse","oldMouse","minX","minY","maxX","maxY","zIndex","clientX","clientY","rayCastCorners","pickPoints","insideBoxDragAbleMeshes","getObjectTree","isItemInsideBox","floorPoint","orNull","isMeshInsideBox","planeP","isPointInsideBox","epsilon","vi","vii","acos","SelectDiv","border","borderColor","AddKeyPointAction","maybeMousePos","mousePos","oldMousePos","tempMesh","createKeyPoint","TEMP_KEY_POINT_NAME","is2addInServer","setPositionWithLocalVector","Axis","Z","deleteNodeFromTreeUsingName","BoxRegion","lower","scaleX","scaleY","worldCorners","oldDimensions","dimensions","isEqual","ofFormDimensions","newLowerPositionInWorldCoordinates","newLocalDimensions","localLowerPosition","notify","createBoxRegionMesh","VISIBILITY","FACES","boxRegion","middlePoint","X","Y","h","boxRegionMesh","boxRegionTreeNode","newBox","pointAverageVec3","createNewMeshFromOldUsingNewBox","corner","BoxRegionAction","createBoxRegion","TEMP_BOX_REGION_NAME","region","localRegion","centeredRegion","boxRegionItem","DrawPathAction","mouseCurve","getUndoAbleClickAction","getDrawPathContextAction","localCurve","centeredCurve","TEMP_PATH_NAME","getUndoAbleEnterAction","kps","finalKps","createCurve","reducedKps","slice","keyPointMeshes","addEdgesInKeyPoints","deleteEdgeInKeyPoints","pathName","createGraphItemIfNone","positiveMod","Utils","mod","PolygonRegion","localPolygon","createExtrudedPolygonMesh","reverseOrientation","triangleIndex","polygonRegionMesh","lowerTriangulation","triangulatePolygon","upperTriangulation","stitchTriangulation","computeOrientation","modi","stitchingBoundaries","polygonTreeNode","getAbsolutePosition","polygonMesh","PolygonRegionAction","TEMP_POLYGON_REGION_NAME","getDrawPolygonContextAction","polygonRegionItem","createPolygonRegion","OrbitAction","DrawGraphAction","mousePosConsumer","maybeMesh","isConnectableMesh","possibleMesh","Green","onPointerDownLine","resetPreview","cata","firstMousePos","onPointerMoveLine","deletePreviewMeshes","firstClickedMesh","previewMeshes","parentName","meshI","meshJ","belongsToPath","nameI","nameJ","clickedMesh","belongs2SamePath","getUndoAbleLineEdge","createEdge","deleteEdge","edgeEmbedding","Blue","graphNode","MeasureAction","currentMousePos","ruler","addTextGUI","calculateDistance","start","end","startVec","endVec","toFixed","removeControl","ACTIONS","measure","drawGraph","drawRegion","addKeyPoint","drawBoxRegion","drawPath","dragObjects","orbit","MapLoader","yamlSrc","cachedMap","fetch","getMapUrl","response","parseYaml","image","resolution","origin","imageSize","yamlTxt","actionDict","getImageSize","src","Promise","resolve","reject","img","Image","onload","naturalWidth","naturalHeight","AssetsManager","assets","assetsActionMap","retrieveAssetsFromDb","RobotName","getRobotNameUpdate","getRobotNameSub","finishSub","File","FileLabel","getMapUpdater","getMapSubscriber","getMeshUpdater","getMeshSubscriber","place","finishInitialSubscribers","subs","afterLoad","isLoading","delAsset","robots","dataGetter","after","getMapFileData","fileName","addMap","filename","loader","ASSETS_TYPES","addAsset","ofNull","maybeGet","getMeshFileData","observer","assetKey","asset","AssetsTypesFactory","signalObservers","re","rej","localRobot","Robot","robotTree","child","addRobot","deleteRobot","prop","AddMapAction","mapLoader","load","href","download","firstTimeLoad","groundBuilder","originPos","rootNode","inverseCoordinates","setTarget","is2sendServer","setEnabled","createMeshGround","getUndoAction","oldMapName","newMapName","switchMaps","getAssetsActionMap","meshTree","oldTimeInMillis","robotAnimator","requestAnimationFrameId","requestAnimationFrame","updateRobot","timeSinceLastUpdate","isOnline","speed","qSpeed","newOri","db","Database","unsubscribe","Parameter","cancelAnimationFrame","newRobotTf","lastPosition","lastOrientation","newOrientation","dtReciprocal","TIME_2_BE_OFFLINE_IN_SEC","toOffline","toOnline","thetaX","boundingSphere","getBoundingInfo","center","tfSphereMesh","ONES","addRotation","spherePlaceHolder","createRobotMeshTreeRecursive","robotMesh","RobotBuilder","vel","rotate","LOCAL","tf","_get","updateRobotMeshTree","robot2Animate","biasedCoin","someNaNOrInfinite","setOnOffLine","_meshTree","_parentMesh","_id","_keyValueMap","_assetName","parentMesh","PointCloud","pointCloudSubscribe","front_lidar","Value","updatePointCloud","colors","fill","pointCloudMesh","disableLighting","pointsCloud","pointSize","MeshCache","meshCacheBySceneId","meshCache","cloneMesh","clone","MeshLoader","meshName","mapFunction","hasKey","assetsManager","meshTask","addMeshTask","MESH_URL","onSuccess","task","loadedMeshes","put","onError","exception","onFinish","RobotAction","robotAnimatorFactory","getDefaultAnimator","createRobotMeshTree","cloudPoint","parentObj","treeNode","actionMemoryClone","loadRobot","ROBOT_MESH_NAME","transformMesh","then","createRobotFromMesh","getParentMesh","isImport","getRobot","animate","getCloudPoint","AddMeshAction","getIsImport","finalName","getFinalNameFromMemory","loadMesh","actionMemory","createNormals","meshItem","renderMenus","getMeshUrl","addMesh","addMesh2Scene","getSocketAnimator","Wall","localWall","createWallMesh","centeredWall","tangent","normal","wallMesh","wallNode","newWall","locallyTranslate","wall","NODE_ITEM_FACTORY_MAP","MainViewRetriever","serverScene","errors","importSceneRecursive","importDefaultScene","nodeDict","nodeItemClass","isAsset","importAsset","assetType","assetActionMap","retrievedAction","cause","solution","arrayTree","sortArrayTree","importNodeItem","SceneServerUtils","sceneName","successCallback","DEFAULT_SUCCESS","failCallback","DEFAULT_FAILURE","successFailIf","failureLocation","error","success","TreeNode","TreeNodeBuilder","_title","_item","_expanded","_isVisible","TreeServerUtils","objectTree","getNode","childName","getParentNode","is2delInServer","deleteNodeInServer","getParentFromChild","node2Add","maybeParentNode","addNodeItem2Server","Animator","next","doWhile","requestAnimeId","stop","play","AnimatorBuilder","_state","_next","_end","DefaultMouseEvents","mousePosClick","mousePosMove","sceneMemory","mouseLocationText","currentLocal","setMouseLocationTxt","panCamera","vBabylon","getBabylonCoordinates","initialState","nextState","vdt","animateCamera","filterActions","SceneViewer","undoManager","ofScene","newObjectTree","focusObject","isPanned","_absolutePosition","cameraSpeed","targetPos","beta","isRotated","onPointerDown","onPointerUp","onPointerMove","afterLoading","retrieveScene","errorList","importScene","assetManager","getAssets","loadAssets","retrieveSceneFromServer","setCameraToTarget","getRenderingCanvas","addCanvasEventListeners","createMouseLocationText","createCamera","createLight","createGizmo","highlightLayer","layer","HighlightLayer","lastHlMeshes","prevProps","propVar","loadScene","addEventListener","resetErrorList","createScene","getErrorSolutionList","masterProps","augmentProps","formControl","Select","noneOption","hiddenLabel","labelId","CreateSVGIcon","viewBox","xmlns","xmlnsXlink","svgIcons","Close","ErrorOutline","InfoOutlined","ReportProblemOutlined","SuccessOutlined","defaultIconMapping","warning","Alert","closeText","iconMapping","severity","clsx","capitalize","oneOf","filledSuccess","filledInfo","filledWarning","filledError","opacity","paddingLeft","ReactConfirmAlert","close","closeOnClickOutside","onClickOutside","isClickOutside","overlay","removeBodyClass","removeElementReconfirm","closeOnEscape","onKeypressEscape","isKeyCodeEscape","keyCode","keyboardClose","autoClose","autoHideDuration","removeEventListener","willUnmount","customUI","closable","dom","handleClickOverlay","renderCustomUI","elevation","unmountComponentAtNode","classList","snackbar","divTarget","createElementReconfirm","themeFactory","particular","typography","h1","h2","h3","h4","h5","h6","body1","cursorDefault","cursorPointer","Themes","dark","createMuiTheme","bottomNavigation","background","globalStats","subTextColor","upperTextColor","main","secondary","overrides","MuiButton","outlined","contained","containedPrimary","containedSecondary","MuiButtonGroup","groupedContainedPrimary","groupedOutlined","groupedText","MuiIconButton","MuiListItem","MuiFormControlLabel","MuiInputBase","font","MuiFilledInput","underline","Roboto","OpenSans","localStorage","getItem","setItem","Style","createGlobalStyle","S","StyledMenu","paper","boxShadow","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","autoFocus","FilterIcon","otherFilters","tooltip","Fragment","handleClick","isActive","iconActive","buttonApplyFilters","checkbox","limitText","filterBarContainer","flexWrap","flex","searchText","addTagText","toggleContainer","datePicker","tagsContainer","tagsList","chip","filtersButton","columnsFilter","iconButton","LogsFilterBar","isAdvancedMode","tagText","setTagText","handleRobotChange","arrayEvent","selectedId","updateRobotSelection","paddingRight","fillRule","clipRule","multiple","selectedRobots","renderValue","selected","selectedNames","isSelected","MenuProps","robotIndex","messageRegex","handleMessageRegex","InputProps","startAdornment","endAdornment","levels","handleLevels","levelsList","level","elem","indexOf","advancedMode","FiltersIcon","tags","onKeyUp","handleAddTag","onDelete","handleDeleteTag","selectedFromDate","selectedToDate","utils","DateFnsUtils","ampm","newDate","handleDateChange","format","handleAdvancedMode","limit","handleLimit","InputLabelProps","shrink","handleColumns","columnList","column","PaperProps","ITEM_HEIGHT","arePropsEqual","nextProps","_isEqual","selectToDate","colorCoding","INFO","WARNING","DEBUG","ERROR","CRITICAL","findsUniqueKey","keyName","getRequestLevels","levelsArray","getRequestTags","tagsArray","_isEmpty","tag","getRequestMessage","binaryIndexOf","criteria","currentIndex","minIndex","maxIndex","comparison","filterByFromToDates","logsData","fromDate","toDate","lowerIndex","upperIndex","dateList","MuiVirtualizedTable","onRowClick","rowData","tableRow","flexContainer","tableRowHover","cellData","columnIndex","rowHeight","tableCell","noClick","align","numeric","headerHeight","tableProps","gridStyle","table","rowClassName","getRowClassName","dataKey","headerRenderer","headerProps","cellRenderer","PureComponent","arrayOf","VirtualizedTable","boxSizing","flip","whiteSpace","textOverflow","flexColumn","LogsTable","rowCount","rowGetter","UI_TAG","Logs","createRef","robotsData","ip","setSelectedRobots","robotId","findIndex","logsTimeout","getLogs","robotState","robotStates","off","getRobotLogData","dataArrays","prevState","finalArray","dataArray","robotSelected","timeoutHandle","dynamicURL","logModal","divElement","clientHeight","updateSelectedRobots","tagToDelete","filteredTags","keyToChange","simpleLevelsList","advancedLevelsList","timestamp","battery","temp","okay","serverTime","toLocaleDateString","getJustDateFromServer","Time","getJustTimeFromServer","Level","Module","Message","LoginForm","username","password","remember","errorMessage","capsLockOn","Authentication","login","apiResponse","setLoggedIn","capsLock","getModifierState","logo","justify","defaultLogo","alt","gutterBottom","htmlFor","aria-describedby","checkCapsLock","sendCreds","logs","loggedIn","menuItemSpacing","profileMenuFooter","ProfileMenu","aria-controls","aria-haspopup","welcomeLabel","userName","extraItems","darkThemeLabel","handleToggleTheme","isDarkTheme","handleLogout","logoutLabel","version","TreeSearch","inputRef","focus","trim","isEmpty","resetValue","ListItemsTree","dense","ListItemsTreeWithSearch","paddingBottom","onSearch","Children","testArray","BasicVirtualizedTree","selectedGroup","groupsEnabled","searchValue","nodes","searchValueLower","filteredNodes","ch","grandChild","searchFilter","onClickNode","onDoubleClick","onDoubleClickNode","preContainer","inlineFlex","alignContent","handleExpansion","spaceBetween","ellipsis","oneOfType","horizFlex","iconSpace","SelectScopeModal","initialData","scope","setData","selectedWorkspace","setSelectedWorkspace","selectedScopeItem","setSelectedScopeItem","workSpaceList","setWorkSpaceList","setIsLoading","firstTime","scopeFilteredData","Workspace","getAll","getAllData","pronoun","workspace","dataToSet","_cloneDeep","getDocs","sortedScopeItems","scopes","url","xs","overflowX","mapObj","0","indexToSet","isExpanded","_set","1","parents","versionList","versions","index2ndLevel","2","deepness","requestScopeVersions","showIcons","withOfflineValidation","isConnected","setConnected","showSuccessAlert","setSuccessAlert","validator","setValidator","loading","setLoading","_validator","offlineValidation","onOnline","onOffline","retryConnection","withAuthentication","firstRender","checkLogin","setCheckLogin","now","token","expDelta","jwtDecode","exp","handleLogOut","logout"],"mappings":"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","file":"dist/index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MovaiReact\"] = factory();\n\telse\n\t\troot[\"MovaiReact\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 123);\n","module.exports = require(\"react\");","module.exports = require(\"@babel/runtime/helpers/esm/defineProperty\");","module.exports = require(\"@babylonjs/core\");","module.exports = require(\"@babel/runtime/helpers/esm/assertThisInitialized\");","module.exports = require(\"prop-types\");","module.exports = require(\"@babel/runtime/helpers/esm/getPrototypeOf\");","module.exports = require(\"@babel/runtime/helpers/esm/classCallCheck\");","module.exports = require(\"@babel/runtime/helpers/esm/createClass\");","module.exports = require(\"monet\");","module.exports = require(\"@material-ui/core\");","module.exports = require(\"@babel/runtime/helpers/esm/possibleConstructorReturn\");","module.exports = require(\"mov-fe-lib-core\");","module.exports = require(\"@babel/runtime/helpers/esm/extends\");","module.exports = require(\"@babel/runtime/helpers/esm/inherits\");","module.exports = require(\"@babel/runtime/helpers/esm/get\");","module.exports = require(\"@babel/runtime/helpers/esm/toConsumableArray\");","module.exports = require(\"@babel/runtime/helpers/esm/slicedToArray\");","module.exports = require(\"@material-ui/core/styles\");","module.exports = require(\"@babel/runtime/helpers/esm/classPrivateFieldGet\");","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"@babel/runtime/helpers/esm/asyncToGenerator\");","module.exports = require(\"lodash/get\");","module.exports = require(\"@material-ui/core/MenuItem\");","module.exports = require(\"@babel/runtime/helpers/esm/objectWithoutProperties\");","module.exports = require(\"@material-ui/core/Typography\");","module.exports = require(\"@material-ui/core/IconButton\");","module.exports = require(\"@material-ui/core/FormControl\");","module.exports = require(\"@material-ui/core/Divider\");","module.exports = require(\"@material-ui/icons/Search\");","module.exports = require(\"@material-ui/core/Grid\");","module.exports = require(\"@material-ui/icons/ChevronRight\");","module.exports = require(\"react-dom\");","module.exports = require(\"@material-ui/core/Input\");","module.exports = require(\"@material-ui/core/Menu\");","module.exports = require(\"@babylonjs/gui/2D\");","module.exports = require(\"@material-ui/core/Select\");","module.exports = require(\"clsx\");","module.exports = require(\"@material-ui/core/Avatar\");","module.exports = require(\"@material-ui/icons/Clear\");","module.exports = require(\"@material-ui/core/InputLabel\");","module.exports = require(\"@material-ui/core/Button\");","module.exports = require(\"@material-ui/icons/Close\");","module.exports = require(\"@material-ui/icons/ExpandMore\");","module.exports = require(\"react-resize-detector\");","module.exports = require(\"@material-ui/icons/Settings\");","module.exports = require(\"lodash/isEqual\");","module.exports = require(\"@material-ui/core/CircularProgress\");","module.exports = require(\"@material-ui/core/colors\");","module.exports = require(\"@material-ui/core/InputAdornment\");","module.exports = require(\"@material-ui/core/ListItemText\");","module.exports = require(\"@material-ui/core/Checkbox\");","module.exports = require(\"@material-ui/pickers\");","module.exports = require(\"react-virtualized\");","module.exports = require(\"lodash/set\");","module.exports = require(\"@material-ui/core/List\");","module.exports = require(\"lodash/capitalize\");","module.exports = require(\"@material-ui/core/TableCell\");","module.exports = require(\"@material-ui/core/FormHelperText\");","module.exports = require(\"lodash/cloneDeep\");","module.exports = require(\"@material-ui/lab/Alert\");","\"use strict\";\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce = typeof __webpack_nonce__ !== 'undefined' ? __webpack_nonce__ : null;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && typeof btoa !== 'undefined') {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}","module.exports = require(\"@material-ui/icons/Schedule\");","module.exports = require(\"@material-ui/icons/Warning\");","module.exports = require(\"@material-ui/icons/ViewModule\");","module.exports = require(\"@material-ui/icons/Chat\");","module.exports = require(\"@material-ui/core/Drawer\");","module.exports = require(\"@material-ui/core/Collapse\");","module.exports = require(\"material-table\");","module.exports = require(\"@material-ui/icons/AddBox\");","module.exports = require(\"@material-ui/icons/ArrowDownward\");","module.exports = require(\"@material-ui/icons/Check\");","module.exports = require(\"@material-ui/icons/ChevronLeft\");","module.exports = require(\"@material-ui/icons/DeleteOutline\");","module.exports = require(\"@material-ui/icons/Edit\");","module.exports = require(\"@material-ui/icons/FilterList\");","module.exports = require(\"@material-ui/icons/FirstPage\");","module.exports = require(\"@material-ui/icons/LastPage\");","module.exports = require(\"@material-ui/icons/Remove\");","module.exports = require(\"@material-ui/icons/SaveAlt\");","module.exports = require(\"@material-ui/icons/ViewColumn\");","module.exports = require(\"@material-ui/core/Tabs\");","module.exports = require(\"@material-ui/core/Tab\");","module.exports = require(\"@material-ui/core/TextField\");","module.exports = require(\"@material-ui/core/FormControlLabel\");","module.exports = require(\"@material-ui/core/Switch\");","module.exports = require(\"@material-ui/core/InputBase\");","module.exports = require(\"@material-ui/core/Breadcrumbs\");","module.exports = require(\"@material-ui/icons/NavigateNext\");","module.exports = require(\"earcut\");","module.exports = require(\"lodash/uniqBy\");","module.exports = require(\"@babylonjs/core/Maths/math\");","module.exports = require(\"lodash.isequal\");","module.exports = require(\"@material-ui/core/utils\");","module.exports = require(\"@babel/runtime/helpers/esm/taggedTemplateLiteral\");","module.exports = require(\"styled-components\");","module.exports = require(\"@material-ui/core/styles/colorManipulator\");","module.exports = require(\"@material-ui/icons/Label\");","module.exports = require(\"@material-ui/core/Chip\");","module.exports = require(\"@material-ui/icons/Add\");","module.exports = require(\"@material-ui/icons/Today\");","module.exports = require(\"@date-io/date-fns\");","module.exports = require(\"@babel/runtime/helpers/esm/typeof\");","module.exports = require(\"lodash/isEmpty\");","module.exports = \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' version='1.0' width='400.000000' height='400.000000' preserveAspectRatio='xMidYMid meet'%3E%3Crect id='backgroundrect' width='100%25' height='100%25' x='0' y='0' fill='none' stroke='none'/%3E %3Cg class='currentLayer' style=''%3E%3Ctitle%3ELayer 1%3C/title%3E%3Cg transform='translate(0,400) scale(0.10000000149011612,-0.10000000149011612) ' fill='%23d31b1b' stroke='none' id='svg_1' class='' fill-opacity='1'%3E %3Cpath d='M1770 3990 c-682 -83 -1271 -501 -1570 -1115 -103 -211 -167 -437 -191 -673 -14 -129 -6 -404 14 -522 85 -495 339 -929 729 -1242 232 -187 539 -332 836 -393 957 -199 1909 314 2272 1224 204 512 180 1116 -64 1606 -115 232 -229 387 -412 565 -296 286 -639 460 -1059 536 -106 19 -443 27 -555 14z m-998 -1105 c3 -3 -23 -48 -57 -99 -113 -172 -182 -338 -226 -546 -32 -149 -33 -448 -1 -593 31 -145 70 -258 134 -387 65 -132 64 -140 -28 -140 -66 0 -100 13 -143 53 -74 70 -71 38 -71 748 0 555 2 642 16 690 43 144 129 236 248 265 54 13 119 18 128 9z m2621 -21 c99 -34 192 -157 216 -288 14 -78 15 -1256 1 -1307 -13 -48 -82 -125 -124 -139 -55 -18 -166 -12 -166 9 0 4 25 57 55 118 195 391 215 839 55 1247 -41 105 -117 247 -176 327 -18 25 -30 49 -26 54 10 11 109 -2 165 -21z m-251 -61 c128 -170 217 -370 265 -594 13 -63 18 -129 18 -264 0 -199 -13 -285 -66 -448 -33 -101 -114 -277 -128 -277 -26 0 -31 80 -32 549 0 267 -4 495 -8 505 -6 16 -20 4 -87 -77 -43 -53 -81 -96 -84 -96 -3 -1 -16 41 -29 92 -27 106 -74 215 -132 304 -32 48 -38 66 -31 80 34 61 243 273 271 273 4 0 23 -21 43 -47z m-2206 15 c52 -39 95 -82 171 -170 l74 -88 -42 -61 c-23 -34 -54 -89 -69 -123 -35 -76 -80 -219 -80 -252 0 -13 -4 -24 -8 -24 -4 0 -43 43 -87 95 -43 52 -83 95 -87 95 -4 0 -8 -224 -9 -497 0 -492 -5 -565 -34 -565 -16 0 -94 166 -130 279 -52 159 -69 294 -62 493 8 230 47 384 147 585 56 112 154 255 174 255 7 0 26 -10 42 -22z m458 -511 l133 -157 -20 -58 c-13 -39 -19 -85 -19 -147 -1 -150 44 -260 151 -365 107 -105 214 -150 361 -150 241 0 443 162 500 399 16 69 8 222 -15 278 l-17 43 132 157 c73 87 136 159 140 161 24 9 119 -186 148 -303 11 -44 22 -104 25 -134 l4 -54 -329 -388 c-343 -405 -362 -424 -466 -455 -101 -31 -258 -12 -341 41 -48 29 -83 69 -607 691 -52 62 -94 121 -94 131 0 52 33 202 60 271 33 86 99 204 112 200 5 -2 68 -74 142 -161z m376 -444 c85 -102 167 -194 182 -204 62 -45 81 -30 292 224 76 92 142 165 146 162 13 -8 20 -110 10 -167 -27 -170 -153 -299 -324 -334 -130 -27 -257 9 -356 102 -61 57 -116 162 -125 239 -8 57 1 165 13 164 4 0 77 -84 162 -186z' id='svg_2' fill='%23d31b1b' fill-opacity='1'/%3E %3C/g%3E%3C/g%3E%3C/svg%3E\"","module.exports = require(\"@material-ui/core/Paper\");","module.exports = require(\"react-virtualized-tree\");","module.exports = require(\"@material-ui/core/Box\");","module.exports = require(\"@material-ui/core/Backdrop\");","module.exports = require(\"@material-ui/styles\");","module.exports = require(\"jwt-decode\");","module.exports = require(\"@babylonjs/core/Debug/debugLayer\");","module.exports = require(\"@babylonjs/inspector\");","module.exports = require(\"@babylonjs/loaders\");","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!./Snackbar.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"body.react-confirm-alert-body-element {\\n  overflow: hidden;\\n}\\n\\n.react-confirm-alert-blur {\\n  filter: url(#gaussian-blur);\\n  filter: blur(2px);\\n  -webkit-filter: blur(2px);\\n}\\n\\n.react-confirm-alert-overlay {\\n  position: fixed;\\n  top: calc(100vh - 300px);\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  z-index: 99;\\n  display: -webkit-flex;\\n  display: -moz-flex;\\n  display: -ms-flex;\\n  display: -o-flex;\\n  display: flex;\\n  justify-content: flex-start;\\n  -ms-align-items: center;\\n  align-items: flex-end;\\n  opacity: 1;\\n}\\n\\n.react-confirm-alert-body {\\n  width: 400px;\\n  padding: 30px;\\n}\\n\\n.react-confirm-alert-svg {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n}\\n\\n.react-confirm-alert-body > h1 {\\n  margin-top: 0;\\n}\\n\\n.react-confirm-alert-body > h3 {\\n  margin: 0;\\n  font-size: 16px;\\n}\\n\\n.react-confirm-alert-button-group {\\n  display: -webkit-flex;\\n  display: -moz-flex;\\n  display: -ms-flex;\\n  display: -o-flex;\\n  display: flex;\\n  justify-content: flex-start;\\n  margin-top: 20px;\\n}\\n\\n.react-confirm-alert-button-group > button {\\n  outline: none;\\n  background: #333;\\n  border: none;\\n  display: inline-block;\\n  padding: 6px 18px;\\n  color: #eee;\\n  margin-right: 10px;\\n  border-radius: 5px;\\n  font-size: 12px;\\n  cursor: pointer;\\n}\\n\\n.icon-container {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\n.icon-container:hover {\\n  cursor: pointer;\\n}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","module.exports = require(\"fontsource-roboto\");","module.exports = require(\"fontsource-open-sans\");","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!./Logs.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".flow-action {\\n  display: flex;\\n  background: transparent;\\n  width: 35px;\\n  height: 35px;\\n  margin: 6px;\\n  border-radius: 50%;\\n  justify-content: center;\\n  align-items: center;\\n  transition: background-color 0.5s;\\n}\\n\\n.flow-action:hover {\\n  background: rgba(11, 106, 138, 0.2);\\n  cursor: pointer;\\n}\\n\\n.robot-logs-container {\\n  display: flex;\\n  flex-direction: column;\\n  height: 1px;\\n  flex-grow: 1;\\n}\\n\\n.tree-grow-overflow {\\n  flex-grow: 0.5;\\n  overflow-y: auto;\\n  min-height: 0;\\n  height: 100%;\\n}\\n\\n.logs-grow-overflow {\\n  flex-grow: 1;\\n  overflow-y: auto;\\n  min-height: 0;\\n  height: 100%;\\n}\\n\\n.saving {\\n  /* font-size: 40px; */\\n  margin: 0;\\n}\\n\\n.saving span {\\n  font-size: 15px;\\n  animation-name: blink;\\n  animation-duration: 1.4s;\\n  animation-iteration-count: infinite;\\n  animation-fill-mode: both;\\n}\\n\\n.saving span:nth-child(2) {\\n  animation-delay: 0.2s;\\n}\\n\\n.saving span:nth-child(3) {\\n  animation-delay: 0.4s;\\n}\\n\\n@keyframes blink {\\n  0% {\\n    opacity: 0.2;\\n  }\\n  20% {\\n    opacity: 1;\\n  }\\n  100% {\\n    opacity: 0.2;\\n  }\\n}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","module.exports = require(\"material-icons/css/material-icons.css\");","module.exports = require(\"react-virtualized/styles.css\");","module.exports = require(\"react-virtualized-tree/lib/main.css\");","import React from \"react\";\nimport MaterialButton from \"@material-ui/core/Button\";\nimport PropTypes from \"prop-types\";\n\nconst Button = props => {\n  return (\n    <MaterialButton\n      className={props.className}\n      style={props.style}\n      onClick={props.onClick}\n      color={props.color}\n      variant={props.variant}\n      size={props.size}\n      startIcon={props.startIcon}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </MaterialButton>\n  );\n};\n\nButton.propTypes = {\n  style: PropTypes.object,\n  onClick: PropTypes.func,\n  color: PropTypes.string,\n  variant: PropTypes.string.isRequired,\n  size: PropTypes.string,\n  startIcon: PropTypes.element,\n  children: PropTypes.node.isRequired,\n  disabled: PropTypes.bool\n};\nButton.defaultProps = {\n  style: {},\n  onClick: () => console.log(\"Click MOV.AI button\"),\n  color: \"default\", // default, inherit, primary or secondary\n  variant: \"contained\", // text, outlined, contained\n  size: \"medium\", // small, medium, large\n  startIcon: undefined,\n  children: <div></div>,\n  disabled: false\n};\n\nexport default Button;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport {\n  Card,\n  Typography,\n  CardContent,\n  Divider,\n  Button,\n  CardActions,\n  Modal\n} from \"@material-ui/core\";\n\nconst style = {\n  margin: \"auto\",\n  position: \"absolute\",\n  overflow: \"auto\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  maxHeight: \"98%\",\n  maxWidth: \"50%\"\n};\n\nconst closeButtonStyle = {\n  cursor: \"pointer\",\n  position: \"absolute\",\n  color: \"white\",\n  top: 15,\n  right: 15\n};\n\nconst AbstractModal = props => {\n  const onKeyPress = e => {\n    if (e.key === \"Enter\") {\n      submit();\n    }\n  };\n\n  const submit = () => {\n    props.onSubmit();\n  };\n\n  const cancel = () => {\n    props.onCancel();\n  };\n\n  return (\n    <Modal\n      onKeyPress={onKeyPress}\n      open={props.open}\n      onClose={cancel}\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      }}\n    >\n      <Card\n        style={{\n          ...style,\n          minWidth: props.width,\n          minHeight: props.height\n        }}\n      >\n        <CardContent\n          style={{\n            flexGrow: 1,\n            maxHeight: \"calc(100% - 70px)\",\n            overflowY: \"auto\"\n          }}\n        >\n          <Typography variant=\"h5\">{props.title}</Typography>\n          <Typography\n            component=\"div\"\n            style={closeButtonStyle}\n            onClick={() => props.onCancel()}\n            onMouseEnter={evt => (evt.target.style.color = \"grey\")}\n            onMouseLeave={evt => (evt.target.style.color = \"white\")}\n          >\n            <CloseIcon></CloseIcon>\n          </Typography>\n          <Divider style={{ marginBottom: \"12px\" }} />\n          <div\n            style={{\n              maxHeight: \"calc(100% - 35px)\",\n              overflowY: \"auto\",\n              paddingTop: 5\n            }}\n          >\n            {props.children}\n          </div>\n        </CardContent>\n        <Divider />\n        <CardActions>\n          {props.hasSubmitButton && (\n            <Button color={props.submitColor} onClick={submit}>\n              {props.submitText}\n            </Button>\n          )}\n          {props.hasCancelButton && (\n            <Button onClick={cancel} color={props.cancelColor}>\n              {props.cancelText}\n            </Button>\n          )}\n        </CardActions>\n      </Card>\n    </Modal>\n  );\n};\n\nAbstractModal.propTypes = {\n  onSubmit: PropTypes.func,\n  onCancel: PropTypes.func,\n  open: PropTypes.bool,\n  title: PropTypes.string,\n  submitText: PropTypes.string,\n  submitColor: PropTypes.string,\n  cancelText: PropTypes.string,\n  cancelColor: PropTypes.string,\n  width: PropTypes.string,\n  height: PropTypes.string,\n  hasSubmitButton: PropTypes.bool,\n  hasCancelButton: PropTypes.bool\n};\n\nAbstractModal.defaultProps = {\n  onSubmit: () => {},\n  onCancel: () => {},\n  open: false,\n  title: \"New\",\n  submitText: \"Confirm\",\n  submitColor: \"primary\",\n  cancelText: \"Cancel\",\n  cancelColor: \"secondary\",\n  width: \"25%\",\n  height: \"25%\",\n  hasSubmitButton: true,\n  hasCancelButton: true\n};\n\nexport default AbstractModal;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport AbstractModal from \"./AbstractModal\";\n\nconst ConfirmAlertModal = props => {\n  return (\n    <AbstractModal\n      onSubmit={props.onSubmit}\n      onCancel={props.onCancel}\n      open={props.open}\n      title={props.title}\n      submitText={props.submitText}\n      submitColor={props.submitColor}\n      cancelText={props.cancelText}\n      cancelColor={props.cancelColor}\n    >\n      <div>{props.message}</div>\n      <div>{props.children}</div>\n    </AbstractModal>\n  );\n};\n\nConfirmAlertModal.propTypes = {\n  title: PropTypes.string,\n  message: PropTypes.string,\n  onSubmit: PropTypes.func,\n  onCancel: PropTypes.func,\n  open: PropTypes.bool,\n  submitText: PropTypes.string,\n  submitColor: PropTypes.string,\n  cancelText: PropTypes.string,\n  cancelColor: PropTypes.string\n};\n\nConfirmAlertModal.defaultProps = {\n  title: \"Insert Text here\",\n  message: \"Are you sure?\",\n  onSubmit: () => {},\n  onCancel: () => {},\n  open: false,\n  submitText: \"Delete\",\n  submitColor: \"secondary\",\n  cancelText: \"Cancel\",\n  cancelColor: \"primary\"\n};\n\nexport default ConfirmAlertModal;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport List from \"@material-ui/core/List\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { ListItem, ListItemAvatar, ListItemText } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport ViewModuleIcon from \"@material-ui/icons/ViewModule\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\nimport { MasterDB } from \"mov-fe-lib-core\";\nimport AbstractModal from \"./AbstractModal\";\n\nconst styles = theme => ({\n  breakWord: {\n    wordBreak: \"break-all\"\n  }\n});\n\nclass RobotLogModal extends Component {\n  state = {\n    data: {},\n    open: false,\n    hasButton: false\n  };\n\n  open = alert => {\n    const { data } = this.state;\n    // Format time\n    const time = new Date(alert.time * 1000);\n    const alertButton = alert.button\n      ? JSON.parse(alert.button.replace(/'/g, '\"'))\n      : null;\n    data.time = `${time.toLocaleTimeString(\"pt\")}`;\n    data.action = alert.action;\n    data.message = alert.message;\n    data.robot = alert.robot;\n    data.service = alert.service;\n    data.module = alert.module;\n    if (alertButton) {\n      data.buttonText = alertButton.label;\n      data.buttonAction = this.getRobotAlertAction(alertButton);\n    }\n    // Update state variables\n    this.setState({\n      data,\n      open: true,\n      hasButton: !!alertButton\n    });\n  };\n\n  getRobotAlertAction = ({ callback, data }) => {\n    // Trigger callback to clear log\n    if (callback) {\n      return () => {\n        MasterDB.cloudFunction(callback, \"\", data, res => {\n          this.setState({ open: false });\n        });\n      };\n    }\n    // Default case (just close modal)\n    else {\n      return () => this.setState({ open: false });\n    }\n  };\n\n  renderAlertInfo = () => {\n    const { data } = this.state;\n    const { props, classes } = this.props;\n    return (\n      <Typography component=\"div\">\n        <List style={{ width: \"100%\" }}>\n          <ListItem>\n            <ListItemAvatar>\n              <Avatar>\n                <i className=\"fas fa-robot\"></i>\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={data.robot} />\n          </ListItem>\n          <Divider variant=\"inset\" component=\"li\" />\n          <ListItem>\n            <ListItemAvatar>\n              <Avatar>\n                <ScheduleIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={data.time} />\n          </ListItem>\n          <Divider variant=\"inset\" component=\"li\" />\n          {props.includes(\"service\") && (\n            <div>\n              <ListItem>\n                <ListItemAvatar>\n                  <Avatar>\n                    <WarningIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  primary={data.service}\n                  className={classes.breakWord}\n                />\n              </ListItem>\n              <Divider variant=\"inset\" component=\"li\" />\n            </div>\n          )}\n          {props.includes(\"module\") && (\n            <div>\n              <ListItem>\n                <ListItemAvatar>\n                  <Avatar>\n                    <ViewModuleIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  primary={data.module}\n                  className={classes.breakWord}\n                />\n              </ListItem>\n              <Divider variant=\"inset\" component=\"li\" />\n            </div>\n          )}\n          <ListItem>\n            <ListItemAvatar>\n              <Avatar>\n                <ChatIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText\n              primary={data.message}\n              className={classes.breakWord}\n            />\n          </ListItem>\n        </List>\n        {data.action && (\n          <div>\n            <Divider />\n            <List style={{ width: \"100%\" }}>\n              <ListItem>\n                <ListItemText\n                  primary={data.action}\n                  className={classes.breakWord}\n                />\n              </ListItem>\n            </List>\n          </div>\n        )}\n      </Typography>\n    );\n  };\n\n  render() {\n    const { data, open, hasButton } = this.state;\n    const { title } = this.props;\n    return (\n      <AbstractModal\n        open={open}\n        title={title}\n        style={{ maxWidth: 500 }}\n        onCancel={() => this.setState({ open: false })}\n        onSubmit={data.buttonAction}\n        submitText={data.buttonText}\n        submitColor={\"primary\"}\n        hasSubmitButton={hasButton}\n        hasCancelButton={false}\n      >\n        {this.renderAlertInfo()}\n      </AbstractModal>\n    );\n  }\n}\n\nRobotLogModal.propTypes = {\n  title: PropTypes.string,\n  props: PropTypes.array\n};\n\nRobotLogModal.defaultProps = {\n  title: \"Log Details\",\n  props: []\n};\n\nexport default withStyles(styles, { withTheme: true })(RobotLogModal);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport MaterialDrawer from \"@material-ui/core/Drawer\";\n\nconst Drawer = props => {\n  return (\n    <MaterialDrawer\n      style={props.style}\n      anchor={props.anchor}\n      open={props.open}\n      onClose={props.onClose}\n    >\n      {props.children}\n    </MaterialDrawer>\n  );\n};\n\nDrawer.propTypes = {\n  style: PropTypes.object,\n  anchor: PropTypes.string,\n  open: PropTypes.bool,\n  children: PropTypes.object\n};\n\nDrawer.defaultProps = {\n  style: {},\n  anchor: \"left\",\n  open: false,\n  children: <div></div>\n};\n\nDrawer.ANCHOR = { left: \"left\", right: \"right\", top: \"top\", bottom: \"bottom\" };\n\nexport default Drawer;\n","import React from \"react\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport PropTypes from \"prop-types\";\nimport MaterialCollapse from \"@material-ui/core/Collapse\";\nimport { Divider, ListItem, List } from \"@material-ui/core\";\n\nconst Collapse = props => {\n  const [open, setOpen] = React.useState(props.open);\n\n  React.useEffect(() => {\n    if (props.open !== open) {\n      setOpen(props.open);\n    }\n  }, [props.open]);\n\n  const handleClickFactory = clickLambda => () => {\n    setOpen(!open);\n    clickLambda();\n  };\n\n  return (\n    <List>\n      <ListItem button onClick={handleClickFactory(props.onClick)}>\n        {open ? (\n          <ExpandMore style={{ ...props.iconStyle }} />\n        ) : (\n          <ChevronRightIcon style={{ ...props.iconStyle }} />\n        )}\n        <div style={{ width: \"100%\" }}>{props.item}</div>\n      </ListItem>\n      {props.divided ? <Divider /> : []}\n      <MaterialCollapse\n        className={props.className}\n        style={props.style}\n        in={open}\n      >\n        {props.children}\n      </MaterialCollapse>\n    </List>\n  );\n};\n\nCollapse.propTypes = {\n  item: PropTypes.object,\n  onClick: PropTypes.func,\n  open: PropTypes.bool,\n  divided: PropTypes.bool,\n  iconStyle: PropTypes.object\n};\n\nCollapse.defaultProps = {\n  item: <div></div>,\n  onClick: () => {},\n  open: false,\n  divided: false,\n  style: {},\n  iconStyle: {}\n};\n\nexport default Collapse;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    height: \"100%\",\n    backgroundColor: props => props.backgroundColor,\n    width: props => props.width,\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  logoArea: {\n    padding: \"17px\",\n    textAlign: \"center\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  navigationArea: {\n    flexGrow: 1,\n    display: \"flex\",\n    flexDirection: \"column\",\n    //justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  accountArea: {\n    padding: props => (props.unsetAccountAreaPadding ? \"unset\" : \"17px\"),\n    textAlign: \"center\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n}));\n\nconst VerticalBar = props => {\n  const classes = useStyles(props);\n  return (\n    <div className={classes.container}>\n      <div className={classes.logoArea}>{props.upperElement}</div>\n      <div className={classes.navigationArea}>\n        {props.navigationList.map((element, index) => {\n          return (\n            <div key={index} style={{ padding: \"15px 0px\" }}>\n              {element}\n            </div>\n          );\n        })}\n      </div>\n      <div className={classes.accountArea}>{props.lowerElement}</div>\n    </div>\n  );\n};\n\nVerticalBar.propTypes = {\n  upperElement: PropTypes.node.isRequired,\n  navigationList: PropTypes.array,\n  lowerElement: PropTypes.node.isRequired,\n  width: PropTypes.string,\n  backgroundColor: PropTypes.string,\n  unsetAccountAreaPadding: PropTypes.bool\n};\nVerticalBar.defaultProps = {\n  upperElement: <div></div>,\n  navigationList: [<div></div>],\n  lowerElement: <div></div>,\n  width: \"68px\",\n  backgroundColor: \"#424242\",\n  unsetAccountAreaPadding: false\n};\n\nexport default VerticalBar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nconst ContextMenu = props => {\n  const { style } = props;\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div style={style}>\n      {React.cloneElement(props.element, {\n        onClick: evt => {\n          if (props.element.props.onClick !== undefined) {\n            props.element.props.onClick(); // If user defined a onClick\n          }\n          handleClick(evt); // opens the contextMenu\n        }\n      })}\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {props.menuList.reduce((result, item, index) => {\n          if (item && typeof item !== \"function\") {\n            result.push(\n              <MenuItem\n                onClick={() => {\n                  item.onClick();\n                  if (item.onClose || item.onClose === undefined) {\n                    handleClose();\n                  }\n                }}\n                key={index}\n              >\n                {item.element}\n              </MenuItem>\n            );\n          }\n          return result;\n        }, [])}\n      </Menu>\n    </div>\n  );\n};\n\nContextMenu.propTypes = {\n  element: PropTypes.node.isRequired,\n  navigationList: PropTypes.array,\n  lowerElement: PropTypes.node.isRequired,\n  width: PropTypes.string,\n  backgroundColor: PropTypes.string\n};\nContextMenu.defaultProps = {\n  element: <div>Ahaha</div>,\n  menuList: [\n    {\n      onClick: () => console.log(\"clicked 1\"),\n      element: \"Profile\",\n      onClose: true\n    }\n  ],\n  lowerElement: <div></div>,\n  width: \"68px\",\n  backgroundColor: \"#424242\",\n  style: {}\n};\n\nexport default ContextMenu;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport MaterialTable from \"material-table\";\n\nimport { forwardRef } from \"react\";\n\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n};\n\n// More information in: https://material-table.com/#/docs/all-props\n\nconst Table = (props) => {\n  return (\n    <MaterialTable\n      style={props.style}\n      title={props.title}\n      columns={props.columns}\n      data={props.data}\n      icons={tableIcons}\n      actions={props.actions}\n      options={props.options}\n      components={props.components}\n      localization={props.localization}\n    />\n  );\n};\n\nTable.propTypes = {\n  style: PropTypes.object,\n  title: PropTypes.string,\n  columns: PropTypes.array,\n  data: PropTypes.array,\n  actions: PropTypes.array,\n  options: PropTypes.object,\n  components: PropTypes.object,\n  localization: PropTypes.object,\n};\nTable.defaultProps = {\n  style: {},\n  title: \"\",\n  columns: [],\n  data: [],\n  actions: [],\n  options: {\n    actionsColumnIndex: -1,\n    draggable: false,\n    grouping: false,\n    search: false,\n    toolbar: false,\n    searchFieldAlignment: \"left\",\n    paging: false,\n  },\n  components: {},\n};\n\nexport default Table;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MaterialTabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\n\nfunction TabPanel(props) {\n  const { children, selectedTab, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={selectedTab !== index}\n      id={`tabpanel-${index}`}\n      aria-labelledby={`tab-${index}`}\n      {...other}\n    >\n      {selectedTab === index && children}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  selectedTab: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `tab-${index}`,\n    \"aria-controls\": `tabpanel-${index}`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    height: \"100%\"\n  },\n  tabPanel: {\n    flexGrow: 1,\n    minHeight: 0,\n    height: \"calc(100% - 48px)\",\n    overflowY: \"auto\"\n  }\n}));\n\nexport default function Tabs(props) {\n  const classes = useStyles();\n  const [selectedTab, setSelectedTab] = React.useState(props.selectedTab);\n\n  React.useEffect(() => {\n    if (props.selectedTab !== selectedTab) {\n      setSelectedTab(props.selectedTab);\n    }\n  }, [props.selectedTab]);\n\n  const handleChange = (event, newSelectedTab) => {\n    setSelectedTab(newSelectedTab);\n  };\n\n  return (\n    <div className={classes.root}>\n      <MaterialTabs\n        value={selectedTab}\n        onChange={handleChange}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n      >\n        {props.tabList.map((tab, index) => (\n          <Tab key={index} label={tab.label} {...a11yProps(index)} />\n        ))}\n      </MaterialTabs>\n      {props.tabList.map((tab, index) => (\n        <TabPanel\n          key={index}\n          selectedTab={selectedTab}\n          index={index}\n          className={props.scrollable ? classes.tabPanel : undefined}\n        >\n          {tab.component}\n        </TabPanel>\n      ))}\n    </div>\n  );\n}\n\nTabs.propTypes = {\n  tabList: PropTypes.array,\n  selectedTab: PropTypes.number,\n  scrollable: PropTypes.bool\n};\n\nTabs.defaultProps = {\n  tabList: [\n    { label: \"Tab 1\", component: <div>Component 1</div> },\n    {\n      label: \"Tab 2\",\n      component: (\n        <div>\n          Lorem Ipsum is simply dummy text of the printing and typesetting\n          industry. Lorem Ipsum has been the industry standard dummy text ever\n          since the 1500s, when an unknown printer took a galley of type and\n          scrambled it to make a type specimen book. It has survived not only\n          five centuries, but also the leap into electronic typesetting,\n          remaining essentially unchanged. It was popularised in the 1960s with\n          the release of Letraset sheets containing Lorem Ipsum passages, and\n          more recently with desktop publishing software like Aldus PageMaker\n          including versions of Lorem Ipsum.\n        </div>\n      )\n    },\n    { label: \"Tab 3\", component: <div>Component 3</div> }\n  ],\n  selectedTab: 0,\n  scrollable: true\n};\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PropTypes from \"prop-types\";\n\nconst Text = props => {\n  return <TextField {...props}></TextField>;\n};\n\nText.propTypes = {};\nText.defaultProps = {};\n\nexport default Text;\n","import React from \"react\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { green, grey } from \"@material-ui/core/colors\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles(theme => ({\n  label: {\n    fontFamily: \"Roboto\",\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fontSize: \"14px\",\n    marginLeft: 0,\n    marginRight: 0,\n    marginBottom: 0\n  },\n  colorSwitchBase: {\n    color: grey[300],\n    \"&$colorChecked\": {\n      color: green[500],\n      \"& + $colorBar\": {\n        backgroundColor: green[500]\n      }\n    }\n  },\n  colorBar: {},\n  colorChecked: {}\n}));\n\nconst Toggle = props => {\n  const classes = useStyles();\n  return (\n    <FormControlLabel\n      control={\n        <Switch\n          checked={props.toggle}\n          onChange={props.onToggle}\n          color={props.color}\n          disabled={props.disabled}\n          hidden={props.hidden}\n          size={props.size}\n          classes={{\n            switchBase: classes.colorSwitchBase,\n            checked: classes.colorChecked,\n            track: classes.colorBar\n          }}\n        />\n      }\n      labelPlacement={props.labelPlacement}\n      label={props.label}\n      classes={{ label: classes.label }}\n      style={{ ...props.style, marginLeft: 0, marginRight: 0, marginBottom: 0 }}\n    />\n  );\n};\n\nToggle.propTypes = {\n  toggle: PropTypes.bool,\n  onToggle: PropTypes.func,\n  label: PropTypes.string,\n  color: PropTypes.string,\n  labelPlacement: PropTypes.string, // 'end', 'start', 'top', 'bottom'\n  style: PropTypes.object\n};\nToggle.defaultProps = {\n  color: \"primary\" // or secondary\n};\n\nexport default Toggle;\n","import React, { Component } from \"react\";\nimport { fade, withStyles } from \"@material-ui/core/styles\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport PropTypes from \"prop-types\";\n\nconst styles = theme => ({\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(3),\n      width: \"auto\"\n    }\n  },\n  searchIcon: {\n    width: theme.spacing(7),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  inputRoot: {\n    color: \"inherit\"\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 7),\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: 200\n    }\n  }\n});\n\nclass SearchInput extends Component {\n  searchInput = undefined;\n  timer = undefined;\n\n  handleChange = evt => {\n    this.searchInput = evt.target.value;\n    if (this.props.enableTimeout) {\n      if (this.timer) {\n        clearTimeout(this.timer);\n      }\n      this.timer = setTimeout(this.handleSearch, this.props.time);\n    } else {\n      this.handleSearch();\n    }\n  };\n\n  handleSearch = () => {\n    if (this.searchInput !== undefined) this.props.onChange(this.searchInput);\n  };\n\n  render() {\n    const { classes, style, placeholder } = this.props;\n    return (\n      <div className={classes.search} style={style}>\n        <div className={classes.searchIcon}>\n          <SearchIcon />\n        </div>\n        <InputBase\n          ref={this.setSearchInput}\n          placeholder={placeholder}\n          classes={{\n            root: classes.inputRoot,\n            input: classes.inputInput\n          }}\n          inputProps={{ \"aria-label\": \"search\" }}\n          onChange={this.handleChange}\n        />\n      </div>\n    );\n  }\n}\n\nSearchInput.propTypes = {\n  placeholder: PropTypes.string,\n  onChange: PropTypes.func,\n  time: PropTypes.number,\n  enableTimeout: PropTypes.bool,\n  style: PropTypes.object\n};\n\nSearchInput.defaultProps = {\n  placeholder: \"Search...\",\n  onChange: input => {\n    console.log(input);\n  },\n  time: 250,\n  enableTimeout: true,\n  style: {}\n};\n\nexport default withStyles(styles, { withTheme: true })(SearchInput);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nimport Typography from \"@material-ui/core/Typography\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& > * + *\": {\n      marginTop: theme.spacing(2)\n    }\n  },\n  link: {\n    fontSize: \"24px\",\n    fontWeight: 800,\n    fontFamily: \"Open Sans\",\n    \"&:hover\": {\n      cursor: \"pointer\",\n      textDecoration: \"underline\"\n    }\n  },\n  lastLabel: {\n    fontSize: \"24px\",\n    fontWeight: 800,\n    fontFamily: \"Open Sans\"\n  }\n}));\n\nconst Breadcrumb = props => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Breadcrumbs\n        separator={<NavigateNextIcon fontSize=\"small\" />}\n        aria-label=\"breadcrumb\"\n        style={props.style}\n      >\n        {props.pathList.map((element, index) => {\n          if (props.pathList.length - 1 !== index) {\n            return (\n              <Typography\n                key={index}\n                color=\"primary\"\n                variant=\"inherit\"\n                className={classes.link}\n                onClick={element.function}\n              >\n                {element.label}\n              </Typography>\n            );\n          }\n        })}\n        <Typography color=\"textPrimary\" className={classes.lastLabel}>\n          {props.pathList[props.pathList.length - 1].label}\n        </Typography>\n      </Breadcrumbs>\n    </div>\n  );\n};\n\nBreadcrumb.propTypes = {\n  pathList: PropTypes.array\n};\n\nBreadcrumb.defaultProps = {\n  pathList: [\n    { label: \"Mov.ai\", function: () => console.log(\"pth1/\") },\n    { label: \"User\", function: () => console.log(\"path1/path2\") },\n    { label: \"John Doe\" }\n  ]\n};\n\nexport default Breadcrumb;\n","//========================================================================================\n/*                                                                                      *\n *         Based from https://doc.babylonjs.com/resources/babylonjs_and_reactjs         *\n *                                                                                      */\n//========================================================================================\n\nimport { Engine, Scene } from \"@babylonjs/core\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport ReactResizeDetector from \"react-resize-detector\";\nimport PropTypes from \"prop-types\";\nconst FLEX_STYLE = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  flexGrow: 1\n};\n// import EngineSingleton from \"../Util3d/EngineSingleton\";\n\nconst BaseViewer = props => {\n  const {\n    antialias,\n    engineOptions,\n    adaptToDeviceRatio,\n    sceneOptions,\n    onRender,\n    onSceneReady,\n    is2render,\n    sceneFactory,\n    ...rest\n  } = props;\n  const reactCanvas = useRef(null);\n  const [loaded, setLoaded] = useState(false);\n  const [scene, setScene] = useState(null);\n  const [size, setSize] = useState({ width: 100, height: 100 });\n\n  const setUpScene = engine => {\n    const scene = sceneFactory\n      ? sceneFactory(engine)\n      : new Scene(engine, sceneOptions);\n    setScene(scene);\n    if (scene.isReady()) {\n      onSceneReady(scene);\n    } else {\n      scene.onReadyObservable.addOnce(scene => onSceneReady(scene));\n    }\n    return scene;\n  };\n\n  const onResize = (width, height) => {\n    setSize({\n      width,\n      height\n    });\n    scene && scene.getEngine().resize();\n  };\n\n  const renderScene = (engine, nScene) => {\n    if (!is2render) return;\n    engine.runRenderLoop(() => {\n      if (typeof onRender === \"function\") {\n        onRender(nScene);\n      }\n      nScene && nScene.render();\n    });\n  };\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  useEffect(() => {\n    if (!loaded) {\n      setLoaded(true);\n      const engine = new Engine(\n        reactCanvas.current,\n        antialias,\n        engineOptions,\n        adaptToDeviceRatio\n      );\n      // const engine = new EngineSingleton(reactCanvas.current).engine;\n      const newScene = setUpScene(engine);\n      renderScene(engine, newScene);\n    }\n\n    return () => {\n      console.log(\"Disposing engine and scene\");\n      scene && scene.dispose();\n      scene && scene.getEngine() && scene.getEngine().dispose();\n    };\n  }, [reactCanvas, loaded, scene]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n  // loaded && reactCanvas.current.focus();\n\n  return (\n    <div style={{ ...FLEX_STYLE, maxHeight: \"100%\" }}>\n      <canvas\n        ref={reactCanvas}\n        width={size.width}\n        height={size.height}\n        {...rest}\n      />\n      <ReactResizeDetector handleWidth handleHeight onResize={onResize} />\n    </div>\n  );\n};\n\nBaseViewer.propTypes = {\n  antialias: PropTypes.bool,\n  engineOptions: PropTypes.object,\n  adaptToDeviceRatio: PropTypes.bool,\n  sceneOptions: PropTypes.object,\n  onSceneReady: PropTypes.func,\n  onRender: PropTypes.func,\n  is2render: PropTypes.bool,\n  sceneFactory: PropTypes.func\n};\n\nBaseViewer.defaultProps = {\n  antialias: true,\n  onSceneReady: scene => {},\n  is2render: true,\n  engineOptions: { preserveDrawingBuffer: true, stencil: true }\n};\n\nexport default BaseViewer;\n","import { Clipboard as Clip } from \"mov-fe-lib-core\";\n\nconst SCENE_CONTEXT = \"scene\";\nlet COPY_PASTE_UID = 0;\n\nexport default class Clipboard {\n  static copy(value) {\n    Clip.write(SCENE_CONTEXT, value);\n  }\n  static paste() {\n    return Clip.read(SCENE_CONTEXT);\n  }\n\n  static getUID() {\n    return COPY_PASTE_UID++;\n  }\n}\n","//immutable class, not managing exceptions\nclass Vec2 {\n  constructor(x, y) {\n    this.vec = [x, y].map(z => (z ? z : 0));\n  }\n\n  get x() {\n    return this.vec[0];\n  }\n\n  get y() {\n    return this.vec[1];\n  }\n\n  toArray() {\n    return this.vec;\n  }\n\n  add(y) {\n    return this.op(y, (a, b) => a + b);\n  }\n\n  sub(y) {\n    return this.op(y, (a, b) => a - b);\n  }\n\n  mul(y) {\n    return this.op(y, (a, b) => a * b);\n  }\n\n  div(y) {\n    return this.op(y, (a, b) => a / b);\n  }\n\n  dot(y) {\n    return this.vec.reduce((acc, v, i) => acc + v * y.vec[i], 0);\n  }\n\n  prod(y) {\n    return new Vec2(this.x * y.x - this.y * y.y, this.x * y.y + this.y * y.x);\n  }\n\n  length() {\n    return Math.sqrt(this.dot(this));\n  }\n\n  normalize() {\n    return this.scale(1 / this.length());\n  }\n\n  dual() {\n    return new Vec2(-this.y, this.x);\n  }\n\n  sym() {\n    return this.scale(-1);\n  }\n\n  conj() {\n    return new Vec2(this.x, -this.y);\n  }\n\n  scale(r) {\n    return this.map(z => z * r);\n  }\n\n  map(lambda) {\n    return Vec2.fromArray(this.vec.map(lambda));\n  }\n\n  /**\n   * Returns a vec2 from the operation function bilambda\n   * @param {*} y\n   * @param {*} biLambda\n   */\n  op(y, biLambda) {\n    return Vec2.fromArray(this.vec.map((v, i) => biLambda(v, y.vec[i])));\n  }\n\n  reduce(fold, initial) {\n    return this.vec.reduce(fold, initial);\n  }\n\n  toObject() {\n    return { x: this.x, y: this.y };\n  }\n\n  toString() {\n    return `{x: ${this.x}, y:${this.y}}`;\n  }\n\n  static fromArray(array) {\n    if (array.length < 2) throw new Error(\"array must have size > 2\");\n    return new Vec2(array[0], array[1]);\n  }\n\n  static of(x, y) {\n    return new Vec2(x, y);\n  }\n\n  static ofBabylon(vector3) {\n    return new Vec2(vector3.x, vector3.y);\n  }\n\n  static ZERO = new Vec2(0, 0);\n  static e1 = new Vec2(1, 0);\n  static e2 = new Vec2(0, 1);\n}\n\nexport default Vec2;\n","import { Vector3 } from \"@babylonjs/core\";\nimport Vec2 from \"./Vec2\";\n\n/**\n * Class that describes immutable 3-vectors\n */\nclass Vec3 {\n  //no for's because performance\n  constructor(array) {\n    if (array.constructor !== Array || array.length < 3)\n      throw new Error(`${array} is not a valid 3-vector`);\n    this.vec3 = [...array];\n  }\n\n  get x() {\n    return this.vec3[0];\n  }\n\n  get y() {\n    return this.vec3[1];\n  }\n\n  get z() {\n    return this.vec3[2];\n  }\n\n  add(x) {\n    return this.op(x, (a, b) => a + b);\n  }\n\n  sub(x) {\n    return this.op(x, (a, b) => a - b);\n  }\n\n  mul(x) {\n    return this.op(x, (a, b) => a * b);\n  }\n\n  op(x, operation) {\n    const ans = [];\n    ans[0] = operation(this.vec3[0], x.vec3[0]);\n    ans[1] = operation(this.vec3[1], x.vec3[1]);\n    ans[2] = operation(this.vec3[2], x.vec3[2]);\n    return new Vec3(ans);\n  }\n\n  scale(r) {\n    return this.map(x => x * r);\n  }\n\n  dot(x) {\n    return (\n      this.vec3[0] * x.vec3[0] +\n      this.vec3[1] * x.vec3[1] +\n      this.vec3[2] * x.vec3[2]\n    );\n  }\n\n  map(f) {\n    return new Vec3(this.vec3.map(f));\n  }\n\n  length() {\n    return Math.sqrt(this.dot(this));\n  }\n\n  normalize = () => {\n    const l = this.length();\n    if (l === 0) throw new Error(\"You can't normalize a zero norm vector\");\n    return this.scale(1 / l);\n  };\n\n  toBabylon() {\n    return new Vector3(this.vec3[0], this.vec3[1], this.vec3[2]);\n  }\n\n  toArray() {\n    return this.vec3;\n  }\n\n  toVec2() {\n    return new Vec2(this.x, this.y);\n  }\n\n  equals(v) {\n    if (v.constructor !== this.constructor) return false;\n    return v.vec3\n      .map((x, index) => v.vec3[index] === x)\n      .reduce((e, v) => e && v, true);\n  }\n\n  reduce(binary, initialValue) {\n    return this.vec3.reduce(binary, initialValue);\n  }\n\n  getMax() {\n    return this.reduce((a, b) => Math.max(a, b), -Number.MAX_VALUE);\n  }\n\n  getMin() {\n    return this.reduce((a, b) => Math.min(a, b), Number.MAX_VALUE);\n  }\n\n  someNaNOrInfinite() {\n    return this.vec3.some(x => isNaN(x) || !isFinite(x));\n  }\n\n  static ofBabylon(babylon) {\n    return new Vec3([babylon.x, babylon.y, babylon.z]);\n  }\n\n  static of(array) {\n    return array ? new Vec3(array) : new Vec3([0, 0, 0]);\n  }\n\n  static fromArray(array) {\n    return Vec3.of(array);\n  }\n\n  static random() {\n    return new Vec3([1, 2, 3].map(Math.random()));\n  }\n\n  /**\n   *\n   * @param {*} u: Vec3\n   */\n  static orthogonalBasisFromVector(u) {\n    const identityMatrix = [Vec3.e1, Vec3.e2, Vec3.e3];\n    //choose pivot\n    let pivot = 0;\n    for (let i = 0; i < 3; i++) {\n      if (u.vec3[i] !== 0) {\n        pivot = i;\n        break;\n      }\n    }\n    let v = identityMatrix[(pivot + 1) % 3].add(\n      identityMatrix[pivot].scale(-u.vec3[(pivot + 1) % 3] / u.vec3[pivot])\n    );\n    v = v.normalize();\n    let w = identityMatrix[(pivot + 2) % 3].add(\n      identityMatrix[pivot].scale(-u.vec3[(pivot + 2) % 3] / u.vec3[pivot])\n    );\n    w = w.normalize();\n    w = w.sub(v.scale(v.dot(w)));\n    return { u: u.normalize(), v: v, w: w.normalize() };\n  }\n\n  static ONES = Vec3.of([1, 1, 1]);\n  static ZERO = Vec3.of([0, 0, 0]);\n  static e1 = new Vec3([1, 0, 0]);\n  static e2 = new Vec3([0, 1, 0]);\n  static e3 = new Vec3([0, 0, 1]);\n}\n\nexport default Vec3;\n","import { MasterDB } from \"mov-fe-lib-core\";\n\nclass AnnotationManager {\n  constructor() {\n    if (instance) return instance;\n    instance = this;\n    this.annotations = {};\n    this.observersBySceneId = {};\n  }\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                   Getters & Setters                                  *\n   *                                                                                      */\n  //========================================================================================\n\n  getAnnotations = () => this.annotations;\n\n  load() {\n    this.retrieveAnnotationsFromDb();\n    return this;\n  }\n  /**\n   *\n   * @param {*} scene: Scene\n   * @param {*} lambda: AnnotationManager -> {}\n   */\n  pushObserver(scene, lambda) {\n    const sceneId = scene._uid;\n\n    if (!(sceneId in this.observersBySceneId)) {\n      this.observersBySceneId[sceneId] = [];\n    }\n    this.observersBySceneId[sceneId].push(lambda);\n    return this;\n  }\n\n  clearObserver(scene) {\n    const sceneId = scene._uid;\n    if (sceneId in this.observersBySceneId) {\n      delete this.observersBySceneId[sceneId];\n    }\n  }\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                         Utils                                        *\n   *                                                                                      */\n  //========================================================================================\n\n  retrieveAnnotationsFromDb() {\n    MasterDB.subscribe(\n      { Scope: \"Annotation\", Name: \"*\" },\n      data => {\n        console.log(\"Annotation update\", data);\n        const actionMap = {\n          del: annotation => this.delAnnotation(annotation),\n          set: annotation => this.addAnnotation(annotation)\n        };\n        const annotation = data.key.Annotation;\n        if (data.event in actionMap) {\n          actionMap[data.event](annotation);\n          Object.keys(this.observersBySceneId).forEach(k =>\n            this.observersBySceneId[k].forEach(f => f(this))\n          );\n        }\n      },\n      data => {\n        console.log(\"Annotation start\", data);\n        const annotation = data.value.Annotation;\n        this.addAnnotation(annotation);\n      }\n    );\n  }\n\n  delAnnotation(annotation) {\n    if (!annotation) return;\n    const names2delete = Object.keys(annotation).reduce((e, x) => {\n      e.push(x);\n      return e;\n    }, []);\n    Object.keys(this.annotations).forEach(annotationType => {\n      const value = this.annotations[annotationType];\n      value.names = value.names.filter(x => !names2delete.includes(x));\n      value.labels = value.labels.filter(x => !names2delete.includes(x));\n    });\n  }\n\n  addAnnotation(annotation) {\n    if (!annotation) return;\n    Object.keys(annotation).forEach(name => {\n      const annotationObj = annotation[name];\n      if (!annotationObj.Type) return;\n      const type = annotationObj.Type.toLowerCase();\n      const label = annotationObj.Label;\n      if (!(type in this.annotations)) {\n        this.annotations[type] = { names: [], labels: [] };\n      }\n      this.annotations[type].names.push(name);\n      this.annotations[type].labels.push(label ? label : name);\n    });\n  }\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                        Static                                        *\n   *                                                                                      */\n  //========================================================================================\n\n  static getInstance() {\n    return new AnnotationManager();\n  }\n\n  static getAnnotations() {\n    return AnnotationManager.getInstance().getAnnotations();\n  }\n}\nlet instance = null;\nexport default AnnotationManager;\n","import Clipboard from \"../Utils/Clipboard\";\nimport Vec3 from \"../Math/Vec3\";\nimport { Maybe } from \"monet\";\nimport _capitalize from \"lodash/capitalize\";\nimport { Quaternion, Color3, Vector3 } from \"@babylonjs/core\";\nimport AnnotationManager from \"../Utils/AnnotationManager\";\nimport GlobalRef from \"./GlobalRef\";\n\nclass NodeItem {\n  constructor(mesh, keyValueMap = {}) {\n    this.name = mesh.name;\n    this.mesh = mesh;\n    this.mesh.getMouseContextActions = this.getMouseContextActions;\n    this.mesh.nodeItem = this;\n    this.keyValueMap = keyValueMap;\n  }\n\n  dispose() {\n    this.mesh.dispose();\n  }\n\n  toDict() {\n    return {\n      name: this.name,\n      type: this.getType(),\n      position: Vec3.ofBabylon(this.mesh?.position).toArray(),\n      quaternion: Maybe.fromNull(this.mesh?.rotationQuaternion)\n        .map(x => [x.w, x.x, x.y, x.z])\n        .orLazy(() => {\n          const q = Quaternion.RotationYawPitchRoll(\n            this.mesh.rotation.y,\n            this.mesh.rotation.x,\n            this.mesh.rotation.z\n          );\n          return [q.w, q.x, q.y, q.z];\n        }),\n      color: Maybe.fromNull(this.mesh?.material)\n        .flatMap(x => Maybe.fromNull(x.diffuseColor).map(z => [z.r, z.g, z.b]))\n        .orSome([0, 0, 0]),\n      keyValueMap: this.keyValueMap,\n      isVisible: this.mesh.isEnabled()\n    };\n  }\n\n  /**\n   * Generates json based on https://github.com/rjsf-team/react-jsonschema-form\n   */\n  toForm() {\n    const info = this.toDict();\n    const color = new Color3(info.color[0], info.color[1], info.color[2]);\n    const schema = {\n      jsonSchema: {\n        type: \"object\",\n        properties: {\n          oldName: {\n            type: \"string\"\n          },\n          name: {\n            type: \"string\",\n            title: \"Name\"\n          },\n          type: {\n            type: \"string\",\n            title: \"Type\"\n          },\n          position: {\n            type: \"object\",\n            title: \"Position\",\n            properties: {\n              x: {\n                type: \"number\",\n                title: \"x\"\n              },\n              y: {\n                type: \"number\",\n                title: \"y\"\n              },\n              z: {\n                type: \"number\",\n                title: \"z\"\n              }\n            }\n          },\n          quaternion: {\n            type: \"object\",\n            title: \"Orientation\",\n            properties: {\n              w: {\n                type: \"number\",\n                title: \"w\"\n              },\n              x: {\n                type: \"number\",\n                title: \"x\"\n              },\n              y: {\n                type: \"number\",\n                title: \"y\"\n              },\n              z: {\n                type: \"number\",\n                title: \"z\"\n              }\n            }\n          },\n          color: {\n            type: \"string\",\n            title: \"Color\"\n          }\n        }\n      },\n      uiSchema: {\n        type: {\n          \"ui:disabled\": true\n        },\n        color: {\n          \"ui:widget\": \"color\"\n        },\n        oldName: {\n          \"ui:widget\": \"hidden\"\n        },\n        position: {\n          \"ui:widget\": \"collapse\"\n        },\n        quaternion: {\n          \"ui:widget\": \"collapse\"\n        }\n      },\n      data: {\n        oldName: info.name,\n        name: info.name,\n        type: info.type,\n        position: {\n          x: info.position[0],\n          y: info.position[1],\n          z: info.position[2]\n        },\n        quaternion: {\n          w: info.quaternion[0],\n          x: info.quaternion[1],\n          y: info.quaternion[2],\n          z: info.quaternion[3]\n        },\n        color: color.toHexString()\n      }\n    };\n\n    NodeItem.setAnnotations2Form(schema, this.keyValueMap);\n    return schema;\n  }\n\n  /**\n   * Changes NodeItem based on a form\n   *\n   * Warning: side effect function\n   * @param {*} form\n   */\n  ofForm(form) {\n    this.name = form.name;\n    this.mesh.name = form.name;\n\n    Maybe.fromNull(form?.position).forEach(position => {\n      const pos = [position.x, position.y, position.z].map(Number.parseFloat);\n      this.mesh.position = Vector3.FromArray(pos);\n    });\n    Maybe.fromNull(form?.quaternion).forEach(quaternion => {\n      const quat = [quaternion.x, quaternion.y, quaternion.z, quaternion.w].map(\n        Number.parseFloat\n      );\n      this.mesh.rotationQuaternion = Quaternion.FromArray(quat).normalize();\n    });\n    if (this.mesh.material) {\n      this.mesh.material.diffuseColor = Color3.FromHexString(form.color);\n      this.mesh.material.emissiveColor = Color3.FromHexString(form.color);\n    }\n    this.keyValueMap = { ...form.annotations };\n  }\n\n  getType = () => NodeItem.TYPE;\n\n  getMouseContextActions = mainView => {\n    return [\n      {\n        title: \"Copy\",\n        onClick: () => Clipboard.copy(this.getCopyFunction())\n      },\n      {\n        title: \"Delete\",\n        onClick: () =>\n          mainView\n            .getNodeFromTree(this.name)\n            .forEach(node => mainView.onDeleteNode(node, false))\n      }\n    ];\n  };\n\n  getCopyFunction(isForceUpdate = true) {\n    // mousePosFromRoot : Vector3\n    return (mousePosFromRoot, someMainView) =>\n      someMainView.getSceneMemory().map(({ scene }) => {\n        const { item: rootItem } = someMainView.getRootNode();\n        const copyDict = this.toDict();\n        copyDict.name += \"_copy\" + Clipboard.getUID();\n        const newPosArray = Vec3.ofBabylon(mousePosFromRoot).toArray();\n        // preserves z-coordinate\n        newPosArray[2] = copyDict.position[2];\n        copyDict.position = newPosArray;\n        const copiedNodeItem = this.ofDict(scene, copyDict, someMainView);\n        const { mesh: copiedMesh } = copiedNodeItem;\n        copiedMesh.parent = rootItem.mesh;\n        someMainView.addNodeItem2Tree(\n          copiedNodeItem,\n          GlobalRef.NAME,\n          true,\n          true,\n          isForceUpdate\n        );\n        return copiedNodeItem;\n      });\n  }\n\n  delVertex() {\n    let delVertex = this.mesh.graphVertex?.delVertex;\n    if (!delVertex) {\n      const childrenWithDelVertex = (this.mesh?._children || [])\n        .filter(childMesh => !!childMesh.graphVertex)\n        .map(childMesh => childMesh.graphVertex.delVertex);\n      delVertex = () => childrenWithDelVertex.forEach(del => del());\n    }\n    delVertex();\n  }\n\n  //========================================================================================\n  /*                                                                                      *\n   *                           Static attributes/methods                                  *\n   *                                                                                      */\n  //========================================================================================\n\n  static TYPE = \"NodeItem\";\n\n  // side-effect function\n  static mapDict2Mesh(dict, mesh) {\n    if (!mesh) throw new Error(\"can't map a null mesh\");\n    Maybe.fromNull(dict).forEach(someDict => {\n      Maybe.fromNull(dict.name).forEach(name => (mesh.name = name));\n      Maybe.fromNull(someDict.position).forEach(\n        position => (mesh.position = Vec3.of(position).toBabylon())\n      );\n      Maybe.fromNull(someDict.quaternion).forEach(quaternion => {\n        const babylonQuaternion = new Quaternion(\n          quaternion[1],\n          quaternion[2],\n          quaternion[3],\n          quaternion[0]\n        );\n        mesh.rotationQuaternion = babylonQuaternion.normalize();\n      });\n      Maybe.fromNull(someDict.color).forEach(color => {\n        const babylonColor = new Color3(color[0], color[1], color[2]);\n        Maybe.fromNull(mesh.material).forEach(material => {\n          Maybe.fromNull(material.diffuseColor).forEach(\n            z => (mesh.material.diffuseColor = babylonColor)\n          );\n          Maybe.fromNull(material.emissiveColor).forEach(\n            z => (mesh.material.emissiveColor = babylonColor)\n          );\n        });\n      });\n    });\n    return mesh;\n  }\n\n  // side effect function\n  static setAnnotations2Form(schema, keyValueMap = {}) {\n    schema.jsonSchema.properties.annotations = {\n      title: \"Annotations\",\n      type: \"object\",\n      properties: {}\n    };\n    schema.uiSchema.annotations = {\n      \"ui:widget\": \"collapse\"\n    };\n    schema.data[\"annotations\"] = { ...keyValueMap };\n    const annotations = AnnotationManager.getAnnotations();\n\n    [\"safety\", \"behaviour\", \"localization\", \"navigation\"].forEach(\n      annotation => {\n        // if (annotations[annotation].labels.length > 0) {\n        schema.jsonSchema.properties.annotations.properties[annotation] = {\n          title: _capitalize(annotation),\n          type: \"string\"\n        };\n        schema.uiSchema.annotations[annotation] = {\n          \"ui:widget\": \"selectScopeModal\",\n          \"ui:options\": {\n            scopeList: \"Annotation\",\n            name: _capitalize(annotation),\n            filter: e => {\n              return annotations[annotation].names.includes(e.name);\n            }\n          }\n        };\n        // }\n      }\n    );\n  }\n}\n\nexport default NodeItem;\n","import Vec3 from \"./Vec3\";\nimport { Matrix } from \"@babylonjs/core\";\n\nclass Mat3 {\n  constructor(v1, v2, v3) {\n    const v = [v1, v2, v3];\n    for (let i = 0; i < v.length; i++) {\n      if (v[i].constructor !== Array || v[i].length < 3)\n        throw Error(\"One of the inputs is not a array\");\n    }\n    this.mat3 = v.map(x => new Vec3(x));\n  }\n\n  /**\n   * Matrix prod with  3-vector\n   * @param {*} v: 3-vector\n   *\n   * returns 3-vector\n   */\n  prodVec(v) {\n    let ans = new Vec3([0, 0, 0]);\n    for (let i = 0; i < this.mat3.length; i++) {\n      ans = ans.add(this.mat3[i].scale(v.vec3[i]));\n    }\n    return ans;\n  }\n\n  /**\n   * Matrix transpose prod with 3-vec\n   * @param {*} v : 3-vector\n   */\n  dotVec(v) {\n    const ans = [0, 0, 0];\n    for (let i = 0; i < this.mat3.length; i++) {\n      ans[i] = this.mat3[i].dot(v);\n    }\n    return new Vec3(ans);\n  }\n\n  prod(m) {\n    const u = this.prodVec(m.mat3[0]);\n    const v = this.prodVec(m.mat3[1]);\n    const w = this.prodVec(m.mat3[2]);\n    return new Mat3(u.vec3, v.vec3, w.vec3);\n  }\n\n  dot(m) {\n    const u = this.dotVec(m.mat3[0]);\n    const v = this.dotVec(m.mat3[1]);\n    const w = this.dotVec(m.mat3[2]);\n    return new Mat3(u.vec3, v.vec3, w.vec3);\n  }\n\n  map(f) {\n    const u = this.mat3[0].map(f);\n    const v = this.mat3[1].map(f);\n    const w = this.mat3[2].map(f);\n    return new Mat3(u.vec3, v.vec3, w.vec3);\n  }\n\n  equals(mat) {\n    if (mat.constructor !== this.constructor) return false;\n    return this.mat3\n      .map((v, index) => v.equals(mat.mat3[index]))\n      .reduce((e, v) => e && v, true);\n  }\n\n  static ofBabylonMatrix(babylonMat) {\n    const arrayMat = Matrix.GetAsMatrix3x3(babylonMat);\n    const u = [arrayMat[0], arrayMat[1], arrayMat[2]];\n    const v = [arrayMat[3], arrayMat[4], arrayMat[5]];\n    const w = [arrayMat[6], arrayMat[7], arrayMat[8]];\n    return new Mat3(u, v, w);\n  }\n\n  static of(v1, v2, v3) {\n    return new Mat3(v1, v2, v3);\n  }\n\n  static eye() {\n    return new Mat3([1, 0, 0], [0, 1, 0], [0, 0, 1]);\n  }\n}\n\nexport default Mat3;\n","import { GizmoManager } from \"@babylonjs/core\";\n\nclass GizmoManagerBuilder {\n  constructor(scene) {\n    this._scene = scene;\n    this._isPosition = false;\n    this._isRotation = false;\n    this._isBoundingBox = false;\n    this._isScale = false;\n    this._usePointerToAttachGizmos = false;\n  }\n\n  isPosition(v) {\n    this._isPosition = v;\n    return this;\n  }\n\n  isRotation(v) {\n    this._isRotation = v;\n    return this;\n  }\n\n  isBoundingBox(v) {\n    this._isBoundingBox = v;\n    return this;\n  }\n\n  isScale(v) {\n    this._isScale = v;\n    return this;\n  }\n\n  usePointerToAttachGizmos(v) {\n    this._usePointerToAttachGizmos = v;\n    return this;\n  }\n\n  build() {\n    const gizmoManager = new GizmoManager(this._scene);\n    gizmoManager.positionGizmoEnabled = this._isPosition;\n    gizmoManager.rotationGizmoEnabled = this._isRotation;\n    gizmoManager.boundingBoxGizmoEnabled = this._isBoundingBox;\n    gizmoManager.scaleGizmoEnabled = this._isScale;\n    gizmoManager.usePointerToAttachGizmos = this._usePointerToAttachGizmos;\n    return gizmoManager;\n  }\n}\n\nexport default GizmoManagerBuilder;\n","import { ArcRotateCamera } from \"@babylonjs/core\";\n\nclass CameraBuilder {\n  constructor(scene) {\n    this._scene = scene;\n    this._sphericalCoordinates = null;\n    this._target = null;\n    this._name = `camera${Math.floor(Math.random() * 1e3)}`;\n  }\n\n  name(name) {\n    this._name = name;\n    return this;\n  }\n\n  sphericalCoordinates(sphericalCoordinates) {\n    this._sphericalCoordinates = sphericalCoordinates;\n    return this;\n  }\n\n  target(target) {\n    this._target = target;\n    return this;\n  }\n\n  build() {\n    const variables = Object.values(this);\n    variables.forEach(x => {\n      if (x === null)\n        throw new Error(\n          `There are missing variables to build a camera, e.g ${x}`\n        );\n    });\n    return new ArcRotateCamera(\n      this._name,\n      this._sphericalCoordinates.x,\n      this._sphericalCoordinates.y,\n      this._sphericalCoordinates.z,\n      this._target,\n      this._scene\n    );\n  }\n}\n\nexport default CameraBuilder;\n","import { PointLight } from \"@babylonjs/core\";\n\nclass PositionalLightBuilder {\n  constructor(scene) {\n    this._scene = scene;\n    this._position = null;\n    this._name = `light${Math.floor(Math.random() * 1e3)}`;\n    this._intensity = 1;\n  }\n\n  position(position) {\n    this._position = position;\n    return this;\n  }\n\n  name(name) {\n    this._name = name;\n    return this;\n  }\n\n  intensity(intensity) {\n    this._intensity = intensity;\n    return this;\n  }\n\n  build() {\n    const variables = Object.values(this);\n    variables.forEach(x => {\n      if (x === null)\n        throw new Error(\n          `There are missing variables to build a light, e.g ${x}`\n        );\n    });\n    const light = new PointLight(this._name, this._position, this._scene);\n    light.intensity = this._intensity;\n    return light;\n  }\n}\n\nexport default PositionalLightBuilder;\n","import { Mesh, Vector3, Color3, MeshBuilder } from \"@babylonjs/core\";\nclass ReferentialBuilder {\n  constructor(scene) {\n    this._scene = scene;\n    this._name = `referential${Math.floor(Math.random() * 1e3)}`;\n    this._isPickable = true;\n    this._boxParams = { isVisible: true, size: 0.25 };\n    this._size = 1;\n  }\n\n  name(name) {\n    this._name = name;\n    return this;\n  }\n\n  isPickable(isPickable) {\n    this._isPickable = isPickable;\n    return this;\n  }\n\n  boxParams(boxParams) {\n    this._boxParams = boxParams;\n    return this;\n  }\n\n  size(size) {\n    this._size = size;\n    return this;\n  }\n\n  build() {\n    const size = this._size;\n    const axisX = Mesh.CreateLines(\n      `axisX${this._name}`,\n      [\n        new Vector3.Zero(),\n        new Vector3(size, 0, 0),\n        new Vector3(size * 0.95, 0.05 * size, 0),\n        new Vector3(size, 0, 0),\n        new Vector3(size * 0.95, -0.05 * size, 0)\n      ],\n      this._scene\n    );\n    axisX.color = new Color3(1, 0, 0);\n    axisX.isPickable = false;\n    const axisY = Mesh.CreateLines(\n      `axisY${this._name}`,\n      [\n        new Vector3.Zero(),\n        new Vector3(0, size, 0),\n        new Vector3(-0.05 * size, size * 0.95, 0),\n        new Vector3(0, size, 0),\n        new Vector3(0.05 * size, size * 0.95, 0)\n      ],\n      this._scene\n    );\n    axisY.color = new Color3(0, 1, 0);\n    axisY.isPickable = false;\n    const axisZ = Mesh.CreateLines(\n      `axisZ${this._name}`,\n      [\n        new Vector3.Zero(),\n        new Vector3(0, 0, size),\n        new Vector3(0, -0.05 * size, size * 0.95),\n        new Vector3(0, 0, size),\n        new Vector3(0, 0.05 * size, size * 0.95)\n      ],\n      this._scene\n    );\n    axisZ.color = new Color3(0, 0, 1);\n    axisZ.isPickable = false;\n\n    const localOrigin = MeshBuilder.CreateBox(\n      this._name,\n      { size: this._boxParams.size },\n      this._scene\n    );\n    localOrigin.isVisible = this._boxParams.isVisible;\n    localOrigin.isPickable = this._isPickable;\n\n    axisX.parent = localOrigin;\n    axisY.parent = localOrigin;\n    axisZ.parent = localOrigin;\n\n    return localOrigin;\n  }\n}\n\nexport default ReferentialBuilder;\n","import {\n  Mesh,\n  Vector3,\n  StandardMaterial,\n  Texture,\n  Space\n} from \"@babylonjs/core\";\n\nclass GroundBuilder {\n  constructor(scene) {\n    this._scene = scene;\n    this._name = `camera${Math.floor(Math.random() * 1e3)}`;\n    this._width = 1;\n    this._height = 1;\n    this._textureSrc = null;\n    this._isPickable = false;\n  }\n\n  name(name) {\n    this._name = name;\n    return this;\n  }\n\n  width(width) {\n    this._width = width;\n    return this;\n  }\n\n  height(height) {\n    this._height = height;\n    return this;\n  }\n\n  textureSrc(textureSrc) {\n    this._textureSrc = textureSrc;\n    return this;\n  }\n\n  isPickable(isPickable) {\n    this._isPickable = isPickable;\n    return this;\n  }\n\n  build() {\n    const ground = Mesh.CreateGround(\n      this._name,\n      this._width,\n      this._height,\n      1,\n      this._scene\n    );\n    ground.translate(new Vector3(0, -1, 0), 1e-1, Space.WORLD);\n    if (this._textureSrc) {\n      ground.material = new StandardMaterial(\n        `Texture${this._name}`,\n        this._scene\n      );\n      ground.material.ambientTexture = new Texture(\n        this._textureSrc,\n        this._scene\n      );\n      ground.material.ambientTexture.uScale = 1;\n      ground.material.ambientTexture.vScale = 1;\n    }\n    ground.isPickable = this._isPickable;\n    return ground;\n  }\n}\n\nexport default GroundBuilder;\n","import { DirectionalLight } from \"@babylonjs/core\";\n\nclass DirectionalLightBuilder {\n  constructor(scene) {\n    this._scene = scene;\n    this._direction = null;\n    this._name = `Dlight${Math.floor(Math.random() * 1e3)}`;\n    this._intensity = 1;\n  }\n\n  direction(direction) {\n    this._direction = direction;\n    return this;\n  }\n\n  name(name) {\n    this._name = name;\n    return this;\n  }\n\n  intensity(intensity) {\n    this._intensity = intensity;\n    return this;\n  }\n\n  build() {\n    const variables = Object.values(this);\n    variables.forEach(x => {\n      if (x === null)\n        throw new Error(\n          `There are missing variables to build a light, e.g ${x}`\n        );\n    });\n    const light = new DirectionalLight(\n      this._name,\n      this._direction.normalize(),\n      this._scene\n    );\n    light.intensity = this._intensity;\n    return light;\n  }\n}\n\nexport default DirectionalLightBuilder;\n","import NodeItem from \"./NodeItem\";\nimport { Maybe } from \"monet\";\nimport Util3d from \"../Util3d/Util3d\";\nimport { Color3 } from \"@babylonjs/core\";\n\nclass Box extends NodeItem {\n  static DEFAULT_SIZE = 0.5;\n\n  constructor(mesh, size = Box.DEFAULT_SIZE, keyValueMap = {}) {\n    super(mesh, keyValueMap);\n    this.size = size;\n  }\n\n  toDict() {\n    const dict = super.toDict();\n    dict.size = this.size;\n    return dict;\n  }\n\n  ofDict(scene, dict = null, mainView = null) {\n    return Box.ofDict(scene, dict, mainView);\n  }\n\n  getType = () => Box.TYPE;\n\n  static TYPE = \"Box\";\n\n  static ofDict(scene, dict = null, mainView = null) {\n    const maybeDict = Maybe.fromNull(dict);\n    const size = maybeDict\n      .flatMap(z => Maybe.fromNull(z.size))\n      .orSome(Box.DEFAULT_SIZE);\n    const name = maybeDict\n      .flatMap(z => Maybe.fromNull(z.name))\n      .orSome(`Box${Math.floor(Math.random() * 1e3)}`);\n    const keyValueMap = maybeDict\n      .flatMap(d => Maybe.fromNull(d.keyValueMap))\n      .orUndefined();\n\n    const boxMesh = Util3d.createBox(\n      scene,\n      new Color3(Math.random(), Math.random(), Math.random()),\n      size,\n      name\n    );\n    NodeItem.mapDict2Mesh(dict, boxMesh);\n    return new Box(boxMesh, size, keyValueMap);\n  }\n}\n\nexport default Box;\n","import Vec3 from \"../Math/Vec3\";\nimport Mat3 from \"../Math/Mat3\";\nimport { Maybe } from \"monet\";\nimport GizmoManagerBuilder from \"./GizmoManagerBuilder.js\";\nimport CameraBuilder from \"./CameraBuilder\";\nimport PositionalLightBuilder from \"./PositionalLightBuilder\";\nimport ReferentialBuilder from \"./ReferentialBuilder\";\nimport GroundBuilder from \"./GroundBuilder\";\nimport DirectionalLightBuilder from \"./DirectionalLightBuilder\";\nimport earcut from \"earcut\";\nimport {\n  Vector3,\n  Color3,\n  Quaternion,\n  StandardMaterial,\n  VertexData,\n  Mesh,\n  Matrix,\n  MeshBuilder,\n  VertexBuffer,\n  Curve3\n} from \"@babylonjs/core\";\nimport GlobalRef from \"../NodeItem/GlobalRef\";\nimport Box from \"../NodeItem/Box\";\n\nclass Util3d {\n  /**\n   *\n   * @param {*} mesh\n   * @param {*} localPosition: Vector3\n   * @returns Vec3\n   */\n  static getGlobalCoordinates(mesh, localPosition) {\n    if (\n      (mesh.parent && mesh.parent.name === GlobalRef.NAME) ||\n      mesh.name === GlobalRef.NAME\n    ) {\n      return Vec3.ofBabylon(localPosition);\n    }\n    const meshParent = mesh.parent;\n    const meshParentPos = Vec3.ofBabylon(meshParent.position);\n    const meshParentRotMat = Util3d.getRotationMatrix(meshParent);\n    const meshParentScaling = Vec3.ofBabylon(meshParent.scaling);\n    return meshParentRotMat\n      .prodVec(\n        meshParentScaling.mul(\n          Util3d.getGlobalCoordinates(mesh.parent, localPosition)\n        )\n      )\n      .add(meshParentPos);\n  }\n\n  /**\n   *\n   * @param {*} mesh\n   * @param {*} x: Vector3 in mesh local coord\n   * @returns Vector3\n   */\n  static getGlobalCoord(mesh, x) {\n    if (\n      (mesh.parent && mesh.parent.name === GlobalRef.NAME) ||\n      mesh.name === GlobalRef.NAME\n    ) {\n      return x;\n    }\n    const meshParent = mesh.parent;\n    const meshParentPos = Vec3.ofBabylon(meshParent.position);\n    const meshParentRotMat = Util3d.getRotationMatrix(meshParent);\n    const meshParentScaling = Vec3.ofBabylon(meshParent.scaling);\n    const childPos = meshParentRotMat\n      .prodVec(meshParentScaling.mul(Vec3.ofBabylon(x)))\n      .add(meshParentPos);\n    return Util3d.getGlobalCoord(meshParent, childPos.toBabylon());\n  }\n\n  static getBabylonCoordinates(positionInWorld) {\n    return GlobalRef.forwardCoordinates(positionInWorld);\n  }\n\n  /**\n   *\n   * @param {*} mesh\n   * @param {*} worldPosition: Vector3 from GlobalRef coordinate frame\n   */\n  static getLocalCoordFromGlobal(mesh, worldPosition, withTranslation = true) {\n    if (\n      (mesh.parent && mesh.parent.name === GlobalRef.NAME) ||\n      mesh.name === GlobalRef.NAME\n    )\n      return Vec3.ofBabylon(worldPosition);\n    const meshParent = mesh.parent;\n    const meshParentPos = withTranslation\n      ? Vec3.ofBabylon(meshParent.position)\n      : Vec3.ZERO;\n    const meshParentRotMat = Util3d.getRotationMatrix(meshParent);\n    const meshParentScaling = Vec3.ofBabylon(meshParent.scaling);\n    return meshParentScaling\n      .map(z => 1 / z)\n      .mul(\n        meshParentRotMat.dotVec(\n          Util3d.getLocalCoordFromGlobal(\n            meshParent,\n            worldPosition,\n            withTranslation\n          ).sub(meshParentPos)\n        )\n      );\n  }\n\n  /**\n   *\n   * @param {*} mesh\n   * @param {*} worldPosition: Vec3 from World(Babylon) coordinate frame\n   *\n   * @returns localPosition: Vec3\n   */\n  static getLocalCoordFromWorld(mesh, worldPosition, withTranslation = true) {\n    /// WARNING: very similar with getLocalCoordFromGlobal\n    if (!mesh.parent) {\n      return worldPosition;\n    }\n    const meshParent = mesh.parent;\n    const meshParentPos = withTranslation\n      ? Vec3.ofBabylon(meshParent.position)\n      : Vec3.ZERO;\n    const meshParentRotMat = Util3d.getRotationMatrix(meshParent);\n    const meshParentScaling = Vec3.ofBabylon(meshParent.scaling);\n    // assume scaling != 0\n    const inverseScaling = meshParentScaling.map(x => 1.0 / x);\n\n    return inverseScaling.mul(\n      meshParentRotMat.dotVec(\n        Util3d.getLocalCoordFromWorld(\n          meshParent,\n          worldPosition,\n          withTranslation\n        ).sub(meshParentPos)\n      )\n    );\n  }\n\n  /**\n   * World to Global coords\n   * @param {*} parentView: MainView\n   */\n  static toGlobalCoord = parentView => {\n    const rootMesh = parentView.getRootNode().item.mesh;\n    return arrayOfVector3 => {\n      const transform = p =>\n        Util3d.getLocalCoordFromWorld(\n          { parent: rootMesh },\n          Vec3.ofBabylon(p)\n        ).toBabylon();\n      if (Array.isArray(arrayOfVector3)) {\n        return arrayOfVector3.map(transform);\n      }\n      return transform(arrayOfVector3);\n    };\n  };\n\n  static getRotationMatrix(mesh) {\n    const localRotationMatrix = new Matrix();\n    const maybeQuaternion = Maybe.fromNull(mesh?.rotationQuaternion);\n    maybeQuaternion.forEach(quaternion =>\n      quaternion.toRotationMatrix(localRotationMatrix)\n    );\n    maybeQuaternion.orElseRun(() => {\n      const quaternion = Quaternion.RotationYawPitchRoll(\n        mesh.rotation.y,\n        mesh.rotation.x,\n        mesh.rotation.z\n      );\n      quaternion.toRotationMatrix(localRotationMatrix);\n    });\n    return Mat3.ofBabylonMatrix(localRotationMatrix);\n  }\n\n  static showNormals(scene, mesh, size = 1, color = Color3.Red()) {\n    const normals = mesh.getVerticesData(VertexBuffer.NormalKind);\n    const positions = mesh.getVerticesData(VertexBuffer.PositionKind);\n    const lines = [];\n    for (let i = 0; i < normals.length; i += 3) {\n      const v1 = Vector3.FromArray(positions, i);\n      const v2 = v1.add(Vector3.FromArray(normals, i).scaleInPlace(size));\n      lines.push([v1.add(mesh.position), v2.add(mesh.position)]);\n    }\n    const normalLines = MeshBuilder.CreateLineSystem(\n      \"normalLines\",\n      { lines: lines },\n      scene\n    );\n    normalLines.color = color;\n    normalLines.parent = mesh;\n    return normalLines;\n  }\n\n  static orthogonalBasisFromVector(u) {\n    const identityMatrix = [\n      new Vector3(1, 0, 0),\n      new Vector3(0, 1, 0),\n      new Vector3(0, 0, 1)\n    ];\n    const uArray = [u.x, u.y, u.z];\n    // choose pivot\n    let pivot = 0;\n    for (let i = 0; i < 3; i++) {\n      if (uArray[i] !== 0) {\n        pivot = i;\n        break;\n      }\n    }\n    let v = identityMatrix[(pivot + 1) % 3].add(\n      identityMatrix[pivot].scale(-uArray[(pivot + 1) % 3] / uArray[pivot])\n    );\n    v = v.normalize();\n    let w = identityMatrix[(pivot + 2) % 3].add(\n      identityMatrix[pivot].scale(-uArray[(pivot + 2) % 3] / uArray[pivot])\n    );\n    w = w.normalize();\n    w = w.subtract(v.scale(Vector3.Dot(v, w)));\n    return { u: Vector3.FromArray(uArray).normalize(), v: v, w: w.normalize() };\n  }\n\n  static createOrientedCone = (\n    scene,\n    u = new Vector3(1, 0, 0),\n    color = Color3.Gray(),\n    name = `OrientedCone${randomDigits()}`,\n    isPickable = true,\n    segments = 16\n  ) => {\n    const surface = {\n      positions: [],\n      faces: []\n    };\n    const d = u.length() / 3;\n    const mat3 = Util3d.orthogonalBasisFromVector(u);\n    const v = mat3.v;\n    const w = mat3.w;\n\n    const orientation = Math.sign(Vector3.Dot(Vector3.Cross(v, w), u));\n    // positions\n    for (let i = 0; i < segments; i++) {\n      const theta = orientation * ((2 * Math.PI) / segments) * i;\n      surface.positions.push(\n        v.scale(d * Math.cos(theta)).add(w.scale(d * Math.sin(theta)))\n      );\n    }\n\n    surface.positions.push(Vector3.Zero());\n    surface.positions.push(u);\n\n    const zeroIndex = surface.positions.length - 1;\n    const uIndex = surface.positions.length - 2;\n\n    for (let i = 0; i < segments; i++) {\n      // bottom faces\n      surface.faces.push([zeroIndex, (i + 1) % segments, i]);\n      // cone faces\n      surface.faces.push([uIndex, i, (i + 1) % segments]);\n    }\n\n    // mesh\n    const mesh = Util3d.meshFromPositionAndFaces(\n      name,\n      scene,\n      surface.positions,\n      surface.faces\n    );\n    mesh.convertToFlatShadedMesh();\n    const material = new StandardMaterial(`OrientedConeMaterial${name}`, scene);\n    material.diffuseColor = color;\n    material.emissiveColor = color;\n    mesh.material = material;\n    mesh.isPickable = isPickable;\n    return mesh;\n  };\n\n  static createSphere = (\n    scene,\n    color = Color3.Gray(),\n    diameter = 1,\n    name = `Sphere${randomDigits()}`,\n    isPickable = true\n  ) => {\n    const sphere = Mesh.CreateSphere(name, 16, diameter, scene);\n    const material = Util3d.getMaterialFromColor(\n      color,\n      scene,\n      `SphereMaterial${name}`\n    );\n    sphere.material = material;\n    sphere.isPickable = isPickable;\n    return sphere;\n  };\n\n  static createBox = (\n    scene,\n    color = Color3.Gray(),\n    size = Box.DEFAULT_SIZE,\n    name = `Box${randomDigits()}`,\n    isPickable = true\n  ) => {\n    const box = Mesh.CreateBox(name, size, scene);\n    const material = new StandardMaterial(`BoxMaterial${name}`, scene);\n    material.diffuseColor = color;\n    material.emissiveColor = color;\n    box.material = material;\n    box.isPickable = isPickable;\n    return box;\n  };\n\n  static createTubeFromPoints = (\n    scene,\n    points,\n    color = Color3.Gray(),\n    radius = 1,\n    name = `Tube${randomDigits()}`,\n    isPickable = true\n  ) => {\n    const mesh = MeshBuilder.CreateTube(\n      name,\n      {\n        path: points,\n        radius: radius,\n        sideOrientation: Mesh.DOUBLESIDE,\n        updatable: true,\n        cap: Mesh.CAP_ALL\n      },\n      scene\n    );\n    mesh.material = Util3d.getMaterialFromColor(\n      color,\n      scene,\n      `Material${name}`\n    );\n    mesh.isPickable = isPickable;\n    return mesh;\n  };\n\n  static positionalLightBuilder = scene => {\n    return new PositionalLightBuilder(scene);\n  };\n\n  static directionalLightBuilder = scene => {\n    return new DirectionalLightBuilder(scene);\n  };\n\n  static cameraBuilder(scene) {\n    return new CameraBuilder(scene);\n  }\n\n  static gizmoManagerBuilder(scene) {\n    return new GizmoManagerBuilder(scene);\n  }\n\n  static referentialBuilder = scene => {\n    return new ReferentialBuilder(scene);\n  };\n\n  /**\n   * Return a maybe position of intersection of the mouse and a ground mesh\n   *\n   * @param {Scene} scene Babylon scene\n   * @param {Ground} ground a Babylon mesh that represents the ground\n   * @returns {Maybe} a maybe Vector3 representing the mouse ground intersection\n   */\n  static getGroundPosition = function (scene, ground) {\n    // Use a predicate to get position on the ground\n    const pickInfo = scene.pick(\n      scene.pointerX,\n      scene.pointerY,\n      mesh => mesh === ground\n    );\n    if (pickInfo.hit) return Maybe.some(pickInfo.pickedPoint);\n    return Maybe.none();\n  };\n\n  static pickMesh = (scene, ground) => {\n    const pickInfo = scene.pick(\n      scene.pointerX,\n      scene.pointerY,\n      mesh => mesh !== ground && mesh.isEnabled()\n    );\n    if (pickInfo.hit && pickInfo.pickedMesh.isPickable) {\n      return Maybe.some(pickInfo.pickedMesh);\n    }\n    return Maybe.none();\n  };\n\n  static groundBuilder = scene => {\n    return new GroundBuilder(scene);\n  };\n\n  static meshFromPositionAndFaces(\n    name,\n    scene,\n    positions,\n    faces,\n    updatable = true\n  ) {\n    const vertexData = new VertexData();\n\n    vertexData.positions = positions.flatMap(z => [z.x, z.y, z.z]);\n    vertexData.indices = faces.flatMap(z => z);\n\n    let mesh = new Mesh(name, scene);\n    vertexData.applyToMesh(mesh, updatable);\n    // mesh.createNormals();\n    return mesh;\n  }\n\n  /**\n   *\n   * @param {*} polygon: Array of babylonjs vector3, representing a boundary of a polygon\n   */\n  static triangulatePolygon(polygon) {\n    const triangulation = earcut(\n      polygon.map(x => [x.x, x.y, x.z]).flatMap(x => x),\n      null,\n      3\n    );\n    const len = triangulation.length / 3;\n    const ans = [];\n    for (let i = 0; i < len; i++) {\n      const i3 = 3 * i;\n      ans.push([\n        triangulation[i3],\n        triangulation[i3 + 1],\n        triangulation[i3 + 2]\n      ]);\n    }\n    return ans;\n  }\n\n  /**\n   *\n   * @param {*} polygon: Array of babylonjs vector3, representing a boundary of a polygon\n   * Returns a real number representing the orientation of the curve, if positive represents a counterclockwise orientation, clockwise otherwise.\n   */\n  static computeOrientation(polygon) {\n    const n = polygon.length;\n    const vec3Poly = polygon.map(x => Vec3.ofBabylon(x));\n    let orientation = 0;\n    vec3Poly.forEach((a, i) => {\n      const modi = (i + 1) % n;\n      const edge = vec3Poly[modi].sub(vec3Poly[i]);\n      orientation += Vec3.of([-a.y, a.x, a.z]).dot(edge);\n    });\n    return orientation / 2;\n  }\n\n  /**\n   * @param {*} arrayOfPoints: array of babylon vec3\n   * Returns the average\n   */\n  static pointAverage(arrayOfPoints) {\n    if (!arrayOfPoints || arrayOfPoints.length === 0) return Vector3.Zero();\n    return arrayOfPoints\n      .reduce((e, x) => e.add(x), Vector3.Zero())\n      .scale(1 / arrayOfPoints.length);\n  }\n\n  static pointAverageVec3(arrayOfPoints) {\n    if (!arrayOfPoints || arrayOfPoints.length === 0) return Vec3.ZERO;\n    return arrayOfPoints\n      .reduce((e, x) => e.add(x), Vec3.ZERO)\n      .scale(1 / arrayOfPoints.length);\n  }\n\n  static randomVector3(a, b) {\n    return new Vector3.FromArray(\n      [0, 0, 0].map(x => a + (b - a) * Math.random())\n    );\n  }\n\n  static getMaterialFromColor(\n    color,\n    scene,\n    name = `MaterialFromColor${randomDigits()}`\n  ) {\n    const material = new StandardMaterial(name, scene);\n    material.diffuseColor = color;\n    material.emissiveColor = color;\n    return material;\n  }\n\n  static piecewiseCurveDistance = curve => {\n    let distance = 0;\n    for (let i = 0; i < curve.length - 1; i++) {\n      const v = curve[i + 1].subtract(curve[i]);\n      distance += v.length();\n    }\n    return distance;\n  };\n\n  static getCurveOrientations = curve => {\n    const orientations = [];\n    for (let i = 0; i < curve.length - 1; i++) {\n      const v = curve[i + 1].subtract(curve[i]);\n      orientations.push(Math.atan2(v.y, v.x));\n    }\n    orientations.push(orientations[orientations.length - 1]);\n    return orientations;\n  };\n\n  static getSplineFromCurve = (curve, nbPoints = 7) => {\n    const closed = false;\n    return {\n      points: Curve3.CreateCatmullRomSpline(curve, nbPoints, closed).getPoints()\n    };\n  };\n\n  static splineObj2redis = splineObj => {\n    const orientations = Util3d.getCurveOrientations(splineObj.points);\n    return splineObj.points.map((x, i) => {\n      return [x.x, x.y, orientations[i]];\n    });\n  };\n}\n\nconst randomDigits = () => {\n  return Math.floor(Math.random() * 1e3);\n};\n\nexport default Util3d;\n","import NodeItem from \"./NodeItem\";\nimport Vec3 from \"../Math/Vec3\";\nimport Util3d from \"../Util3d/Util3d\";\nimport { Maybe } from \"monet\";\nimport { Quaternion, MeshBuilder } from \"@babylonjs/core\";\n\n// ROS/RVIZ default referential\nconst THETA = -Math.PI / 2;\nconst ROS_ORIGIN = {\n  position: [0, 0, 0],\n  scaling: [1, -1, 1],\n  quaternion: [Math.cos(THETA / 2), Math.sin(THETA / 2), 0, 0]\n};\n\nclass GlobalRef extends NodeItem {\n  constructor(mesh, keyValueMap = {}) {\n    super(mesh, keyValueMap);\n  }\n\n  toForm() {\n    const form = super.toForm();\n    form.uiSchema.name = {\n      \"ui:disabled\": true\n    };\n    return form;\n  }\n\n  getMouseContextActions() {\n    return [];\n  }\n\n  getType = () => GlobalRef.TYPE;\n\n  static TYPE = \"GlobalRef\";\n\n  static NAME = \"Global ref\";\n\n  static ofDict(scene, dict = null, mainView = null) {\n    const rosOrigin = GlobalRef.getRosOrigin(scene);\n\n    const globalRefMesh = Util3d.referentialBuilder(scene)\n      .name(GlobalRef.NAME)\n      .isPickable(true)\n      .boxParams({ isVisible: true, size: 0.25 })\n      .build();\n\n    globalRefMesh.parent = rosOrigin;\n\n    NodeItem.mapDict2Mesh(dict, globalRefMesh);\n\n    return new GlobalRef(\n      globalRefMesh,\n      Maybe.fromNull(dict)\n        .flatMap(d => Maybe.fromNull(d.keyValueMap))\n        .orUndefined()\n    );\n  }\n\n  static getRosOrigin(scene) {\n    const rosOrigin = MeshBuilder.CreateBox(\n      \"ROS_ORIGIN\",\n      { size: 1e-3 },\n      scene\n    );\n    rosOrigin.isVisible = false;\n    rosOrigin.isPickable = false;\n    rosOrigin.position = Vec3.of(ROS_ORIGIN.position).toBabylon();\n    rosOrigin.scaling = Vec3.of(ROS_ORIGIN.scaling).toBabylon();\n    const quaternion = new Quaternion(\n      ROS_ORIGIN.quaternion[1],\n      ROS_ORIGIN.quaternion[2],\n      ROS_ORIGIN.quaternion[3],\n      ROS_ORIGIN.quaternion[0]\n    );\n    rosOrigin.rotationQuaternion = quaternion.normalize();\n    return rosOrigin;\n  }\n\n  /**\n   *\n   * @param {*} x: Babylon Vector3 in World coordinates\n   *\n   * returns Babylon Vector3 vector in ROS coordinates\n   */\n  static inverseCoordinates(x) {\n    /**\n     * Solves RS\\eta + p = x\n     *\n     * \\eta = S^(⁻1)R^T(x-p)\n     */\n    const quaternion = ROS_ORIGIN.quaternion;\n    const rotationMatrix = Util3d.getRotationMatrix({\n      rotationQuaternion: new Quaternion(\n        quaternion[1],\n        quaternion[2],\n        quaternion[3],\n        quaternion[0]\n      )\n    });\n    const scaling = Vec3.of(ROS_ORIGIN.scaling).map(z => 1 / z);\n    const pos = Vec3.of(ROS_ORIGIN.position);\n    const result = scaling.mul(\n      rotationMatrix.dotVec(Vec3.ofBabylon(x).sub(pos))\n    );\n    return result.map(z => (Math.abs(z) < 1e-5 ? 0 : z)).toBabylon();\n  }\n\n  /**\n   *\n   * @param {*} x: Babylon Vector3 in ROS coordinates\n   *\n   * returns Babylon Vector3 vector in World coordinates\n   */\n  static forwardCoordinates(x) {\n    /**\n     * computes RS\\eta + p = x\n     */\n    const quaternion = ROS_ORIGIN.quaternion;\n    const rotationMatrix = Util3d.getRotationMatrix({\n      rotationQuaternion: new Quaternion(\n        quaternion[1],\n        quaternion[2],\n        quaternion[3],\n        quaternion[0]\n      )\n    });\n    const scaling = Vec3.of(ROS_ORIGIN.scaling);\n    const pos = Vec3.of(ROS_ORIGIN.position);\n    const result = rotationMatrix\n      .prodVec(scaling.mul(Vec3.ofBabylon(x)))\n      .add(pos);\n    return result.map(z => (Math.abs(z) < 1e-5 ? 0 : z)).toBabylon();\n  }\n}\n\nexport default GlobalRef;\n","class Action {\n  constructor() {\n    this.memory = {};\n  }\n\n  action(parentView) {\n    parentView.getSceneMemory().forEach(memory => {\n      memory.gizmoManager.attachedMesh = null;\n      memory.camera.attachControl(memory.canvas, true);\n    });\n    parentView.closeContextDial && parentView.closeContextDial();\n    parentView.setContextActionIndex && parentView.setContextActionIndex();\n  }\n\n  onChange(parentView) {\n    // to be overwritten by children\n  }\n}\n\nexport default Action;\n","import NodeItem from \"./NodeItem\";\n\nclass AssetNodeItem extends NodeItem {\n  constructor(mesh, assetName, keyValueMap = {}) {\n    super(mesh, keyValueMap);\n    this.assetName = assetName;\n  }\n\n  toDict() {\n    const ans = super.toDict();\n    ans.assetName = this.assetName;\n    return ans;\n  }\n\n  getCopyFunction = () => {\n    return (mousePosFromRoot, someMainView) => {};\n  };\n}\n\nexport default AssetNodeItem;\n","import AssetNodeItem from \"./AssetNodeItem\";\n\nclass Map extends AssetNodeItem {\n  constructor(mesh, size, textureSrc, assetName) {\n    super(mesh, assetName);\n    this.size = size;\n    this.textureSrc = textureSrc;\n  }\n\n  dispose() {\n    super.dispose();\n  }\n\n  toDict() {\n    const dict = super.toDict();\n    dict[\"size\"] = this.size;\n    dict[\"textureSrc\"] = this.textureSrc;\n    return dict;\n  }\n\n  toForm() {\n    const info = this.toDict();\n    const schema = {\n      jsonSchema: {\n        type: \"object\",\n        properties: {\n          oldName: {\n            type: \"string\"\n          },\n          name: {\n            type: \"string\",\n            title: \"Name\"\n          },\n          type: {\n            type: \"string\",\n            title: \"Type\"\n          },\n          assetName: {\n            type: \"string\",\n            title: \"Asset Name\"\n          }\n        }\n      },\n      uiSchema: {\n        type: {\n          \"ui:disabled\": true\n        },\n        assetName: {\n          \"ui:disabled\": true\n        },\n        oldName: {\n          \"ui:widget\": \"hidden\"\n        }\n      },\n      data: {\n        oldName: info.name,\n        name: info.name,\n        type: info.type,\n        assetName: info.assetName\n      }\n    };\n    return schema;\n  }\n\n  ofForm(form) {\n    this.name = form.name;\n    this.mesh.name = form.name;\n    this.keyValueMap = { ...form.annotations };\n  }\n\n  getType = () => Map.TYPE;\n\n  static TYPE = \"Map\";\n}\n\nexport default Map;\n","import {\n  Scene,\n  Color3,\n  RotationGizmo,\n  UtilityLayerRenderer,\n  Vector3,\n  StandardMaterial,\n  Mesh,\n  Space\n} from \"@babylonjs/core\";\nimport { TextBlock, AdvancedDynamicTexture } from \"@babylonjs/gui/2D\";\nimport Util3d from \"../Util3d/Util3d\";\nimport \"@babylonjs/core/Debug/debugLayer\";\nimport \"@babylonjs/inspector\";\n\nclass DefaultScene {\n  static createGizmo = scene => {\n    const gizmoManager = new RotationGizmo(new UtilityLayerRenderer(scene));\n    gizmoManager.xGizmo.dragBehavior.detach();\n    gizmoManager.xGizmo.scaleRatio = 0.0;\n    gizmoManager.yGizmo.dragBehavior.detach();\n    gizmoManager.yGizmo.scaleRatio = 0.0;\n    return gizmoManager;\n  };\n\n  static createCamera = (scene, canvas, forEach = camera => {}) => {\n    const COLLISION_RADIUS = 1;\n    const camera = Util3d.cameraBuilder(scene)\n      .sphericalCoordinates(new Vector3(0, 0, 14))\n      .target(Vector3.Zero())\n      .name(\"camera\")\n      .build();\n    camera.attachControl(canvas, false);\n    camera.inertia = 0.7;\n    camera.collisionRadius = new Vector3(\n      COLLISION_RADIUS,\n      COLLISION_RADIUS,\n      COLLISION_RADIUS\n    );\n    camera.panningInertia = 0.5;\n    camera.checkCollisions = true;\n    camera.panningSensibility = 0;\n    camera.lowerRadiusLimit = 2;\n    forEach(camera);\n    return camera;\n  };\n\n  static createLight = scene => {\n    return Util3d.directionalLightBuilder(scene)\n      .name(\"light\")\n      .direction(new Vector3(0, -1, 0))\n      .intensity(0.35)\n      .build();\n  };\n\n  static createMeshGround = (scene, width = 20, height = 20) => {\n    const ground = Mesh.CreateGround(\"groundMesh\", width, height, 20, scene);\n    ground.translate(new Vector3(0, -1, 0), 1e-2, Space.WORLD);\n    ground.material = new StandardMaterial(\"wireframe\", scene);\n    ground.material.wireframe = true;\n    ground.isPickable = false;\n    ground.checkCollisions = true;\n    return ground;\n  };\n\n  static createScene = engine => {\n    const scene = new Scene(engine);\n    scene.clearColor = Color3.Black;\n    scene.collisionsEnabled = true;\n    scene._uid = scene.getUniqueId();\n    // scene.debugLayer.show({\n    //   embedMode: true,\n    //   globalRoot: document.body,\n    //   overlay: true\n    // });\n    return scene;\n  };\n\n  static createMouseLocationText = scene => {\n    const advancedTexture = AdvancedDynamicTexture.CreateFullscreenUI(\n      \"UI\",\n      true,\n      scene\n    );\n    const text = new TextBlock();\n    text.text = \"\";\n    text.color = \"white\";\n    text.fontSize = 17;\n    text.left = -560;\n    text.top = -145;\n    advancedTexture.addControl(text);\n    return text;\n  };\n}\n\nexport default DefaultScene;\n","import Action from \"./Action\";\n\nclass MouseKeysAction extends Action {\n  onPointerDown(evt, parentView) {\n    // to be implemented on sub classes\n  }\n\n  onPointerMove(evt, parentView) {\n    // to be implemented on sub classes\n  }\n\n  onPointerUp(evt, parentView) {\n    // to be implemented on sub classes\n  }\n\n  onKeyUp(evt, parentView) {}\n}\n\nexport default MouseKeysAction;\n","export function selectOneAction(predicateActionList, defaultAction = () => {}) {\n  return input => {\n    predicateActionList.push({ predicate: e => true, action: defaultAction });\n    for (let i = 0; i < predicateActionList.length; i++) {\n      const predicateAction = predicateActionList[i];\n      if (predicateAction.predicate(input)) {\n        predicateAction.action();\n        break;\n      }\n    }\n  };\n}\n","import NodeItem from \"./NodeItem\";\nimport Util3d from \"../Util3d/Util3d\";\nimport { Maybe } from \"monet\";\nimport { MeshBuilder, StandardMaterial } from \"@babylonjs/core\";\n\nclass KeyPoint extends NodeItem {\n  ofDict(scene, dict = null, mainView = null) {\n    return KeyPoint.ofDict(scene, dict, mainView);\n  }\n\n  getType = () => KeyPoint.TYPE;\n\n  static TYPE = \"KeyPoint\";\n\n  static ofDict(scene, dict = null, mainView = null) {\n    const name = Maybe.fromNull(dict)\n      .map(x => x.name)\n      .orSome(`KeyPoint${Math.floor(Math.random() * 1e3)}`);\n\n    const mesh = MeshBuilder.CreatePolyhedron(\n      name,\n      { custom: TRIANGULAR_ANTIPRISM, size: KeyPoint.DEFAULT_SIZE },\n      scene\n    );\n    const material = new StandardMaterial(`KeyPointMaterial${name}`, scene);\n    mesh.material = material;\n    mesh.convertToFlatShadedMesh();\n\n    const axis = Util3d.referentialBuilder(scene)\n      .isPickable(false)\n      .boxParams({ isVisible: false, size: 0.1 * KeyPoint.DEFAULT_SIZE })\n      .name(`${name}Axis`)\n      .build();\n    axis.parent = mesh;\n\n    NodeItem.mapDict2Mesh(dict, mesh);\n    return new KeyPoint(mesh, dict.keyValueMap);\n  }\n\n  static DEFAULT_SIZE = 0.25;\n}\n\nconst TRIANGULAR_ANTIPRISM = {\n  name: \"Triangular Antiprism (Octahedron)\",\n  category: [\"Antiprism\"],\n  vertex: [\n    [0, 0, 1.414214],\n    [1.414214, 0, 0],\n    [0, 1.414214, 0],\n    [-1.414214, 0, 0],\n    [0, -1.414214, 0],\n    [0, 0, -1.414214]\n  ],\n  face: [\n    [0, 1, 2],\n    [0, 2, 3],\n    [0, 3, 4],\n    [0, 4, 1],\n    [1, 4, 5],\n    [1, 5, 2],\n    [2, 5, 3],\n    [3, 5, 4]\n  ]\n};\n\nexport default KeyPoint;\n","export default class MeshSelector {\n  constructor(mainView) {\n    return mainView\n      .getSceneMemory()\n      .map(({ scene }) => {\n        const sceneId = scene._uid;\n        if (sceneId in placeHolderInstance) {\n          return placeHolderInstance[sceneId];\n        }\n        this.scene = scene;\n        this.mainView = mainView;\n        this.meshSelectionSet = new Set();\n        placeHolderInstance[sceneId] = this;\n        return this;\n      })\n      .orSome(this);\n  }\n\n  /**\n   * Add mesh 2 selected meshes\n   * @param {*} mesh\n   * @param {*} isSubtractive: if true, repeated addition of meshes will be removed from selected meshes set.\n   */\n  add(mesh, isSubtractive = true) {\n    if (this.meshSelectionSet.has(mesh)) {\n      isSubtractive && this.meshSelectionSet.delete(mesh);\n    } else {\n      this.meshSelectionSet.add(mesh);\n    }\n    return this;\n  }\n\n  addArray(meshes, isSubtractive = true) {\n    meshes.forEach(mesh => this.add(mesh, isSubtractive));\n    return this;\n  }\n\n  clear() {\n    this.meshSelectionSet = new Set();\n    return this;\n  }\n\n  meshes() {\n    return [...this.meshSelectionSet];\n  }\n\n  has(mesh) {\n    return this.meshSelectionSet.has(mesh);\n  }\n\n  filter(predicate) {\n    const filteredSet = new Set();\n    this.meshSelectionSet.forEach(mesh => {\n      if (predicate(mesh)) filteredSet.add(mesh);\n    });\n    this.meshSelectionSet = filteredSet;\n    return this;\n  }\n\n  //   forEach(lambda) {\n  //     this.meshSelectionSet.forEach(lambda);\n  //     return this;\n  //   }\n\n  static ofMainView(mainView) {\n    return new MeshSelector(mainView);\n  }\n}\n\nconst placeHolderInstance = {};\n","import _uniqBy from \"lodash/uniqBy\";\nimport Util3d from \"../Util3d/Util3d\";\nimport KeyPoint from \"../NodeItem/KeyPoint\";\nimport {\n  Quaternion,\n  Observable,\n  Vector3,\n  ShaderMaterial,\n  Effect\n} from \"@babylonjs/core\";\nimport { Maybe } from \"monet\";\nimport Vec3 from \"../Math/Vec3\";\nimport Vec2 from \"../Math/Vec2\";\nimport MeshSelector from \"../MainView/MeshSelector\";\n\nclass SelectionPlaceHolder {\n  constructor(mainView) {\n    return mainView\n      .getSceneMemory()\n      .map(({ scene }) => {\n        const sceneId = scene._uid;\n        if (sceneId in placeHolderInstance) {\n          return placeHolderInstance[sceneId];\n        }\n        this.scene = scene;\n        this.mesh = null;\n        this.arrayOfMeshes = [];\n        this.angleByMeshName = {};\n        this.mainView = mainView;\n        this.theta = 0;\n        placeHolderInstance[sceneId] = this;\n        return this;\n      })\n      .orSome(this);\n  }\n\n  push(arrayOfMeshes) {\n    if (arrayOfMeshes.length === 0) return this;\n    arrayOfMeshes = Array.isArray(arrayOfMeshes)\n      ? arrayOfMeshes\n      : [arrayOfMeshes];\n    this.arrayOfMeshes = _uniqBy(\n      this.arrayOfMeshes.concat(arrayOfMeshes),\n      mesh => mesh.name\n    );\n    this.angleByMeshName = this.arrayOfMeshes.reduce((map, m) => {\n      map[m.name] = getAngleFromMesh(m);\n      return map;\n    }, {});\n    const placeHolderPosition = Util3d.pointAverage(\n      this.arrayOfMeshes.map(mesh =>\n        Util3d.getGlobalCoordinates(mesh, mesh.position).toBabylon()\n      )\n    );\n    this.createPlaceHolderIn(placeHolderPosition);\n    return this;\n  }\n\n  clear() {\n    this.arrayOfMeshes = [];\n    this.mesh && this.mesh.dispose();\n    return this;\n  }\n\n  createPlaceHolderIn(p) {\n    if (this.mesh === null || this.mesh.isDisposed()) {\n      this.mesh = KeyPoint.ofDict(this.scene, {\n        name: NAME,\n        type: SelectionPlaceHolder,\n        position: [0, 0, 0],\n        quaternion: Quaternion.Identity(),\n        color: [0.5, 0.5, 0.5],\n        keyValueMap: {},\n        isVisible: true\n      }).mesh;\n      this.mesh.material = getShaderMaterial(this.scene)();\n    }\n    const that = this;\n    this.mesh.getMouseContextActions = () => [\n      {\n        title: \"Delete\",\n        onClick: () => {\n          that.mainView.addGizmo2Mesh();\n          that.clear();\n          MeshSelector.ofMainView(this.mainView).clear();\n          that.mainView.highlightMeshesInScene();\n          that.mainView.highlightNodesInTree();\n        }\n      }\n    ];\n    this.mesh.onClick = () => {};\n    this.mesh.isSelectionPlaceHolder = true;\n    this.mesh.parent = this.mainView.getRootNode().item.mesh;\n    this.mesh.position = p.add(new Vector3(0, 0, HEIGHT));\n    this.mesh.observers = new Observable();\n    this.mesh.observers.add(this.getPlaceHolderObs());\n    return this.mesh;\n  }\n\n  getPlaceHolderObs() {\n    const that = this;\n    return ({\n      updatedPointMesh: placeHolder,\n      is2updateServer,\n      displacement\n    }) => {\n      const filteredMeshes = that.arrayOfMeshes.filter(\n        mesh => !mesh.isDisposed()\n      );\n      const theta = getAngleFromMesh(placeHolder);\n      const dTheta = theta - that.theta;\n      that.theta = theta;\n\n      filteredMeshes.forEach(mesh => {\n        handleMotion(theta, mesh, displacement, placeHolder, dTheta, that);\n        if (is2updateServer) {\n          that.mainView.updateNodeInServer(mesh.name);\n          that.mesh.rotationQuaternion = Quaternion.Identity();\n          that.angleByMeshName[mesh.name] = getAngleFromMesh(mesh);\n          that.theta = 0;\n        }\n        // notify babylonjs observers\n        Maybe.fromNull(mesh.observers).forEach(obs =>\n          obs.notifyObservers({\n            updatedPointMesh: mesh,\n            is2updateServer,\n            displacement\n          })\n        );\n        // notify graph observers\n        Maybe.fromNull(mesh.graphVertex).forEach(({ vertexObs }) => {\n          vertexObs({\n            updatedPointMesh: mesh,\n            is2updateServer,\n            displacement\n          });\n        });\n      });\n      if (filteredMeshes.length === 0) {\n        that.clear();\n      }\n    };\n  }\n\n  static ofMainView(mainView) {\n    return new SelectionPlaceHolder(mainView);\n  }\n}\n\nconst getShaderMaterial = scene => (vertex = VERTEX, frag = FRAG) => {\n  Effect.ShadersStore[\"customVertexShader\"] = vertex;\n  Effect.ShadersStore[\"customFragmentShader\"] = frag;\n  const shaderMaterial = new ShaderMaterial(\n    \"shader\",\n    scene,\n    { vertex: \"custom\", fragment: \"custom\" },\n    {\n      attributes: [\"position\", \"normal\", \"uv\"],\n      uniforms: [\n        \"world\",\n        \"worldView\",\n        \"worldViewProjection\",\n        \"view\",\n        \"projection\",\n        \"time\"\n      ]\n    }\n  );\n  shaderMaterial.backFaceCulling = false;\n  let time = 0;\n  let T = new Date().getTime();\n  shaderMaterial.onBindObservable.add(() => {\n    const dt = (new Date().getTime() - T) / 1000;\n    shaderMaterial.setFloat(\"time\", time);\n    time = time + dt;\n    T = new Date().getTime();\n  });\n  return shaderMaterial;\n};\n\nconst VERTEX = `precision highp float;\n\n// Attributes\nattribute vec3 position;\nattribute vec3 normal;\n\n// Uniforms\nuniform mat4 worldViewProjection;\n\n// Varying\nvarying vec3 vPosition;\nvarying vec3 vNormal;\n\nvoid main(void) {\n    gl_Position = worldViewProjection * vec4(position, 1.0);\n    vPosition = position;\n    vNormal = normal;\n}`;\n\nconst FRAG = `precision highp float;\n\n// Varying\nvarying vec3 vPosition;\nvarying vec3 vNormal;\n\n// Uniforms\nuniform mat4 world;\nuniform float time;\n\nvoid main(void) {\n    // World values\n    vec3 p = vec3(world * vec4(vPosition, 1.0));\n    vec3 n = normalize(vec3(world * vec4(vNormal, 0.0)));\n    float spatialFreq = 10.;\n    float timeFreq = 10.;\n    float power = sin(spatialFreq * p.y - timeFreq * time);\n    vec3 color = power *  vec3( 1, 0, 0 ) + (1. - power) * vec3(1,0.5,0.5);\n    gl_FragColor = vec4(color, 1.);\n}`;\n\nconst getAngleFromMesh = mesh =>\n  Maybe.fromNull(mesh.rotationQuaternion)\n    .map(q => 2 * Math.atan2(q.z, q.w))\n    .orSome(0);\n\nconst placeHolderInstance = {};\nconst NAME = \"placeholder\";\nconst HEIGHT = 1.5;\n\nfunction handleMotion(theta, mesh, displacement, placeHolder, dTheta, that) {\n  if (Math.abs(theta) < 1e-3) {\n    handleTranslation(mesh, displacement);\n  } else {\n    handleRotation(placeHolder, mesh, dTheta, that, theta);\n  }\n}\n\nfunction handleRotation(placeHolder, mesh, dTheta, that, theta) {\n  const baseCoord = Vec3.ofBabylon(placeHolder.position);\n  const v = Vec3.ofBabylon(mesh.position).sub(baseCoord).toVec2();\n  const eITheta = Vec2.of(Math.cos(dTheta), Math.sin(dTheta));\n  const rV = eITheta.prod(v);\n  const finalV = Vec3.of([rV.x, rV.y, 0]).toBabylon();\n  mesh.position = new Vector3(\n    placeHolder.position.x,\n    placeHolder.position.y,\n    mesh.position.z\n  ).add(finalV);\n  const finalTheta = that.angleByMeshName[mesh.name] + theta;\n  // divide by 2 because of quaternion multiplication.\n  mesh.rotationQuaternion = new Quaternion(\n    0,\n    0,\n    Math.sin(finalTheta / 2),\n    Math.cos(finalTheta / 2)\n  );\n}\n\nfunction handleTranslation(mesh, displacement) {\n  const localDisplacement = Util3d.getLocalCoordFromWorld(\n    mesh,\n    Vec3.ofBabylon(displacement),\n    false\n  );\n  const newPos = Vec3.ofBabylon(mesh.position).add(localDisplacement);\n  // translating\n  mesh.position = newPos.toBabylon();\n}\n\nexport default SelectionPlaceHolder;\n","import { Maybe } from \"monet\";\n\nfunction getNodeRecursive(tree, predicate) {\n  for (let i = 0; i < tree.length; i++) {\n    const node = tree[i];\n    if (predicate(node)) return Maybe.some(node);\n    const answer = getNodeRecursive(node.children, predicate);\n    if (answer.isSome()) return answer;\n  }\n  return Maybe.none();\n}\n\nfunction getParentNodeRecursive(tree, predicate, parent) {\n  const foundChild = tree\n    .map(x => predicate(x))\n    .reduce((e, x) => e || x, false);\n  if (foundChild) return Maybe.fromNull(parent);\n  for (let i = 0; i < tree.length; i++) {\n    const node = tree[i];\n    const answer = getParentNodeRecursive(node.children, predicate, node);\n    if (answer.isSome()) return answer;\n  }\n  return Maybe.none();\n}\n\nfunction compareTreesRecursive(treeA, treeB, nodeEquality) {\n  if (treeA.length === treeB.length) {\n    let ans = true;\n    for (let i = 0; i < treeA.length; i++) {\n      const nodeA = treeA[i];\n      const nodeB = treeB[i];\n      if (nodeEquality(nodeA, nodeB)) {\n        ans =\n          ans &&\n          compareTreesRecursive(nodeA.children, nodeB.children, nodeEquality);\n      } else {\n        return false;\n      }\n    }\n    return ans;\n  }\n  return false;\n}\n\nfunction mapRecursive(tree, newTree, map) {\n  tree.forEach(nod => {\n    const node = { ...nod };\n    const mappedNode = map(node);\n    mappedNode.children = mapRecursive(node.children, [], map);\n    newTree.push(mappedNode);\n  });\n  return newTree;\n}\n\nfunction forEachRecursive(tree = [], forEach = () => {}) {\n  tree.forEach(node => {\n    forEach(node);\n    forEachRecursive(node.children, forEach);\n  });\n}\n\nfunction expand(node) {\n  node.expanded = true;\n  return node;\n}\n\nfunction filterTree(tree = [], predicate = node => true) {\n  if (!tree || tree.length === 0) return [];\n  let result = [];\n  tree.forEach(nod => {\n    const node = { ...nod };\n    if (predicate(node)) {\n      const expanded = expand(node);\n      expanded.children = filterTree(expanded.children, predicate);\n      result.push(expanded);\n    } else if (node.children) {\n      const children = filterTree(node.children, predicate);\n      if (children.length !== 0) {\n        node.children = children;\n        result.push(expand(node));\n      }\n    }\n  });\n  return result;\n}\n\nfunction flatten(tree = [], predicate = node => true) {\n  if (!tree || tree.length === 0) return [];\n  let result = [];\n  tree.forEach(nod => {\n    const node = { ...nod };\n    if (predicate(node)) result.push(node);\n    result = result.concat(flatten(node.children, predicate));\n  });\n  return result;\n}\n\n/**\n * General purpose tree\n *\n * It just need a basic structure as input:\n *  Tree: Array<Node>\n *  Node: {children: Array<Node>}\n */\nclass TreeObject {\n  constructor(tree) {\n    this.tree = tree;\n  }\n  /**\n   * Return maybe node based on predicate\n   * @param {*} predicate\n   */\n  getNode(predicate) {\n    return getNodeRecursive(this.tree, predicate);\n  }\n\n  /**\n   * return maybe parent node based on the child predicate\n   * @param {*} childPredicate\n   */\n  getParentNode(childPredicate) {\n    return getParentNodeRecursive(this.tree, childPredicate, null);\n  }\n\n  equals(tree, nodeEquality = (a, b) => a === b) {\n    if (tree.constructor === TreeObject) {\n      return compareTreesRecursive(this.tree, tree.tree, nodeEquality);\n    }\n    return compareTreesRecursive(this.tree, tree, nodeEquality);\n  }\n\n  map(nodeMap) {\n    return new TreeObject(mapRecursive(this.tree, [], nodeMap));\n  }\n\n  filter(predicate = node => true) {\n    return new TreeObject(filterTree(this.tree, predicate));\n  }\n\n  /**\n   *\n   * @param {*} predicate: node => Boolean\n   * @returns Array with flattened tree while filtering values with predicate\n   */\n  flatten(predicate = node => true) {\n    return flatten(this.tree, predicate);\n  }\n\n  forEach(map) {\n    forEachRecursive(this.tree, map);\n  }\n}\n\nexport default TreeObject;\n","const Constants = {\n  RADIUS: 0.4,\n  POINTS_DENSITY: 2,\n  CLOUD_FUNCTION_NAME: \"backend.viewer\"\n};\n\nexport default Constants;\n","import { Maybe } from \"monet\";\n\n/**\n * Undirected Graph data structure\n */\nclass Graph {\n  #adjMap = {};\n  #vertices = {};\n  #edges = {};\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                      Public API                                      *\n   *                                                                                      */\n  //========================================================================================\n\n  addVertex(i) {\n    if (!(i in this.#vertices)) {\n      this.#vertices[i] = {};\n      this.#adjMap[i] = {};\n    }\n  }\n\n  delVertex(i) {\n    if (i in this.#vertices) {\n      delete this.#vertices[i];\n      // delete neighbors edge properties\n      Object.keys(this.#adjMap[i]).forEach(j => {\n        delete this.#edges[Graph.edgeKey(i, j)];\n        delete this.#edges[Graph.edgeKey(j, i)];\n      });\n      delete this.#adjMap[i];\n      Object.keys(this.#adjMap).forEach(j => {\n        if (i in this.#adjMap[j]) {\n          delete this.#adjMap[j][i];\n        }\n      });\n    }\n  }\n\n  /**\n   *\n   * If edge already exists, this function overwrites previous edge\n   *\n   * @param {*} i: vertex id\n   * @param {*} j: vertex id\n   */\n  addEdge(i, j) {\n    this.addVertex(i);\n    this.addVertex(j);\n    const edgeProps = {};\n    this.#edges[Graph.edgeKey(i, j)] = edgeProps;\n    this.#edges[Graph.edgeKey(j, i)] = edgeProps;\n    this.#adjMap[i][j] = true;\n    this.#adjMap[j][i] = true;\n    return this;\n  }\n\n  delEdge(i, j) {\n    const ijKey = Graph.edgeKey(i, j);\n    const jiKey = Graph.edgeKey(j, i);\n    if (ijKey in this.#edges || jiKey in this.#edges) {\n      delete this.#edges[ijKey];\n      delete this.#edges[jiKey];\n      delete this.#adjMap[i][j];\n      delete this.#adjMap[j][i];\n    }\n    // remove vertex if have no neighbors\n    [i, j].forEach(id => {\n      const neighbors = this.getNeighbors(id);\n      if (neighbors.length === 0) {\n        this.delVertex(id);\n      }\n    });\n  }\n\n  hasEdge(i, j) {\n    return this.getEdge(i, j).isSome();\n  }\n\n  getNeighbors(i) {\n    if (i in this.#adjMap) return Object.keys(this.#adjMap[i]);\n    return [];\n  }\n\n  getEdge(i, j) {\n    const edgeKey = Graph.edgeKey(i, j);\n    if (edgeKey in this.#edges) {\n      return Maybe.some(this.#edges[edgeKey]);\n    }\n    return Maybe.none();\n  }\n\n  getVertex(i) {\n    if (i in this.#vertices) {\n      return Maybe.some(this.#vertices[i]);\n    }\n    return Maybe.none();\n  }\n\n  getEdges() {\n    return this.#edges;\n  }\n\n  getVertices() {\n    return this.#vertices;\n  }\n\n  getAdjMap() {\n    return this.#adjMap;\n  }\n\n  static edgeKey = (i, j) => `${i}_${j}`;\n  static key2Edge = key => key.split(\"_\");\n}\n\nexport default Graph;\n","import NodeItem from \"./NodeItem\";\nimport Vec3 from \"../Math/Vec3\";\nimport Util3d from \"../Util3d/Util3d\";\nimport React from \"react\";\nimport { Maybe } from \"monet\";\nimport Constants from \"../Utils/Constants\";\nimport {\n  Observable,\n  Color3,\n  MeshBuilder,\n  Quaternion,\n  Vector3\n} from \"@babylonjs/core\";\nimport { UndoManager } from \"mov-fe-lib-core\";\n\nconst RADIUS = Constants.RADIUS;\n\nclass Path extends NodeItem {\n  /**\n   * @param {*} mesh\n   * @param {*} localPath: is an array of 3-arrays of numbers of the local coordinates in relation to mesh.position and quaternion\n   * @param {*} keyPoints: are the keyPoints meshes array\n   * @param {*} splinePath: is an array of 3-arrays of numbers of the local coordinates in relation to mesh.position and quaternion\n   * @param {*} mainView: MainView\n   * @param {*} keyValueMap: annotations\n   */\n  constructor(\n    mesh,\n    localPath,\n    keyPoints,\n    splinePath,\n    mainView,\n    weight = 1,\n    keyValueMap = {}\n  ) {\n    super(mesh, keyValueMap);\n    // Array<Vector3> points in relation to its mean\n    this.localPath = localPath;\n    // Array<Meshes> representing key points of the curve\n    this.keyPoints = keyPoints;\n    // spline points from local path\n    this.splinePath = splinePath;\n    this.selectedKeyPointIndex = -1;\n    this.mainView = mainView;\n    this.weight = weight;\n  }\n\n  toDict() {\n    const dict = super.toDict();\n    dict.localPath = this.localPath;\n    dict.splinePath = this.splinePath;\n    dict.weight = this.weight;\n    return dict;\n  }\n\n  toForm() {\n    const schema = super.toForm();\n    if (this.selectedKeyPointIndex >= 0) {\n      schema.jsonSchema.properties[\"selectedKeyPoint\"] = {\n        type: \"object\",\n        title: `KeyPoint ${this.selectedKeyPointIndex}`,\n        properties: {\n          x: {\n            type: \"number\",\n            title: \"x\"\n          },\n          y: {\n            type: \"number\",\n            title: \"y\"\n          },\n          z: {\n            type: \"number\",\n            title: \"z\"\n          }\n        }\n      };\n\n      schema.uiSchema[\"selectedKeyPoint\"] = {\n        \"ui:widget\": \"collapse\"\n      };\n      schema.uiSchema[\"position\"] = { \"ui:widget\": \"hidden\" };\n      schema.uiSchema[\"quaternion\"] = { \"ui:widget\": \"hidden\" };\n      schema.uiSchema[\"color\"] = { \"ui:widget\": \"hidden\" };\n      schema.uiSchema[\"annotations\"] = { \"ui:widget\": \"hidden\" };\n      const selectedMesh = this.keyPoints[this.selectedKeyPointIndex];\n      const position = Util3d.getGlobalCoordinates(\n        selectedMesh,\n        selectedMesh.position\n      ).toArray();\n      schema.data[\"selectedKeyPoint\"] = {\n        x: position[0],\n        y: position[1],\n        z: position[2]\n      };\n\n      return schema;\n    }\n    // re-order attributes\n    const props = { ...schema.jsonSchema.properties };\n    const newSchema = {\n      type: \"object\",\n      properties: {\n        oldName: props.oldName,\n        name: props.name,\n        type: props.type,\n        weight: {\n          type: \"number\",\n          title: \"Weight\"\n        },\n        position: props.position,\n        quaternion: props.quaternion,\n        color: props.color,\n        annotations: props.annotations\n      }\n    };\n    schema.jsonSchema = newSchema;\n    schema.data[\"weight\"] = this.weight;\n    return schema;\n  }\n\n  ofForm(form) {\n    super.ofForm(form);\n    if (this.selectedKeyPointIndex >= 0) {\n      const selectedKeyPoint = this.keyPoints[this.selectedKeyPointIndex];\n      const formPosition = form.selectedKeyPoint;\n      const newPosInWorldCoordinates = Vector3.FromArray(\n        [formPosition.x, formPosition.y, formPosition.z].map(Number.parseFloat)\n      );\n      const localPos = Util3d.getLocalCoordFromGlobal(\n        selectedKeyPoint,\n        newPosInWorldCoordinates\n      ).toArray();\n      selectedKeyPoint.position = new Vector3(\n        localPos[0],\n        localPos[1],\n        localPos[2]\n      );\n      selectedKeyPoint.observers.notifyObservers({\n        updatedPointMesh: selectedKeyPoint,\n        is2updateServer: false\n      });\n      return;\n    }\n    this.weight = Number(form.weight);\n    this.updatePathEdgeWithForm(this.weight, this.keyValueMap);\n  }\n\n  updatePathEdgeWithForm(weight, annotations) {\n    this.mainView.getGraph().forEach(({ item: graphItem }) => {\n      const { graph } = graphItem;\n      const first = this.keyPoints[0];\n      const last = this.keyPoints[this.keyPoints.length - 1];\n      const edge = [first, last]\n        .filter(v => !!v?.graphVertex?.vertex)\n        .map(v => v.graphVertex.vertex);\n      if (edge.length < 2) return;\n      const edgeIds = edge.map(v => v.id);\n      graph.getEdge(...edgeIds).forEach(({ data: edgeData }) => {\n        edgeData.weight = weight;\n        edgeData.keyValueMap = annotations;\n      });\n      this.mainView.updateNodeInServer(graphItem.name);\n    });\n  }\n\n  ofDict(scene, dict = null, mainView = null) {\n    return Path.ofDict(scene, dict, mainView);\n  }\n\n  getCopyFunction(isForceUpdate = true) {\n    // mousePosFromRoot : Vector3\n    return (mousePosFromRoot, someMainView) => {\n      return super\n        .getCopyFunction(isForceUpdate)(mousePosFromRoot, someMainView)\n        .map(copiedPath => {\n          const kp = copiedPath?.keyPoints;\n          if (kp !== undefined && isPathOnGraph(this)) {\n            Path.updateGraph(someMainView, kp, copiedPath, true);\n          }\n          return copiedPath;\n        });\n    };\n  }\n\n  getType = () => Path.TYPE;\n\n  static TYPE = \"Path\";\n\n  static ofDict(scene, dict = null, mainView = null) {\n    if (!dict || !mainView)\n      throw new Error(\"null dictionary describing path or null mainView\");\n\n    const name = dict.name;\n    const curve = dict.localPath.map(z => Vec3.of(z).toBabylon());\n    const spline = Util3d.getSplineFromCurve(curve);\n    const { points } = spline;\n    let mesh = null;\n    //hack for creating 1 point curves\n    if (points.length === 1) {\n      mesh = MeshBuilder.CreateLines(\n        name,\n        { points: points, updatable: true },\n        scene\n      );\n    } else {\n      mesh = Util3d.createTubeFromPoints(\n        scene,\n        points,\n        Color3.Gray(),\n        RADIUS / 8,\n        name\n      );\n    }\n    mesh.position = Vec3.of(dict.position).toBabylon();\n    mesh.material = Util3d.getMaterialFromColor(\n      Color3.FromArray(dict.color),\n      scene,\n      `PathMaterial${name}`\n    );\n    mesh.rotationQuaternion = Maybe.fromNull(dict.quaternion)\n      .map(quaternion =>\n        new Quaternion(\n          quaternion[1],\n          quaternion[2],\n          quaternion[3],\n          quaternion[0]\n        ).normalize()\n      )\n      .orSome(Quaternion.Identity());\n    const splinePath = Util3d.splineObj2redis(spline);\n    const keyPoints = createPlaceHolderKeyPoints(\n      scene,\n      { ...dict, mesh, splinePath },\n      mainView\n    );\n    const path2return = new Path(\n      mesh,\n      curve.map(point => [point.x, point.y, point.z]),\n      keyPoints,\n      splinePath,\n      mainView,\n      dict.weight,\n      dict.keyValueMap\n    );\n    mesh.onClick = getMeshOnClick(mainView, path2return);\n    mesh.observers = new Observable();\n    mesh.observers.add(getMeshObserver(keyPoints));\n    return path2return;\n  }\n\n  /**\n   * Create new mesh from old, has side effects\n   *\n   * @param {*} newPoints: Vector3\n   * @param {*} scene: Scene\n   * @param {*} item: PathItem\n   * @param {*} mainView: MainView\n   * @param {*} keyPointUpdateFunction: (scene, mainView, mesh, item) => Array<Mesh>\n   */\n  static createNewMeshFromOldUsingNewPoints(\n    newPoints,\n    scene,\n    item,\n    mainView,\n    keyPointUpdateFunction = defaultKeyPointUpdate\n  ) {\n    const { mesh: oldMesh } = item;\n    const average = Util3d.pointAverage(newPoints);\n    newPoints = newPoints.map(x => x.subtract(average));\n\n    const spline = Util3d.getSplineFromCurve(newPoints);\n    const newMesh = Util3d.createTubeFromPoints(\n      scene,\n      spline.points,\n      Color3.Gray(),\n      RADIUS / 8,\n      oldMesh.name\n    );\n\n    // average in parent coord\n    const rotMat3 = Util3d.getRotationMatrix(oldMesh);\n    const scaleVec3 = Vec3.ofBabylon(oldMesh.scaling);\n    const averageInParentCoord = rotMat3\n      .prodVec(Vec3.ofBabylon(average).mul(scaleVec3))\n      .toBabylon();\n\n    newMesh.parent = oldMesh.parent;\n    newMesh.rotationQuaternion = oldMesh.rotationQuaternion;\n    newMesh.position = averageInParentCoord.add(oldMesh.position);\n\n    newMesh.material = oldMesh.material;\n    newMesh.visibility = oldMesh.visibility;\n    newMesh.onClick = oldMesh.onClick;\n    newMesh.getMouseContextActions = oldMesh.getMouseContextActions;\n    newMesh.nodeItem = oldMesh.nodeItem;\n    newMesh.observers = oldMesh.observers;\n    item.localPath = newPoints.map(x => Vec3.ofBabylon(x).toArray());\n    item.splinePath = Util3d.splineObj2redis(spline);\n    item.mesh = newMesh;\n    const oldKeyPoints = item.keyPoints;\n    item.keyPoints = keyPointUpdateFunction(scene, mainView, oldMesh, item);\n    // update observer that triggers keypoints observers\n    item.mesh.observers.clear();\n    item.mesh.observers.add(getMeshObserver(item.keyPoints));\n\n    Path.updateGraph(\n      mainView,\n      oldKeyPoints,\n      item,\n      oldKeyPoints.length !== item.keyPoints.length\n    );\n\n    oldMesh.dispose();\n    return item;\n  }\n\n  static deleteKeyPoint(scene, keyPointMesh, mainView) {\n    const index = keyPointMesh.index;\n    const name = keyPointMesh.parent.name;\n    mainView.getNodeFromTree(name).forEach(({ item }) => {\n      const { mesh } = item;\n      const copyPosition = { ...mesh.position };\n      let newPoints = item.localPath.map(x => Vec3.of(x).toBabylon());\n      mainView\n        .getUndoManager()\n        .doIt(\n          Path.getUndoDeleteKeyPoint(\n            name,\n            index,\n            copyPosition,\n            newPoints,\n            scene,\n            item,\n            mainView\n          )\n        );\n    });\n  }\n\n  static getUndoDeleteKeyPoint(\n    name,\n    index,\n    copyPosition,\n    newPoints,\n    scene,\n    item,\n    mainView\n  ) {\n    return UndoManager.actionBuilder()\n      .doAction(() => {\n        const copyPoints = [...newPoints];\n        copyPoints.splice(index, 1);\n        Path.createNewMeshFromOldUsingNewPoints(\n          copyPoints,\n          scene,\n          item,\n          mainView,\n          Path.onAddNewPointKeyPointUpdate\n        );\n        mainView.updateNodeInServer(name);\n      })\n      .undoAction(() => {\n        const copyPoints = [...newPoints];\n        item.mesh.position = copyPosition;\n        Path.createNewMeshFromOldUsingNewPoints(\n          copyPoints,\n          scene,\n          item,\n          mainView,\n          Path.onAddNewPointKeyPointUpdate\n        );\n        mainView.updateNodeInServer(name);\n      })\n      .build();\n  }\n\n  static onAddNewPointKeyPointUpdate(scene, mainView, oldMesh, item) {\n    // used when new keypoint is added\n    return createPlaceHolderKeyPoints(scene, item, mainView);\n  }\n\n  /**\n   *\n   * @param {*} scene\n   * @param {*} keyPointMesh\n   * @param {*} curveMesh\n   * @param {*} mainView\n   * @param {*} orientation: it belongs to the set {-1,1}, represents orientation\n   */\n  static addKeyPointInBetween(scene, keyPointMesh, mainView, orientation) {\n    const index = keyPointMesh.index;\n    const name = keyPointMesh.parent.name;\n    mainView.getNodeFromTree(name).forEach(({ item }) => {\n      const points = item.localPath.map(x => Vec3.of(x).toBabylon());\n      const copyPosition = { ...item.mesh.position };\n      mainView\n        .getUndoManager()\n        .doIt(\n          Path.getUndoAddKeyPointInBetween(\n            name,\n            index,\n            orientation,\n            item,\n            points,\n            copyPosition,\n            scene,\n            mainView\n          )\n        );\n    });\n  }\n\n  static getUndoAddKeyPointInBetween(\n    name,\n    index,\n    orientation,\n    item,\n    points,\n    copyPosition,\n    scene,\n    mainView\n  ) {\n    return UndoManager.actionBuilder()\n      .doAction(() => {\n        const nextIndex = index + orientation;\n        const numberOfPoints = item.localPath.length;\n        let newPoints = [];\n        const oldPoints = [...points];\n        if (nextIndex < 0) {\n          newPoints = [\n            oldPoints[0].scale(3).subtract(oldPoints[1]).scale(0.5)\n          ].concat(oldPoints);\n        } else if (nextIndex > numberOfPoints - 1) {\n          newPoints = oldPoints.concat([\n            oldPoints[numberOfPoints - 1]\n              .scale(3)\n              .subtract(oldPoints[numberOfPoints - 2])\n              .scale(0.5)\n          ]);\n        } else {\n          const specialIndex = index + Math.max(0, orientation);\n          for (let i = 0; i < specialIndex; i++) {\n            newPoints.push(oldPoints[i]);\n          }\n          newPoints.push(oldPoints[nextIndex].add(oldPoints[index]).scale(0.5));\n          for (let i = specialIndex; i < numberOfPoints; i++) {\n            newPoints.push(oldPoints[i]);\n          }\n        }\n\n        Path.createNewMeshFromOldUsingNewPoints(\n          newPoints,\n          scene,\n          item,\n          mainView,\n          Path.onAddNewPointKeyPointUpdate\n        );\n\n        mainView.updateNodeInServer(name);\n      })\n      .undoAction(() => {\n        const copyPoints = [...points];\n        item.mesh.position = copyPosition;\n        Path.createNewMeshFromOldUsingNewPoints(\n          copyPoints,\n          scene,\n          item,\n          mainView,\n          Path.onAddNewPointKeyPointUpdate\n        );\n\n        mainView.updateNodeInServer(name);\n      })\n      .build();\n  }\n\n  /**\n   *\n   * @param {*} mainView: MainView\n   * @param {*} oldKpMeshes: Mesh\n   * @param {*} pathItem: PathItem\n   * @param {*} isTopologyChange: boolean\n   */\n  static updateGraph(mainView, oldKpMeshes, pathItem, isTopologyChange) {\n    if (!isTopologyChange) return;\n    mainView.getGraph().forEach(({ item: graph }) => {\n      //naive algorithm, delete all vertices\n      oldKpMeshes.forEach(kp => {\n        graph.delVertexFromMesh(kp, false);\n      });\n      // add final edge\n      const keyPoints = pathItem.keyPoints;\n      const edgeMeshes = [keyPoints[0], keyPoints[keyPoints.length - 1]];\n      graph.addEdge(...edgeMeshes);\n      mainView.updateNodeInServer(graph.name);\n    });\n  }\n}\n\nexport default Path;\n\nconst getMeshOnClick = (mainView, nodeItem) => () => {\n  mainView.closeContextDial();\n  mainView\n    .getNodeFromTree(nodeItem.name)\n    .forEach(node => (node.item.selectedKeyPointIndex = -1));\n};\n\nconst getMeshObserver = keypoints => ({\n  updatedPointMesh,\n  is2updateServer,\n  displacement\n}) => {\n  keypoints.forEach(k => {\n    if (!!k.graphVertex) {\n      k.graphVertex.vertexObs({\n        updatedPointMesh: k,\n        is2updateServer,\n        displacement\n      });\n    }\n  });\n};\n\nfunction defaultKeyPointUpdate(scene, mainView, oldMesh, item) {\n  // used when key point is updated\n  const childrenCopy = [...oldMesh._children];\n  const spline = item.splinePath.map(z => new Vector3(z[0], z[1], 0));\n  childrenCopy.forEach(c => {\n    c.parent = item.mesh;\n  });\n  return item.keyPoints.map((k, i) => {\n    k.index = i;\n    k.name = `${oldMesh.name}keyPointSpline${i}`;\n    k.position = Vec3.of(item.localPath[i]).toBabylon();\n    k.rotationQuaternion = Quaternion.Identity();\n    if (!!oldMesh.graphVertex) k.graphVertex = oldMesh.graphVertex;\n    if (i > 0 && i < item.keyPoints.length - 1) {\n      k._children.forEach(kChild => kChild.dispose());\n      const c = getConeMesh(\n        scene,\n        k.material.diffuseColor,\n        item.mesh,\n        i,\n        spline,\n        k.position\n      )();\n      c.parent = k;\n    }\n    return k;\n  });\n}\n\nconst getKeyPointObserverFunction = (scene, mainView) => {\n  return ({ updatedPointMesh, is2updateServer, displacement }) => {\n    if (!updatedPointMesh.parent) return;\n    mainView\n      .getNodeFromTree(updatedPointMesh.parent.name)\n      .forEach(({ item }) => {\n        const { index } = updatedPointMesh;\n        const { mesh } = item;\n        let newPoints = item.localPath.map(x => Vec3.of(x).toBabylon());\n        newPoints[index] = updatedPointMesh.position;\n        Path.createNewMeshFromOldUsingNewPoints(\n          newPoints,\n          scene,\n          item,\n          mainView\n        );\n        if (index > 0 && index < newPoints.length - 1) {\n          // we know by construction that this keyPoint has children\n          mainView.highlightMeshesInScene([item.keyPoints[index]._children[0]]);\n        }\n        if (is2updateServer) {\n          mainView.updateNodeInServer(mesh.name);\n          mainView.setProperties(item.toForm());\n        }\n      });\n  };\n};\n\nconst getKeyPointActions = (scene, keyPointMesh, mainView) => {\n  const actions = [];\n\n  mainView.getNodeFromTree(keyPointMesh.parent.name).forEach(pathTreeNode => {\n    const item = pathTreeNode.item;\n    const curve = item.localPath;\n\n    if (curve.length !== 2) {\n      actions.push({\n        icon: props => <i className=\"fas fa-trash\" {...props}></i>,\n        action: parentView => {\n          Path.deleteKeyPoint(scene, keyPointMesh, parentView);\n          parentView.closeContextDial();\n        },\n        name: \"Delete node [DEL]\"\n      });\n    }\n\n    actions.push({\n      icon: props => <i className=\"fas fa-less-than\" {...props}></i>,\n      action: parentView => {\n        Path.addKeyPointInBetween(scene, keyPointMesh, parentView, -1);\n        parentView.closeContextDial();\n      },\n      name: \"Add previous\"\n    });\n\n    actions.push({\n      icon: props => <i className=\"fas fa-greater-than\" {...props}></i>,\n      action: parentView => {\n        Path.addKeyPointInBetween(scene, keyPointMesh, parentView, 1);\n        parentView.closeContextDial();\n      },\n      name: \"Add next\"\n    });\n  });\n\n  return actions;\n};\n\nconst createPlaceHolderKeyPoints = (scene, item, mainView) => {\n  const color = new Color3(0.25, 0.25, 0.25);\n  const keyPoints = [];\n  const curve = item.localPath.map(z => Vec3.of(z).toBabylon());\n  const spline = item.splinePath.map(z => new Vector3(z[0], z[1], 0));\n  const curveMesh = item.mesh;\n  curve.forEach((p, i) => {\n    const sphere = getSphereMesh(scene, color, curveMesh, i);\n    const cone = () => {\n      const c = getConeMesh(scene, color, curveMesh, i, spline, p)();\n      const s = getSphereMesh(scene, color, curveMesh, i)();\n      s.visibility = 0.1;\n      c.parent = s;\n      return s;\n    };\n\n    const keyPoint = i === 0 || i === curve.length - 1 ? sphere() : cone();\n    keyPoint.parent = curveMesh;\n    keyPoint.position = p;\n    keyPoint.index = i;\n    keyPoint.observers = new Observable();\n\n    keyPoints.push(keyPoint);\n\n    keyPoint.observers.add(getKeyPointObserverFunction(scene, mainView));\n  });\n\n  keyPoints.forEach(kp => {\n    kp.onClick = () => {\n      mainView.setContextActions(getKeyPointActions(scene, kp, mainView));\n      mainView.getNodeFromTree(kp.parent.name).forEach(node => {\n        node.item.selectedKeyPointIndex = kp.index;\n        mainView.setProperties(node.item.toForm());\n      });\n    };\n  });\n  return keyPoints;\n};\n\nfunction getConeMesh(scene, color, curveMesh, i, spline, p) {\n  return () => {\n    const index = spline\n      .map(z => p.subtract(z).length())\n      .reduce((e, x, i) => (e.value < x ? e : { value: x, index: i }), {\n        value: Number.MAX_VALUE,\n        index: -1\n      }).index;\n    const u = spline[index + 1]\n      .subtract(spline[index])\n      .normalize()\n      .scale(RADIUS);\n    const c = Util3d.createOrientedCone(\n      scene,\n      u,\n      color,\n      `${curveMesh.name}keyPointCone${i}`,\n      false\n    );\n    return c;\n  };\n}\n\nfunction getSphereMesh(scene, color, curveMesh, i) {\n  return () =>\n    Util3d.createSphere(\n      scene,\n      color,\n      RADIUS,\n      `${curveMesh.name}keyPointSpline${i}`,\n      true\n    );\n}\n\nfunction isPathOnGraph(pathItem) {\n  return [\n    pathItem.keyPoints[0]?.graphVertex,\n    pathItem.keyPoints[pathItem.keyPoints.length - 1]?.graphVertex\n  ].every(v => !!v);\n}\n","import NodeItem from \"./NodeItem\";\nimport Util3d from \"../Util3d/Util3d\";\nimport { Color3, Vector3, Observable } from \"@babylonjs/core\";\nimport Constants from \"../Utils/Constants\";\nimport { Quaternion } from \"@babylonjs/core/Maths/math\";\nimport Graph from \"../Graph/Graph\";\nimport Vec3 from \"../Math/Vec3\";\nimport { Maybe } from \"monet\";\nimport React from \"react\";\nimport lodashGet from \"lodash/get\";\nimport { UndoManager } from \"mov-fe-lib-core\";\nimport Path from \"./Path\";\n\n/**\n * One graph per scene\n */\nclass GraphItem extends NodeItem {\n  constructor(scene, mainView, name = GraphItem.NAME, keyValueMap = {}) {\n    const sceneId = scene.getUniqueId();\n    // super() must be called before using _this_.\n    if (\n      sceneId in graphItemInstances &&\n      !graphItemInstances[sceneId].mesh.isDisposed()\n    ) {\n      return graphItemInstances[sceneId];\n    }\n\n    const graphPlaceHolder = getGraphPlaceHolder(scene, name);\n    graphPlaceHolder.onClick = () =>\n      (this.graphFormMapper = this.getDefaultFormMapper());\n\n    super(graphPlaceHolder, keyValueMap);\n    graphItemInstances[sceneId] = this;\n\n    // object properties\n    this.graph = new Graph();\n    this.scene = scene;\n    this.mainView = mainView;\n    this.meshByEdgeId = {};\n    this.graphFormMapper = this.getDefaultFormMapper();\n    this.vertexGenerator = 0;\n  }\n\n  getType = () => GraphItem.TYPE;\n\n  toDict() {\n    const dict = super.toDict();\n    const { graph } = this;\n    const vertices = { ...graph.getVertices() };\n    const edges = { ...graph.getEdges() };\n    Object.keys(vertices).forEach(k => {\n      graph.getVertex(k).forEach(({ data: vertexData }) => {\n        vertices[k] = {\n          position: Vec3.ofBabylon(vertexData.position).toArray(),\n          id: String(k)\n        };\n      });\n    });\n    Object.keys(edges).forEach(k => {\n      const ids = Graph.key2Edge(k);\n      graph.getEdge(...ids).forEach(({ data: edgeData }) => {\n        const [i, j] = ids.map(x => Number(x));\n        const edgeMesh = edgeData.edge.map(({ mesh }) => mesh);\n        const [belongsSrcMesh, belongsTrgMesh] = edgeMesh;\n        edges[k] = {\n          ids: ids,\n          keyValueMap: edgeData.keyValueMap,\n          weight: edgeData.weight,\n          belongsSrc:\n            i < j\n              ? this.exportBelongToData(belongsSrcMesh)\n              : this.exportBelongToData(belongsTrgMesh),\n          belongsTrg:\n            i < j\n              ? this.exportBelongToData(belongsTrgMesh)\n              : this.exportBelongToData(belongsSrcMesh)\n        };\n        if (this.doMeshesBelong2SamePath(...edgeMesh)) {\n          if (i > j) {\n            // remove edge if belongs to same path and i > j\n            delete edges[k];\n          }\n        }\n      });\n    });\n    dict[\"vertices\"] = vertices;\n    dict[\"edges\"] = edges;\n    return dict;\n  }\n\n  toForm() {\n    const form = super.toForm();\n    delete form.jsonSchema.properties.position;\n    delete form.jsonSchema.properties.quaternion;\n    delete form.jsonSchema.properties.color;\n    delete form.uiSchema.position;\n    delete form.uiSchema.quaternion;\n    delete form.uiSchema.color;\n    delete form.data.position;\n    delete form.data.quaternion;\n    delete form.data.color;\n    return this.graphFormMapper.toForm(form);\n  }\n\n  ofForm(form) {\n    this.name = form.name;\n    this.mesh.name = form.name;\n    this.graphFormMapper.ofForm(form);\n  }\n\n  getDefaultFormMapper() {\n    return {\n      toForm: form => form,\n      ofForm: form => (this.keyValueMap = { ...form.annotations })\n    };\n  }\n\n  getToFormEdge(edgeMesh) {\n    const { graph } = this;\n    return {\n      toForm: form => {\n        return graph\n          .getEdge(...edgeMesh.edgeIndexes)\n          .map(({ data: edgeData }) => {\n            form.jsonSchema.properties[\"weight\"] = {\n              type: \"number\",\n              title: \"Weight\"\n            };\n            form.data[\"weight\"] = edgeData.weight;\n            NodeItem.setAnnotations2Form(form, edgeData.keyValueMap);\n            form.jsonSchema.properties[\n              \"annotations\"\n            ].title = `Annotations Edge ${edgeMesh.edgeIndexes}`;\n            return form;\n          })\n          .orSome(form);\n      },\n      ofForm: form => {\n        const { edgeIndexes } = edgeMesh;\n        graph.getEdge(...edgeIndexes).forEach(({ data: edgeData }) => {\n          edgeData.keyValueMap = { ...lodashGet(form, \"annotations\", {}) };\n          edgeData.weight = Number.parseFloat(form.weight);\n        });\n      }\n    };\n  }\n\n  /**\n   * @override nodeItem delVertex()\n   * Delete all vertex from tree nodes\n   */\n  delVertex() {\n    // Iterate though all nodes under the root node and delete its vertexes\n    const root = this.mainView.getRootNode();\n    this.delVertexRecursively(root?.children);\n  }\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                   Graph Operations                                   *\n   *                                                                                      */\n  //========================================================================================\n\n  /**\n   *\n   * @param {*} iMesh: Mesh vertex\n   * @param {*} jMesh: Mesh vertex\n   * @param {*} edgeIndexes: Array<Integer>\n   */\n  addEdge(iMesh, jMesh, edgeIndexes = []) {\n    const [iIndex, jIndex] = edgeIndexes;\n    if (this.hasEdge(iMesh, jMesh)) return;\n    this.buildVertex(iMesh, iIndex);\n    this.buildVertex(jMesh, jIndex);\n    this.buildEdge(iMesh, jMesh);\n    return this;\n  }\n\n  delEdge(iMesh, jMesh) {\n    const { graph } = this;\n    const [i, j] = [iMesh, jMesh].map(this.getVertexIdFromMesh);\n    // if it has an edge\n    graph.getEdge(i, j).forEach(({ data: edgeData }) => {\n      const ijKey = Graph.edgeKey(i, j);\n      const jiKey = Graph.edgeKey(j, i);\n      Maybe.fromNull(this.meshByEdgeId[ijKey]).forEach(mesh => {\n        mesh.dispose();\n        delete this.meshByEdgeId[ijKey];\n        delete this.meshByEdgeId[jiKey];\n      });\n      graph.delEdge(i, j);\n    });\n  }\n\n  /**\n   *\n   * @param {*} iMesh: Mesh\n   * @param {*} jMesh: Mesh\n   */\n  hasEdge(iMesh, jMesh) {\n    const [i, j] = [iMesh, jMesh].map(this.getVertexIdFromMesh);\n    return this.graph.hasEdge(i, j);\n  }\n\n  delVertexFromMesh(iMesh, is2updateServer = true) {\n    const { graph } = this;\n    const i = this.getVertexIdFromMesh(iMesh);\n    graph.getVertex(i).forEach(_ => {\n      // if vertex found delete neighbors\n      const neighbors = graph.getNeighbors(i);\n      neighbors\n        .map(j => graph.getVertex(j))\n        .forEach(maybeV =>\n          maybeV.forEach(({ data: vertexData }) => {\n            const { mesh: jMesh } = vertexData;\n            this.delEdge(iMesh, jMesh);\n          })\n        );\n      // delete itself\n      graph.delVertex(i);\n      iMesh.graphVertex = undefined;\n      if (is2updateServer) this.mainView.updateNodeInServer(this.name);\n    });\n  }\n\n  /**\n   *\n   * @param {*} id: vertex to be updated id\n   * @param {*} newPosition: Vector3, new vertex position\n   * @param {*} is2updateServer: is to update in server boolean var\n   * @param {*} protectEdge: Pair<Int> with vertex indices\n   */\n  updateVertexPosition(id, newPosition, is2updateServer = true) {\n    const { graph } = this;\n    graph.getVertex(id).forEach(({ data: vertexData }) => {\n      vertexData.position = newPosition;\n    });\n    graph.getNeighbors(id).forEach(j => {\n      const i = id;\n      const edgeKey = Graph.edgeKey(i, j);\n      this.meshByEdgeId[edgeKey] && this.meshByEdgeId[edgeKey].dispose();\n      graph.getEdge(i, j).forEach(({ data: edgeData }) => {\n        const [iData, jData] = edgeData.edge;\n        this.buildEdge(iData.mesh, jData.mesh);\n      });\n      if (is2updateServer) this.mainView.updateNodeInServer(this.name);\n    });\n  }\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                    Private Methods                                   *\n   *                                                                                      */\n  //========================================================================================\n\n  /**\n   * Delete vertex from nodeTree children\n   * @param {*} nodeTree: List of nodes (initially root.children)\n   */\n  delVertexRecursively(nodeTree = []) {\n    nodeTree.forEach(node => {\n      if(node.item.getType() !== GraphItem.TYPE) {\n        node.item.delVertex();\n        this.delVertexRecursively(node.children);\n      }\n    });\n  }\n\n  /**\n   *\n   * @param {*} mesh: Mesh\n   * @returns Integer| Undefined\n   */\n  getVertexIdFromMesh(mesh) {\n    return mesh?.graphVertex?.vertex?.id;\n  }\n\n  /**\n   *\n   * @param {*} vertexMesh: Mesh\n   * @param {*} vertexIndex: integer representing index of vertex (can be undefined)\n   *\n   */\n  buildVertex(vertexMesh, vertexIndex) {\n    // test if vertexMesh already exists in the graph\n    const vId = this.getVertexIdFromMesh(vertexMesh);\n    const maybeVertex = this.graph.getVertex(vId);\n    maybeVertex.orElseRun(() => {\n      // if vertex doesn't exist\n      const id = vertexIndex ? vertexIndex : this.vertexGenerator++;\n      this.graph.addVertex(id);\n      this.graph.getVertex(id).forEach(vertex => {\n        vertex.data = VertexData.builder()(id, vertexMesh);\n        this.addObs2VertexMesh(vertex.data);\n      });\n    });\n  }\n\n  /**\n   *\n   * @param {*} vData: VertexData\n   */\n  addObs2VertexMesh(vData) {\n    const { mesh } = vData;\n    if (mesh !== undefined) {\n      mesh.graphVertex = {\n        vertex: vData,\n        delVertex: () => this.delVertexFromMesh(mesh),\n        vertexObs: this.getVertexMeshObs(vData)\n      };\n    }\n  }\n\n  /**\n   *\n   * @param {*} vertexData: VertexData\n   */\n  getVertexMeshObs(vertexData) {\n    return ({ updatedPointMesh, is2updateServer, _ }) => {\n      const newPos = Util3d.getGlobalCoordinates(\n        updatedPointMesh,\n        updatedPointMesh.position\n      ).toBabylon();\n      this.updateVertexPosition(vertexData.id, newPos, is2updateServer);\n    };\n  }\n\n  /**\n   *\n   * @param {*} iMesh: Mesh\n   * @param {*} jMesh: Mesh\n   * @param {*} edgeMeshes: Array<Mesh>\n   */\n  buildEdge(iMesh, jMesh) {\n    const { graph } = this;\n    // need to sort edge numbers because is undirected graph\n    const [i, j] = [iMesh, jMesh]\n      .map(this.getVertexIdFromMesh)\n      .sort((a, b) => a - b); // reason here: https://stackoverflow.com/questions/15084070/is-this-a-bug-in-array-sort\n    graph.addEdge(i, j);\n    graph.getVertex(i).forEach(({ data: iVertexD }) =>\n      graph.getVertex(j).forEach(({ data: jVertexD }) => {\n        graph.getEdge(i, j).forEach(edge => {\n          edge.data = new EdgeData(iVertexD, jVertexD);\n        });\n        // if vertices belong to same path don't build mesh\n        if (!this.doVerticesBelong2SamePath(i, j)) {\n          const edgeMesh = this.getEdgeMesh(iVertexD, jVertexD);\n          this.meshByEdgeId[Graph.edgeKey(i, j)] = edgeMesh;\n          this.meshByEdgeId[Graph.edgeKey(j, i)] = edgeMesh;\n        }\n      })\n    );\n  }\n\n  getEdgeMesh(iVertexD, jVertexD) {\n    const edgeGlobalCoord = [iVertexD, jVertexD].map(({ mesh }) => {\n      return Util3d.getGlobalCoord(mesh, mesh.position);\n    });\n    const edgeMesh = GraphItem.getEdgeMesh(\n      this.scene,\n      edgeGlobalCoord,\n      Color3.Yellow()\n    );\n    edgeMesh.parent = this.mesh;\n    edgeMesh.edgeIndexes = [iVertexD, jVertexD].map(({ id }) => id);\n    edgeMesh.getMouseContextActions = this.getEdgeMouseCtxActions(edgeMesh);\n    this.addObserver2EdgeMesh(edgeMesh);\n    this.addOnClickEdge(edgeMesh);\n    return edgeMesh;\n  }\n\n  /**\n   *\n   * @param {*} edgeMesh: Mesh\n   * @returns: () => Array<{title: String, onClick: () => {}}>\n   */\n  getEdgeMouseCtxActions = edgeMesh => () => {\n    return [\n      {\n        title: \"Delete\",\n        onClick: () =>\n          this.mainView.getUndoManager().doIt(this.getUndoDeleteEdge(edgeMesh))\n      }\n    ];\n  };\n\n  /**\n   *\n   * @param {*} edgeMesh: Mesh\n   */\n  addObserver2EdgeMesh(edgeMesh) {\n    edgeMesh.observers = new Observable();\n    edgeMesh.observers.add(this.getEdgeObs());\n  }\n\n  /**\n   * @returns ({updatedPointMesh: Mesh, is2updateServer: Boolean, displacement: Vector3}) => {}\n   */\n  getEdgeObs = () => ({ updatedPointMesh, is2updateServer, displacement }) => {\n    const v = Vec3.ofBabylon(displacement);\n    const vLocal = Util3d.getLocalCoordFromWorld(this.mesh, v, false);\n    updatedPointMesh.position = updatedPointMesh.position.add(\n      vLocal.scale(-1).toBabylon()\n    );\n    if (is2updateServer) {\n      this.graphFormMapper = this.getToFormEdge(updatedPointMesh);\n      this.mainView.setProperties(this.toForm());\n    }\n  };\n\n  /**\n   *\n   * @param {*} edgeMesh: Mesh\n   */\n  addOnClickEdge(edgeMesh) {\n    edgeMesh.onClick = this.getOnClickEdge(edgeMesh);\n  }\n\n  getOnClickEdge = edgeMesh => () => {\n    const actions = [];\n    actions.push({\n      icon: props => <i className=\"fas fa-trash\" {...props}></i>,\n      action: () => {\n        this.mainView.getUndoManager().doIt(this.getUndoDeleteEdge(edgeMesh));\n      },\n      name: \"Delete Edge [Del]\"\n    });\n    this.mainView.setContextActions(actions);\n  };\n\n  getUndoDeleteEdge(edgeMesh) {\n    const { graph } = this;\n    const { edgeIndexes } = edgeMesh;\n    const [iVertexD, jVertexD] = edgeIndexes\n      .map(i => graph.getVertex(i))\n      .map(maybeV => maybeV.some())\n      .map(({ data }) => data);\n    return this.getUndoDelLineEdge(iVertexD, jVertexD);\n  }\n\n  getUndoDelLineEdge(iVertexD, jVertexD) {\n    const { graph } = this;\n    const edgeVertexD = [iVertexD, jVertexD];\n    const [i, j] = edgeVertexD.map(({ id }) => id);\n    const edgeMeshes = edgeVertexD.map(({ mesh }) => mesh);\n    let edgeProps = { keyValueMap: {}, weight: 1, edge: {} };\n    graph.getEdge(i, j).forEach(({ data: edgeData }) => {\n      edgeProps.keyValueMap = edgeData.keyValueMap;\n      edgeProps.weight = edgeData.weight;\n      edgeProps.edge = edgeData.edge;\n    });\n    return UndoManager.actionBuilder()\n      .doAction(() => {\n        this.delEdge(...edgeMeshes);\n        this.mainView.closeContextDial();\n        this.mainView.updateNodeInServer(this.name);\n      })\n      .undoAction(() => {\n        this.addEdge(...edgeMeshes, [i, j]);\n        graph.getEdge(i, j).forEach(({ data: edgeData }) => {\n          edgeData.keyValueMap = edgeProps.keyValueMap;\n          edgeData.weight = edgeProps.weight;\n          edgeData.edge = edgeProps.edge;\n        });\n        this.mainView.updateNodeInServer(this.name);\n      })\n      .build();\n  }\n\n  /**\n   *\n   * @param {*} i: Integer\n   * @param {*} j: Integer\n   * @returns: Boolean\n   */\n  doVerticesBelong2SamePath(i, j) {\n    return this.graph\n      .getEdge(i, j)\n      .map(({ data: edgeData }) => {\n        const [iMesh, jMesh] = edgeData.edge.map(vData => vData.mesh);\n        if (iMesh === undefined || jMesh === undefined) return false;\n        return (\n          iMesh?.parent?.name === jMesh?.parent?.name &&\n          [iMesh, jMesh].map(this.isMeshBelong2Path).every(x => x)\n        );\n      })\n      .orSome(false);\n  }\n\n  isMeshBelong2Path = ({ parent }) => {\n    return this.mainView\n      .getNodeFromTree(parent?.name)\n      .filter(({ item }) => item.getType() === Path.TYPE)\n      .orSome(false);\n  };\n\n  doMeshesBelong2SamePath(iMesh, jMesh) {\n    const iParentNodeItem = iMesh?.parent?.nodeItem;\n    const jParentNodeItem = jMesh?.parent?.nodeItem;\n    return (\n      !!iParentNodeItem &&\n      !!jParentNodeItem &&\n      iParentNodeItem.name === jParentNodeItem.name &&\n      iParentNodeItem.getType() === Path.TYPE &&\n      jParentNodeItem.getType() === Path.TYPE\n    );\n  }\n\n  exportBelongToData = mesh => {\n    const { index, name } = mesh;\n    if (index === null || index === undefined) {\n      return { name };\n    }\n    // if mesh has index, then it must be a path or polygon\n    return this.mainView\n      .getNodeFromTree(mesh?.parent?.name)\n      .map(({ item }) => ({\n        name: item.name,\n        index: index > 0 ? -1 : index\n      }))\n      .orUndefined();\n  };\n  //========================================================================================\n  /*                                                                                      *\n   *                             Static Methods and Variables                             *\n   *                                                                                      */\n  //========================================================================================\n\n  static TYPE = \"GraphItem\";\n\n  static NAME = \"LogicGraph\";\n\n  static ofDict(scene, dict = null, mainView = null) {\n    if (!dict || !mainView)\n      throw new Error(\"null dictionary describing graphItem or null mainView\");\n    const graphItem = new GraphItem(\n      scene,\n      mainView,\n      dict.name,\n      dict.keyValueMap\n    );\n    const { edges } = dict;\n    let vertexCounter = Number.MIN_VALUE;\n    // create mesh of graph using addEdge\n    Object.values(edges).forEach(({ ids, belongsSrc, belongsTrg }) => {\n      const [i, j] = ids.map(x => Number(x));\n      vertexCounter = Math.max(vertexCounter, Math.max(i, j));\n      if (i < j) {\n        const edgeMeshes = getMeshesFromEdgeData(mainView, {\n          belongsSrc,\n          belongsTrg\n        });\n        graphItem.addEdge(...edgeMeshes, [i, j]);\n        // add additional data\n        graphItem.graph.getEdge(i, j).forEach(({ data: edgeData }) => {\n          const dataEdge = edges[Graph.edgeKey(i, j)];\n          edgeData.importFeatures(dataEdge);\n        });\n      }\n    });\n    graphItem.vertexGenerator = vertexCounter + 1;\n    return graphItem;\n  }\n\n  static getVertexMesh(\n    scene,\n    vertexPosition,\n    color = Color3.Gray(),\n    radius = Constants.RADIUS\n  ) {\n    const sphere = Util3d.createSphere(scene, color, radius);\n    sphere.position = vertexPosition;\n    return sphere;\n  }\n\n  /**\n   *\n   * @param {*} scene: Scene\n   * @param {*} edge: Array<Vector3>\n   * @param {*} color: Color3\n   * @param {*} radius: Number\n   */\n  static getEdgeMesh(\n    scene,\n    edge,\n    color = Color3.Gray(),\n    radius = Constants.RADIUS / 4\n  ) {\n    return Util3d.createTubeFromPoints(scene, edge, color, radius);\n  }\n\n  static createGraphItemIfNone = (scene, parentView) =>\n    parentView.getGraph().orElseRun(() => {\n      const graphItem = new GraphItem(scene, parentView);\n      graphItem.mesh.parent = parentView.getRootNode().item.mesh;\n      parentView.addNodeItem2Tree(graphItem);\n    });\n}\n\nconst graphItemInstances = {};\nconst getGraphPlaceHolder = (scene, name) => {\n  const graphPlaceHolder = Util3d.createSphere(\n    scene,\n    Color3.Gray(),\n    Number.MIN_VALUE,\n    name,\n    false\n  );\n  graphPlaceHolder.position = Vector3.Zero();\n  graphPlaceHolder.scaling = Vector3.One();\n  graphPlaceHolder.rotationQuaternion = Quaternion.Identity();\n  graphPlaceHolder.visibility = 0.0;\n  return graphPlaceHolder;\n};\n\nconst getMeshesFromEdgeData = (mainView, edgeProps) => {\n  const { belongsSrc, belongsTrg } = edgeProps;\n  const edgeMesh = [belongsSrc, belongsTrg].map(({ name, index }) => {\n    return mainView\n      .getNodeFromTree(name)\n      .map(({ item }) => {\n        if (index === null || index === undefined) return item.mesh;\n        // if has index, then it must be a path or polygon\n        const ind = index < 0 ? item.keyPoints.length - 1 : index;\n        return item.keyPoints[ind];\n      })\n      .orUndefined();\n  });\n  return edgeMesh;\n};\n\nclass VertexData {\n  /**\n   *\n   * @param {*} id: Integer\n   * @param {*} mesh: Mesh\n   * @param {*} position:\n   */\n  constructor(id, mesh, position) {\n    this.id = id;\n    this.mesh = mesh;\n    this.position = position;\n  }\n\n  static builder() {\n    return (id, mesh) => {\n      const globalPos = Util3d.getGlobalCoordinates(\n        mesh,\n        mesh.position\n      ).toBabylon();\n      return new VertexData(id, mesh, globalPos);\n    };\n  }\n}\n\nclass EdgeData {\n  constructor(vertexDataI, vertexDataJ, keyValueMap = {}) {\n    this.edge = [vertexDataI, vertexDataJ];\n    this.keyValueMap = keyValueMap;\n    this.weight = 1.0;\n  }\n\n  importFeatures({ keyValueMap, weight }) {\n    this.keyValueMap = keyValueMap;\n    this.weight = weight;\n  }\n}\n\nexport default GraphItem;\n","import Util3d from \"../Util3d/Util3d\";\nimport Vec3 from \"../Math/Vec3\";\nimport { Maybe } from \"monet\";\nimport MouseKeysAction from \"./MouseKeysAction\";\nimport React from \"react\";\nimport { Vector3 } from \"@babylonjs/core\";\nimport { UndoManager } from \"mov-fe-lib-core\";\nimport Clipboard from \"../Utils/Clipboard\";\nimport { selectOneAction } from \"../Utils/Utils\";\nimport SelectionPlaceHolder from \"../Util3d/SelectionPlaceHolder\";\nimport MeshSelector from \"../MainView/MeshSelector\";\nimport Vec2 from \"../Math/Vec2\";\nimport ReactDOM from \"react-dom\";\nimport TreeObject from \"../TreeObject/TreeObject\";\nimport GlobalRef from \"../NodeItem/GlobalRef\";\nimport GraphItem from \"../NodeItem/GraphItem\";\nimport Map from \"../NodeItem/Map\";\n\nclass DragObjectsAction extends MouseKeysAction {\n  constructor() {\n    super();\n    this.key = \"dragObject\";\n    this.name = \"Grab Objects [1]\";\n    this.icon = props => <i className=\"far fa-hand-paper\" {...props}></i>;\n    this.maybeSelectedMesh = Maybe.none();\n    this.clickPointInWorld = Vec3.ZERO;\n    this.movePointInWorld = Vec3.ZERO;\n    this.startDivPos = Vec2.ZERO;\n    this.corners = [];\n  }\n\n  action = parentView => {\n    super.action(parentView);\n    parentView.setSelectedAction(this);\n  };\n\n  onPointerDown = (evt, parentView) => {\n    if (!(evt.buttons === 1 || evt.buttons === 2)) return;\n    parentView.getSceneMemory().forEach(({ scene, ground }) => {\n      this.maybeSelectedMesh = Util3d.pickMesh(scene, ground);\n      this.maybeSelectedMesh.forEach(currentMesh =>\n        this.dragDownMesh(currentMesh, parentView, evt)\n      );\n      this.maybeSelectedMesh.orLazy(() => {\n        this.dragDownWithoutMesh(parentView, evt);\n      });\n    });\n  };\n\n  onPointerMove = (evt, parentView) => {\n    if (!(evt.buttons === 1)) return;\n    parentView.getSceneMemory().forEach(({ scene, ground }) => {\n      // check that a mesh was selected\n      this.maybeSelectedMesh.forEach(selectedMesh => {\n        Util3d.getGroundPosition(scene, ground).forEach(groundPos => {\n          this.dragMoveMesh(parentView, groundPos);\n        });\n      });\n      this.maybeSelectedMesh.orLazy(() => {\n        this.dragMoveWithoutMesh(evt);\n      });\n    });\n  };\n\n  onPointerUp = (evt, parentView) => {\n    parentView.getSceneMemory().forEach(({ camera, scene, ground, canvas }) => {\n      this.maybeSelectedMesh.forEach(selectedMesh => {\n        this.dragUpMesh(selectedMesh, parentView, scene, ground);\n      });\n      this.maybeSelectedMesh.orLazy(() => {\n        this.dragUpWithoutMesh(parentView, scene);\n      });\n      // reset action\n      camera.attachControl(canvas, true);\n      this.maybeSelectedMesh = Maybe.none();\n      this.destroySelectionDiv();\n      this.corners = [];\n    });\n  };\n\n  onKeyUp = (evt, parentView) => {\n    const defaultAction = () => super.onKeyUp(evt, parentView);\n    const predicateActionList = [\n      {\n        predicate: e => [\"Backspace\", \"Delete\"].includes(e.code),\n        action: this.getDeleteButtonAction(parentView)\n      },\n      {\n        predicate: e => e.ctrlKey && e.code === \"KeyC\",\n        action: this.getCopyAction(parentView)\n      },\n      {\n        predicate: e => e.ctrlKey && e.code === \"KeyV\",\n        action: this.getPasteAction(parentView)\n      }\n    ];\n    selectOneAction(predicateActionList, defaultAction)(evt);\n  };\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                         UTILS                                        *\n   *                                                                                      */\n  //========================================================================================\n\n  dragDownMesh(currentMesh, parentView, evt) {\n    parentView.getSceneMemory().forEach(({ camera, canvas, scene, ground }) => {\n      camera.detachControl(canvas);\n      this.addSelectedMesh(evt, currentMesh, parentView);\n      this.handleMeshRightClick(evt, parentView, currentMesh);\n      Util3d.getGroundPosition(scene, ground).forEach(groundPos => {\n        this.updateMouseVars(groundPos);\n        // mesh onClick\n        currentMesh.onClick\n          ? currentMesh.onClick()\n          : parentView.closeContextDial();\n\n        if (currentMesh.isSelectionPlaceHolder) {\n          parentView.addGizmo2Mesh(\n            currentMesh,\n            () =>\n              this.notifyObservers(currentMesh, true, Vec3.ZERO, parentView),\n            () =>\n              this.notifyObservers(currentMesh, false, Vec3.ZERO, parentView)\n          );\n        } else {\n          this.selectMeshUpdateUI(parentView);\n        }\n      });\n    });\n  }\n\n  selectMeshUpdateUI(parentView) {\n    const meshSelector = MeshSelector.ofMainView(parentView);\n    const selectionPlaceHolder = SelectionPlaceHolder.ofMainView(parentView);\n    const selectedMeshes = meshSelector.meshes();\n    parentView.highlightMeshesInScene(selectedMeshes);\n    parentView.highlightNodesInTree(selectedMeshes.map(({ name }) => name));\n    if (selectedMeshes.length > 1) {\n      parentView.addGizmo2Name();\n      selectionPlaceHolder.clear();\n      selectionPlaceHolder.push(selectedMeshes);\n      this.setProperties(parentView, selectedMeshes[0].name);\n    } else {\n      selectionPlaceHolder.clear();\n      parentView.addGizmo2Name();\n      selectedMeshes.forEach(mesh => {\n        parentView.addGizmo2Name(mesh.name);\n        this.setProperties(parentView, mesh.name);\n      });\n    }\n  }\n\n  dragDownWithoutMesh(parentView, evt) {\n    parentView\n      .getMouseCoordsFromRoot()\n      .forEach(mousePosRoot =>\n        this.handleRightClickWithoutMesh(evt, parentView, mousePosRoot)\n      );\n    parentView.getSceneMemory().forEach(({ camera, canvas, scene }) => {\n      if (evt.shiftKey) {\n        camera.detachControl(canvas);\n        this.createSelectionDiv(evt);\n        this.corners.push(Vec2.of(scene.pointerX, scene.pointerY));\n      }\n    });\n  }\n\n  dragMoveMesh(parentView, groundPos) {\n    const meshSelector = MeshSelector.ofMainView(parentView);\n    const meshes = meshSelector.meshes();\n    const selector = SelectionPlaceHolder.ofMainView(parentView);\n    const newMousePosInWorld = Vec3.ofBabylon(groundPos);\n    const v = newMousePosInWorld.sub(this.movePointInWorld);\n    meshes.forEach(mesh => {\n      let vLocal = Util3d.getLocalCoordFromWorld(mesh, v, false);\n      vLocal = new Vector3(vLocal.x, vLocal.y, 0);\n      mesh.position = mesh.position.add(vLocal);\n      this.notifyObservers(mesh, false, v, parentView);\n    });\n    if (meshes.length > 1) {\n      let vLocal = Util3d.getLocalCoordFromWorld(selector.mesh, v, false);\n      vLocal = new Vector3(vLocal.x, vLocal.y, 0);\n      selector.mesh.position = selector.mesh.position.add(vLocal);\n    }\n    this.movePointInWorld = newMousePosInWorld;\n  }\n\n  dragMoveWithoutMesh(evt) {\n    this.updateSelectionDiv(evt);\n  }\n\n  dragUpMesh(selectedMesh, parentView, scene, ground) {\n    const meshSelector = MeshSelector.ofMainView(parentView);\n    const meshes = meshSelector.meshes();\n    const selectPlaceHolder = SelectionPlaceHolder.ofMainView(parentView);\n    Util3d.getGroundPosition(scene, ground).forEach(groundPos => {\n      const groundPosInWorld = Vec3.ofBabylon(groundPos);\n      const bigDisplacement = groundPosInWorld.sub(this.clickPointInWorld);\n      meshes.forEach(mesh => {\n        this.notifyObservers(mesh, true, Vec3.ZERO, parentView);\n        parentView.updateNodeInServer(mesh.name);\n      });\n      this.setProperties(parentView, selectedMesh.name);\n      if (bigDisplacement.length() > 0) {\n        parentView\n          .getUndoManager()\n          .addIt(this.getUndoAbleAction(meshes, bigDisplacement, parentView));\n      }\n      if (selectedMesh.isSelectionPlaceHolder) {\n        meshSelector.clear();\n        meshSelector.addArray(selectPlaceHolder.arrayOfMeshes);\n      }\n    });\n  }\n\n  dragUpWithoutMesh(parentView, scene) {\n    this.selectObjectsInside(scene, parentView);\n  }\n\n  handleMeshRightClick = (evt, parentView, mesh) => {\n    if (!(evt.buttons === 2)) return;\n    if (!mesh || !mesh.getMouseContextActions) return;\n    parentView.setMouseContextActions(\n      evt,\n      mesh.getMouseContextActions(parentView)\n    );\n  };\n\n  /**\n   * @param evt: event\n   * @param parentView: MainView\n   * @param mousePosFromRoot: Vector3\n   */\n  handleRightClickWithoutMesh = (evt, parentView, mousePosFromRoot) => {\n    if (!(evt.buttons === 2)) return;\n    parentView.setMouseContextActions(evt, [\n      {\n        title: \"Paste\",\n        onClick: this.getPasteOnClick(mousePosFromRoot, parentView)\n      }\n    ]);\n  };\n\n  updateMouseVars(groundPos) {\n    const groundPosInGlobal = Vec3.ofBabylon(groundPos);\n    this.movePointInWorld = groundPosInGlobal;\n    this.clickPointInWorld = groundPosInGlobal;\n  }\n\n  addSelectedMesh(evt, currentMesh, parentView) {\n    const meshSelector = MeshSelector.ofMainView(parentView);\n    // is an edge mesh\n    if (!!currentMesh.edgeIndexes) {\n      meshSelector.clear();\n      meshSelector.add(currentMesh);\n      return;\n    }\n    // not an edge mesh\n    meshSelector.filter(mesh => !mesh.edgeIndexes);\n    if (evt.shiftKey) {\n      meshSelector.add(currentMesh);\n    } else {\n      if (meshSelector.has(currentMesh)) return;\n      meshSelector.clear();\n      meshSelector.add(currentMesh);\n    }\n  }\n\n  getPasteOnClick = (mousePosFromRoot, parentView) => () => {\n    const pasteAction = Clipboard.paste();\n    if (pasteAction && typeof pasteAction === \"function\") {\n      pasteAction(mousePosFromRoot, parentView);\n    }\n  };\n\n  getDeleteButtonAction(parentView) {\n    return () => {\n      const meshSelector = MeshSelector.ofMainView(parentView);\n      const meshes = meshSelector.meshes();\n      const isOne = meshes.length === 1;\n      meshes.forEach(mesh => {\n        const maybeNode = parentView.getNodeFromTree(mesh.name);\n        maybeNode.forEach(node => parentView.onDeleteNode(node, isOne, isOne));\n        maybeNode.orElseRun(() => {\n          //TODO REFACTOR THIS;\n          if (!isOne) return;\n          const contextActions = parentView.getContextActions();\n          !!contextActions[0] && contextActions[0].action(parentView);\n        });\n      });\n      parentView.highlightNodesInTree();\n      parentView.highlightMeshesInScene();\n      parentView.addGizmo2Mesh();\n      meshSelector.clear();\n      SelectionPlaceHolder.ofMainView(parentView).clear();\n      parentView.forceUpdate();\n    };\n  }\n\n  getCopyAction(parentView) {\n    const meshSelector = MeshSelector.ofMainView(parentView);\n    const meshes = meshSelector.meshes();\n    const selectPlaceHolder = SelectionPlaceHolder.ofMainView(parentView).mesh;\n    return () => {\n      if (meshes.length <= 1) {\n        meshes\n          .filter(mesh => !!mesh.nodeItem)\n          .map(mesh => mesh.nodeItem)\n          .forEach(item => {\n            Clipboard.copy((mousePosFromRoot, someMainView) => {\n              item\n                .getCopyFunction()(mousePosFromRoot, someMainView)\n                .forEach(({ mesh: copiedMesh }) => {\n                  someMainView.addGizmo2Name(copiedMesh.name);\n                  someMainView.highlightMeshesInScene([copiedMesh]);\n                  someMainView.highlightNodesInTree([copiedMesh.name]);\n                  MeshSelector.ofMainView(someMainView).clear().add(copiedMesh);\n                });\n            });\n          });\n      } else {\n        const nodeCopyActionPairs = meshes\n          .filter(mesh => !!mesh.nodeItem)\n          .map(mesh => mesh.nodeItem)\n          .reduce((nodeActionPairs, nodeItem) => {\n            nodeActionPairs.push([nodeItem, nodeItem.getCopyFunction(false)]);\n            return nodeActionPairs;\n          }, []);\n        Clipboard.copy((mousePosFromRoot, someMainView) => {\n          const maybeCopiedItems = nodeCopyActionPairs.map(\n            ([nodeItem, copyAction]) => {\n              const displacement = Util3d.toGlobalCoord(parentView)(\n                nodeItem.mesh.absolutePosition\n              ).subtract(selectPlaceHolder.position);\n              return copyAction(\n                displacement.add(mousePosFromRoot),\n                someMainView\n              );\n            }\n          );\n          const copiedItems = maybeCopiedItems\n            .filter(maybe => maybe.isSome())\n            .map(maybe => maybe.some());\n          const copiedMeshes = copiedItems.map(({ mesh }) => mesh);\n          const copiedNames = copiedItems.map(({ name }) => name);\n          someMainView.addGizmo2Name();\n          someMainView.highlightMeshesInScene(copiedMeshes);\n          someMainView.highlightNodesInTree(copiedNames);\n          MeshSelector.ofMainView(someMainView).clear().addArray(copiedMeshes);\n          SelectionPlaceHolder.ofMainView(someMainView)\n            .clear()\n            .push(copiedMeshes);\n          someMainView.forceUpdate();\n        });\n      }\n    };\n  }\n\n  getPasteAction(parentView) {\n    return () => {\n      parentView\n        .getMouseCoordsFromRoot()\n        .forEach(mousePosRoot =>\n          this.getPasteOnClick(mousePosRoot, parentView)()\n        );\n    };\n  }\n\n  /**\n   *\n   * @param {*} mesh: Mesh\n   * @param {*} is2updateServer: Boolean\n   * @param {*} displacement: Vec3 in world coordinates\n   */\n  notifyObservers(mesh, is2updateServer, displacement, parentView) {\n    // notify  babylonjs observers\n    Maybe.fromNull(mesh.observers).forEach(obs => {\n      obs.notifyObservers({\n        updatedPointMesh: mesh,\n        is2updateServer: is2updateServer,\n        displacement: displacement.toBabylon()\n      });\n    });\n    // notify graph observers\n    Maybe.fromNull(mesh.graphVertex).forEach(({ vertexObs }) => {\n      vertexObs({\n        updatedPointMesh: mesh,\n        is2updateServer: is2updateServer,\n        displacement: displacement.toBabylon()\n      });\n    });\n    if (parentView.getNodeFromTree(mesh.name).isSome()) {\n      mesh._children\n        .filter(\n          m =>\n            (!!m.observers || !!m.graphVertex) &&\n            parentView.getNodeFromTree(m.name).isSome()\n        )\n        .forEach(m =>\n          this.notifyObservers(m, is2updateServer, displacement, parentView)\n        );\n    }\n  }\n\n  setProperties = (parentView, name) => parentView.setPropertiesWithName(name);\n\n  /**\n   *\n   * @param {*} selectedMeshes: Array<Mesh>\n   * @param {*} displacement: Vec3 in world coordinates\n   * @param {*} parentView: MainView\n   */\n  getUndoAbleAction(selectedMeshes, displacement, parentView) {\n    return UndoManager.actionBuilder()\n      .doAction(() => {\n        selectedMeshes.forEach(mesh => {\n          const localDisplacement = Util3d.getLocalCoordFromWorld(\n            mesh,\n            displacement,\n            false\n          );\n          const newPos = Vec3.ofBabylon(mesh.position).add(localDisplacement);\n          mesh.position = newPos.toBabylon();\n          this.notifyObservers(mesh, true, displacement, parentView);\n          parentView.updateNodeInServer(mesh.name);\n        });\n      })\n      .undoAction(() => {\n        selectedMeshes.forEach(mesh => {\n          const invertDisplacement = displacement.scale(-1);\n          const localDisplacement = Util3d.getLocalCoordFromWorld(\n            mesh,\n            invertDisplacement,\n            false\n          );\n          const newPos = Vec3.ofBabylon(mesh.position).add(localDisplacement);\n          mesh.position = newPos.toBabylon();\n          this.notifyObservers(mesh, true, invertDisplacement, parentView);\n          parentView.updateNodeInServer(mesh.name);\n        });\n      })\n      .build();\n  }\n\n  createSelectionDiv(e) {\n    this.startDivPos = this.findMouseInDom(e);\n    const { x, y } = this.startDivPos;\n    const outerDiv = document.createElement(\"div\");\n    outerDiv.id = ID;\n    document.body.appendChild(outerDiv);\n    ReactDOM.render(\n      <SelectDiv left={x} top={y}></SelectDiv>,\n      document.getElementById(ID)\n    );\n  }\n\n  updateSelectionDiv(e) {\n    const newMouse = this.findMouseInDom(e);\n    const oldMouse = this.startDivPos;\n    const { x: minX, y: minY } = newMouse.op(oldMouse, Math.min);\n    const { x: maxX, y: maxY } = newMouse.op(oldMouse, Math.max);\n    const outerDiv = document.getElementById(ID);\n    if (!outerDiv) return;\n    ReactDOM.render(\n      <SelectDiv\n        left={minX}\n        top={minY}\n        width={maxX - minX}\n        height={maxY - minY}\n        style={{ zIndex: 999 }}\n      ></SelectDiv>,\n      outerDiv\n    );\n  }\n\n  destroySelectionDiv() {\n    const outerDiv = document.getElementById(ID);\n    if (!outerDiv) return;\n    outerDiv.parentNode.removeChild(outerDiv);\n  }\n\n  findMouseInDom(e) {\n    const x = e.clientX; //x position within the element.\n    const y = e.clientY; //y position within the element.\n    return new Vec2(x, y);\n  }\n\n  selectObjectsInside(scene, parentView) {\n    if (this.corners.length === 0) return;\n    this.corners.push(Vec2.of(scene.pointerX, scene.pointerY));\n    const [oldMouse, newMouse] = this.corners;\n    const min = newMouse.op(oldMouse, Math.min);\n    const max = newMouse.op(oldMouse, Math.max);\n    const cornersDiv = [min, Vec2.of(max.x, min.y), max, Vec2.of(min.x, max.y)];\n    const rayCastCorners = cornersDiv.map(p => this.pickPoints(p, parentView));\n    if (rayCastCorners.some(x => x === null || x === undefined)) return;\n    const treeObj = new TreeObject(parentView.getObjectTree());\n    const insideBox = treeObj.flatten(\n      this.isItemInsideBox(rayCastCorners, parentView)\n    );\n    let insideBoxDragAbleMeshes = insideBox.map(({ item }) => item.mesh);\n    const meshSelector = MeshSelector.ofMainView(parentView);\n    meshSelector.clear();\n    if (insideBoxDragAbleMeshes.length !== 0) {\n      meshSelector.addArray(insideBoxDragAbleMeshes, false);\n    }\n    this.selectMeshUpdateUI(parentView);\n  }\n\n  /**\n   *\n   * @param {*} p: Vec2 point in canvas\n   * @param {*} parentView: MainView\n   */\n  pickPoints(p, parentView) {\n    return parentView\n      .getSceneMemory()\n      .flatMap(memory => {\n        const { scene, ground } = memory;\n        const pickInfo = scene.pick(p.x, p.y, mesh => mesh === ground);\n        if (pickInfo.hit) {\n          const floorPoint = Util3d.toGlobalCoord(parentView)(\n            pickInfo.pickedPoint\n          );\n          return Maybe.some(Vec2.of(floorPoint.x, floorPoint.y));\n        }\n        return Maybe.none();\n      })\n      .orNull();\n  }\n\n  /**\n   *\n   * @param {*} polygon: Array<Vec2>\n   * @param {*} parentView\n   */\n  isItemInsideBox(polygon, parentView) {\n    return ({ item }) => {\n      const type = item.getType();\n      if (\n        type === GlobalRef.TYPE ||\n        type === Map.TYPE ||\n        type === GraphItem.TYPE ||\n        item?.mesh?.isSelectionPlaceHolder\n      )\n        return false;\n      const { mesh } = item;\n      return this.isMeshInsideBox(polygon, parentView)(mesh);\n    };\n  }\n\n  /**\n   *\n   * @param {*} polygon: Array<Vec2>\n   * @param {*} parentView\n   */\n  isMeshInsideBox(polygon, parentView) {\n    return mesh => {\n      const p = Util3d.toGlobalCoord(parentView)(mesh.absolutePosition);\n      const planeP = new Vec2(p.x, p.y);\n      return this.isPointInsideBox(polygon)(planeP);\n    };\n  }\n\n  /**\n   *\n   * @param {*} polygon: Array<Vec2>\n   * @param {*} epsilon: Number\n   */\n  isPointInsideBox(polygon, epsilon = 1e-3) {\n    return p => {\n      let theta = 0;\n      const n = polygon.length;\n      for (let i = 0; i < n; i++) {\n        const vi = polygon[i].sub(p);\n        const vii = polygon[(i + 1) % n].sub(p);\n        theta += Math.acos(vi.dot(vii) / (vi.length() * vii.length()));\n      }\n      return Math.abs(theta - 2 * Math.PI) < epsilon;\n    };\n  }\n}\n\n//========================================================================================\n/*                                                                                      *\n *                                     SELECTION DIV                                    *\n *                                                                                      */\n//========================================================================================\n\nconst SelectDiv = ({ left, top, width, height, style }) => {\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        top: top,\n        left: left,\n        width: width,\n        height: height,\n        borderRadius: 10,\n        border: \"solid\",\n        borderColor: \"#c7c7c7\",\n        ...style\n      }}\n    ></div>\n  );\n};\nSelectDiv.defaultProps = {\n  left: 0,\n  top: 0,\n  width: 0,\n  height: 0\n};\nconst ID = \"SELECTION_TOOL_ID\";\n//========================================================================================\n/*                                                                                      *\n *                                        EXPORT                                        *\n *                                                                                      */\n//========================================================================================\n\nexport default DragObjectsAction;\n","import Util3d from \"../Util3d/Util3d\";\nimport KeyPoint from \"../NodeItem/KeyPoint\";\nimport Vec3 from \"../Math/Vec3\";\nimport { Maybe } from \"monet\";\nimport MouseKeysAction from \"./MouseKeysAction\";\nimport React from \"react\";\nimport { Color3, Axis, Vector3 } from \"@babylonjs/core\";\nimport { UndoManager } from \"mov-fe-lib-core\";\n\nclass AddKeyPointAction extends MouseKeysAction {\n  constructor() {\n    super();\n    this.key = \"addKeyPoint\";\n    this.name = \"Add Key Point [4]\";\n    this.maybeMousePos = Maybe.none();\n    this.tempMesh = null;\n    this.icon = props => <i className=\"fas fa-map-marker\" {...props}></i>;\n  }\n\n  createKeyPoint(\n    position,\n    name,\n    scene,\n    parentView,\n    is2addInServer = true,\n    color = Color3.Gray()\n  ) {\n    const rootMesh = parentView.getRootNode().item.mesh;\n\n    const keyPoint = KeyPoint.ofDict(scene, {\n      name: name,\n      color: [color.r, color.g, color.b]\n    });\n    const mesh = keyPoint.mesh;\n    mesh.parent = rootMesh;\n\n    const localPosition = Util3d.getLocalCoordFromWorld(\n      { parent: rootMesh },\n      Vec3.ofBabylon(position)\n    ).toBabylon();\n\n    mesh.setPositionWithLocalVector(\n      localPosition.add(Axis.Z.scale(KeyPoint.DEFAULT_SIZE))\n    );\n\n    if (is2addInServer) {\n      parentView.addNodeItem2Tree(keyPoint, rootMesh.name, is2addInServer);\n    }\n    return mesh;\n  }\n\n  action = parentView => {\n    super.action(parentView);\n    parentView.setSelectedAction(this);\n  };\n\n  onPointerDown = (evt, parentView) => {\n    if (evt.button !== 0) {\n      return;\n    }\n    parentView.getSceneMemory().forEach(memory => {\n      const { scene, ground, camera } = memory;\n      this.maybeMousePos = Util3d.getGroundPosition(scene, ground);\n      this.maybeMousePos.forEach(mousePos => {\n        camera.detachControl(memory.canvas);\n      });\n    });\n  };\n\n  onPointerMove = (evt, parentView) => {\n    parentView.getSceneMemory().forEach(memory => {\n      const scene = memory.scene;\n      const ground = memory.ground;\n      const maybeCurrent = Util3d.getGroundPosition(scene, ground);\n      maybeCurrent.forEach(current => {\n        this.maybeMousePos.forEach(oldMousePos => {\n          if (this.tempMesh) this.tempMesh.dispose();\n          this.tempMesh = this.createKeyPoint(\n            current,\n            TEMP_KEY_POINT_NAME,\n            scene,\n            parentView,\n            false\n          );\n        });\n      });\n    });\n  };\n\n  onPointerUp = (evt, parentView) => {\n    parentView.getSceneMemory().forEach(({ scene, camera, ground, canvas }) => {\n      const maybeCurrent = Util3d.getGroundPosition(scene, ground);\n      maybeCurrent.forEach(current => {\n        this.maybeMousePos.forEach(oldMousePos => {\n          if (this.tempMesh) this.tempMesh.dispose();\n          const name = `KeyPoint${Math.floor(Math.random() * 1e3)}`;\n          const keyPoint = this.createKeyPoint(\n            current,\n            name,\n            scene,\n            parentView,\n            true,\n            new Color3(Math.random(), Math.random(), Math.random())\n          );\n          parentView.setPropertiesWithName(name);\n          parentView\n            .getUndoManager()\n            .addIt(this.getUndoAbleAction(keyPoint, scene, parentView));\n        });\n      });\n      this.maybeMousePos = Maybe.none();\n      camera.attachControl(canvas, true);\n    });\n  };\n\n  getUndoAbleAction(mesh, scene, parentView) {\n    return UndoManager.actionBuilder()\n      .doAction(() => {\n        const keyPoint = this.createKeyPoint(\n          Vector3.Zero(),\n          mesh.name,\n          scene,\n          parentView,\n          true,\n          mesh.material.diffuseColor\n        );\n        keyPoint.position = mesh.position;\n        parentView.updateNodeInServer(mesh.name);\n      })\n      .undoAction(() => {\n        parentView.deleteNodeFromTreeUsingName(mesh.name);\n      })\n      .build();\n  }\n}\n\nconst TEMP_KEY_POINT_NAME = \"temp_key_point\";\nexport default AddKeyPointAction;\n","import NodeItem from \"./NodeItem\";\nimport Util3d from \"../Util3d/Util3d\";\nimport Vec3 from \"../Math/Vec3\";\nimport { Maybe } from \"monet\";\nimport Constants from \"../Utils/Constants\";\nimport {\n  Vector3,\n  Axis,\n  Color3,\n  Observable,\n  StandardMaterial,\n  Quaternion\n} from \"@babylonjs/core\";\nimport isEqual from \"lodash.isequal\";\n\nclass BoxRegion extends NodeItem {\n  constructor(mesh, corners, keyPoints, keyValueMap = {}) {\n    super(mesh, keyValueMap);\n    this.corners = corners; // in local coordinates, in relation to center of mass\n    this.keyPoints = keyPoints;\n  }\n\n  toDict() {\n    const dict = super.toDict();\n    dict.corners = this.corners;\n    return dict;\n  }\n\n  toForm() {\n    const schema = super.toForm();\n    schema.jsonSchema.properties[\"dimensions\"] = {\n      type: \"object\",\n      title: \"Dimensions\",\n      properties: {\n        lower: {\n          type: \"object\",\n          title: \"Lower Corner\",\n          properties: {\n            x: {\n              type: \"number\",\n              title: \"x\"\n            },\n            y: {\n              type: \"number\",\n              title: \"y\"\n            }\n          }\n        },\n        size: {\n          type: \"object\",\n          title: \"Size\",\n          properties: {\n            scaleX: {\n              type: \"number\",\n              title: \"scale-X\"\n            },\n            scaleY: {\n              type: \"number\",\n              title: \"scale-Y\"\n            }\n          }\n        }\n      }\n    };\n    schema.uiSchema[\"dimensions\"] = { \"ui:widget\": \"collapse\" };\n    // global ref coordinates\n    const worldCorners = this.keyPoints\n      .map(x => Util3d.getGlobalCoordinates(x, x.position))\n      .map(x => x.toArray());\n    schema.data[\"dimensions\"] = {\n      lower: {\n        x: worldCorners[0][0],\n        y: worldCorners[0][1]\n      },\n      size: {\n        // TODO: warning, doesn't take into account possible scaling\n        scaleX: this.corners[1][0] - this.corners[0][0],\n        scaleY: this.corners[1][1] - this.corners[0][1]\n      }\n    };\n    return schema;\n  }\n\n  ofForm(form) {\n    const oldForm = this.toForm();\n    const oldDimensions = oldForm.data.dimensions;\n    if (isEqual(oldDimensions, form.dimensions)) {\n      super.ofForm(form);\n    } else {\n      this.ofFormDimensions(form);\n    }\n  }\n\n  ofDict(scene, dict = null, mainView = null) {\n    return BoxRegion.ofDict(scene, dict, mainView);\n  }\n\n  getType = () => BoxRegion.TYPE;\n\n  static TYPE = \"BoxRegion\";\n\n  ofFormDimensions(form) {\n    const newLowerPositionInWorldCoordinates = Vector3.FromArray(\n      [form.dimensions.lower.x, form.dimensions.lower.y, 0].map(\n        Number.parseFloat\n      )\n    );\n    const newLocalDimensions = [\n      form.dimensions.size.scaleX,\n      form.dimensions.size.scaleY\n    ].map(Number.parseFloat);\n    let localLowerPosition = Util3d.getLocalCoordFromGlobal(\n      this.keyPoints[0],\n      newLowerPositionInWorldCoordinates\n    ).toArray();\n    const notify = (i, update = false) =>\n      this.keyPoints[i].observers.notifyObservers({\n        updatedPointMesh: this.keyPoints[i],\n        is2updateServer: update\n      });\n\n    this.keyPoints[0].position = new Vector3(\n      localLowerPosition[0],\n      localLowerPosition[1],\n      this.keyPoints[0].position.z\n    );\n    notify(0);\n    localLowerPosition = Util3d.getLocalCoordFromGlobal(\n      this.keyPoints[0],\n      newLowerPositionInWorldCoordinates\n    ).toArray();\n    this.keyPoints[1].position = new Vector3(\n      localLowerPosition[0] + newLocalDimensions[0],\n      localLowerPosition[1] + newLocalDimensions[1],\n      this.keyPoints[1].position.z\n    );\n    notify(1);\n  }\n\n  static ofDict(scene, dict = null, mainView = null) {\n    if (!dict) throw new Error(\"null dictionary describing Box region\");\n    const name = Maybe.fromNull(dict.name).orSome(\n      `BoxRegion${Math.floor(Math.random() * 1e3)}`\n    );\n    const mesh = createBoxRegionMesh(dict, name, scene);\n\n    const material = new StandardMaterial(`BoxRegionMaterial${name}`, scene);\n    const color = new Color3(dict.color[0], dict.color[1], dict.color[2]);\n    material.diffuseColor = color;\n    material.emissiveColor = color;\n    material.backFaceCulling = false;\n    mesh.material = material;\n\n    mesh.visibility = VISIBILITY;\n\n    Maybe.fromNull(dict.quaternion).forEach(quaternion => {\n      const babylonQuaternion = new Quaternion(\n        quaternion[1],\n        quaternion[2],\n        quaternion[3],\n        quaternion[0]\n      );\n      mesh.rotationQuaternion = babylonQuaternion.normalize();\n    });\n\n    const keyPoints = createPlaceHolderKeyPoints(\n      scene,\n      dict.corners.map(x => Vec3.of(x).toBabylon()),\n      mesh,\n      mainView\n    );\n    return new BoxRegion(mesh, dict.corners, keyPoints, dict.keyValueMap);\n  }\n}\n\nconst RADIUS = Constants.RADIUS;\nconst FACES = [\n  [0, 1, 2],\n  [2, 3, 0],\n  [4, 5, 6],\n  [6, 7, 4],\n  [0, 1, 5],\n  [5, 4, 0],\n  [3, 2, 6],\n  [6, 7, 3],\n  [1, 2, 6],\n  [6, 5, 1],\n  [0, 3, 7],\n  [7, 4, 0]\n];\n\n/**\n * @param boxRegion: {position: 3-array, corners: array of 3-arrays }\n */\nfunction createBoxRegionMesh(boxRegion, name, scene) {\n  // centered corners vec\n  const corners = boxRegion.corners.map(x => Vec3.of(x).toBabylon());\n  const d = corners[1].subtract(corners[0]);\n  const middlePoint = Vec3.of(boxRegion.position).toBabylon();\n  const shape = [\n    corners[0],\n    corners[0].add(Axis.X.scale(d.x)),\n    corners[0].add(new Vector3(d.x, d.y, 0)),\n    corners[0].add(Axis.Y.scale(d.y))\n  ];\n  const h = new Vector3(0, 0, d.z);\n  const boxRegionMesh = {\n    positions: [\n      shape[0],\n      shape[1],\n      shape[2],\n      shape[3],\n      shape[0].add(h),\n      shape[1].add(h),\n      shape[2].add(h),\n      shape[3].add(h)\n    ],\n    faces: FACES\n  };\n  const mesh = Util3d.meshFromPositionAndFaces(\n    name,\n    scene,\n    boxRegionMesh.positions,\n    boxRegionMesh.faces\n  );\n  mesh.position = middlePoint;\n  return mesh;\n}\n\nfunction createNewMeshFromOldUsingNewBox(newBox, scene, mesh, item) {\n  const average = Util3d.pointAverageVec3(newBox.corners.map(x => Vec3.of(x)));\n  newBox.position = average.toArray();\n  newBox.corners = newBox.corners.map(x => Vec3.of(x).sub(average).toArray());\n\n  // average in parent coord\n  const rotMat3 = Util3d.getRotationMatrix(mesh);\n  const scaleVec3 = Vec3.ofBabylon(mesh.scaling);\n  const averageInParentCoord = rotMat3\n    .prodVec(average.mul(scaleVec3))\n    .toBabylon();\n\n  const newMesh = createBoxRegionMesh(newBox, mesh.name, scene);\n  newMesh.parent = mesh.parent;\n  newMesh.rotationQuaternion = mesh.rotationQuaternion;\n  newMesh.position = averageInParentCoord.add(mesh.position);\n\n  newMesh.material = mesh.material;\n  newMesh.visibility = VISIBILITY;\n  newMesh.getMouseContextActions = mesh.getMouseContextActions;\n  newMesh.nodeItem = mesh.nodeItem;\n  newMesh.observers = mesh.observers;\n  if (!!mesh.graphVertex) newMesh.graphVertex = mesh.graphVertex;\n\n  item.mesh = newMesh;\n  item.corners = newBox.corners;\n\n  const childrenCopy = [...mesh._children];\n  childrenCopy.forEach(c => {\n    c.parent = newMesh;\n  });\n  item.keyPoints.forEach((k, j) => {\n    k.position = Vec3.of(newBox.corners[j]).toBabylon();\n  });\n  // dispose old mesh\n  mesh.dispose();\n}\n\nconst getKeyPointObserverFunction = (mainView, scene) => {\n  return ({ updatedPointMesh, is2updateServer }) => {\n    mainView\n      .getNodeFromTree(updatedPointMesh.parent.name)\n      .forEach(boxRegionTreeNode => {\n        const index = updatedPointMesh.index;\n        const item = boxRegionTreeNode.item;\n        const mesh = item.mesh;\n        const name = mesh.name;\n        let newBox = {\n          position: Vec3.ofBabylon(mesh.position).toArray(),\n          corners: item.corners\n        };\n        newBox.corners[index] = Vec3.ofBabylon(\n          updatedPointMesh.position\n        ).toArray();\n        createNewMeshFromOldUsingNewBox(newBox, scene, mesh, item);\n        mainView.addGizmo2Name();\n        if (is2updateServer) {\n          mainView.updateNodeInServer(name);\n          mainView.getNodeFromTree(name).forEach(node => {\n            mainView.setProperties(node.item.toForm());\n          });\n        }\n        // signal box region observers\n        Maybe.fromNull(item.mesh.observers).forEach(obs => {\n          obs.notifyObservers({\n            updatedPointMesh: item.mesh,\n            is2updateServer: is2updateServer,\n            displacement: Vector3.Zero()\n          });\n        });\n        Maybe.fromNull(item.mesh.graphVertex).forEach(({ vertexObs }) => {\n          vertexObs({\n            updatedPointMesh: item.mesh,\n            is2updateServer: is2updateServer,\n            displacement: Vector3.Zero()\n          });\n        });\n      });\n  };\n};\n\nconst createPlaceHolderKeyPoints = (\n  scene,\n  corners,\n  boxRegionMesh,\n  mainView\n) => {\n  const keyPoints = [];\n  corners.forEach((corner, i) => {\n    const p = corner;\n\n    const keyPoint = Util3d.createSphere(\n      scene,\n      new Color3(0.25, 0.25, 0.25),\n      RADIUS,\n      `${boxRegionMesh.name}keyPoint${i}`,\n      true\n    );\n\n    keyPoint.parent = boxRegionMesh;\n    keyPoint.position = p;\n    keyPoint.index = i;\n    keyPoint.observers = new Observable();\n    keyPoint.observers.add(getKeyPointObserverFunction(mainView, scene));\n    keyPoints.push(keyPoint);\n  });\n  return keyPoints;\n};\n\nconst VISIBILITY = 0.25;\nexport default BoxRegion;\n","import { Maybe } from \"monet\";\nimport MouseKeysAction from \"./MouseKeysAction\";\nimport BoxRegion from \"../NodeItem/BoxRegion\";\nimport Vec3 from \"../Math/Vec3\";\nimport Util3d from \"../Util3d/Util3d\";\nimport React from \"react\";\nimport { Color3 } from \"@babylonjs/core\";\nimport { UndoManager } from \"mov-fe-lib-core\";\n\nclass BoxRegionAction extends MouseKeysAction {\n  constructor() {\n    super();\n    this.key = \"drawBoxRegion\";\n    this.name = \"Draw Box Region [3]\";\n    this.maybeMousePos = Maybe.none();\n    this.tempMesh = null;\n    this.icon = props => <i className=\"fas fa-square\" {...props} />;\n  }\n\n  action = parentView => {\n    super.action(parentView);\n    parentView.setSelectedAction(this);\n  };\n\n  onPointerDown = (evt, parentView) => {\n    if (!(evt.buttons === 1)) return;\n    parentView.getSceneMemory().forEach(memory => {\n      const scene = memory.scene;\n      const ground = memory.ground;\n      const camera = memory.camera;\n      const maybeMousePos = Util3d.getGroundPosition(scene, ground);\n      this.maybeMousePos = maybeMousePos;\n      maybeMousePos.forEach(mousePos => {\n        camera.detachControl(memory.canvas);\n      });\n    });\n  };\n\n  onPointerMove = (evt, parentView) => {\n    parentView.getSceneMemory().forEach(memory => {\n      const scene = memory.scene;\n      const ground = memory.ground;\n      const maybeCurrent = Util3d.getGroundPosition(scene, ground);\n      maybeCurrent.forEach(current => {\n        this.maybeMousePos.forEach(oldMousePos => {\n          if (this.tempMesh) this.tempMesh.dispose();\n          this.tempMesh = this.createBoxRegion(\n            [oldMousePos, current],\n            TEMP_BOX_REGION_NAME,\n            scene,\n            parentView,\n            false\n          );\n        });\n      });\n    });\n  };\n\n  onPointerUp = (evt, parentView) => {\n    parentView.getSceneMemory().forEach(memory => {\n      const scene = memory.scene;\n      const camera = memory.camera;\n      const ground = memory.ground;\n      const maybeCurrent = Util3d.getGroundPosition(scene, ground);\n      maybeCurrent.forEach(current => {\n        this.maybeMousePos.forEach(oldMousePos => {\n          if (current.subtract(oldMousePos).length() < 1e-2) return;\n          this.tempMesh.dispose();\n          const name = `BoxRegion${Math.floor(Math.random() * 1e3)}`;\n          const boxMesh = this.createBoxRegion(\n            [oldMousePos, current],\n            name,\n            scene,\n            parentView,\n            true\n          );\n          parentView.setPropertiesWithName(name);\n          parentView\n            .getUndoManager()\n            .addIt(\n              this.getUndoAbleAction(\n                [oldMousePos, current],\n                boxMesh,\n                scene,\n                parentView\n              )\n            );\n        });\n      });\n      this.maybeMousePos = Maybe.none();\n      camera.attachControl(memory.canvas, true);\n    });\n  };\n\n  getUndoAbleAction(points, mesh, scene, parentView) {\n    return UndoManager.actionBuilder()\n      .doAction(() => {\n        this.createBoxRegion(points, mesh.name, scene, parentView, true);\n      })\n      .undoAction(() => {\n        parentView.deleteNodeFromTreeUsingName(mesh.name);\n      })\n      .build();\n  }\n\n  createBoxRegion = (\n    region,\n    name,\n    scene,\n    parentView,\n    is2addInServer = true,\n    color = Color3.Red(),\n    height = 1\n  ) => {\n    const rootMesh = parentView.getRootNode().item.mesh;\n\n    const localRegion = region.map(r =>\n      Util3d.getLocalCoordFromWorld({ parent: rootMesh }, Vec3.ofBabylon(r))\n    );\n\n    localRegion[1] = localRegion[1].add(Vec3.of([0, 0, height]));\n    const middlePoint = localRegion[0].add(localRegion[1]).scale(0.5);\n    const centeredRegion = localRegion.map(r => r.sub(middlePoint));\n\n    const boxRegionItem = BoxRegion.ofDict(\n      scene,\n      {\n        name: name,\n        position: middlePoint.toArray(),\n        color: [color.r, color.g, color.b],\n        corners: centeredRegion.map(x => x.toArray())\n      },\n      parentView\n    );\n    boxRegionItem.mesh.parent = rootMesh;\n    if (is2addInServer) {\n      parentView.addNodeItem2Tree(boxRegionItem, rootMesh.name, is2addInServer);\n    }\n    return boxRegionItem.mesh;\n  };\n}\n\nconst TEMP_BOX_REGION_NAME = \"temp_box_region\";\nexport default BoxRegionAction;\n","import Util3d from \"../Util3d/Util3d\";\nimport Vec3 from \"../Math/Vec3\";\nimport Path from \"../NodeItem/Path\";\nimport MouseKeysAction from \"./MouseKeysAction\";\nimport React from \"react\";\nimport { Color3 } from \"@babylonjs/core\";\nimport { UndoManager } from \"mov-fe-lib-core\";\nimport { selectOneAction } from \"../Utils/Utils\";\nimport GraphItem from \"../NodeItem/GraphItem\";\n\nclass DrawPathAction extends MouseKeysAction {\n  constructor() {\n    super();\n    this.key = \"drawPath\";\n    this.name = \"Draw Path [2]\";\n    this.mouseCurve = [];\n    this.icon = props => <i className=\"fas fa-bezier-curve\" {...props}></i>;\n  }\n\n  action = parentView => {\n    super.action(parentView);\n    parentView.setSelectedAction(this);\n  };\n\n  onPointerDown = (evt, parentView) => {\n    if (!(evt.buttons === 1)) return;\n    parentView.getSceneMemory().forEach(memory => {\n      const { scene, ground, camera, canvas } = memory;\n      const maybeMousePos = Util3d.getGroundPosition(scene, ground);\n      maybeMousePos.forEach(mousePos => {\n        camera.detachControl(canvas);\n        this.mouseCurve.push(mousePos);\n        parentView\n          .getUndoManager()\n          .doIt(\n            this.getUndoAbleClickAction(\n              this.mouseCurve,\n              scene,\n              parentView,\n              memory\n            )\n          );\n      });\n    });\n  };\n\n  getUndoAbleClickAction(keyPoints, scene, parentView, { camera, canvas }) {\n    const kps = [...keyPoints];\n    return UndoManager.actionBuilder()\n      .doAction(() => {\n        const finalKps = kps.length === 1 ? [kps[0], kps[0]] : kps;\n        parentView.deleteNodeFromTreeUsingName(TEMP_PATH_NAME, false, false);\n        this.createCurve(finalKps, TEMP_PATH_NAME, scene, parentView, false);\n        if (kps.length <= 2) {\n          parentView.setContextActions(\n            this.getDrawPathContextAction(camera, canvas, scene)\n          );\n        }\n        this.mouseCurve = kps;\n      })\n      .undoAction(() => {\n        parentView.deleteNodeFromTreeUsingName(TEMP_PATH_NAME);\n        const reducedKps = kps.slice(0, kps.length - 1);\n        const finalKps =\n          reducedKps.length === 1 ? [reducedKps[0], reducedKps[0]] : reducedKps;\n        reducedKps.length > 0 &&\n          this.createCurve(finalKps, TEMP_PATH_NAME, scene, parentView, false);\n        this.mouseCurve = reducedKps;\n      })\n      .build();\n  }\n\n  onPointerMove = (evt, parentView) => {\n    // empty\n  };\n\n  onPointerUp = (evt, parentView) => {\n    // empty\n  };\n\n  onKeyUp = (evt, parentView) => {\n    const defaultAction = () => super.onKeyUp(evt, parentView);\n    parentView.getSceneMemory().forEach(memory => {\n      const { scene, camera, canvas } = memory;\n      const contextActions = this.getDrawPathContextAction(\n        camera,\n        canvas,\n        scene\n      );\n      selectOneAction(\n        [\n          {\n            predicate: e => e.code === \"Enter\" || e.code === \"NumpadEnter\",\n            action: () => contextActions[1].action(parentView)\n          },\n          {\n            predicate: e => e.code === \"Delete\" || e.code === \"Backspace\",\n            action: () => contextActions[0].action(parentView)\n          },\n          {\n            predicate: e => e.code === \"Escape\",\n            action: () => {\n              if (this.mouseCurve.length === 0) {\n                super.onKeyUp(evt, parentView);\n              }\n              contextActions[0].action(parentView);\n            }\n          }\n        ],\n        defaultAction\n      )(evt);\n    });\n  };\n\n  /**\n   *\n   * @param {*} curve: Array<Vector3>\n   * @param {*} name: String\n   * @param {*} scene: Scene\n   * @param {*} parentView: MainView\n   * @param {*} is2addInServer: Boolean\n   * @param {*} color: Color3\n   */\n  createCurve = (\n    curve,\n    name,\n    scene,\n    parentView,\n    is2addInServer = true,\n    color = Color3.Gray()\n  ) => {\n    const rootMesh = parentView.getRootNode().item.mesh;\n    const localCurve = Util3d.toGlobalCoord(parentView)(curve);\n    const middlePoint = Util3d.pointAverage(localCurve);\n    const centeredCurve = localCurve.map(w => w.subtract(middlePoint));\n\n    const pathItem = Path.ofDict(\n      scene,\n      {\n        name: name,\n        position: Vec3.ofBabylon(middlePoint).toArray(),\n        color: [color.r, color.g, color.b],\n        localPath: centeredCurve.map(z => Vec3.ofBabylon(z).toArray())\n      },\n      parentView\n    );\n    pathItem.mesh.parent = rootMesh;\n    parentView.addNodeItem2Tree(\n      pathItem,\n      rootMesh.name,\n      is2addInServer,\n      true,\n      is2addInServer\n    );\n    return pathItem;\n  };\n\n  getDrawPathContextAction = (camera, canvas, scene) => {\n    const ans = [];\n    ans.push({\n      icon: props => <i className=\"fas fa-trash\" {...props}></i>,\n      action: parentView => {\n        camera.attachControl(canvas, true);\n        parentView.deleteNodeFromTreeUsingName(TEMP_PATH_NAME, false);\n        this.mouseCurve = [];\n        parentView.closeContextDial();\n      },\n      name: \"Clear Path [ESC | DEL | Backspace]\"\n    });\n    if (this.mouseCurve.length > 1) {\n      ans.push({\n        icon: props => <i className=\"fas fa-check\" {...props}></i>,\n        action: parentView => {\n          camera.attachControl(canvas, true);\n          parentView\n            .getUndoManager()\n            .doIt(\n              this.getUndoAbleEnterAction(this.mouseCurve, scene, parentView)\n            );\n        },\n        name: \"Create Path [Enter]\"\n      });\n    }\n    return ans;\n  };\n\n  getUndoAbleEnterAction(keyPoints, scene, parentView) {\n    const kps = [...keyPoints];\n    const name = `Path${Math.floor(Math.random() * 1e3)}`;\n    return UndoManager.actionBuilder()\n      .doAction(() => {\n        parentView.deleteNodeFromTreeUsingName(TEMP_PATH_NAME, false);\n        const pathItem = this.createCurve(kps, name, scene, parentView, true);\n        this.mouseCurve = [];\n        parentView.setPropertiesWithName(name);\n        parentView.closeContextDial();\n        const keyPointMeshes = pathItem.keyPoints;\n        DrawPathAction.addEdgesInKeyPoints(keyPointMeshes, scene, parentView);\n      })\n      .undoAction(() => {\n        this.deleteEdgeInKeyPoints(name, parentView);\n        parentView.deleteNodeFromTreeUsingName(name);\n        this.createCurve(kps, TEMP_PATH_NAME, scene, parentView, false);\n        this.mouseCurve = kps;\n      })\n      .build();\n  }\n\n  deleteEdgeInKeyPoints(pathName, parentView) {\n    parentView.getGraph().forEach(({ item: graph }) => {\n      parentView.getNodeFromTree(pathName).forEach(({ item: pathItem }) => {\n        const keyPointMeshes = pathItem.keyPoints;\n        const edgeMeshes = [\n          keyPointMeshes[0],\n          keyPointMeshes[keyPointMeshes.length - 1]\n        ];\n        graph.delEdge(...edgeMeshes);\n        parentView.updateNodeInServer(graph.name);\n      });\n    });\n  }\n\n  static addEdgesInKeyPoints(keyPointMeshes, scene, parentView) {\n    GraphItem.createGraphItemIfNone(scene, parentView);\n    parentView.getGraph().forEach(({ item: graph }) => {\n      const edgeMeshes = [\n        keyPointMeshes[0],\n        keyPointMeshes[keyPointMeshes.length - 1]\n      ];\n      graph.addEdge(...edgeMeshes);\n      parentView.updateNodeInServer(graph.name);\n    });\n  }\n}\n\nconst TEMP_PATH_NAME = \"temp_curve\";\nexport default DrawPathAction;\n","import NodeItem from \"./NodeItem\";\nimport Vec3 from \"../Math/Vec3\";\nimport Util3d from \"../Util3d/Util3d\";\nimport { Maybe } from \"monet\";\nimport React from \"react\";\nimport { Utils } from \"mov-fe-lib-core\";\nimport Constants from \"../Utils/Constants\";\nimport {\n  Vector3,\n  Observable,\n  Color3,\n  StandardMaterial,\n  Quaternion\n} from \"@babylonjs/core\";\nimport { UndoManager } from \"mov-fe-lib-core\";\n\nconst RADIUS = Constants.RADIUS;\nconst positiveMod = Utils.mod;\n\nclass PolygonRegion extends NodeItem {\n  /**\n   * @param {*} mesh\n   * @param {*} localPolygon: is an array of 3-arrays of numbers of the local coordinates in relation to mesh.position and quaternion\n   * @param {*} keyPoints: are the keyPoints meshes array\n   */\n  constructor(mesh, localPolygon, height, keyPoints, keyValueMap = {}) {\n    super(mesh, keyValueMap);\n    this.localPolygon = localPolygon;\n    this.height = height;\n    this.keyPoints = keyPoints;\n  }\n\n  toDict() {\n    const dict = super.toDict();\n    dict.localPolygon = this.localPolygon;\n    dict.height = this.height;\n    return dict;\n  }\n\n  ofDict(scene, dict = null, mainView = null) {\n    return PolygonRegion.ofDict(scene, dict, mainView);\n  }\n\n  getType = () => PolygonRegion.TYPE;\n\n  static TYPE = \"PolygonRegion\";\n\n  static ofDict(scene, dict = null, mainView = null) {\n    if (!dict || !mainView)\n      throw new Error(\"null dictionary describing polygon or null mainView\");\n\n    const polygon = dict.localPolygon.map(z => Vec3.of(z).toBabylon());\n    const middlePoint = Vec3.of(dict.position).toBabylon();\n\n    const mesh = createExtrudedPolygonMesh(\n      scene,\n      polygon,\n      dict.height,\n      dict.name\n    );\n    mesh.position = middlePoint;\n\n    const material = new StandardMaterial(`PolygonMaterial${dict.name}`, scene);\n    const color = new Color3(dict.color[0], dict.color[1], dict.color[2]);\n    material.diffuseColor = color;\n    material.emissiveColor = color;\n    mesh.material = material;\n    mesh.visibility = 0.5;\n    Maybe.fromNull(dict.quaternion).forEach(quaternion => {\n      const babylonQuaternion = new Quaternion(\n        quaternion[1],\n        quaternion[2],\n        quaternion[3],\n        quaternion[0]\n      );\n      mesh.rotationQuaternion = babylonQuaternion.normalize();\n    });\n\n    const keypoints = createPlaceHolderKeyPoints(\n      scene,\n      polygon,\n      mesh,\n      mainView\n    );\n\n    return new PolygonRegion(\n      mesh,\n      polygon.map(point => [point.x, point.y, point.z]),\n      dict.height,\n      keypoints,\n      dict.keyValueMap\n    );\n  }\n\n  /**\n   * Create new mesh from old, has side effects\n   *\n   * @param {*} newPoints: Vector3\n   * @param {*} scene: Scene\n   * @param {*} item: PathItem\n   * @param {*} mainView: MainView\n   * @param {*} keyPointUpdateFunction: (scene, mainView, mesh, item) => Array<Mesh>\n   */\n  static createNewMeshFromOldUsingNewPoints(\n    newPoints,\n    scene,\n    item,\n    mainView,\n    keyPointUpdateFunction = defaultKeyPointUpdate\n  ) {\n    const { mesh: oldMesh } = item;\n    const average = Util3d.pointAverage(newPoints);\n    newPoints = newPoints.map(x => x.subtract(average));\n\n    // average in parent coord\n    const rotMat3 = Util3d.getRotationMatrix(oldMesh);\n    const scaleVec3 = Vec3.ofBabylon(oldMesh.scaling);\n    const averageInParentCoord = rotMat3\n      .prodVec(Vec3.ofBabylon(average).mul(scaleVec3))\n      .toBabylon();\n\n    // update mesh\n    const newMesh = createExtrudedPolygonMesh(\n      scene,\n      newPoints,\n      item.height,\n      oldMesh.name\n    );\n\n    newMesh.parent = oldMesh.parent;\n    newMesh.rotationQuaternion = oldMesh.rotationQuaternion;\n    newMesh.position = averageInParentCoord.add(oldMesh.position);\n\n    newMesh.material = oldMesh.material;\n    newMesh.visibility = oldMesh.visibility;\n    newMesh.onClick = oldMesh.onClick;\n    newMesh.getMouseContextActions = oldMesh.getMouseContextActions;\n    newMesh.nodeItem = oldMesh.nodeItem;\n    newMesh.observers = oldMesh.observers;\n    if (!!oldMesh.graphVertex) newMesh.graphVertex = oldMesh.graphVertex;\n\n    item.localPolygon = newPoints.map(x => Vec3.ofBabylon(x).toArray());\n    item.mesh = newMesh;\n    item.keyPoints = keyPointUpdateFunction(scene, mainView, oldMesh, item);\n\n    oldMesh.dispose();\n    return newPoints;\n  }\n\n  static deleteKeyPoint(scene, keyPointMesh, mainView) {\n    const index = keyPointMesh.index;\n    const name = keyPointMesh.parent.name;\n    mainView.getNodeFromTree(name).forEach(({ item }) => {\n      const { mesh } = item;\n      const copyPosition = { ...mesh.position };\n      let newPoints = item.localPolygon.map(x => Vec3.of(x).toBabylon());\n      mainView\n        .getUndoManager()\n        .doIt(\n          PolygonRegion.getUndoDeleteKeyPoint(\n            name,\n            index,\n            copyPosition,\n            newPoints,\n            scene,\n            item,\n            mainView\n          )\n        );\n    });\n  }\n\n  static getUndoDeleteKeyPoint(\n    name,\n    index,\n    copyPosition,\n    newPoints,\n    scene,\n    item,\n    mainView\n  ) {\n    return UndoManager.actionBuilder()\n      .doAction(() => {\n        const copyPoints = [...newPoints];\n        copyPoints.splice(index, 1);\n        PolygonRegion.createNewMeshFromOldUsingNewPoints(\n          copyPoints,\n          scene,\n          item,\n          mainView,\n          PolygonRegion.onAddNewPointKeyPointUpdate\n        );\n        mainView.updateNodeInServer(name);\n      })\n      .undoAction(() => {\n        const copyPoints = [...newPoints];\n        item.mesh.position = copyPosition;\n        PolygonRegion.createNewMeshFromOldUsingNewPoints(\n          copyPoints,\n          scene,\n          item,\n          mainView,\n          PolygonRegion.onAddNewPointKeyPointUpdate\n        );\n        mainView.updateNodeInServer(name);\n      })\n      .build();\n  }\n\n  static onAddNewPointKeyPointUpdate(scene, mainView, oldMesh, item) {\n    // used when new keypoint is added\n    return createPlaceHolderKeyPoints(\n      scene,\n      item.localPolygon.map(x => Vec3.of(x).toBabylon()),\n      item.mesh,\n      mainView\n    );\n  }\n\n  /**\n   *\n   * @param {*} scene\n   * @param {*} keyPointMesh\n   * @param {*} curveMesh\n   * @param {*} mainView\n   * @param {*} orientation: it belongs to the set {-1,1}, represents orientation\n   */\n  static addKeyPointInBetween = (\n    scene,\n    keyPointMesh,\n    mainView,\n    orientation\n  ) => {\n    const index = keyPointMesh.index;\n    const name = keyPointMesh.parent.name;\n    mainView.getNodeFromTree(name).forEach(({ item }) => {\n      const copyPosition = { ...item.mesh.position };\n      const points = item.localPolygon.map(x => Vec3.of(x).toBabylon());\n      mainView\n        .getUndoManager()\n        .doIt(\n          PolygonRegion.getUndoAddKeyPointInBetween(\n            name,\n            index,\n            orientation,\n            item,\n            points,\n            copyPosition,\n            scene,\n            mainView\n          )\n        );\n    });\n  };\n\n  static getUndoAddKeyPointInBetween(\n    name,\n    index,\n    orientation,\n    item,\n    points,\n    copyPosition,\n    scene,\n    mainView\n  ) {\n    return UndoManager.actionBuilder()\n      .doAction(() => {\n        const numberOfPoints = points.length;\n        const nextIndex = positiveMod(index + orientation, numberOfPoints);\n        let newPoints = [];\n        const specialIndex = index + Math.max(0, orientation);\n        for (let i = 0; i < specialIndex; i++) {\n          newPoints.push(points[i]);\n        }\n        newPoints.push(points[nextIndex].add(points[index]).scale(0.5));\n        for (let i = specialIndex; i < numberOfPoints; i++) {\n          newPoints.push(points[i]);\n        }\n        PolygonRegion.createNewMeshFromOldUsingNewPoints(\n          newPoints,\n          scene,\n          item,\n          mainView,\n          PolygonRegion.onAddNewPointKeyPointUpdate\n        );\n        mainView.updateNodeInServer(name);\n      })\n      .undoAction(() => {\n        const copyPoints = [...points];\n        item.mesh.position = copyPosition;\n        PolygonRegion.createNewMeshFromOldUsingNewPoints(\n          copyPoints,\n          scene,\n          item,\n          mainView,\n          PolygonRegion.onAddNewPointKeyPointUpdate\n        );\n        mainView.updateNodeInServer(name);\n      })\n      .build();\n  }\n}\n\n/**\n *\n * @param {*} polygon: boundary as babylonjs vec3\n */\nconst stitchingBoundaries = polygon => {\n  const n = polygon.length;\n  const orientation = Util3d.computeOrientation(polygon);\n  const ans = [];\n  for (let i = 0; i < n; i++) {\n    const modi = (i + 1) % n;\n    ans.push([i, n + modi, modi]);\n    ans.push([i, n + i, n + modi]);\n  }\n  return orientation > 0 ? ans : ans.map(reverseOrientation);\n};\n\nconst reverseOrientation = triangleIndex => {\n  const ans = [];\n  ans.push(triangleIndex[1]);\n  ans.push(triangleIndex[0]);\n  ans.push(triangleIndex[2]);\n  return ans;\n};\n\n/**\n *\n * @param {*} scene\n * @param {*} polygon array of babylon js vector3\n * @param {*} height\n * @param {*} name\n */\nconst createExtrudedPolygonMesh = (scene, polygon, height, name) => {\n  const h = new Vector3(0, 0, height);\n  const polygonRegionMesh = {\n    positions: [],\n    faces: []\n  };\n  polygonRegionMesh.positions = [...polygon];\n  for (let i = 0; i < polygon.length; i++) {\n    polygonRegionMesh.positions.push(polygon[i].add(h));\n  }\n  const n = polygon.length;\n  const lowerTriangulation = Util3d.triangulatePolygon(polygon);\n  const upperTriangulation = Util3d.triangulatePolygon(\n    polygonRegionMesh.positions.slice(n)\n  )\n    .map(x => x.map(z => z + n))\n    .map(reverseOrientation);\n  const stitchTriangulation = stitchingBoundaries(polygon);\n  polygonRegionMesh.faces = lowerTriangulation\n    .concat(upperTriangulation)\n    .concat(stitchTriangulation);\n  const mesh = Util3d.meshFromPositionAndFaces(\n    name,\n    scene,\n    polygonRegionMesh.positions,\n    polygonRegionMesh.faces\n  );\n  return mesh;\n};\n\nfunction defaultKeyPointUpdate(scene, mainView, oldMesh, item) {\n  // used when keypoint is updated or deleted\n  const childrenCopy = [...oldMesh._children];\n  childrenCopy.forEach(c => {\n    c.parent = item.mesh;\n    console.log(\"Moving parents of child\", c.name);\n  });\n\n  return item.keyPoints.map((k, i) => {\n    k.observers = new Observable();\n    k.observers.add(getKeyPointObserverFunction(scene, mainView));\n    k.index = i;\n    k.name = `${oldMesh.name}keyPoint${i}`;\n    k.position = Vec3.of(item.localPolygon[i]).toBabylon();\n    return k;\n  });\n}\n\nconst getKeyPointObserverFunction = (scene, mainView) => {\n  return ({ updatedPointMesh, is2updateServer }) => {\n    if (!updatedPointMesh.parent) return;\n    mainView\n      .getNodeFromTree(updatedPointMesh.parent.name)\n      .forEach(polygonTreeNode => {\n        const index = updatedPointMesh.index;\n        const item = polygonTreeNode.item;\n        const mesh = item.mesh;\n        const name = mesh.name;\n        let newPoints = item.localPolygon.map(x => Vec3.of(x).toBabylon());\n        newPoints[index] = updatedPointMesh.position;\n        PolygonRegion.createNewMeshFromOldUsingNewPoints(\n          newPoints,\n          scene,\n          item,\n          mainView\n        );\n        if (is2updateServer) {\n          mainView.updateNodeInServer(name);\n        }\n        // signal observers\n        Maybe.fromNull(item.mesh.observers).forEach(obs => {\n          //side effect update absolute position\n          item.mesh.getAbsolutePosition();\n          obs.notifyObservers({\n            updatedPointMesh: item.mesh,\n            is2updateServer: is2updateServer,\n            displacement: Vector3.Zero()\n          });\n        });\n        Maybe.fromNull(item.mesh.graphVertex).forEach(({ vertexObs }) => {\n          item.mesh.getAbsolutePosition();\n          vertexObs({\n            updatedPointMesh: item.mesh,\n            is2updateServer: is2updateServer,\n            displacement: Vector3.Zero()\n          });\n        });\n      });\n  };\n};\n\nconst getKeyPointActions = (scene, keyPointMesh, mainView) => {\n  const actions = [];\n  mainView.getNodeFromTree(keyPointMesh.parent.name).forEach(pathTreeNode => {\n    const item = pathTreeNode.item;\n    const polygon = item.localPolygon;\n    if (polygon.length > 3) {\n      actions.push({\n        icon: props => <i className=\"fas fa-trash\" {...props}></i>,\n        action: parentView => {\n          PolygonRegion.deleteKeyPoint(scene, keyPointMesh, parentView);\n          parentView.closeContextDial();\n        },\n        name: \"Delete node [DEL]\"\n      });\n    }\n    actions.push({\n      icon: props => <i className=\"fas fa-less-than\" {...props}></i>,\n      action: parentView => {\n        PolygonRegion.addKeyPointInBetween(scene, keyPointMesh, parentView, -1);\n        parentView.closeContextDial();\n      },\n      name: \"Add previous\"\n    });\n    actions.push({\n      icon: props => <i className=\"fas fa-greater-than\" {...props}></i>,\n      action: parentView => {\n        PolygonRegion.addKeyPointInBetween(scene, keyPointMesh, parentView, 1);\n        parentView.closeContextDial();\n      },\n      name: \"Add next\"\n    });\n  });\n\n  return actions;\n};\n\nconst createPlaceHolderKeyPoints = (scene, polygon, polygonMesh, mainView) => {\n  const keyPoints = [];\n  polygon.forEach((p, i) => {\n    const color = new Color3(0.25, 0.25, 0.25);\n    const keyPoint = Util3d.createSphere(\n      scene,\n      color,\n      RADIUS,\n      `${polygonMesh.name}keyPointPolygon${i}`,\n      true\n    );\n    keyPoint.parent = polygonMesh;\n    keyPoint.position = p;\n    keyPoint.index = i;\n    keyPoint.observers = new Observable();\n\n    keyPoints.push(keyPoint);\n\n    keyPoint.observers.add(getKeyPointObserverFunction(scene, mainView));\n  });\n\n  keyPoints.forEach(x => {\n    x.onClick = () => {\n      mainView.setContextActions(getKeyPointActions(scene, x, mainView));\n    };\n  });\n\n  return keyPoints;\n};\n\nexport default PolygonRegion;\n","import MouseKeysAction from \"./MouseKeysAction\";\nimport Vec3 from \"../Math/Vec3\";\nimport Util3d from \"../Util3d/Util3d\";\nimport React from \"react\";\nimport PolygonRegion from \"../NodeItem/PolygonRegion\";\nimport { Color3 } from \"@babylonjs/core\";\nimport { UndoManager } from \"mov-fe-lib-core\";\nimport { selectOneAction } from \"../Utils/Utils\";\n\n// Similar 2 Draw Action Path\nclass PolygonRegionAction extends MouseKeysAction {\n  constructor() {\n    super();\n    this.key = \"drawPolygonRegion\";\n    this.name = \"Draw Polygon Region [5]\";\n    this.mouseCurve = [];\n    this.icon = props => <i className=\"fas fa-draw-polygon\" {...props}></i>;\n  }\n\n  action = parentView => {\n    super.action(parentView);\n    parentView.setSelectedAction(this);\n  };\n\n  onPointerDown = (evt, parentView) => {\n    if (!(evt.buttons === 1)) return;\n    parentView.getSceneMemory().forEach(memory => {\n      const scene = memory.scene;\n      const ground = memory.ground;\n      const camera = memory.camera;\n      const maybeMousePos = Util3d.getGroundPosition(scene, ground);\n      maybeMousePos.forEach(mousePos => {\n        camera.detachControl(memory.canvas);\n        this.mouseCurve.push(mousePos);\n        parentView\n          .getUndoManager()\n          .doIt(\n            this.getUndoAbleClickAction(\n              this.mouseCurve,\n              scene,\n              parentView,\n              memory\n            )\n          );\n      });\n    });\n  };\n\n  getUndoAbleClickAction(keyPoints, scene, parentView, { camera, canvas }) {\n    const kps = [...keyPoints];\n    return UndoManager.actionBuilder()\n      .doAction(() => {\n        const finalKps = kps.length === 1 ? [kps[0], kps[0]] : kps;\n        parentView.deleteNodeFromTreeUsingName(\n          TEMP_POLYGON_REGION_NAME,\n          false,\n          false\n        );\n        this.createPolygonRegion(\n          finalKps,\n          TEMP_POLYGON_REGION_NAME,\n          scene,\n          parentView,\n          false\n        );\n        parentView.setContextActions(\n          this.getDrawPolygonContextAction(camera, canvas, scene)\n        );\n        this.mouseCurve = kps;\n      })\n      .undoAction(() => {\n        parentView.deleteNodeFromTreeUsingName(TEMP_POLYGON_REGION_NAME);\n        const reducedKps = kps.slice(0, kps.length - 1);\n        const finalKps =\n          reducedKps.length === 1 ? [reducedKps[0], reducedKps[0]] : reducedKps;\n        reducedKps.length > 0 &&\n          this.createPolygonRegion(\n            finalKps,\n            TEMP_POLYGON_REGION_NAME,\n            scene,\n            parentView,\n            false\n          );\n        this.mouseCurve = reducedKps;\n      })\n      .build();\n  }\n\n  getDrawPolygonContextAction = (camera, canvas, scene) => {\n    const ans = [];\n    ans.push({\n      icon: props => <i className=\"fas fa-trash\" {...props}></i>,\n      action: parentView => {\n        camera.attachControl(canvas, true);\n        parentView.deleteNodeFromTreeUsingName(TEMP_POLYGON_REGION_NAME, false);\n        this.mouseCurve = [];\n        parentView.closeContextDial();\n      },\n      name: \"Clear Polygon [ESC | DEL | Backspace]\"\n    });\n    if (this.mouseCurve.length > 2) {\n      ans.push({\n        icon: props => <i className=\"fas fa-check\" {...props}></i>,\n        action: parentView => {\n          camera.attachControl(canvas, true);\n          parentView\n            .getUndoManager()\n            .doIt(\n              this.getUndoAbleEnterAction(this.mouseCurve, scene, parentView)\n            );\n        },\n        name: \"Create Polygon [Enter]\"\n      });\n    }\n    return ans;\n  };\n\n  getUndoAbleEnterAction(keyPoints, scene, parentView) {\n    const kps = [...keyPoints];\n    const name = `PolygonRegion${Math.floor(Math.random() * 1e3)}`;\n    return UndoManager.actionBuilder()\n      .doAction(() => {\n        parentView.deleteNodeFromTreeUsingName(TEMP_POLYGON_REGION_NAME, false);\n        this.createPolygonRegion(kps, name, scene, parentView, true);\n        this.mouseCurve = [];\n        parentView.setPropertiesWithName(name);\n        parentView.closeContextDial();\n      })\n      .undoAction(() => {\n        parentView.deleteNodeFromTreeUsingName(name);\n        this.createPolygonRegion(\n          kps,\n          TEMP_POLYGON_REGION_NAME,\n          scene,\n          parentView,\n          false\n        );\n        this.mouseCurve = kps;\n      })\n      .build();\n  }\n\n  onPointerMove = (evt, parentView) => {\n    // empty\n  };\n\n  onPointerUp = (evt, parentView) => {\n    // empty\n  };\n\n  onKeyUp = (evt, parentView) => {\n    // Warning: code duplication with PathAction\n    const defaultAction = () => super.onKeyUp(evt, parentView);\n    parentView.getSceneMemory().forEach(memory => {\n      const { scene, camera, canvas } = memory;\n      const contextActions = this.getDrawPolygonContextAction(\n        camera,\n        canvas,\n        scene\n      );\n      selectOneAction(\n        [\n          {\n            predicate: e => e.code === \"Enter\" || e.code === \"NumpadEnter\",\n            action: () => contextActions[1].action(parentView)\n          },\n          {\n            predicate: e => e.code === \"Delete\" || e.code === \"Backspace\",\n            action: () => contextActions[0].action(parentView)\n          },\n          {\n            predicate: e => e.code === \"Escape\",\n            action: () => {\n              if (this.mouseCurve.length === 0) {\n                super.onKeyUp(evt, parentView);\n              }\n              contextActions[0].action(parentView);\n            }\n          }\n        ],\n        defaultAction\n      )(evt);\n    });\n  };\n\n  createPolygonRegion = (\n    region,\n    name,\n    scene,\n    parentView,\n    is2addInServer = true,\n    color = Color3.Yellow(),\n    height = 1\n  ) => {\n    const rootMesh = parentView.getRootNode().item.mesh;\n\n    const localRegion = region.map(r =>\n      Util3d.getLocalCoordFromWorld({ parent: rootMesh }, Vec3.ofBabylon(r))\n    );\n\n    const middlePoint = Util3d.pointAverageVec3(localRegion);\n    const centeredRegion = localRegion.map(r => r.sub(middlePoint));\n\n    const polygonRegionItem = PolygonRegion.ofDict(\n      scene,\n      {\n        name: name,\n        position: middlePoint.toArray(),\n        color: [color.r, color.g, color.b],\n        localPolygon: centeredRegion.map(x => x.toArray()),\n        height: height\n      },\n      parentView\n    );\n\n    polygonRegionItem.mesh.parent = rootMesh;\n\n    parentView.addNodeItem2Tree(\n      polygonRegionItem,\n      rootMesh.name,\n      is2addInServer,\n      true,\n      is2addInServer\n    );\n  };\n}\n\nconst TEMP_POLYGON_REGION_NAME = \"temp_polygon_region\";\nexport default PolygonRegionAction;\n","import { Maybe } from \"monet\";\nimport MouseKeysAction from \"./MouseKeysAction\";\nimport React from \"react\";\n\nclass OrbitAction extends MouseKeysAction {\n  constructor() {\n    super();\n    this.key = \"orbit\";\n    this.name = \"Orbit [ESC]\";\n    this.maybeSelectedMesh = Maybe.none();\n    this.icon = props => <i className=\"fas fa-globe\" {...props}></i>;\n  }\n\n  action = parentView => {\n    super.action(parentView);\n    parentView.setSelectedAction(this);\n  };\n\n  onPointerDown = (evt, parentView) => {};\n\n  onPointerMove = (evt, parentView) => {};\n\n  onPointerUp = (evt, parentView) => {};\n}\n\nexport default OrbitAction;\n","import MouseKeysAction from \"./MouseKeysAction\";\nimport React from \"react\";\nimport Util3d from \"../Util3d/Util3d\";\nimport { Color3 } from \"@babylonjs/core\";\nimport GraphItem from \"../NodeItem/GraphItem\";\nimport Constants from \"../Utils/Constants\";\nimport { UndoManager } from \"mov-fe-lib-core\";\nimport { selectOneAction } from \"../Utils/Utils\";\nimport Path from \"../NodeItem/Path\";\nimport { Maybe } from \"monet\";\nimport GlobalRef from \"../NodeItem/GlobalRef\";\n\nclass DrawGraphAction extends MouseKeysAction {\n  constructor() {\n    super();\n    this.key = \"drawGraph\";\n    this.name = \"Draw Graph [6]\";\n    this.icon = props => <i className=\"fas fa-project-diagram\" {...props}></i>;\n\n    this.previewMeshes = [];\n    this.firstMousePos = undefined;\n    this.firstClickedMesh = undefined;\n  }\n\n  //========================================================================================\n  /*                                                                                      *\n   *                            Mouse Key Action Implementation                           *\n   *                                                                                      */\n  //========================================================================================\n\n  action = parentView => {\n    super.action(parentView);\n    parentView.setSelectedAction(this);\n  };\n\n  onPointerDown = (evt, parentView) => {\n    if (!(evt.buttons === 1)) return;\n    this.mousePosConsumer(parentView)((mousePos, memory) => {\n      const { scene, ground } = memory;\n      const maybeMesh = Util3d.pickMesh(scene, ground).filter(\n        this.isConnectableMesh(parentView)\n      );\n      maybeMesh.forEach(possibleMesh => {\n        parentView.highlightMeshesInScene([possibleMesh], Color3.Green());\n        this.onPointerDownLine(mousePos, possibleMesh, memory, parentView);\n      });\n      maybeMesh.orElseRun(() => {\n        // no mesh found\n        parentView.highlightMeshesInScene();\n        this.resetPreview();\n      });\n    });\n  };\n\n  onPointerMove = (evt, parentView) => {\n    this.mousePosConsumer(parentView)((mousePos, memory) => {\n      const { scene, ground } = memory;\n      Util3d.pickMesh(scene, ground)\n        .filter(this.isConnectableMesh(parentView))\n        .cata(\n          () => parentView.highlightMeshesInScene(),\n          pickedMesh =>\n            parentView.highlightMeshesInScene([pickedMesh], Color3.Green())\n        );\n      if (!this.firstMousePos) return;\n      this.onPointerMoveLine(mousePos, memory, parentView);\n    });\n  };\n\n  onPointerUp = (evt, parentView) => {};\n\n  onKeyUp = (evt, parentView) => {\n    const escapeAction = () => this.resetPreview();\n    const predicateActionList = [\n      {\n        predicate: e => [\"Backspace\", \"Delete\", \"Escape\"].includes(e.code),\n        action: escapeAction\n      }\n    ];\n    selectOneAction(predicateActionList)(evt);\n  };\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                  Auxiliary functions                                  *\n   *                                                                                      */\n  //========================================================================================\n\n  resetPreview = () => {\n    if (!!this.firstMousePos) {\n      this.deletePreviewMeshes();\n      this.firstMousePos = undefined;\n      this.firstClickedMesh = undefined;\n    }\n  };\n\n  deletePreviewMeshes = () => {\n    this.previewMeshes.forEach(mesh => mesh.dispose());\n    this.previewMeshes = [];\n  };\n\n  mousePosConsumer = parentView => lambda => {\n    parentView.getSceneMemory().forEach(memory => {\n      const { scene, ground } = memory;\n      const maybeCurrent = Util3d.getGroundPosition(scene, ground);\n      maybeCurrent.forEach(mousePos => lambda(mousePos, memory));\n    });\n  };\n\n  /**\n   * returns a predicate(mesh => boolean) that tells if a mesh is connectable by an edge\n   * @param {*} parentView\n   */\n  isConnectableMesh = parentView => mesh => {\n    return parentView\n      .getNodeFromTree(mesh.name)\n      .cata(\n        () => {\n          // mesh is not a nodeItem, check if mesh parent is a path and is beginning or end of path\n          const parentName = mesh?.parent?.name || \"\";\n          return parentView\n            .getNodeFromTree(parentName)\n            .filter(({ item }) => item.getType() === Path.TYPE)\n            .filter(({ item }) => {\n              const index = mesh.index;\n              return index === 0 || index === item.keyPoints.length - 1;\n            });\n        },\n        ({ item }) => {\n          // mesh is a nodeItem, check if not path\n          return Maybe.some(mesh).filter(\n            _ =>\n              item.getType() !== Path.TYPE && item.getType() !== GlobalRef.TYPE\n          );\n        }\n      )\n      .orSome(false);\n  };\n\n  belongsToPath = parentView => mesh => {\n    const parentName = mesh?.parent?.name || \"\";\n    return parentView\n      .getNodeFromTree(parentName)\n      .filter(({ item }) => item.getType() === Path.TYPE)\n      .map(({ item }) => item.name);\n  };\n\n  belongs2SamePath = parentView => (meshI, meshJ) => {\n    const belongsToPath = this.belongsToPath(parentView);\n    return belongsToPath(meshI)\n      .flatMap(nameI => belongsToPath(meshJ).map(nameJ => nameI === nameJ))\n      .orSome(false);\n  };\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                       Line Edge                                      *\n   *                                                                                      */\n  //========================================================================================\n\n  onPointerDownLine = (mousePos, clickedMesh, memory, parentView) => {\n    const { scene } = memory;\n    if (!this.firstMousePos) {\n      this.firstMousePos = mousePos;\n      this.firstClickedMesh = clickedMesh;\n    } else {\n      //firstMousePos exists\n      if (\n        this.belongs2SamePath(parentView)(clickedMesh, this.firstClickedMesh)\n      ) {\n        this.resetPreview();\n      } else {\n        parentView\n          .getUndoManager()\n          .doIt(\n            this.getUndoAbleLineEdge(\n              [this.firstClickedMesh, clickedMesh],\n              scene,\n              parentView,\n              clickedMesh\n            )\n          );\n      }\n    }\n  };\n\n  getUndoAbleLineEdge = (edgeMeshes, scene, parentView) => {\n    return UndoManager.actionBuilder()\n      .doAction(() => {\n        this.createEdge(edgeMeshes, scene, parentView);\n        this.resetPreview();\n      })\n      .undoAction(() => {\n        this.deleteEdge(edgeMeshes, parentView);\n      })\n      .build();\n  };\n\n  onPointerMoveLine = (mousePos, memory, parentView) => {\n    // preview line\n    const visibility = 0.25;\n    const { scene } = memory;\n    const rootMesh = parentView.getRootNode().item.mesh;\n    const edgeEmbedding = toGlobalCoord(parentView)([\n      this.firstMousePos,\n      mousePos\n    ]);\n    this.deletePreviewMeshes();\n    this.previewMeshes = [\n      GraphItem.getEdgeMesh(\n        scene,\n        edgeEmbedding,\n        Color3.Blue(),\n        Constants.RADIUS / 4\n      )\n    ];\n    this.previewMeshes.forEach(mesh => {\n      mesh.visibility = visibility;\n      mesh.parent = rootMesh;\n      mesh.isPickable = false;\n    });\n  };\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                    Draw functions                                    *\n   *                                                                                      */\n  //========================================================================================\n\n  createEdge = (edgeMeshes, scene, parentView) => {\n    GraphItem.createGraphItemIfNone(scene, parentView);\n    parentView.getGraph().forEach(graphNode => {\n      const { item: graphItem } = graphNode;\n      graphItem.addEdge(...edgeMeshes);\n      parentView.updateNodeInServer(graphItem.name);\n    });\n  };\n\n  deleteEdge = (edgeMeshes, parentView) => {\n    parentView.getGraph().forEach(graphNode => {\n      const { item: graphItem } = graphNode;\n      graphItem.delEdge(...edgeMeshes);\n      parentView.updateNodeInServer(graphItem.name);\n    });\n  };\n}\n\nconst toGlobalCoord = Util3d.toGlobalCoord;\nexport default DrawGraphAction;\n","import Util3d from \"../Util3d/Util3d\";\nimport MouseKeysAction from \"./MouseKeysAction\";\nimport React from \"react\";\nimport { MeshBuilder } from \"@babylonjs/core\";\nimport { AdvancedDynamicTexture, TextBlock } from \"@babylonjs/gui/2D\";\nimport Vec2 from \"../Math/Vec2\";\n\nclass MeasureAction extends MouseKeysAction {\n  constructor() {\n    super();\n    this.key = \"drawWall\";\n    this.name = \"Measure [7]\";\n    this.ruler = []; // can only have to elements, start point and end point\n    this.tempMesh = null;\n    this.mesh = null;\n    this.advancedTexture = null;\n    this.text = null;\n    this.icon = props => <i className=\"fas fa-ruler\" {...props}></i>;\n  }\n\n  action = parentView => {\n    super.action(parentView);\n    parentView.setSelectedAction(this);\n  };\n\n  onPointerDown = (evt, parentView) => {\n    if (evt.button !== 0) {\n      return;\n    }\n    parentView.getSceneMemory().forEach(memory => {\n      const scene = memory.scene;\n      const ground = memory.ground;\n\n      Util3d.getGroundPosition(scene, ground).forEach(current => {\n        const currentMousePos = Util3d.toGlobalCoord(parentView)(current);\n        this.ruler.push(currentMousePos);\n        if (this.ruler.length > 2) {\n          this.mesh && this.mesh.dispose();\n          this.tempMesh && this.tempMesh.dispose();\n          this.text && this.text.dispose();\n          this.ruler = [];\n        }\n        if (this.ruler.length === 2) {\n          this.mesh = MeshBuilder.CreateLines(\n            \"ruler\",\n            {\n              points: this.ruler,\n              updatable: true\n            },\n            scene\n          );\n\n          this.addTextGUI(\n            scene,\n            this.calculateDistance(this.ruler[0], currentMousePos),\n            evt\n          );\n\n          const rootMesh = parentView.getRootNode().item.mesh;\n          this.mesh.parent = rootMesh;\n        }\n      });\n    });\n  };\n\n  onPointerMove = (evt, parentView) => {\n    parentView.getSceneMemory().forEach(memory => {\n      const scene = memory.scene;\n      const ground = memory.ground;\n\n      Util3d.getGroundPosition(scene, ground).forEach(current => {\n        const currentMousePos = Util3d.toGlobalCoord(parentView)(current);\n        // Don't add more than two point to the ruler\n        if (this.ruler.length === 1) {\n          // Remove previous element from Mesh to not overlap\n          this.tempMesh && this.tempMesh.dispose();\n\n          this.tempMesh = MeshBuilder.CreateLines(\n            \"ruler\",\n            {\n              points: [this.ruler[0], currentMousePos],\n              updatable: true\n            },\n            scene\n          );\n\n          this.addTextGUI(\n            scene,\n            this.calculateDistance(this.ruler[0], currentMousePos),\n            evt\n          );\n\n          const rootMesh = parentView.getRootNode().item.mesh;\n          this.tempMesh.parent = rootMesh;\n        }\n      });\n    });\n  };\n\n  onPointerUp = (evt, parentView) => {};\n\n  // Calculate 2D distance from starting of ruler to the end of ruler\n  calculateDistance = (start, end) => {\n    const startVec = Vec2.ofBabylon(start);\n    const endVec = Vec2.ofBabylon(end);\n    return startVec.sub(endVec).length().toFixed(3);\n  };\n\n  addTextGUI = function (scene, value, evt) {\n    this.advancedTexture && this.advancedTexture.removeControl(this.text);\n    // GUI\n    this.advancedTexture = AdvancedDynamicTexture.CreateFullscreenUI(\n      \"UI\",\n      true,\n      scene\n    );\n\n    this.text = new TextBlock();\n    this.text.text = `${value}m`;\n    this.text.fontSize = 17;\n    this.text.left = scene.pointerX - evt.target.width / 2 + 20;\n    this.text.top = scene.pointerY - evt.target.height / 2 + 20;\n    this.text.color = \"white\";\n    this.advancedTexture.addControl(this.text);\n  };\n}\n\nexport default MeasureAction;\n","import DragObjectsAction from \"../Actions/DragObjectsAction\";\nimport AddKeyPointAction from \"../Actions/AddKeyPointAction\";\nimport BoxRegionAction from \"../Actions/BoxRegionAction\";\nimport DrawPathAction from \"../Actions/DrawPathAction\";\nimport PolygonRegionAction from \"../Actions/PolygonRegionAction\";\nimport OrbitAction from \"../Actions/OrbitAction\";\nimport DrawGraphAction from \"../Actions/DrawGraphAction\";\nimport MeasureAction from \"../Actions/MeasureAction\";\n// import RobotAction from \"../Actions/RobotAction\";\n// import DrawWallAction from \"../Actions/DrawWallAction\";\n\n/**\n * Order Matters\n */\nexport const ACTIONS = () => ({\n  measure: new MeasureAction(),\n  drawGraph: new DrawGraphAction(),\n  drawRegion: new PolygonRegionAction(),\n  addKeyPoint: new AddKeyPointAction(),\n  drawBoxRegion: new BoxRegionAction(),\n  drawPath: new DrawPathAction(),\n  dragObjects: new DragObjectsAction(),\n  orbit: new OrbitAction()\n  // drawWalls: new DrawWallAction()\n  // addRobot: new RobotAction({\n  //   id: \"Test\",\n  //   name: \"Test\",\n  //   robotTree: {\n  //     name: \"Test\",\n  //     position: { x: 0, y: 0, z: 0 },\n  //     orientation: {\n  //       w: 1,\n  //       x: 0,\n  //       y: 0,\n  //       z: 0\n  //     },\n  //     child: [\n  //       {\n  //         name: \"TestTF\",\n  //         position: { x: 1, y: 0, z: 1 },\n  //         orientation: {\n  //           w: Math.cos(-Math.PI / 4),\n  //           x: 0,\n  //           y: Math.sin(-Math.PI / 4),\n  //           z: 0\n  //         },\n  //         child: []\n  //       }\n  //     ]\n  //   }\n  // })\n});\n","export default class MapLoader {\n  constructor(yamlSrc) {\n    this.yamlSrc = yamlSrc;\n    this.cachedMap = null;\n  }\n\n  async load() {\n    if (this.cachedMap) return this.cachedMap;\n    const response = await fetch(MapLoader.getMapUrl(this.yamlSrc));\n    const map = await this.parseYaml(await response.text());\n    const ans = {\n      textureSrc: map.image,\n      resolution: map.resolution,\n      origin: map.origin,\n      imageSize: map.size\n    };\n    this.cachedMap = ans;\n    return ans;\n  }\n\n  async parseYaml(yamlTxt) {\n    const ans = {};\n    const actionDict = {\n      image: (k, v) => (ans[k] = MapLoader.getMapUrl(v)),\n      resolution: (k, v) => (ans[k] = Number.parseFloat(v)),\n      origin: (k, v) => (ans[k] = JSON.parse(v))\n    };\n    console.log(\"Yaml text\", yamlTxt);\n    yamlTxt\n      .split(\"\\n\")\n      .map(s => s.split(\": \"))\n      .filter(split => split.length >= 2)\n      .filter(split => split[0] in actionDict)\n      .forEach(split => actionDict[split[0]](split[0], split[1]));\n    ans[\"size\"] = await this.getImageSize(ans[\"image\"]);\n    return ans;\n  }\n\n  getImageSize(src) {\n    return new Promise((resolve, reject) => {\n      const img = new Image();\n      img.src = src;\n      img.onload = () => resolve([img.naturalWidth, img.naturalHeight]);\n    });\n  }\n  static getMapUrl = src => `/static/maps/${src}`;\n}\n","import { Maybe } from \"monet\";\nimport { ASSETS_TYPES, AssetsTypesFactory } from \"../Utils/AssetsTypesFactory\";\nimport { MasterDB } from \"mov-fe-lib-core\";\nimport MapLoader from \"./MapLoader\";\n\n/**\n *  Graphic Assets Manager, retrieves and manages the assets that are in DB.\n */\nclass AssetsManager {\n  constructor() {\n    if (instance) return instance;\n    instance = this;\n    this.assets = {};\n    this.assetsActionMap = {};\n    this.robots = {};\n    this.observersBySceneId = {};\n    this.afterLoad = [];\n    this.finishInitialSubscribers = 0;\n    this.isLoading = true;\n  }\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                  Getters and Setters                                 *\n   *                                                                                      */\n  //========================================================================================\n\n  getAssets = () => this.assets;\n\n  getAssetsActionMap = () => this.assetsActionMap;\n\n  load = async () => {\n    await this.retrieveAssetsFromDb();\n    return this;\n  };\n\n  addAfterLoad(afterLoad) {\n    this.afterLoad.push(afterLoad);\n    return this;\n  }\n\n  addObserver(scene, observer) {\n    const sceneId = scene._uid;\n    if (!(sceneId in this.observersBySceneId)) {\n      this.observersBySceneId[sceneId] = [];\n    }\n    this.observersBySceneId[sceneId].push(observer);\n    return this;\n  }\n\n  signalObservers = () => {\n    Object.keys(this.observersBySceneId).forEach(k => {\n      this.observersBySceneId[k].forEach(obs => obs(this));\n    });\n  };\n\n  addAsset(assetKey, asset) {\n    try {\n      this.assets[assetKey] = asset;\n      this.assetsActionMap[assetKey] = AssetsTypesFactory[asset.type](asset);\n      if (!this.isLoading) this.signalObservers();\n    } catch (e) {\n      console.log(\"Caught exception while adding asset\", e);\n      throw Error(`Caught exception while adding asset ${e}`);\n    }\n  }\n\n  delAsset(assetKey) {\n    if (assetKey in this.assets) delete this.assets[assetKey];\n    if (assetKey in this.assetsActionMap) delete this.assetsActionMap[assetKey];\n    this.signalObservers();\n  }\n\n  clearObserver(scene) {\n    const sceneId = scene._uid;\n    if (sceneId in this.observersBySceneId) {\n      console.log(\"Clear asset observer\", sceneId);\n      delete this.observersBySceneId[sceneId];\n    }\n  }\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                      Subscribers                                     *\n   *                                                                                      */\n  //========================================================================================\n\n  subs = [\n    resolve =>\n      MasterDB.subscribe(\n        {\n          Scope: \"Robot\",\n          Name: \"*\",\n          RobotName: \"*\"\n        },\n        this.getRobotNameUpdate(),\n        this.getRobotNameSub(\n          ({ value }) => value,\n          () => this.finishSub(\"RobotName\", resolve)\n        )\n      ),\n    resolve =>\n      MasterDB.subscribe(\n        {\n          Scope: \"Package\",\n          File: \"*\",\n          Name: \"maps\",\n          FileLabel: \"*\"\n        },\n        this.getMapUpdater(({ key }) => key),\n        this.getMapSubscriber(\n          ({ value }) => value,\n          () => this.finishSub(\"Maps\", resolve)\n        )\n      ),\n    resolve =>\n      MasterDB.subscribe(\n        { Scope: \"Package\", File: \"*\", Name: \"meshes\", FileLabel: \"*\" },\n        this.getMeshUpdater(),\n        this.getMeshSubscriber(\n          ({ value }) => value,\n          () => this.finishSub(\"Meshes\", resolve)\n        )\n      )\n  ];\n\n  retrieveAssetsFromDb() {\n    return new Promise((re, rej) => {\n      this.subs.forEach(f => f(re));\n    });\n  }\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                         Utils                                        *\n   *                                                                                      */\n  //========================================================================================\n\n  finishSub = (place, resolve) => {\n    console.log(\"FINISH SUB \", place, this.finishInitialSubscribers);\n    if (++this.finishInitialSubscribers > this.subs.length - 1) {\n      this.afterLoad.forEach(f => f(this));\n      this.afterLoad = [];\n      this.isLoading = false;\n      resolve(true);\n    }\n  };\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                        Robots                                        *\n   *                                                                                      */\n  //========================================================================================\n\n  deleteRobot = id => {\n    this.delAsset(this.robots[id].name);\n    if (id in this.robots) delete this.robots[id];\n  };\n\n  addRobot(id, name = null) {\n    if (!(id in this.robots)) {\n      this.robots[id] = {\n        id: id,\n        name: null\n      };\n    }\n    ofNull(name).forEach(name => (this.robots[id].name = name));\n    if (Object.values(this.robots[id]).every(x => x !== null)) {\n      const localRobot = this.robots[id];\n      this.addAsset(localRobot.name, {\n        name: localRobot.name,\n        id: id,\n        type: ASSETS_TYPES.Robot,\n        robotTree: {\n          name: localRobot.name,\n          position: { x: 0, y: 0, z: 0 },\n          orientation: {\n            w: 1,\n            x: 0,\n            y: 0,\n            z: 0\n          },\n          child: []\n        }\n      });\n    }\n  }\n\n  getRobotNameSub(getter, after = () => {}) {\n    return data => {\n      ofNull(getter(data))\n        .flatMap(maybeGet(\"Robot\"))\n        .forEach(r =>\n          Object.keys(r).forEach(id => this.addRobot(id, r[id].RobotName))\n        );\n      after();\n    };\n  }\n\n  getRobotNameUpdate() {\n    const actionMap = {\n      del: data =>\n        ofNull(data.key)\n          .flatMap(maybeGet(\"Robot\"))\n          .forEach(r => Object.keys(r).forEach(this.deleteRobot)),\n      set: this.getRobotNameSub(({ key }) => key)\n    };\n    return data => {\n      console.log(\"Robot NAME UPDATE\", data);\n      actionMap[data.event](data);\n    };\n  }\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                         Maps                                         *\n   *                                                                                      */\n  //========================================================================================\n\n  getMapSubscriber = (dataGetter, after = () => {}) => {\n    return data =>\n      this.getMapFileData(dataGetter, data).forEach(fileName => {\n        Object.keys(fileName)\n          .filter(f => f.includes(\".yaml\"))\n          .forEach(this.addMap);\n        after();\n      });\n  };\n\n  getMapUpdater = dataGetter => {\n    const actionMap = {\n      del: data => {\n        this.getMapFileData(dataGetter, data).forEach(f => {\n          let filename = Object.keys(f)[0];\n          filename = filename.split(\".\")[0];\n          this.delAsset(filename);\n        });\n      },\n      set: this.getMapSubscriber(dataGetter),\n      subscribe: this.getMapSubscriber(dataGetter)\n    };\n    return data => {\n      console.log(\"MAP UPDATE\", data);\n      actionMap[data.event](data);\n    };\n  };\n\n  addMap = yamlSrc => {\n    const map = {\n      name: yamlSrc.split(\".\")[0],\n      loader: new MapLoader(yamlSrc),\n      type: ASSETS_TYPES.Map\n    };\n    this.addAsset(map.name, map);\n  };\n\n  getMapFileData = (dataGetter, data) =>\n    ofNull(dataGetter(data))\n      .flatMap(maybeGet(\"Package\"))\n      .flatMap(maybeGet(\"maps\"))\n      .flatMap(maybeGet(\"File\"));\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                         Mesh                                         *\n   *                                                                                      */\n  //========================================================================================\n\n  getMeshSubscriber = (dataGetter, after = () => {}) => data => {\n    this.getMeshFileData(dataGetter, data).forEach(d =>\n      Object.keys(d).forEach(id => {\n        const mesh = { id: id, name: d[id].FileLabel, type: ASSETS_TYPES.Mesh };\n        this.addAsset(mesh.name, mesh);\n      })\n    );\n    after();\n  };\n\n  getMeshUpdater = () => {\n    const actionMap = {\n      del: data => {\n        this.getMeshFileData(d => d.key, data).forEach(f => {\n          let filename = Object.keys(f)[0];\n          this.delAsset(filename);\n        });\n      },\n      set: this.getMeshSubscriber(d => d.key),\n      subscribe: this.getMeshSubscriber(d => d.key)\n    };\n    return data => actionMap[data.event](data);\n  };\n\n  getMeshFileData = (dataGetter, data) =>\n    ofNull(dataGetter(data))\n      .flatMap(maybeGet(\"Package\"))\n      .flatMap(maybeGet(\"meshes\"))\n      .flatMap(maybeGet(\"File\"));\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                        static                                        *\n   *                                                                                      */\n  //========================================================================================\n\n  static getInstance() {\n    return new AssetsManager();\n  }\n}\n\n// private variable\nlet instance = null;\n\n// auxiliary functions\nconst ofNull = Maybe.fromNull;\nconst get = prop => obj => obj[prop];\nconst dot = f => g => x => f(g(x));\nconst maybeGet = prop => dot(ofNull)(get(prop));\n\nexport default AssetsManager;\n","import Util3d from \"../Util3d/Util3d\";\nimport Vec3 from \"../Math/Vec3\";\nimport Action from \"./Action\";\nimport Map from \"../NodeItem/Map\";\nimport { Maybe } from \"monet\";\nimport React from \"react\";\nimport GlobalRef from \"../NodeItem/GlobalRef\";\nimport { Vector3 } from \"@babylonjs/core\";\nimport DefaultScene from \"../Utils/DefaultScene\";\nimport { ACTIONS } from \"../MainView/MainViewActions\";\nimport MapLoader from \"../AssetsManager/MapLoader\";\nimport { UndoManager } from \"mov-fe-lib-core\";\nimport AssetsManager from \"../AssetsManager/AssetsManager\";\n\nclass AddMapAction extends Action {\n  constructor(name, mapLoader) {\n    super();\n    this.name = name;\n    this.key = `addMap${name}`;\n    this.mapLoader = mapLoader;\n    this.icon = props => <i {...props} className=\"fas fa-map\"></i>;\n    this.firstTimeLoad = true;\n  }\n\n  addMap(parentView) {\n    parentView.getSceneMemory().forEach(async memory => {\n      const { scene, camera } = memory;\n      const {\n        textureSrc,\n        resolution,\n        origin,\n        imageSize\n      } = await this.mapLoader.load();\n\n      const width = resolution * imageSize[0];\n      const height = resolution * imageSize[1];\n      const mesh = Util3d.groundBuilder(scene)\n        .name(Maybe.fromNull(this.memory[\"name\"]).orSome(this.name))\n        .width(width)\n        .height(height)\n        .textureSrc(textureSrc)\n        .build();\n\n      const originPos = Vec3.of([-width / 2, -height / 2, 0]).sub(\n        Vec3.of(origin)\n      );\n\n      const rootNode = parentView.getRootNode();\n      const parent = rootNode.item.mesh.parent;\n      parent.position = GlobalRef.inverseCoordinates(originPos.toBabylon());\n      camera.setTarget(\n        new Vector3(parent.position.x, parent.position.y, parent.position.z)\n      );\n\n      const map = new Map(\n        mesh,\n        [width, height],\n        this.textureSrc,\n        Maybe.fromNull(this.memory[\"assetName\"]).orSome(this.name)\n      );\n\n      const isVisible = Maybe.fromNull(this.memory[\"isVisible\"]).orSome(true);\n      const is2sendServer = Maybe.fromNull(this.memory[\"isImport\"])\n        .map(x => !x)\n        .orSome(true);\n\n      mesh.setEnabled(isVisible);\n      parentView.addNodeItem2Tree(map, null, is2sendServer, isVisible);\n      memory.ground.dispose();\n      memory.ground = DefaultScene.createMeshGround(scene, width, height);\n      this.memory[\"isImport\"] = false;\n    });\n  }\n\n  action(parentView) {\n    super.action(parentView);\n    const maybeNode = parentView.getNodeFromTree(this.name);\n    maybeNode.orElseRun(() => {\n      const isImport = this.memory[\"isImport\"];\n      // you shouldn't be able to undo when importing a scene. isImport prevents removing the map when you undo.\n      // firstTimeLoad condition to prevent adding a map when fast map switch\n      if (isImport && this.firstTimeLoad) {\n        this.addMap(parentView);\n        this.firstTimeLoad = false;\n      } else {\n        parentView.getUndoManager().doIt(this.getUndoAction(parentView));\n      }\n    });\n    parentView.setSelectedAction(ACTIONS().orbit);\n  }\n\n  getUndoAction(parentView) {\n    if (parentView.getObjectTree().length < 2) {\n      return UndoManager.actionBuilder()\n        .doAction(() => {\n          this.addMap(parentView);\n        })\n        .undoAction(() => {\n          const name = parentView.getObjectTree()[1].title;\n          parentView.deleteNodeFromTreeUsingName(name);\n        })\n        .build();\n    } else {\n      const oldMapName = parentView.getObjectTree()[1].title;\n      const newMapName = this.name;\n      return UndoManager.actionBuilder()\n        .doAction(() => {\n          this.switchMaps(oldMapName, newMapName, parentView);\n        })\n        .undoAction(() => {\n          parentView.deleteNodeFromTreeUsingName(newMapName);\n          Maybe.fromNull(\n            AssetsManager.getInstance().getAssetsActionMap()[oldMapName]\n          ).forEach(a => a.action(parentView));\n        })\n        .build();\n    }\n  }\n\n  switchMaps(oldMapName, newMapName, parentView) {}\n\n  getType = () => AddMapAction.TYPE;\n\n  deleteAsset = () => {};\n\n  download = async () => {\n    const { textureSrc } = await this.mapLoader.load();\n    const { yamlSrc } = this.mapLoader;\n    const downloadLinks = (\n      <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n          <div style={{ marginRight: \"5px\" }}>Image:</div>\n          <a href={textureSrc} download>\n            {textureSrc}\n          </a>\n        </div>\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n          <div style={{ marginRight: \"5px\" }}>Yaml:</div>\n          <a href={MapLoader.getMapUrl(yamlSrc)} download>\n            {yamlSrc}\n          </a>\n        </div>\n      </div>\n    );\n  };\n\n  static TYPE = \"AddMapAction\";\n}\n\nexport default AddMapAction;\n","import Vec3 from \"../Math/Vec3\";\nimport Util3d from \"../Util3d/Util3d\";\nimport { Database } from \"mov-fe-lib-core\";\nimport AssetNodeItem from \"./AssetNodeItem\";\nimport { Axis, Space, Vector3, Quaternion, Color3 } from \"@babylonjs/core\";\nimport _get from \"lodash/get\";\n\nclass Robot extends AssetNodeItem {\n  static ROBOT_MESH_NAME = \"Tugbot.stl\";\n\n  constructor(meshTree, assetName, keyValueMap = {}) {\n    super(meshTree.mesh, assetName, keyValueMap);\n    this.requestAnimationFrameId = null;\n    this.meshTree = meshTree;\n    this.timeSinceLastUpdate = 0;\n    this.isOnline = true;\n    this.speed = Vector3.Zero();\n    this.qSpeed = Quaternion.Zero();\n    this.newPos = Vector3.Zero();\n    this.newOri = Quaternion.Identity();\n    this.db = new Database();\n  }\n\n  toDict() {\n    let dict = super.toDict();\n    return dict;\n  }\n\n  toForm() {\n    const schema = super.toForm();\n    schema.jsonSchema.properties = {\n      oldName: schema.jsonSchema.properties.oldName,\n      name: schema.jsonSchema.properties.name,\n      type: schema.jsonSchema.properties.type,\n      assetName: {\n        type: \"string\",\n        title: \"Asset Name\"\n      },\n      position: schema.jsonSchema.properties.position,\n      quaternion: schema.jsonSchema.properties.quaternion,\n      color: schema.jsonSchema.properties.color,\n      annotations: schema.jsonSchema.properties.annotations\n    };\n    schema.uiSchema[\"assetName\"] = {\n      \"ui:disabled\": true\n    };\n    schema.data[\"assetName\"] = this.assetName;\n    return schema;\n  }\n\n  dispose() {\n    super.dispose();\n    this.db.unsubscribe({\n      Scope: \"Robot\",\n      Name: this.meshTree.id,\n      Parameter: \"tf\"\n    });\n    window.cancelAnimationFrame(this.requestAnimationFrameId);\n  }\n\n  updateRobot = (robot, oldTimeInMillis, robotAnimator) => {\n    const time = new Date().getTime();\n    const dt = 1e-3 * (time - oldTimeInMillis);\n    robotAnimator(robot, dt);\n    this.requestAnimationFrameId = requestAnimationFrame(() =>\n      this.updateRobot(robot, time, robotAnimator)\n    );\n  };\n\n  animate = robotAnimator => {\n    this.requestAnimationFrameId = requestAnimationFrame(() =>\n      this.updateRobot(this, new Date().getTime(), robotAnimator)\n    );\n  };\n\n  getType = () => Robot.TYPE;\n\n  toOffline() {\n    if (this.mesh.isDisposed()) return;\n    this.mesh._children[0]._children[0].visibility = 0.1;\n    this.speed = Vector3.Zero();\n    this.qSpeed = Quaternion.Zero();\n    this.isOnline = false;\n  }\n\n  toOnline() {\n    if (this.mesh.isDisposed()) return;\n    this.mesh._children[0]._children[0].visibility = 1;\n    this.isOnline = true;\n  }\n  //========================================================================================\n  /*                                                                                      *\n   *                                   Static Functions                                   *\n   *                                                                                      */\n  //========================================================================================\n\n  static TYPE = \"Robot\";\n\n  static TIME_2_BE_OFFLINE_IN_SEC = 10;\n\n  static getDefaultAnimator = parentView => (robot, dt) => {\n    const mesh = robot.mesh;\n    const speed = 3;\n    const vel = Util3d.getRotationMatrix(mesh)\n      .prodVec(new Vec3([speed, 0, 0]))\n      .toBabylon();\n    mesh.position = mesh.position.add(vel.scale(dt));\n    mesh.rotate(Axis.Z, (-Math.PI / 2) * dt, Space.LOCAL);\n  };\n\n  static updateRobotMeshTree(newRobotTf, robot) {\n    const lastPosition = robot.mesh.position;\n    const lastOrientation = robot.mesh.rotationQuaternion;\n    const newPosition = new Vector3(\n      newRobotTf.position.x,\n      newRobotTf.position.y,\n      newRobotTf.position.z\n    );\n    const newOrientation = new Quaternion(\n      newRobotTf.orientation.x,\n      newRobotTf.orientation.y,\n      newRobotTf.orientation.z,\n      newRobotTf.orientation.w\n    ).normalize();\n\n    const dtReciprocal = 1 / robot.timeSinceLastUpdate;\n    robot.speed = newPosition.subtract(lastPosition).scale(dtReciprocal);\n    robot.qSpeed = newOrientation.subtract(lastOrientation).scale(dtReciprocal);\n    robot.newPos = newPosition;\n    robot.newOri = newOrientation;\n    robot.timeSinceLastUpdate = 0;\n  }\n\n  static getSocketAnimator = (robot, parentView) => {\n    robot.db.subscribe(\n      { Scope: \"Robot\", Name: robot.meshTree.id, Parameter: \"tf\" },\n      data => {\n        const tf = _get(\n          data,\n          `key.Robot.${robot.meshTree.id}.Parameter.tf.Value`,\n          undefined\n        );\n        if (tf) Robot.updateRobotMeshTree(tf, robot);\n      },\n      data => {\n        const tf = _get(\n          data,\n          `key.Robot.${robot.meshTree.id}.Parameter.tf.Value`,\n          undefined\n        );\n        if (tf) Robot.updateRobotMeshTree(tf, robot);\n      }\n    );\n    return (robot2Animate, dt) => {\n      const epsilon = 1e-2;\n      const n = 1 / epsilon;\n      const biasedCoin = robot2Animate.timeSinceLastUpdate % n; // Math.random() < epsilon\n      robot2Animate.timeSinceLastUpdate += dt;\n      if (Vec3.ofBabylon(robot2Animate.speed).someNaNOrInfinite()) return;\n      if (Vec3.ofBabylon(robot2Animate.qSpeed).someNaNOrInfinite()) return;\n      robot2Animate.mesh.position = biasedCoin\n        ? robot2Animate.newPos\n        : robot2Animate.mesh.position.add(robot2Animate.speed.scale(dt));\n      robot2Animate.mesh.rotationQuaternion = biasedCoin\n        ? robot2Animate.newOri\n        : robot2Animate.mesh.rotationQuaternion\n            .add(robot.qSpeed.scale(dt))\n            .normalize();\n      Robot.setOnOffLine(robot2Animate);\n    };\n  };\n\n  static setOnOffLine(robot) {\n    if (robot.timeSinceLastUpdate > Robot.TIME_2_BE_OFFLINE_IN_SEC) {\n      robot.toOffline();\n    } else {\n      if (!robot.isOnline) robot.toOnline();\n    }\n  }\n\n  /**\n   * Side effect function\n   */\n  static transformMesh(mesh, scene) {\n    const thetaX = Math.PI / 2;\n    const translate = 0.25;\n    const boundScale = 1.9;\n\n    const boundingSphere = mesh.getBoundingInfo().boundingSphere;\n    mesh.position.set(\n      -boundingSphere.center.x,\n      -boundingSphere.center.y,\n      -boundingSphere.center.z\n    );\n\n    const tfSphereMesh = Util3d.createSphere(\n      scene,\n      new Color3(0.0, 0.0, 0.0),\n      0.5 * boundingSphere.radius,\n      `tfsphere${mesh.name}`,\n      false\n    );\n    tfSphereMesh.visibility = 0.25;\n    tfSphereMesh.scaling = Vec3.ONES.scale(\n      1 / boundingSphere.radius\n    ).toBabylon();\n\n    tfSphereMesh.addRotation(thetaX, 0, 0);\n    tfSphereMesh.position.set(0, 0, translate);\n    const spherePlaceHolder = Util3d.createSphere(\n      scene,\n      new Color3(0.0, 0.0, 0.0),\n      boundScale,\n      mesh.name,\n      true\n    );\n    spherePlaceHolder.visibility = 0.1;\n\n    mesh.parent = tfSphereMesh;\n    tfSphereMesh.parent = spherePlaceHolder;\n    return spherePlaceHolder;\n  }\n\n  static createRobotMeshTreeRecursive(node, mesh, parent, scene) {\n    if (!mesh) {\n      mesh = Util3d.createSphere(\n        scene,\n        new Color3(0.0, 0.0, 0.0),\n        0.5,\n        node.name,\n        false\n      );\n    }\n    const meshTree = {\n      mesh: mesh,\n      children: []\n    };\n    const position = new Vector3(\n      node.position.x,\n      node.position.y,\n      node.position.z\n    );\n    const quaternion = new Quaternion(\n      node.orientation.x,\n      node.orientation.y,\n      node.orientation.z,\n      node.orientation.w\n    );\n    mesh.position = position;\n    mesh.rotationQuaternion = quaternion;\n    if (parent) {\n      mesh.parent = parent;\n    }\n    meshTree[\"children\"] = node.child.map(child => {\n      return this.createRobotMeshTreeRecursive(\n        child,\n        Util3d.referentialBuilder(scene)\n          .boxParams({ isVisible: false, size: 0.1 })\n          .build(),\n        mesh,\n        scene\n      );\n    });\n    return meshTree;\n  }\n\n  static createRobotMeshTree(robotTree, robotMesh, scene) {\n    return Robot.createRobotMeshTreeRecursive(\n      robotTree,\n      robotMesh,\n      null,\n      scene\n    );\n  }\n\n  static builder() {\n    return new RobotBuilder();\n  }\n}\n\nclass RobotBuilder {\n  constructor() {\n    this._name = null;\n    this._meshTree = null;\n    this._parentMesh = null;\n    this._scene = null;\n    this._isPickable = true;\n    this._id = null;\n    this._keyValueMap = {};\n    this._assetName = null;\n  }\n\n  name(name) {\n    this._name = name;\n    return this;\n  }\n\n  meshTree(meshTree) {\n    this._meshTree = meshTree;\n    return this;\n  }\n\n  parentMesh(parentMesh) {\n    this._parentMesh = parentMesh;\n    return this;\n  }\n\n  scene(scene) {\n    this._scene = scene;\n    return this;\n  }\n\n  isPickable(isPickable) {\n    this._isPickable = isPickable;\n    return this;\n  }\n\n  id(id) {\n    this._id = id;\n    return this;\n  }\n\n  keyValueMap(keyValueMap) {\n    this._keyValueMap = keyValueMap;\n    return this;\n  }\n\n  assetName(assetName) {\n    this._assetName = assetName;\n    return this;\n  }\n\n  build() {\n    const variables = Object.keys(this)\n      .filter(x => x !== \"_parentMesh\")\n      .map(x => this[x]);\n\n    variables.forEach(x => {\n      if (x === null)\n        throw new Error(\n          `There are missing variables to build a robot, e.g ${x}`\n        );\n    });\n\n    this._meshTree.id = this._id;\n    this._meshTree.name = this._name;\n    this._meshTree.mesh.name = this._name;\n    this._meshTree.mesh.isPickable = this._isPickable;\n    this._meshTree.mesh.parent = this._parentMesh;\n\n    const baseAxis = Util3d.referentialBuilder(this._scene)\n      .isPickable(false)\n      .boxParams({ isVisible: false, size: 0.1 })\n      .name(`${this._name}Axis`)\n      .build();\n    baseAxis.parent = this._meshTree.mesh;\n\n    return new Robot(this._meshTree, this._assetName, this._keyValueMap);\n  }\n}\n\nexport default Robot;\n","import NodeItem from \"./NodeItem\";\nimport { Mesh, StandardMaterial, Color3, VertexData } from \"@babylonjs/core\";\nimport { Maybe } from \"monet\";\nimport { Utils, MasterDB } from \"mov-fe-lib-core\";\nconst ofNull = Utils.ofNull;\n\nclass PointCloud extends NodeItem {\n  /**\n   *\n   * @param {*} mesh\n   * @param {*} robot: {name: string, id: string} representing a robot\n   */\n  constructor(mesh, robot) {\n    super(mesh);\n    this.robot = robot;\n    this.pointCloudSubscribe();\n  }\n\n  pointCloudSubscribe() {\n    MasterDB.subscribe(\n      {\n        Scope: \"Robot\",\n        Name: this.robot.id,\n        Parameter: \"front_lidar\"\n      },\n      data => {\n        Maybe.fromNull(data)\n          .flatMap(d => ofNull(d.key))\n          .flatMap(k => ofNull(k.Robot[this.robot.id]))\n          .flatMap(r => ofNull(r.Parameter))\n          .flatMap(p => ofNull(p.front_lidar))\n          .flatMap(f => ofNull(f.Value))\n          .flatMap(v => ofNull(v.points))\n          .forEach(points => this.updatePointCloud(points));\n      },\n      data => {\n        Maybe.fromNull(data.value)\n          .flatMap(v => ofNull(v.Robot))\n          .flatMap(r => ofNull(r[this.robot.id]))\n          .flatMap(r => ofNull(r.Parameter))\n          .flatMap(p => ofNull(p.front_lidar))\n          .flatMap(f => ofNull(f.Value))\n          .flatMap(v => ofNull(v.points))\n          .forEach(points => this.updatePointCloud(points));\n      }\n    );\n  }\n\n  /**\n   *\n   * @param {*} points: Array<3-Array>\n   */\n  updatePointCloud(points) {\n    const vertexData = new VertexData();\n    //Assign positions\n    vertexData.positions = points.flatMap(x => x);\n    const colors = new Array(4 * points.length);\n    vertexData.colors = colors.fill(1.0);\n    //Apply vertexData to custom mesh\n    vertexData.applyToMesh(this.mesh, true);\n  }\n\n  dispose() {\n    super.dispose();\n    MasterDB.unsubscribe({\n      Scope: \"Robot\",\n      Name: this.robot.id,\n      Parameter: \"front_lidar\"\n    });\n  }\n\n  getType = () => PointCloud.TYPE;\n\n  static TYPE = \"PointCloud\";\n\n  static ofDict(scene, dict = null, mainView = null) {\n    if (!dict || !mainView)\n      throw new Error(\n        \"null dictionary describing point cloud or null mainView\"\n      );\n\n    const pointCloudMesh = new Mesh(`cloudPoint${dict.name}`, scene);\n    const mat = new StandardMaterial(`cloudPoint${dict.name}Material`, scene);\n    mat.emissiveColor = new Color3(1, 1, 1);\n    mat.disableLighting = true;\n    mat.pointsCloud = true;\n    mat.pointSize = 2;\n    pointCloudMesh.material = mat;\n\n    return new PointCloud(pointCloudMesh, dict);\n  }\n}\n\nexport default PointCloud;\n","import { Maybe } from \"monet\";\n/**\n * Mesh cache for each scene.\n *\n * Each mesh is associated with a scene therefore we must have a cache per scene.\n *\n */\nclass MeshCache {\n  constructor() {\n    if (instance) return instance;\n    instance = this;\n    this.meshCacheBySceneId = {};\n    this.count = 0;\n  }\n\n  static getInstance() {\n    return new MeshCache();\n  }\n\n  hasKey(key, scene) {\n    const sceneId = scene._uid;\n    return Maybe.fromNull(this.meshCacheBySceneId[sceneId])\n      .flatMap(meshCache => ofNull(meshCache[key]))\n      .cata(\n        () => false,\n        () => true\n      );\n  }\n\n  put(key, scene, mesh) {\n    const sceneId = scene._uid;\n    if (!(sceneId in this.meshCacheBySceneId)) {\n      this.meshCacheBySceneId[sceneId] = {};\n    }\n    this.meshCacheBySceneId[sceneId][key] = mesh;\n    mesh.setEnabled(false);\n    return this;\n  }\n\n  get(key, scene) {\n    const sceneId = scene._uid;\n    return Maybe.fromNull(this.meshCacheBySceneId[sceneId])\n      .flatMap(meshCache => ofNull(meshCache[key]))\n      .map(mesh => {\n        console.log(\n          \"#Mesh: Found Mesh in cache, retrieving copy number\",\n          this.count\n        );\n        const cloneMesh = mesh.clone(`${key}${this.count++}`);\n        console.log(\"#Mesh:\", cloneMesh);\n        cloneMesh.setEnabled(true);\n        return cloneMesh;\n      })\n      .orNull();\n  }\n\n  del(scene) {\n    const sceneId = scene._uid;\n    if (sceneId in this.meshCacheBySceneId) {\n      delete this.meshCacheBySceneId[sceneId];\n    }\n  }\n}\n\nconst ofNull = x => Maybe.fromNull(x);\n// private instance\nlet instance = null;\nexport default MeshCache;\n","import MeshCache from \"./MeshCache\";\nimport { AssetsManager } from \"@babylonjs/core\";\nimport \"@babylonjs/loaders\";\n\nclass MeshLoader {\n  constructor(scene) {\n    this.scene = scene;\n  }\n\n  static of(scene) {\n    return new MeshLoader(scene);\n  }\n\n  load = (meshName, mapFunction = mesh => mesh) =>\n    new Promise((re, rej) => {\n      const meshCache = MeshCache.getInstance();\n      if (meshCache.hasKey(meshName, this.scene)) {\n        console.log(`Found Mesh ${meshName} in cache for scene ${this.scene}`);\n        re(mapFunction(meshCache.get(meshName, this.scene)));\n      } else {\n        console.log(\"Loading mesh....\");\n        const assetsManager = new AssetsManager(this.scene);\n        const meshTask = assetsManager.addMeshTask(\"\", \"\", MESH_URL, meshName);\n        meshTask.onSuccess = task => {\n          console.log(\"Load Success\", meshName);\n          const mesh = task.loadedMeshes[0];\n          mesh.name = meshName;\n          meshCache.put(meshName, this.scene, mesh);\n        };\n        meshTask.onError = (task, message, exception) =>\n          rej({ message, exception });\n        assetsManager.onFinish = task => {\n          console.log(\"Load finish \");\n          re(mapFunction(meshCache.get(meshName, this.scene)));\n        };\n        assetsManager.load();\n      }\n    });\n\n  static getMeshUrl = src => `${MESH_URL}${src}`;\n}\n\nconst MESH_URL = `/static/meshes/`;\nexport default MeshLoader;\n","import Robot from \"../NodeItem/Robot\";\nimport Action from \"./Action\";\nimport { Maybe } from \"monet\";\nimport React from \"react\";\nimport PointCloud from \"../NodeItem/PointCloud\";\nimport { ACTIONS } from \"../MainView/MainViewActions\";\nimport MeshLoader from \"../Utils/MeshLoader\";\nimport { UndoManager } from \"mov-fe-lib-core\";\n\nclass RobotAction extends Action {\n  constructor(\n    robot,\n    robotAnimatorFactory = (robot, parentView) =>\n      Robot.getDefaultAnimator(parentView)\n  ) {\n    super();\n    this.key = `robotAction${robot.name}`;\n    this.name = robot.name;\n    this.robot = robot;\n    this.robotAnimatorFactory = robotAnimatorFactory;\n    this.icon = props => <i className=\"fas fa-robot\" {...props}></i>;\n  }\n\n  action = parentView => {\n    super.action(parentView);\n    // if robot already exists, do nothing\n    parentView\n      .getNodeFromTree(this.robot.name)\n      .orElseRun(() => this.addRobot(parentView));\n    parentView.setSelectedAction(ACTIONS().dragObjects);\n  };\n\n  addRobot(parentView) {\n    parentView.getSceneMemory().forEach(memory => {\n      const { scene } = memory;\n      const actionMemoryClone = { ...this.memory };\n      const isImport = actionMemoryClone[\"isImport\"];\n      if (isImport) this.loadRobot(scene, parentView, actionMemoryClone);\n      else {\n        parentView\n          .getUndoManager()\n          .doIt(this.getUndoAbleAction(parentView, scene, actionMemoryClone));\n      }\n    });\n    this.memory[\"isImport\"] = false;\n  }\n\n  getUndoAbleAction(parentView, scene, actionMemoryClone) {\n    return UndoManager.actionBuilder()\n      .doAction(() => {\n        this.loadRobot(scene, parentView, actionMemoryClone);\n      })\n      .undoAction(() => {\n        parentView.deleteNodeFromTreeUsingName(this.name);\n      })\n      .build();\n  }\n\n  loadRobot(scene, parentView, actionMemoryClone) {\n    MeshLoader.of(scene)\n      .load(Robot.ROBOT_MESH_NAME, mesh => Robot.transformMesh(mesh, scene))\n      .then(mesh =>\n        this.createRobotFromMesh(mesh, scene, parentView, actionMemoryClone)\n      );\n  }\n\n  createRobotFromMesh(mesh, scene, parentView, memory) {\n    const parentMesh = this.getParentMesh(parentView);\n    const isImport = Maybe.fromNull(memory.isImport).orSome(false);\n    const isVisible = Maybe.fromNull(memory.isVisible).orSome(true);\n    mesh.setEnabled(isVisible);\n\n    const robot = this.getRobot(scene, mesh, parentMesh);\n    robot.animate(this.robotAnimatorFactory(robot, parentView));\n    parentView.addNodeItem2Tree(robot, parentMesh.name, !isImport, isVisible);\n\n    const cloudPoint = this.getCloudPoint(scene, parentView, robot);\n    parentView.addNodeItem2Tree(cloudPoint, robot.name, false, isVisible);\n  }\n\n  getRobot = (scene, mesh, parentMesh) => {\n    const meshTree = Robot.createRobotMeshTree(\n      this.robot.robotTree,\n      mesh,\n      scene\n    );\n    const dict = Maybe.fromNull(this.memory[\"nodeItemDict\"]);\n    return Robot.builder()\n      .id(this.robot.id)\n      .name(Maybe.fromNull(this.memory[\"name\"]).orSome(this.robot.name))\n      .assetName(\n        Maybe.fromNull(this.memory[\"assetName\"]).orSome(this.robot.name)\n      )\n      .meshTree(meshTree)\n      .parentMesh(parentMesh)\n      .scene(scene)\n      .keyValueMap(dict.map(x => x.keyValueMap).orSome({}))\n      .build();\n  };\n\n  getCloudPoint = (scene, parentView, robot) => {\n    const cloudPoint = PointCloud.ofDict(\n      scene,\n      { name: this.robot.name, id: this.robot.id },\n      parentView\n    );\n    cloudPoint.mesh.parent = robot.mesh;\n    return cloudPoint;\n  };\n\n  getParentMesh = parentView => {\n    return Maybe.fromNull(this.memory[\"parentObj\"])\n      .map(parentObj => parentObj.parent)\n      .flatMap(parentName => parentView.getNodeFromTree(parentName))\n      .map(treeNode => treeNode.item.mesh)\n      .orSome(parentView.getRootNode().item.mesh);\n  };\n\n  getType = () => RobotAction.TYPE;\n\n  static TYPE = \"RobotAction\";\n}\n\nexport default RobotAction;\n","import AssetNodeItem from \"./AssetNodeItem\";\n\nclass Mesh extends AssetNodeItem {\n  constructor(mesh, assetName, keyValueMap = {}) {\n    super(mesh, assetName, keyValueMap);\n  }\n\n  toDict() {\n    let dict = super.toDict();\n    return dict;\n  }\n\n  toForm() {\n    const schema = super.toForm();\n    schema.jsonSchema.properties = {\n      oldName: schema.jsonSchema.properties.oldName,\n      name: schema.jsonSchema.properties.name,\n      type: schema.jsonSchema.properties.type,\n      assetName: {\n        type: \"string\",\n        title: \"Asset Name\"\n      },\n      position: schema.jsonSchema.properties.position,\n      quaternion: schema.jsonSchema.properties.quaternion,\n      color: schema.jsonSchema.properties.color,\n      annotations: schema.jsonSchema.properties.annotations\n    };\n    schema.uiSchema[\"assetName\"] = {\n      \"ui:disabled\": true\n    };\n    schema.data[\"assetName\"] = this.assetName;\n    return schema;\n  }\n\n  getMouseContextActions(mainView) {\n    return super\n      .getMouseContextActions(mainView)\n      .filter(x => x.title === \"Delete\");\n  }\n\n  getType = () => Mesh.TYPE;\n  static TYPE = \"Mesh\";\n}\n\nexport default Mesh;\n","import Action from \"./Action\";\nimport React from \"react\";\nimport { ACTIONS } from \"../MainView/MainViewActions\";\nimport MeshLoader from \"../Utils/MeshLoader\";\nimport { Maybe } from \"monet\";\nimport Mesh from \"../NodeItem/Mesh\";\nimport { Vector3, Quaternion, Color3, StandardMaterial } from \"@babylonjs/core\";\nimport { UndoManager } from \"mov-fe-lib-core\";\n\n//\nclass AddMeshAction extends Action {\n  constructor(mesh) {\n    super();\n    this.key = mesh.id;\n    this.name = mesh.name;\n    this.icon = props => <i {...props} className=\"fas fa-draw-polygon\"></i>;\n  }\n\n  action(parentView) {\n    super.action(parentView);\n    console.log(`Mesh ${this.key} : ${this.name}`, this.memory);\n    this.addMesh(parentView);\n    parentView.setSelectedAction(ACTIONS().dragObjects);\n  }\n\n  addMesh = parentView => {\n    parentView.getSceneMemory().forEach(memory => {\n      const { scene } = memory;\n      const actionMemoryClone = { ...this.memory };\n      const isImport = this.getIsImport(actionMemoryClone);\n      const finalName = this.getFinalNameFromMemory(\n        actionMemoryClone,\n        isImport\n      );\n      if (isImport) {\n        this.loadMesh(\n          parentView,\n          scene,\n          actionMemoryClone,\n          isImport,\n          finalName\n        );\n      } else {\n        parentView\n          .getUndoManager()\n          .doIt(\n            this.getUndoAbleAction(\n              parentView,\n              scene,\n              actionMemoryClone,\n              isImport,\n              finalName\n            )\n          );\n      }\n    });\n    this.memory[\"isImport\"] = false;\n  };\n\n  getIsImport(memory) {\n    return ofNull(memory[\"isImport\"]).orSome(false);\n  }\n\n  getFinalNameFromMemory(memory, isImport) {\n    return ofNull(memory[\"nodeItemDict\"])\n      .flatMap(d => (isImport ? some(d.name) : none()))\n      .orSome(`${this.name}${Math.floor(Math.random() * 100)}`);\n  }\n\n  getUndoAbleAction(parentView, scene, actionMemory, isImport, finalName) {\n    return UndoManager.actionBuilder()\n      .doAction(() => {\n        this.loadMesh(parentView, scene, actionMemory, isImport, finalName);\n      })\n      .undoAction(() => {\n        parentView.deleteNodeFromTreeUsingName(finalName);\n      })\n      .build();\n  }\n\n  loadMesh(parentView, scene, actionMemory, isImport, finalName) {\n    MeshLoader.of(scene)\n      .load(this.key)\n      .then(this.transformMesh(parentView, scene, actionMemory, isImport))\n      .then(this.addMesh2Scene(parentView, actionMemory, isImport, finalName));\n  }\n\n  transformMesh = (parentView, scene, actionMemory, isImport) => mesh => {\n    const parentMesh = this.getParentMesh(parentView);\n    mesh.parent = parentMesh;\n    mesh.createNormals();\n    const maybeDict = ofNull(actionMemory[\"nodeItemDict\"]);\n    mesh.position = maybeDict\n      .flatMap(d => (isImport ? some(d.position) : none()))\n      .map(Vector3.FromArray)\n      .orSome(Vector3.Zero());\n    mesh.rotationQuaternion = maybeDict\n      .flatMap(d => (isImport ? some(d.quaternion) : none()))\n      .map(\n        quaternion =>\n          new Quaternion(\n            quaternion[1],\n            quaternion[2],\n            quaternion[3],\n            quaternion[0]\n          )\n      )\n      .orSome(Quaternion.Identity());\n    const material = new StandardMaterial(`Mesh${mesh.name}`, scene);\n    const color = maybeDict\n      .flatMap(d => (isImport ? some(d.color) : none()))\n      .map(Color3.FromArray)\n      .orSome(Color3.Gray());\n    material.diffuseColor = color;\n    material.emissiveColor = color;\n    mesh.material = material;\n    return mesh;\n  };\n\n  addMesh2Scene = (parentView, actionMemory, isImport, finalName) => mesh => {\n    const parentMesh = this.getParentMesh(parentView);\n    mesh.name = finalName;\n    const meshItem = new Mesh(\n      mesh,\n      this.name,\n      ofNull(actionMemory[\"nodeItemDict\"])\n        .flatMap(x => (isImport ? some(x.keyValueMap) : none()))\n        .orSome({})\n    );\n\n    parentView.addNodeItem2Tree(meshItem, parentMesh.name, !isImport);\n    parentView.renderMenus();\n  };\n\n  getParentMesh = parentView => {\n    return ofNull(this.memory[\"parentObj\"])\n      .map(parentObj => parentObj.parent)\n      .flatMap(parentName => parentView.getNodeFromTree(parentName))\n      .map(treeNode => treeNode.item.mesh)\n      .orSome(parentView.getRootNode().item.mesh);\n  };\n\n  getType = () => AddMeshAction.TYPE;\n  static TYPE = \"AddMeshAction\";\n\n  deleteAsset = () => {};\n\n  download = async () => {\n    const downloadLinks = (\n      <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n          <div style={{ marginRight: \"5px\" }}>Mesh:</div>\n          <a href={MeshLoader.getMeshUrl(this.key)} download>\n            {this.key}\n          </a>\n        </div>\n      </div>\n    );\n  };\n}\n\nconst ofNull = Maybe.fromNull;\nconst none = Maybe.none;\nconst some = Maybe.some;\nexport default AddMeshAction;\n","import AddMapAction from \"../Actions/AddMapAction\";\nimport RobotAction from \"../Actions/RobotAction\";\nimport Robot from \"../NodeItem/Robot\";\nimport AddMeshAction from \"../Actions/AddMeshAction\";\n\nexport const ASSETS_TYPES = {\n  Map: \"Map\",\n  Robot: \"Robot\",\n  Mesh: \"Mesh\"\n};\n\nexport const AssetsTypesFactory = {\n  Map: map => new AddMapAction(map.name, map.loader),\n  Robot: robot => new RobotAction(robot, Robot.getSocketAnimator),\n  Mesh: mesh => new AddMeshAction(mesh)\n};\n","import NodeItem from \"./NodeItem\";\nimport Vec3 from \"../Math/Vec3\";\nimport { Maybe } from \"monet\";\nimport Util3d from \"../Util3d/Util3d\";\nimport Constants from \"../Utils/Constants\";\nimport { Vector3, Color3, Observable, StandardMaterial } from \"@babylonjs/core\";\n/**\n * Will be deprecated\n */\nclass Wall extends NodeItem {\n  constructor(mesh, localWall, size, keyPoints = {}, keyValueMap = {}) {\n    super(mesh, keyValueMap);\n    this.localWall = localWall;\n    this.size = size;\n    this.keyPoints = keyPoints;\n  }\n\n  toDict() {\n    const dict = super.toDict();\n    dict.localWall = this.localWall;\n    dict.size = this.size;\n    return dict;\n  }\n\n  ofDict(scene, dict = null, mainView = null) {\n    return Wall.ofDict(scene, dict, mainView);\n  }\n\n  getType = () => Wall.TYPE;\n\n  static TYPE = \"Wall\";\n\n  static ofDict(scene, dict = null, mainView = null) {\n    if (!dict) throw new Error(\"null dictionary describing wall\");\n    const name = Maybe.fromNull(dict.name).orSome(\n      `Wall${Math.floor(Math.random() * 1e3)}`\n    );\n    const mesh = createWallMesh(dict, name, scene);\n\n    const material = new StandardMaterial(`WallMaterial${name}`, scene);\n    const color = new Color3(dict.color[0], dict.color[1], dict.color[2]);\n    material.diffuseColor = color;\n    material.emissiveColor = color;\n    mesh.material = material;\n    // babylonjs highlight shader flickers when floor intersect\n    mesh.position.z += 1e-3;\n\n    const keypoints = createPlaceHolderKeyPoints(\n      scene,\n      dict.localWall.map(x => Vec3.of(x).toBabylon()),\n      mesh,\n      mainView\n    );\n    return new Wall(\n      mesh,\n      dict.localWall,\n      dict.size,\n      keypoints,\n      dict.keyValueMap\n    );\n  }\n}\n\nconst RADIUS = Constants.RADIUS;\nconst FACES = [\n  [0, 1, 2],\n  [2, 3, 0],\n  [4, 6, 5],\n  [6, 4, 7],\n  [0, 5, 1],\n  [5, 0, 4],\n  [3, 2, 6],\n  [6, 7, 3],\n  [1, 6, 2],\n  [6, 1, 5],\n  [0, 3, 7],\n  [7, 4, 0]\n];\n\nfunction createWallMesh(dict, name, scene) {\n  const centeredWall = dict.localWall.map(x => Vec3.of(x).toBabylon());\n  const middlePoint = Vec3.of(dict.position).toBabylon();\n  const tangent = centeredWall[1].subtract(centeredWall[0]).normalize();\n  const normal = new Vector3(-tangent.y, tangent.x, 0);\n  const shape = [\n    centeredWall[0].add(normal.scale(dict.size.width)),\n    centeredWall[0].subtract(normal.scale(dict.size.width)),\n    centeredWall[1].subtract(normal.scale(dict.size.width)),\n    centeredWall[1].add(normal.scale(dict.size.width))\n  ];\n  const h = new Vector3(0, 0, dict.size.height);\n  const wallMesh = {\n    positions: [\n      shape[0],\n      shape[1],\n      shape[2],\n      shape[3],\n      shape[0].add(h),\n      shape[1].add(h),\n      shape[2].add(h),\n      shape[3].add(h)\n    ],\n    faces: FACES\n  };\n  const mesh = Util3d.meshFromPositionAndFaces(\n    name,\n    scene,\n    wallMesh.positions,\n    wallMesh.faces\n  );\n  mesh.position = middlePoint;\n  return mesh;\n}\n\nfunction createNewMeshFromOldUsingNewPoints(newWall, scene, mesh, item) {\n  const average = Util3d.pointAverageVec3(\n    newWall.localWall.map(x => Vec3.of(x))\n  );\n  newWall.position = average.toArray();\n  newWall.localWall = newWall.localWall.map(x =>\n    Vec3.of(x).sub(average).toArray()\n  );\n\n  const newMesh = createWallMesh(newWall, mesh.name, scene);\n  newMesh.position = mesh.position;\n  newMesh.rotationQuaternion = mesh.rotationQuaternion;\n  newMesh.locallyTranslate(average.toBabylon());\n  newMesh.material = mesh.material;\n  newMesh.visibility = mesh.visibility;\n  newMesh.parent = mesh.parent;\n  newMesh.getMouseContextActions = mesh.getMouseContextActions;\n  newMesh.nodeItem = mesh.nodeItem;\n\n  item.mesh = newMesh;\n  item.localWall = newWall.localWall;\n\n  const childrenCopy = [...mesh._children];\n  childrenCopy.forEach(c => {\n    mesh.removeChild(c);\n    c.parent = newMesh;\n  });\n  item.keyPoints.forEach((k, j) => {\n    k.position = Vec3.of(newWall.localWall[j]).toBabylon();\n  });\n  // dispose old mesh\n  mesh.dispose();\n}\n\nconst getKeyPointObserverFunction = (mainView, scene) => {\n  return ({ updatedPointMesh, is2updateServer }) => {\n    mainView.getNodeFromTree(updatedPointMesh.parent.name).forEach(wallNode => {\n      const index = updatedPointMesh.index;\n      const item = wallNode.item;\n      const mesh = item.mesh;\n      let newWall = {\n        position: Vec3.ofBabylon(mesh.position).toArray(),\n        localWall: item.localWall,\n        size: item.size\n      };\n      newWall.localWall[index] = Vec3.ofBabylon(\n        updatedPointMesh.position\n      ).toArray();\n\n      createNewMeshFromOldUsingNewPoints(newWall, scene, mesh, item);\n\n      if (is2updateServer) {\n        mainView.updateNodeInServer(mesh.name);\n      }\n    });\n  };\n};\n\nconst createPlaceHolderKeyPoints = (scene, wall, wallMesh, mainView) => {\n  const keyPoints = [];\n  wall.forEach((p, i) => {\n    const keyPoint = Util3d.createSphere(\n      scene,\n      new Color3(0.25, 0.25, 0.25),\n      RADIUS,\n      `${wallMesh.name}keyPointWall${i}`,\n      true\n    );\n    keyPoint.parent = wallMesh;\n    keyPoint.position = p;\n    keyPoint.index = i;\n    keyPoint.observers = new Observable();\n    keyPoint.observers.add(getKeyPointObserverFunction(mainView, scene));\n    keyPoints.push(keyPoint);\n  });\n  return keyPoints;\n};\n\nexport default Wall;\n","import GlobalRef from \"../NodeItem/GlobalRef\";\nimport Box from \"../NodeItem/Box\";\nimport KeyPoint from \"../NodeItem/KeyPoint\";\nimport Path from \"../NodeItem/Path\";\nimport Wall from \"../NodeItem/Wall\";\nimport BoxRegion from \"../NodeItem/BoxRegion\";\nimport PolygonRegion from \"../NodeItem/PolygonRegion\";\nimport GraphItem from \"../NodeItem/GraphItem\";\n\nconst NODE_ITEM_FACTORY_MAP = {\n  GlobalRef: GlobalRef,\n  Box: Box,\n  KeyPoint: KeyPoint,\n  Path: Path,\n  Wall: Wall,\n  BoxRegion: BoxRegion,\n  PolygonRegion: PolygonRegion,\n  GraphItem: GraphItem\n};\n\nexport default NODE_ITEM_FACTORY_MAP;\n","import GlobalRef from \"../NodeItem/GlobalRef\";\nimport { Maybe } from \"monet\";\nimport { ASSETS_TYPES } from \"../Utils/AssetsTypesFactory\";\nimport NODE_ITEM_FACTORY_MAP from \"./NodeItemFactoryMap\";\n\nclass MainViewRetriever {\n  static importScene(\n    mainView,\n    serverScene = [],\n    parent = null,\n    is2addInServer = false\n  ) {\n    console.log(\"Importing scene...\", mainView, serverScene);\n    const errors = [];\n    if (serverScene.length > 0) {\n      importSceneRecursive(\n        mainView,\n        serverScene,\n        parent,\n        errors,\n        is2addInServer\n      );\n    } else {\n      importDefaultScene(mainView);\n    }\n    console.log(\"End Importing scene\");\n    return errors;\n  }\n\n  static importNodeItem(mainView, nodeDict, parent, is2addInServer = false) {\n    const nodeItemClass = NODE_ITEM_FACTORY_MAP[nodeDict.type]; //retrieve default export\n    if (nodeItemClass) {\n      mainView.getSceneMemory().forEach(({ scene }) => {\n        const nodeItem = nodeItemClass.ofDict(scene, nodeDict, mainView);\n        // pseudo lazy migration of isVisible prop\n        const isVisible =\n          nodeDict.isVisible === undefined ? true : nodeDict.isVisible;\n        nodeItem.mesh.setEnabled(isVisible);\n        mainView.getNodeFromTree(parent).forEach(treeNode => {\n          nodeItem.mesh.parent = treeNode.item.mesh;\n        });\n        mainView.addNodeItem2Tree(\n          nodeItem,\n          parent,\n          is2addInServer,\n          isVisible,\n          false\n        );\n      });\n    }\n  }\n}\n\nfunction isAsset(nodeDict) {\n  return nodeDict.type in ASSETS_TYPES;\n}\n\nfunction importAsset(mainView, nodeDict, parent, errors) {\n  const assetType = nodeDict.type;\n  const assetName = Maybe.fromNull(nodeDict.assetName).orSome(nodeDict.name);\n  const assetActionMap = mainView.getAssetsActionMap();\n  // legacy\n  const retrievedAction = Maybe.fromNull(assetActionMap[assetName]).orLazy(\n    () => assetActionMap[assetName.split(\".\")[0]]\n  );\n  if (!retrievedAction) {\n    errors.push({\n      cause: `Asset of type ${assetType} with name ${assetName}, was not found`,\n      solution: `please upload ${assetType} ${assetName}`\n    });\n    return;\n  }\n  retrievedAction.memory[\"parentObj\"] = { parent: parent };\n  retrievedAction.memory[\"nodeItemDict\"] = nodeDict;\n  retrievedAction.memory[\"assetName\"] = assetName;\n  retrievedAction.memory[\"name\"] = nodeDict.name;\n  retrievedAction.memory[\"isImport\"] = true;\n  retrievedAction.memory[\"isVisible\"] =\n    nodeDict.isVisible === undefined ? true : nodeDict.isVisible;\n  retrievedAction.action(mainView);\n}\n\nfunction importSceneRecursive(\n  mainView,\n  arrayTree,\n  parent = null,\n  errors = [],\n  is2addInServer = false\n) {\n  if (!arrayTree) return;\n  const sortArrayTree = arrayTree.sort((a, b) => {\n    // global ref is first\n    if (a.item.type === NODE_ITEM_FACTORY_MAP.GlobalRef.TYPE) return -1;\n    if (b.item.type === NODE_ITEM_FACTORY_MAP.GlobalRef.TYPE) return 1;\n    // graphItem is last\n    if (a.item.type === NODE_ITEM_FACTORY_MAP.GraphItem.TYPE) return 1;\n    if (b.item.type === NODE_ITEM_FACTORY_MAP.GraphItem.TYPE) return -1;\n    return a.name < b.name ? -1 : a.name > b.name ? 1 : 0;\n  });\n  sortArrayTree.forEach(node => {\n    if (isAsset(node.item)) {\n      importAsset(mainView, node.item, parent, errors);\n    } else {\n      MainViewRetriever.importNodeItem(\n        mainView,\n        node.item,\n        parent,\n        is2addInServer\n      );\n    }\n    if (node.children.length > 0) {\n      importSceneRecursive(\n        mainView,\n        node.children,\n        node.name,\n        errors,\n        is2addInServer\n      );\n    }\n  });\n}\n\nfunction importDefaultScene(mainView) {\n  mainView.getSceneMemory().forEach(({ scene }) => {\n    const send2server = true;\n    mainView.addNodeItem2Tree(GlobalRef.ofDict(scene), null, send2server);\n  });\n}\n\nexport default MainViewRetriever;\n","import { MasterDB } from \"mov-fe-lib-core\";\nimport Constants from \"./Constants\";\n\nclass SceneServerUtils {\n  static retrieveScene = (\n    sceneName,\n    successCallback = DEFAULT_SUCCESS,\n    failCallback = DEFAULT_FAILURE(\"retrieving scene\")\n  ) => {\n    MasterDB.cloudFunction(\n      Constants.CLOUD_FUNCTION_NAME,\n      \"retrieveScene\",\n      sceneName,\n      data => successFailIf(data, successCallback, failCallback)\n    );\n  };\n}\n\nconst DEFAULT_FAILURE = failureLocation => data => {\n  throw new Error(`Exception caught in ${failureLocation}: ${data.error}`);\n};\n\nconst DEFAULT_SUCCESS = data => {};\n\nconst successFailIf = (data, successCallback, failCallback) => {\n  if (data.success) {\n    successCallback(data);\n  } else {\n    failCallback(data);\n  }\n};\nexport default SceneServerUtils;\n","class TreeNode {\n  constructor(title, item, children, expanded, isVisible) {\n    this.title = title;\n    this.item = item;\n    this.children = children;\n    this.expanded = expanded;\n    this.isVisible = isVisible;\n  }\n\n  static dispose(node) {\n    /*\n     * function must be defined here, otherwise it wouldn't work on the UI Tree change method\n     */\n    node.item.dispose();\n    node.children.forEach(child => {\n      TreeNode.dispose(child);\n    });\n  }\n\n  /**\n   *\n   * @param {*} node\n   */\n  static toDict(node) {\n    /*\n     * function must be defined here, otherwise it wouldn't work on the UI Tree change method\n     */\n    return {\n      name: node.title,\n      item: node.item.toDict(),\n      children: node.children.map(child => TreeNode.toDict(child))\n    };\n  }\n\n  static builder() {\n    return new TreeNodeBuilder();\n  }\n}\n\nclass TreeNodeBuilder {\n  constructor() {\n    this._title = null;\n    this._item = {};\n    this._children = [];\n    this._expanded = false;\n    this._isVisible = true;\n  }\n\n  title(title) {\n    this._title = title;\n    return this;\n  }\n\n  item(item) {\n    this._item = item;\n    return this;\n  }\n\n  children(children) {\n    this._children = children;\n    return this;\n  }\n\n  expanded(expanded) {\n    this._expanded = expanded;\n    return this;\n  }\n\n  isVisible(isVisible) {\n    this._isVisible = isVisible;\n    return this;\n  }\n\n  build() {\n    Object.values(this).forEach(value => {\n      if (value === null)\n        throw new Error(\n          `There are missing variables to build a TreeNode, e.g ${value}`\n        );\n    });\n    return new TreeNode(\n      this._title,\n      this._item,\n      this._children,\n      this._expanded,\n      this._isVisible\n    );\n  }\n}\n\nexport default TreeNode;\n","import TreeObject from \"../TreeObject/TreeObject\";\nimport TreeNode from \"../TreeObject/TreeNode\";\nimport GlobalRef from \"../NodeItem/GlobalRef\";\nimport { MasterDB } from \"mov-fe-lib-core\";\nimport Constants from \"./Constants\";\n\nconst CLOUD_FUNCTION_NAME = Constants.CLOUD_FUNCTION_NAME;\n\nclass TreeServerUtils {\n  constructor(sceneName) {\n    this.sceneName = sceneName;\n  }\n\n  static ofScene(sceneName) {\n    return new TreeServerUtils(sceneName);\n  }\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                    Util functions                                    *\n   *                                                                                      */\n  //========================================================================================\n\n  getNodeFromTree = (name, objectTree) => {\n    return new TreeObject(objectTree).getNode(x => name === x.title);\n  };\n\n  getParentFromChild = (childName, objectTree) => {\n    return new TreeObject(objectTree).getParentNode(x => childName === x.title);\n  };\n\n  deleteNodeFromTreeUsingName = (name, objectTree, is2delInServer = true) => {\n    this.getNodeFromTree(name, objectTree).forEach(node => {\n      // destroy treeNode\n      TreeNode.dispose(node);\n\n      if (is2delInServer) {\n        this.deleteNodeInServer(name);\n      }\n\n      const maybeParent = this.getParentFromChild(name, objectTree);\n      maybeParent.forEach(parentNode => {\n        parentNode.children = parentNode.children.filter(x => x.title !== name);\n      });\n\n      objectTree = objectTree.filter(x => x.title !== name);\n    });\n    return objectTree;\n  };\n\n  getNodeFromTreeWithPredicate = (predicate, objectTree) => {\n    return new TreeObject(objectTree).getNode(predicate);\n  };\n\n  addNodeItem2Tree = (\n    objectTree,\n    nodeItem,\n    parentName = GlobalRef.NAME,\n    is2addInServer = true,\n    isVisible = true\n  ) => {\n    // delete if already exist\n    this.deleteNodeFromTreeUsingName(nodeItem.name, objectTree, is2addInServer);\n\n    const node2Add = TreeNode.builder()\n      .title(nodeItem.name)\n      .item(nodeItem)\n      .isVisible(isVisible)\n      .build();\n\n    if (parentName) {\n      const maybeParentNode = this.getNodeFromTree(parentName, objectTree);\n      maybeParentNode.forEach(parentNode => {\n        if (is2addInServer) this.addNodeItem2Server(node2Add, parentNode.title);\n        parentNode.children.push(node2Add);\n      });\n    } else {\n      objectTree.push(node2Add);\n      if (is2addInServer) this.addNodeItem2Server(node2Add, null);\n    }\n    return objectTree;\n  };\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                   Server functions                                   *\n   *                                                                                      */\n  //========================================================================================\n\n  updateNodeInServer = (name, objectTree, oldName = null) => {\n    console.log(\"updateNodeInServer!\", name, this.sceneName);\n    this.getNodeFromTree(name, objectTree).forEach(node => {\n      const parentName = this.getParentFromChild(name, objectTree)\n        .map(x => x.title)\n        .orNull();\n      MasterDB.cloudFunction(\n        CLOUD_FUNCTION_NAME,\n        \"updateNode\",\n        [TreeNode.toDict(node), parentName, oldName, this.sceneName],\n        data => {\n          console.log(\"Update node with success?\", data.success, data.error);\n        }\n      );\n    });\n  };\n\n  addNodeItem2Server = (treeNode, parentName) => {\n    MasterDB.cloudFunction(\n      CLOUD_FUNCTION_NAME,\n      \"addNodeItem\",\n      [TreeNode.toDict(treeNode), parentName, this.sceneName],\n      data => {\n        console.log(\"Add node with success?\", data.success);\n      }\n    );\n  };\n\n  deleteNodeInServer = name => {\n    MasterDB.cloudFunction(\n      CLOUD_FUNCTION_NAME,\n      \"deleteNodeByName\",\n      [name, this.sceneName],\n      data => {\n        console.log(\"Deleted node with success?\", data.success);\n      }\n    );\n  };\n}\n\nexport default TreeServerUtils;\n","export class Animator {\n  constructor(state, next, doWhile) {\n    this.state = state;\n    this.next = next;\n    this.while = doWhile;\n    this.requestAnimeId = null;\n  }\n\n  play() {\n    this.requestAnimeId = requestAnimationFrame(() => {\n      if (!this.while(this.state)) return this.stop();\n      this.state = this.next(this.state);\n      this.play();\n    });\n    return this;\n  }\n\n  stop() {\n    cancelAnimationFrame(this.requestAnimeId);\n    return this;\n  }\n\n  static builder() {\n    return new AnimatorBuilder();\n  }\n}\n\nclass AnimatorBuilder {\n  constructor() {\n    this._state = null;\n    this._next = null;\n    this._end = null;\n  }\n\n  initialState(state) {\n    this._state = state;\n    return this;\n  }\n\n  nextState(next) {\n    this._next = next;\n    return this;\n  }\n\n  while(end) {\n    this._end = end;\n    return this;\n  }\n\n  build() {\n    const someAreEmpty = [this._state, this._next, this._end].some(\n      x => x === null || x === undefined\n    );\n    if (someAreEmpty) throw new Error(\"Animator properties are missing\");\n    return new Animator(this._state, this._next, this._end);\n  }\n}\n","import { Vector3 } from \"@babylonjs/core\";\nimport Util3d from \"../Util3d/Util3d\";\nimport { Animator } from \"./Animator\";\n\nexport default class DefaultMouseEvents {\n  static onPointerDown = mainView => evt => {\n    mainView.mousePosClick = mainView\n      .getMouseCoordsFromRoot()\n      .orSome(Vector3.Zero());\n    mainView.mousePosMove = mainView.mousePosClick;\n    mainView.sceneMemory.forEach(({ camera, canvas }) => {\n      if (evt.buttons === 2 || evt.buttons === 4 || evt.ctrlKey) {\n        camera.detachControl(canvas);\n      }\n    });\n  };\n\n  static onPointerUp = mainView => evt => {\n    mainView.sceneMemory.forEach(({ camera, canvas }) => {\n      camera.attachControl(canvas, true);\n    });\n  };\n\n  static onPointerMove = mainView => evt => {\n    mainView.sceneMemory.forEach(({ mouseLocationText, camera }) => {\n      mainView.getMouseCoordsFromRoot().forEach(currentLocal => {\n        setMouseLocationTxt(mouseLocationText, currentLocal);\n        const panCamera = () => {\n          const v = currentLocal.subtract(mainView.mousePosMove);\n          const vBabylon = Util3d.getBabylonCoordinates(v).scale(-1);\n          animateCamera(camera, vBabylon);\n          mainView.mousePosMove = currentLocal;\n        };\n        const mouseButtonActions = [\n          { predicate: evt.ctrlKey && evt.buttons === 1, action: panCamera },\n          { predicate: evt.buttons === 4, action: panCamera }\n        ];\n        const filterActions = mouseButtonActions.filter(\n          ({ predicate }) => predicate\n        );\n        if (filterActions.length > 0) filterActions[0].action();\n      });\n    });\n  };\n}\n\nfunction animateCamera(camera, v) {\n  Animator.builder()\n    .initialState({\n      camera: camera,\n      time: 0,\n      T: new Date().getTime()\n    })\n    .nextState(s => {\n      const { camera, time } = s;\n      const dt = 0.1; //(new Date().getTime() - T) / 1000;\n      const vdt = v.scale(dt);\n      camera.position = camera.position.add(vdt);\n      camera.setTarget(camera.target.add(vdt));\n      return {\n        camera: camera,\n        time: time + dt,\n        T: new Date().getTime()\n      };\n    })\n    .while(s => s.time <= 1)\n    .build()\n    .play();\n}\n\nfunction setMouseLocationTxt(mouseLocationText, currentLocal) {\n  mouseLocationText.text = `x: ${currentLocal.x.toFixed(\n    2\n  )}, y: ${currentLocal.y.toFixed(2)}`;\n}\n","import React, { Component } from \"react\";\nimport BaseViewer from \"./BaseViewer/BaseViewer\";\nimport PropTypes from \"prop-types\";\nimport { HighlightLayer, Vector3 } from \"@babylonjs/core\";\nimport { Maybe } from \"monet\";\nimport MainViewRetriever from \"./MainView/MainViewRetriever\";\nimport DefaultScene from \"./Utils/DefaultScene\";\nimport GlobalRef from \"./NodeItem/GlobalRef\";\nimport SceneServerUtils from \"./Utils/SceneServerUtils\";\nimport TreeServerUtils from \"./Utils/TreeServerUtils\";\nimport AssetsManager from \"./AssetsManager/AssetsManager\";\nimport TreeObject from \"./TreeObject/TreeObject\";\nimport GraphItem from \"./NodeItem/GraphItem\";\nimport DefaultMouseEvents from \"./Utils/DefaultMouseEvents\";\nimport Util3d from \"./Util3d/Util3d\";\nimport Vec3 from \"./Math/Vec3\";\nimport ReactResizeDetector from \"react-resize-detector\";\nimport ConfirmAlertModal from \"../Modal/ConfirmAlertModal\";\nimport { UndoManager } from \"mov-fe-lib-core\";\n\n//========================================================================================\n/*                                                                                      *\n *                                      SceneViewer                                     *\n *                                                                                      */\n//========================================================================================\n\nclass SceneViewer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { errorList: [] };\n    this.sceneName = props.sceneName.Value;\n    this.sceneMemory = Maybe.none();\n    this.objectTree = [];\n    this.undoManager = new UndoManager();\n    // camera properties\n    this.isPanned = false;\n    this.isRotated = false;\n    this.targetPos = undefined;\n    this.cameraSpeed = Vector3.Zero();\n    this.time = new Date().getTime() * 1e-3;\n  }\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                   Getters & Setters                                  *\n   *                                                                                      */\n  //========================================================================================\n\n  getSceneMemory = () => this.sceneMemory;\n\n  getAssetsActionMap = () => AssetsManager.getInstance().getAssetsActionMap();\n\n  getRootNode = (tree = [...this.objectTree]) => {\n    return tree.filter(x => x.title === GlobalRef.NAME)[0];\n  };\n\n  getObjectTree = () => this.objectTree;\n\n  setSelectedAction = () => {\n    /* empty */\n  };\n\n  getGraph() {\n    return new TreeObject(this.objectTree).getNode(\n      x => GraphItem.TYPE === x.item.getType()\n    );\n  }\n\n  getUndoManager = () => this.undoManager;\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                    Utils functions                                   *\n   *                                                                                      */\n  //========================================================================================\n\n  getNodeFromTree = (name, objectTree = [...this.objectTree]) => {\n    return TreeServerUtils.ofScene(this.sceneName).getNodeFromTree(\n      name,\n      objectTree\n    );\n  };\n\n  deleteNodeFromTreeUsingName = () => {\n    throw new Error(\"Delete Node in viewer Exception\");\n  };\n\n  updateNodeInServer = (name, oldName = null) => {\n    TreeServerUtils.ofScene(this.sceneName).updateNodeInServer(\n      name,\n      [...this.objectTree],\n      oldName\n    );\n  };\n\n  addNodeItem2Tree = (\n    nodeItem,\n    parentName = GlobalRef.NAME,\n    is2addInServer = true,\n    isVisible = true\n  ) => {\n    const newObjectTree = TreeServerUtils.ofScene(\n      this.sceneName\n    ).addNodeItem2Tree(\n      [...this.objectTree],\n      nodeItem,\n      parentName,\n      is2addInServer,\n      isVisible\n    );\n    this.objectTree = newObjectTree;\n  };\n\n  setCameraToTarget = () => {\n    this.sceneMemory.forEach(({ camera }) => {\n      const focusObject = this.isPanned ? \"\" : this.props.focusObject.Value;\n      this.getNodeFromTree(focusObject).forEach(\n        x => {\n          console.log(\"Set Camera, Found Object\", x.item.mesh);\n          const dt = new Date().getTime() * 1e-3 - this.time;\n          this.time = new Date().getTime() * 1e-3;\n          const pos = x.item.mesh._absolutePosition.clone();\n          this.cameraSpeed = !this.targetPos ? Vector3.Zero() : pos.subtract(this.targetPos);\n          this.targetPos = pos;  \n          camera.setTarget(pos);\n          camera.position = camera.position.add(this.cameraSpeed.scale(dt))\n          camera.beta = this.isRotated ? camera.beta : 0;\n          // move target object for debug\n          // const p = x.item.mesh.position;\n          // x.item.mesh.position = p.add(new Vector3(p.x, p.y, 0).scale(1e-2)); \n        }\n      );\n    });\n  };\n\n  addCanvasEventListeners(canvas) {\n    const events = [\n      {\n        name: \"pointerdown\",\n        function: evt => this.onPointerDown(evt)\n      },\n      { name: \"pointerup\", function: evt => this.onPointerUp(evt) },\n      {\n        name: \"pointermove\",\n        function: evt => this.onPointerMove(evt)\n      }\n    ];\n    events.forEach(event =>\n      canvas.addEventListener(event.name, event.function, false)\n    );\n  }\n\n  onPointerDown = evt => {\n    this.isRotated = true;\n    DefaultMouseEvents.onPointerDown(this)(evt);\n  };\n\n  onPointerUp = evt => {\n    DefaultMouseEvents.onPointerUp(this)(evt);\n  };\n\n  onPointerMove = evt => {\n    if(evt.buttons === 4) this.isPanned = true;\n    DefaultMouseEvents.onPointerMove(this)(evt);\n  };\n\n  getMouseCoordsFromRoot() {\n    return this.sceneMemory.flatMap(({ scene, ground }) => {\n      const maybeCurrent = Util3d.getGroundPosition(scene, ground);\n      return maybeCurrent.flatMap(current =>\n        Maybe.fromNull(this.getRootNode()).map(rootNode =>\n          Util3d.getLocalCoordFromWorld(\n            rootNode.item.mesh,\n            Vec3.ofBabylon(current)\n          ).toBabylon()\n        )\n      );\n    });\n  }\n\n  onResize = (w, h) => {\n    if (w === 0 && h === 0) return;\n    this.getSceneMemory().forEach(({ mouseLocationText }) => {\n      mouseLocationText.left = -w / 2 + w / 17;\n      mouseLocationText.top = -h / 2 + h / 30;\n    });\n  };\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                    Scene functions                                   *\n   *                                                                                      */\n  //========================================================================================\n\n  retrieveSceneFromServer = (afterLoading = () => {}) => {\n    SceneServerUtils.retrieveScene(this.sceneName, data => {\n      const errorList = MainViewRetriever.importScene(this, data.result);\n      this.setState({ errorList });\n      afterLoading();\n    });\n  };\n\n  loadAssets = async () => {\n    const assetManager = AssetsManager.getInstance();\n    if (Object.values(assetManager.getAssets()).length === 0) {\n      await assetManager.load();\n    }\n  };\n\n  loadScene = async () => {\n    await this.loadAssets();\n    this.retrieveSceneFromServer(this.renderScene);\n  };\n\n  renderScene = () => {\n    this.getSceneMemory().forEach(({ engine, scene }) =>\n      engine.runRenderLoop(() => {\n        this.time = new Date().getTime() * 1e-3;\n        scene.render()\n        this.setCameraToTarget();\n      })\n    );\n  };\n\n  onSceneReady = scene => {\n    const engine = scene.getEngine();\n    const canvas = engine.getRenderingCanvas();\n    this.addCanvasEventListeners(canvas);\n    const mouseLocationText = DefaultScene.createMouseLocationText(scene);\n    this.sceneMemory = Maybe.some({\n      engine: engine,\n      canvas: canvas,\n      scene: scene,\n      camera: DefaultScene.createCamera(scene, canvas),\n      light: DefaultScene.createLight(scene),\n      ground: DefaultScene.createMeshGround(scene),\n      gizmoManager: DefaultScene.createGizmo(scene),\n      highlightLayer: {\n        layer: new HighlightLayer(\"hl1\", scene),\n        lastHlMeshes: []\n      },\n      mouseLocationText: mouseLocationText\n    });\n    return scene;\n  };\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                   Render functions                                   *\n   *                                                                                      */\n  //========================================================================================\n\n  renderMenus = () => {\n    // to implement interface of MainView\n  };\n\n  componentDidUpdate = prevProps => {\n    const predicateAction = [\n      {\n        propVar: x => x.sceneName.Value,\n        action: () => (this.sceneName = this.props.sceneName.Value)\n      },\n      {\n        propVar: x => x.focusObject.Value,\n        action:() => {\n          this.isPanned = false;\n          this.isRotated = false;\n          this.setCameraToTarget()\n        } \n      }\n    ];\n    predicateAction.forEach(({ propVar, action }) => {\n      if (propVar(this.props) !== propVar(prevProps)) {\n        action();\n      }\n    });\n  };\n\n  componentDidMount = () => {\n    console.log(\"SceneViewer Did Mount!! \");\n    this.loadScene();\n  };\n\n  render() {\n    const { errorList } = this.state;\n    const resetErrorList = () => this.setState({ errorList: [] });\n    return (\n      <div style={{ display: \"flex\", flexGrow: 1, maxHeight: \"100%\" }}>\n        <BaseViewer\n          onSceneReady={this.onSceneReady}\n          is2render={false}\n          sceneFactory={DefaultScene.createScene}\n        />\n        <ConfirmAlertModal\n          onSubmit={resetErrorList}\n          onCancel={resetErrorList}\n          open={errorList?.length > 0}\n          title={\"Scene Viewer\"}\n          message={\"An error occurred while loading the scene\"}\n          submitText={\"OK\"}\n          submitColor={\"primary\"}\n          cancelText={\"Cancel\"}\n          cancelColor={\"secondary\"}\n        >\n          {getErrorSolutionList(errorList)}\n        </ConfirmAlertModal>\n        <ReactResizeDetector\n          handleWidth\n          handleHeight\n          onResize={this.onResize}\n        />\n      </div>\n    );\n  }\n\n  //========================================================================================\n  /*                                                                                      *\n   *                                   Static functions                                   *\n   *                                                                                      */\n  //========================================================================================\n\n  static getComponentFactory(sceneName) {\n    return masterProps => {\n      const augmentProps = {\n        sceneName,\n        ...masterProps\n      };\n      return <SceneViewer {...augmentProps} />;\n    };\n  }\n\n  static EXTENSION = \".3d\";\n}\n\nSceneViewer.propTypes = {\n  sceneName: PropTypes.shape({ Value: PropTypes.string }),\n  focusObject: PropTypes.shape({ Value: PropTypes.string })\n};\n\nSceneViewer.defaultProps = {\n  sceneName: { Value: \"Pedro\" },\n  focusObject: { Value: \"\" }\n};\n\nfunction getErrorSolutionList(errorList) {\n  return !errorList ? (\n    []\n  ) : (\n    <ul>\n      {errorList.map(({ cause, solution }, i) => {\n        return <li key={\"error\" + i}>{`${cause}, ${solution}`}</li>;\n      })}\n    </ul>\n  );\n}\n\nexport default SceneViewer;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport MaterialSelect from \"@material-ui/core/Select\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  }\n}));\n\nconst Select = props => {\n  const classes = useStyles();\n\n  let noneOption = <div></div>;\n  if (props.noneOption) {\n    noneOption = (\n      <MenuItem value=\"\">\n        <em>None</em>\n      </MenuItem>\n    );\n  }\n\n  return (\n    <FormControl\n      variant={props.variant}\n      className={classes.formControl}\n      style={props.style}\n      hiddenLabel={props.label === undefined ? true : false}\n    >\n      <InputLabel id=\"movai-react-select\">{props.label}</InputLabel>\n      <MaterialSelect\n        labelId=\"movai-react-select\"\n        id={props.id}\n        value={props.value}\n        onChange={props.onChange}\n        inputProps={props.inputProps}\n      >\n        {noneOption}\n        {props.options.map((element, index) => {\n          return (\n            <MenuItem key={index} value={element}>\n              {element}\n            </MenuItem>\n          );\n        })}\n      </MaterialSelect>\n    </FormControl>\n  );\n};\n\nSelect.propTypes = {\n  value: PropTypes.string,\n  options: PropTypes.array,\n  noneOption: PropTypes.bool,\n  label: PropTypes.string,\n  variant: PropTypes.string,\n  style: PropTypes.object,\n  onChange: PropTypes.func,\n  id: PropTypes.string,\n  inputProps: PropTypes.object\n};\nSelect.defaultProps = {\n  value: \"option2\",\n  options: [\"option1\", \"option2\", \"option3\"],\n  variant: \"filled\",\n  noneOption: true,\n  onChange: evt => console.log(evt.target.value),\n  id: \"movai-react-select\"\n};\n\nexport default Select;\n","// import * as React from \"react\";\n// import SvgIcon from \"@material-ui/core/SvgIcon\";\n\n// export default function createSvgIcon({\n//   path = \"\",\n//   style = {},\n//   fill = \"#fff\",\n//   width = \"100%\",\n//   className = \"\",\n//   height = \"100%\",\n//   viewBox = \"0 0 32 32\"\n// }) {\n//   return (\n//     <svg\n//       width={width}\n//       style={style}\n//       height={height}\n//       viewBox={viewBox}\n//       className={className}\n//       xmlns=\"http://www.w3.org/2000/svg\"\n//       xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n//     >\n//       <path d={path} fill={fill} />\n//     </svg>\n//   );\n// }\n\n// export default function createSvgIcon(path, displayName) {\n//   const Component = React.memo(\n//     React.forwardRef((props, ref) => (\n//       <SvgIcon data-mui-test={`${displayName}Icon`} ref={ref} {...props}>\n//         {path}\n//       </SvgIcon>\n//       <SvgIcon>\n//         {path}\n//       </SvgIcon>\n//     ))\n//   );\n\n//   if (process.env.NODE_ENV !== \"production\") {\n//     Component.displayName = `${displayName}Icon`;\n//   }\n\n//   Component.muiName = SvgIcon.muiName;\n\n//   return Component;\n// }\n\nimport React from \"react\";\n\nconst CreateSVGIcon = ({\n  path = \"\",\n  style = {},\n  fill = \"#fff\",\n  width = \"100%\",\n  height = \"100%\",\n  className = \"\",\n  viewBox = \"0 0 24 24\"\n}) => (\n  <svg\n    width={width}\n    style={style}\n    height={height}\n    viewBox={viewBox}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className={`svg-icon ${className || \"\"}`}\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n  >\n    <path fill={fill} d={path} />\n  </svg>\n);\n\nexport default CreateSVGIcon;\n","import React from \"react\";\nimport CreateSVGIcon from \"./CreateSVGIcon\";\n\nexport const svgIcons = {\n  Close: (\n    <CreateSVGIcon\n      width={24}\n      path=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n    />\n  ),\n  ErrorOutline: (\n    <CreateSVGIcon\n      width={24}\n      path=\"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n    ></CreateSVGIcon>\n  ),\n  InfoOutlined: (\n    <CreateSVGIcon\n      width={24}\n      path=\"M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z\"\n    ></CreateSVGIcon>\n  ),\n  ReportProblemOutlined: (\n    <CreateSVGIcon\n      width={24}\n      path=\"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z\"\n    ></CreateSVGIcon>\n  ),\n  SuccessOutlined: (\n    <CreateSVGIcon\n      width={24}\n      path=\"M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z\"\n    ></CreateSVGIcon>\n  )\n};\n","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { capitalize } from \"@material-ui/core/utils\";\nimport { svgIcons } from \"./svg-icons/svgIcons\";\n\nexport const styles = () => {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      // borderRadius: theme.shape.borderRadius,\n      backgroundColor: \"transparent\",\n      display: \"flex\",\n      padding: \"6px 16px\"\n    },\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"success\"`. */\n    filledSuccess: {\n      color: \"#fff\",\n      // fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: \"#4caf50\"\n    },\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"info\"`. */\n    filledInfo: {\n      color: \"#fff\",\n      // fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: \"#2196f3\"\n    },\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"warning\"`. */\n    filledWarning: {\n      color: \"#fff\",\n      // fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: \"#ff9800\"\n    },\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"error\"`. */\n    filledError: {\n      color: \"#fff\",\n      // fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: \"#f44336\"\n    },\n    /* Styles applied to the icon wrapper element. */\n    icon: {\n      marginRight: 12,\n      padding: \"7px 0\",\n      display: \"flex\",\n      fontSize: 22,\n      opacity: 0.9\n    },\n    /* Styles applied to the message wrapper element. */\n    message: {\n      padding: \"8px 0\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\"\n    },\n    /* Styles applied to the action wrapper element if `action` is provided. */\n    action: {\n      display: \"flex\",\n      alignItems: \"center\",\n      marginLeft: \"auto\",\n      paddingLeft: 16,\n      marginRight: -8\n    }\n  };\n};\n\nconst defaultIconMapping = {\n  success: svgIcons.SuccessOutlined,\n  warning: svgIcons.ReportProblemOutlined,\n  error: svgIcons.ErrorOutline,\n  info: svgIcons.InfoOutlined\n};\n\nconst Alert = props => {\n  const {\n    action,\n    children,\n    classes,\n    className,\n    closeText = \"Close\",\n    color,\n    icon,\n    iconMapping = defaultIconMapping,\n    onClose,\n    role = \"alert\",\n    severity = \"success\",\n    variant = \"standard\",\n    theme,\n    ...other\n  } = props;\n\n  return (\n    <div\n      className={clsx(\n        classes.root,\n        classes[`${variant}${capitalize(color || severity)}`],\n        className\n      )}\n      {...other}\n    >\n      {icon !== false ? (\n        <div className={classes.icon}>\n          {icon || iconMapping[severity] || defaultIconMapping[severity]}\n        </div>\n      ) : null}\n      <div className={classes.message}>{children}</div>\n      {action != null ? <div className={classes.action}>{action}</div> : null}\n      {action == null && onClose ? (\n        <div className={classes.action}>\n          <IconButton\n            size=\"small\"\n            aria-label={closeText}\n            title={closeText}\n            color=\"inherit\"\n            onClick={onClose}\n          >\n            {svgIcons.Close}\n          </IconButton>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nAlert.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The action to display. It renders after the message, at the end of the alert.\n   */\n  action: PropTypes.node,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Override the default label for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  closeText: PropTypes.string,\n  /**\n   * The main color for the alert. Unless provided, the value is taken from the `severity` prop.\n   */\n  color: PropTypes.oneOf([\"error\", \"info\", \"success\", \"warning\"]),\n  /**\n   * Override the icon displayed before the children.\n   * Unless provided, the icon is mapped to the value of the `severity` prop.\n   */\n  icon: PropTypes.node,\n  /**\n   * The component maps the `severity` prop to a range of different icons,\n   * for instance success to `<SuccessOutlined>`.\n   * If you wish to change this mapping, you can provide your own.\n   * Alternatively, you can use the `icon` prop to override the icon displayed.\n   */\n  iconMapping: PropTypes.shape({\n    error: PropTypes.node,\n    info: PropTypes.node,\n    success: PropTypes.node,\n    warning: PropTypes.node\n  }),\n  /**\n   * Callback fired when the component requests to be closed.\n   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n  /**\n   * The ARIA role attribute of the element.\n   */\n  role: PropTypes.string,\n  /**\n   * The severity of the alert. This defines the color and icon used.\n   */\n  severity: PropTypes.oneOf([\"error\", \"info\", \"success\", \"warning\"]),\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf([\"filled\", \"outlined\", \"standard\"])\n};\n\nexport default withStyles(styles, { name: \"MuiAlert\" })(Alert);\n","// Inspired from https://github.com/GA-MO/react-confirm-alert\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { render, unmountComponentAtNode } from \"react-dom\";\n// import { Alert } from \"@material-ui/lab\";\nimport Alert from \"./Alert/Alert\";\n\nimport \"./Snackbar.css\";\n\nimport { svgIcons } from \"./Alert/svg-icons/svgIcons\";\n\nclass ReactConfirmAlert extends Component {\n  static propTypes = {\n    message: PropTypes.string,\n    customUI: PropTypes.func,\n    closeOnClickOutside: PropTypes.bool,\n    closeOnEscape: PropTypes.bool,\n    willUnmount: PropTypes.func,\n    onClickOutside: PropTypes.func,\n    onKeypressEscape: PropTypes.func,\n    // new props\n    severity: PropTypes.string,\n    closeText: PropTypes.string,\n    autoHideDuration: PropTypes.number,\n    closable: PropTypes.bool\n  };\n\n  autoClose = null;\n\n  static defaultProps = {\n    closeOnClickOutside: true,\n    closeOnEscape: true,\n    willUnmount: () => null,\n    onClickOutside: () => null,\n    onKeypressEscape: () => null,\n    // new props\n    severity: \"info\", // error, warning, info or success\n    closeText: \"Close\",\n    autoHideDuration: 6000,\n    closable: true\n  };\n\n  handleClickButton = button => {\n    if (button.onClick) button.onClick();\n    this.close();\n  };\n\n  handleClickOverlay = e => {\n    const { closeOnClickOutside, onClickOutside } = this.props;\n    const isClickOutside = e.target === this.overlay;\n\n    if (closeOnClickOutside && isClickOutside) {\n      onClickOutside();\n      this.close();\n    }\n  };\n\n  close = () => {\n    removeBodyClass();\n    removeElementReconfirm();\n  };\n\n  keyboardClose = event => {\n    const { closeOnEscape, onKeypressEscape } = this.props;\n    const isKeyCodeEscape = event.keyCode === 27;\n\n    if (closeOnEscape && isKeyCodeEscape) {\n      onKeypressEscape(event);\n      this.close();\n    }\n  };\n\n  componentDidMount = () => {\n    document.addEventListener(\"keydown\", this.keyboardClose, false);\n    this.autoClose = setTimeout(() => {\n      if (\n        document.getElementById(\"react-confirm-alert\") ||\n        document.getElementById(\"react-confirm-alert-body-element\")\n      ) {\n        this.close();\n      }\n    }, this.props.autoHideDuration);\n  };\n\n  componentWillUnmount = () => {\n    document.removeEventListener(\"keydown\", this.keyboardClose, false);\n    clearTimeout(this.autoClose);\n    this.props.willUnmount();\n  };\n\n  renderCustomUI = () => {\n    const { title, message, customUI } = this.props;\n    const dataCustomUI = {\n      title,\n      message,\n      onClose: this.close\n    };\n\n    return customUI(dataCustomUI);\n  };\n\n  render() {\n    const {\n      message,\n      customUI,\n      severity,\n      closeText,\n      closable,\n      theme\n    } = this.props;\n\n    return (\n      <div\n        className=\"react-confirm-alert-overlay\"\n        ref={dom => (this.overlay = dom)}\n        onClick={this.handleClickOverlay}\n      >\n        <div className=\"react-confirm-alert\">\n          {customUI ? (\n            this.renderCustomUI()\n          ) : (\n            <div className=\"react-confirm-alert-body\">\n              <Alert\n                theme={theme}\n                elevation={6}\n                variant=\"filled\"\n                severity={severity}\n                closeText={closeText}\n                action={\n                  closable ? (\n                    <div\n                      className=\"icon-container\"\n                      onClick={() => this.close()}\n                    >\n                      {svgIcons.Close}\n                    </div>\n                  ) : (\n                    undefined\n                  )\n                }\n              >\n                {message}\n              </Alert>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction createElementReconfirm(properties, theme) {\n  let divTarget = document.getElementById(\"react-confirm-alert\");\n  if (divTarget) {\n    // Rerender - the mounted ReactConfirmAlert\n    render(<ReactConfirmAlert {...properties} theme={theme} />, divTarget);\n  } else {\n    // Mount the ReactConfirmAlert component\n    document.body.children[0].classList.add(\"react-confirm-alert-blur\");\n    divTarget = document.createElement(\"div\");\n    divTarget.id = \"react-confirm-alert\";\n    document.body.appendChild(divTarget);\n    render(<ReactConfirmAlert {...properties} theme={theme} />, divTarget);\n  }\n}\n\nfunction removeElementReconfirm() {\n  const target = document.getElementById(\"react-confirm-alert\");\n  unmountComponentAtNode(target);\n  target.parentNode.removeChild(target);\n}\n\nfunction addBodyClass() {\n  document.body.classList.add(\"react-confirm-alert-body-element\");\n}\n\nfunction removeBodyClass() {\n  document.body.classList.remove(\"react-confirm-alert-body-element\");\n}\n\nexport function snackbar(properties, theme) {\n  addBodyClass();\n  createElementReconfirm(properties, theme);\n}\n\nexport default ReactConfirmAlert;\n","import { createMuiTheme } from \"@material-ui/core/styles\";\nimport \"fontsource-roboto\";\nimport \"fontsource-open-sans\";\n\nconst themeFactory = particular => ({\n  ...particular,\n  typography: {\n    fontFamily: \"Open Sans\",\n    h1: {\n      fontFamily: \"Open Sans\"\n    },\n    h2: {\n      fontFamily: \"Open Sans\"\n    },\n    h3: {\n      fontFamily: \"Open Sans\"\n    },\n    h4: {\n      fontFamily: \"Open Sans\"\n    },\n    h5: {\n      fontFamily: \"Open Sans\"\n    },\n    h6: {\n      fontFamily: \"Open Sans\"\n    },\n    body1: {\n      fontFamily: \"Roboto\"\n    }\n  },\n  cursorDefault: {\n    cursor: \"default\"\n  },\n  cursorPointer: {\n    cursor: \"pointer\"\n  }\n});\n\nconst Themes = {\n  dark: createMuiTheme(\n    themeFactory({\n      label: \"dark\",\n      backgroundColor:\n        \"linear-gradient(114.01deg, #212121 0%, #050505 100.43%)\",\n      bottomNavigation: { background: \"#212121\" },\n      globalStats: {\n        borderColor: \"#474747\",\n        subTextColor: \"#CDCDCD\",\n        upperTextColor: \"#E6E6E6\"\n      },\n      palette: {\n        type: \"dark\", // Switching the dark mode on, is a single property value change.\n        primary: {\n          main: \"#36b5e6\"\n        },\n        secondary: {\n          main: \"#CF6679\"\n        },\n        green: {\n          main: \"#03DAC5\"\n        }\n      },\n      overrides: {\n        MuiButton: {\n          outlined: {\n            margin: \"8px\"\n          },\n          text: {\n            margin: \"8px\"\n          },\n          contained: {\n            margin: \"8px\"\n          },\n          containedPrimary: {\n            color: \"inherit\",\n            margin: \"8px\"\n          },\n          containedSecondary: {\n            color: \"inherit\",\n            margin: \"8px\"\n          }\n        },\n        MuiButtonGroup: {\n          root: {\n            margin: \"0\"\n          },\n          groupedContainedPrimary: {\n            margin: \"0\"\n          },\n          groupedOutlined: {\n            margin: \"0\"\n          },\n          groupedText: {\n            margin: \"0\"\n          }\n        },\n        MuiIconButton: {\n          root: {\n            color: \"#36b5e6\"\n          }\n        },\n        MuiListItem: {\n          button: {\n            \"&:hover\": {\n              backgroundColor: \"rgba(54,181,230, 0.15)\"\n            }\n          }\n        },\n        MuiFormControlLabel: {\n          label: {\n            color: \"rgba(255,255,255,0.8)\"\n          }\n        },\n        MuiInputBase: {\n          input: {\n            font: \"Roboto\"\n          }\n        },\n        MuiFilledInput: {\n          root: {\n            border: \"4px\"\n          },\n          underline: {\n            \"&::before\": {\n              borderRadius: \"4px\"\n            }\n          }\n        }\n      }\n    })\n  ),\n  light: createMuiTheme(\n    themeFactory({\n      font: {\n        Roboto: {\n          fontFamily: \"Roboto\"\n        },\n        OpenSans: {\n          fontFamily: \"Open Sans\"\n        }\n      },\n      label: \"light\",\n      backgroundColor:\n        \"linear-gradient(122.19deg, #FFFFFF 2.58%, #FFFFFF 76.23%)\", // it was white before\n      bottomNavigation: { background: \"#c3c3c3\" },\n      globalStats: {\n        borderColor: \"#E6E6E6\",\n        subTextColor: \"#717171\",\n        upperTextColor: \"#474747\"\n      },\n      palette: {\n        primary: {\n          main: \"#007197\"\n        },\n        secondary: {\n          main: \"#BE2424\"\n        },\n        green: {\n          main: \"#03DAC5\"\n        }\n      },\n      overrides: {\n        MuiButton: {\n          outlined: {\n            margin: \"8px\"\n          },\n          text: {\n            margin: \"8px\"\n          },\n          contained: {\n            margin: \"8px\"\n          },\n          containedPrimary: {\n            color: \"white\",\n            margin: \"8px\"\n          },\n          containedSecondary: {\n            color: \"white\",\n            margin: \"8px\"\n          }\n        },\n        MuiButtonGroup: {\n          root: {\n            margin: \"0\"\n          },\n          groupedContainedPrimary: {\n            margin: \"0\"\n          },\n          groupedOutlined: {\n            margin: \"0\"\n          },\n          groupedText: {\n            margin: \"0\"\n          }\n        },\n        MuiIconButton: {\n          root: {\n            color: \"#007197\"\n          }\n        },\n        MuiListItem: {\n          button: {\n            \"&:hover\": {\n              backgroundColor: \"rgba(0,113,151, 0.15)\"\n            }\n          }\n        },\n        MuiFormControlLabel: {\n          label: {\n            color: \"rgba(0,0,0,0.8)\"\n          }\n        },\n        MuiInputBase: {\n          input: {\n            font: \"Roboto\"\n          }\n        },\n        MuiFilledInput: {\n          root: {\n            border: \"4px\"\n          },\n          underline: {\n            \"&::before\": {\n              borderRadius: \"4px\"\n            }\n          }\n        }\n      }\n    })\n  )\n};\n\nThemes.getTheme = () => {\n  const theme = window.localStorage.getItem(\"movai.theme\"); // dark or light\n  return theme ? theme : \"dark\";\n};\n\nThemes.setTheme = value => {\n  window.localStorage.setItem(\"movai.theme\", value);\n};\n\nexport default Themes;\n","import { createGlobalStyle } from \"styled-components\";\nimport { Style as S } from \"mov-fe-lib-core\";\n\nconst Style = createGlobalStyle`${S}`;\nexport default Style;\n","import React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Menu from \"@material-ui/core/Menu\";\nimport { Typography, Tooltip } from \"@material-ui/core\";\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PropTypes from \"prop-types\";\n\nconst styles = theme => ({\n  button: {\n    margin: theme.spacing(1),\n    color: theme.palette.primary.main,\n    borderColor: theme.palette.primary.main\n  },\n  iconActive: {\n    color: theme.palette.primary.main,\n    borderColor: theme.palette.primary.main,\n    backgroundColor: fade(theme.palette.primary.main, 0.1)\n  },\n  buttonApplyFilters: {\n    background: theme.palette.primary.main,\n    fontFamily: \"Roboto\",\n    fontStyle: \"normal\",\n    fontWeight: \"bold\",\n    fontSize: \"14px\",\n    color: \"#FAFAFA\",\n    margin: \"0px 20px 10px 20px\",\n    \"&:hover\": { background: theme.palette.primary.dark }\n  },\n  icon: {\n    // fontSize: \"18px\",\n    // height: \"21px\",\n    // width: \"15px\",\n    //color: theme.palette.primary.main,\n    \"&:hover\": { cursor: \"pointer\" }\n  },\n  height: { height: \"100%\" },\n  checkbox: { marginLeft: \"10px\" },\n  limitText: {\n    width: \"50px\",\n    margin: theme.spacing(0, 3, 0, 3)\n  }\n});\n\nconst StyledMenu = withStyles(theme => ({\n  paper: {\n    // border: \"1px solid #F0F0F0\",\n    borderRadius: \"8px\",\n    width: \"242px\",\n    height: \"411px\",\n    boxShadow: \"2px 2px 4px rgba(0, 0, 0, 0.25)\"\n  }\n}))(props => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: \"bottom\",\n      horizontal: \"center\"\n    }}\n    transformOrigin={{\n      vertical: \"top\",\n      horizontal: \"center\"\n    }}\n    autoFocus={false}\n    {...props}\n  />\n));\n\nclass FilterIcon extends Component {\n  state = { anchorEl: null, otherFilters: [] };\n\n  handleClick = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({\n      anchorEl: null,\n      otherFilters: []\n    });\n  };\n\n  render() {\n    const { classes, t, disabled, tooltip, title } = this.props;\n    return (\n      <React.Fragment>\n        <Tooltip title={tooltip || title}>\n          <IconButton\n            size=\"small\"\n            onClick={this.handleClick}\n            disabled={disabled}\n            className={this.props.isActive ? classes.iconActive : classes.icon}\n          >\n            {this.props.icon}\n          </IconButton>\n        </Tooltip>\n        <StyledMenu\n          id=\"customized-menu\"\n          anchorEl={this.state.anchorEl}\n          open={Boolean(this.state.anchorEl)}\n          onClose={this.handleClose}\n          className={classes.height}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              height: \"-webkit-fill-available\"\n            }}\n          >\n            <Typography\n              component=\"div\"\n              style={{\n                padding: \"10px 10px 0px 20px\",\n                display: \"flex\",\n                flexDirection: \"row\"\n              }}\n            >\n              <Typography\n                component=\"div\"\n                style={{\n                  fontSize: \"24px\",\n                  fontFamily: \"Open Sans\",\n                  fontWeight: 500\n                }}\n              >\n                {this.props.title}\n              </Typography>\n              <Typography\n                component=\"div\"\n                style={{\n                  flexGrow: 1\n                }}\n              ></Typography>\n              <Typography\n                component=\"div\"\n                onClick={this.handleClose}\n                className={classes.icon}\n              >\n                <i className=\"fas fa-times\"></i>\n              </Typography>\n            </Typography>\n            <div\n              style={{\n                flexGrow: 1,\n                display: \"flex\",\n                flexDirection: \"column\",\n                margin: \"10px 0px 0px 10px\"\n              }}\n            >\n              {this.props.children}\n            </div>\n          </div>\n        </StyledMenu>\n      </React.Fragment>\n    );\n  }\n}\n\nFilterIcon.propTypes = {\n  isActive: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tooltip: PropTypes.string,\n  title: PropTypes.string\n};\n\nFilterIcon.defaultProps = {\n  isActive: false,\n  disabled: false,\n  tooltip: \"\",\n  title: \"Filters\"\n};\n\nexport default withStyles(styles, { withTheme: true })(FilterIcon);\n","import React, { memo } from \"react\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { FormControlLabel, Switch, TextField } from \"@material-ui/core\";\nimport ResetSearch from \"@material-ui/icons/Close\";\nimport FiltersIcon from \"./FiltersIcon/FiltersIcon\";\nimport LabelIcon from \"@material-ui/icons/Label\";\nimport Chip from \"@material-ui/core/Chip\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport TodayIcon from \"@material-ui/icons/Today\";\nimport { Typography } from \"@material-ui/core\";\nimport Input from \"@material-ui/core/Input\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Select from \"@material-ui/core/Select\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport {\n  KeyboardDateTimePicker,\n  MuiPickersUtilsProvider\n} from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport PropTypes from \"prop-types\";\nimport _isEqual from \"lodash/isEqual\";\nimport _get from \"lodash/get\";\n\nconst useStyles = makeStyles(theme => ({\n  filterBarContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    padding: 6,\n    backgroundColor: \"#353535\",\n    alignItems: \"center\"\n    // justifyContent: \"space-between\"\n  },\n  input: {\n    flex: 1,\n    paddingLeft: \"10px\",\n    fontSize: \"medium\"\n  },\n  searchText: {\n    minWidth: 150,\n    paddingLeft: theme.spacing(3)\n  },\n  addTagText: {\n    width: \"100%\"\n  },\n  limitText: {\n    width: \"50px\",\n    margin: theme.spacing(0, 3, 0, 3)\n  },\n  toggleContainer: {\n    margin: theme.spacing(2)\n  },\n  datePicker: {\n    width: \"200px\",\n    margin: theme.spacing(0, 3, 0, 3)\n  },\n  tagsContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: theme.spacing(0.5),\n    margin: theme.spacing(0, 3, 0, 3)\n  },\n  tagsList: {\n    marginTop: theme.spacing(3)\n  },\n  chip: {\n    margin: theme.spacing(0.5)\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    maxWidth: 300\n  },\n  filtersButton: {\n    display: \"flex\",\n    flexDirection: \"row\"\n  },\n  columnsFilter: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginTop: 6\n  },\n  iconButton: {\n    color: \"#0B6A8A\",\n    \"&:hover\": {\n      color: \"#22c7ff\"\n    }\n  }\n}));\n\nconst LogsFilterBar = props => {\n  const classes = useStyles();\n  const [tagText, setTagText] = React.useState(\"\");\n\n  const handleRobotChange = event => {\n    const arrayEvent = event?.target?.value;\n    const selectedId = arrayEvent[arrayEvent.length - 1];\n    props.updateRobotSelection(selectedId);\n  };\n  const getRobotSelector = () => {\n    return (\n      <div className={classes.toggleContainer}>\n        <svg\n          width=\"20\"\n          height=\"18\"\n          viewBox=\"0 0 30 27\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          style={{ paddingTop: \"5px\", paddingRight: \"5px\" }}\n        >\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M16.7753 1.35706L15.9587 2.61119L16.3648 2.87846L18.4001 4.18898L17.1052 6.20016H25.437C26.5487 6.20016 27.45 7.10137 27.45 8.21307V12.8244H28.0955C28.6514 12.8244 29.102 13.275 29.102 13.8308V16.0643C29.102 16.6201 28.6514 17.0707 28.0955 17.0707H27.45V21.2901C27.45 22.4018 26.5487 23.303 25.437 23.303H4.12161C3.00991 23.303 2.1087 22.4017 2.1087 21.29V17.0707H1.42467C0.868819 17.0707 0.418213 16.6201 0.418213 16.0643V13.8308C0.418213 13.275 0.868819 12.8244 1.42467 12.8244H2.1087V8.21307C2.1087 7.10137 3.00991 6.20016 4.12161 6.20016H13.5141L14.8252 4.16395L13.2875 3.15192L13.2966 3.13812L13.2875 3.1322L15.1377 0.290771L16.7753 1.35706ZM24.4306 9.21953H5.12807V20.2836H24.4306V9.21953ZM7.18098 12.1324C6.68518 12.1324 6.28325 12.5343 6.28325 13.0301C6.28325 13.5259 6.68518 13.9278 7.18098 13.9278H9.04635C9.54216 13.9278 9.94409 13.5259 9.94409 13.0301C9.94409 12.5343 9.54216 12.1324 9.04635 12.1324H7.18098ZM20.6901 12.1324C20.1943 12.1324 19.7924 12.5343 19.7924 13.0301C19.7924 13.5259 20.1943 13.9278 20.6901 13.9278H22.5555C23.0513 13.9278 23.4532 13.5259 23.4532 13.0301C23.4532 12.5343 23.0513 12.1324 22.5555 12.1324H20.6901ZM9.17669 17.6512H11.3239V19.253H9.17669V17.6512ZM14.3432 17.6513H12.196V19.253H14.3432V17.6513ZM15.2154 17.6513H17.3626V19.253H15.2154V17.6513ZM20.382 17.6513H18.2348V19.253H20.382V17.6513ZM10.9568 23.69H18.6019V25.7029C18.6019 26.2587 18.1513 26.7093 17.5954 26.7093H11.9632C11.4074 26.7093 10.9568 26.2587 10.9568 25.7029V23.69Z\"\n            fill=\"#9E9E9E\"\n          />\n        </svg>\n        <FormControl className={classes.formControl}>\n          <Select\n            labelId=\"select-label\"\n            id=\"select\"\n            multiple\n            value={props.selectedRobots}\n            onChange={handleRobotChange}\n            renderValue={selected => {\n              const selectedNames = selected\n                .filter(({ isSelected }) => isSelected)\n                .map(({ name }) => name);\n              return selectedNames.length > 2\n                ? [selectedNames[0], selectedNames[1]].join(\" , \") + \"...\"\n                : selectedNames.join(\" , \");\n            }}\n            input={<Input />}\n            MenuProps={MenuProps}\n          >\n            {/* <MenuItem key={`robotList-Default`} value={robotDefault}>\n              Default\n            </MenuItem> */}\n            {props.selectedRobots.map((robot, robotIndex) => {\n              return (\n                <MenuItem key={`robotList-${robotIndex}`} value={robot.id}>\n                  <Checkbox checked={robot.isSelected} />\n                  <ListItemText primary={robot.name} />\n                </MenuItem>\n              );\n            })}\n          </Select>\n        </FormControl>\n      </div>\n    );\n  };\n\n  const getSearchInput = () => {\n    return (\n      <TextField\n        className={classes.searchText}\n        label=\"\"\n        placeholder=\"Search (regex)\"\n        value={props.messageRegex}\n        onChange={evt => props.handleMessageRegex(evt.target.value)}\n        InputProps={{\n          startAdornment: (\n            <InputAdornment style={{ paddingRight: 8 }}>\n              <SearchIcon fontSize=\"small\" />\n            </InputAdornment>\n          ),\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              <IconButton\n                disabled={!props.messageRegex}\n                onClick={() => props.handleMessageRegex(\"\")}\n              >\n                <ResetSearch color=\"inherit\" fontSize=\"small\" />\n              </IconButton>\n            </InputAdornment>\n          )\n        }}\n        size=\"small\"\n      />\n    );\n  };\n\n  const getLevels = () => {\n    return (\n      <div className={classes.toggleContainer}>\n        <FormControl className={classes.formControl}>\n          <Select\n            labelId=\"demo-mutiple-checkbox-label\"\n            id=\"demo-mutiple-checkbox\"\n            style={{ minWidth: \"290px\" }}\n            multiple\n            value={props.levels}\n            onChange={props.handleLevels}\n            input={<Input />}\n            renderValue={selected => {\n              // selected comes from state, for example [\"ERROR\", \"INFO\"]\n              // but want to show the lables, for example [\"Alerts\", \"State of Robot\"]\n              const labels = props.levelsList\n                .filter(level => selected.includes(level.value))\n                .map(elem => elem.label);\n              return labels.join(\", \");\n            }}\n            MenuProps={MenuProps}\n          >\n            {props.levelsList.map(level => (\n              <MenuItem key={level.value} value={level.value}>\n                <Checkbox checked={props.levels.indexOf(level.value) > -1} />\n                <ListItemText primary={level.label} />\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </div>\n    );\n  };\n\n  const getTags = isAdvancedMode => {\n    return (\n      <FiltersIcon\n        icon={<LabelIcon></LabelIcon>}\n        title=\"Tags\"\n        disabled={!isAdvancedMode}\n        isActive={props.tags.length > 0}\n      >\n        <div className={classes.tagsContainer}>\n          <TextField\n            className={classes.addTagText}\n            value={tagText}\n            onChange={evt => setTagText(evt.target.value)}\n            onKeyUp={event => {\n              // User pressed Enter\n              if (event.keyCode === 13) {\n                props.handleAddTag(tagText);\n                setTagText(\"\");\n              }\n            }}\n            label=\"Add Tag\"\n            InputProps={{\n              endAdornment: (\n                <InputAdornment>\n                  <IconButton\n                    onClick={() => {\n                      props.handleAddTag(tagText);\n                      setTagText(\"\");\n                    }}\n                  >\n                    <AddIcon />\n                  </IconButton>\n                </InputAdornment>\n              )\n            }}\n            size=\"small\"\n          />\n          <div className={classes.tagsList}>\n            {props.tags.map(data => {\n              return (\n                <li key={data.key}>\n                  <Chip\n                    label={data.label}\n                    onDelete={() => props.handleDeleteTag(data)}\n                    className={classes.chip}\n                    size=\"small\"\n                  />\n                </li>\n              );\n            })}\n          </div>\n        </div>\n      </FiltersIcon>\n    );\n  };\n\n  const getTimeFilters = () => {\n    return (\n      <FiltersIcon\n        icon={<TodayIcon></TodayIcon>}\n        title={props.t(\"Date Range\")}\n        isActive={\n          props.selectedFromDate !== null || props.selectedToDate !== null\n        }\n      >\n        {/* From -> To Date */}\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <KeyboardDateTimePicker\n            key=\"time-picker\"\n            className={classes.datePicker}\n            size=\"small\"\n            variant=\"inline\"\n            ampm={false}\n            label={props.t(\"From date\")}\n            value={props.selectedFromDate}\n            onChange={newDate =>\n              props.handleDateChange(newDate, \"selectedFromDate\")\n            }\n            onError={console.log}\n            format=\"yyyy/MM/dd HH:mm\"\n          />\n          <KeyboardDateTimePicker\n            key=\"time-picker2\"\n            className={classes.datePicker}\n            size=\"small\"\n            variant=\"inline\"\n            ampm={false}\n            label={props.t(\"To date\")}\n            value={props.selectedToDate}\n            onChange={newDate =>\n              props.handleDateChange(newDate, \"selectedToDate\")\n            }\n            onError={console.log}\n            format=\"yyyy/MM/dd HH:mm\"\n          />\n        </MuiPickersUtilsProvider>\n      </FiltersIcon>\n    );\n  };\n\n  const getSettings = () => {\n    return (\n      <FiltersIcon\n        icon={<SettingsIcon></SettingsIcon>}\n        title={props.t(\"Configuration\")}\n      >\n        {/* Advanced/Simple Mode */}\n        <FormControlLabel\n          control={\n            <Switch\n              checked={props.advancedMode}\n              onChange={props.handleAdvancedMode}\n            />\n          }\n          label={props.advancedMode ? \"Advanced\" : \"Simple\"}\n        />\n        <div className={classes.filtersButton}>\n          {/* Limit Input */}\n          <Typography\n            component=\"div\"\n            style={{\n              fontSize: \"1rem\",\n              fontFamily: \"Open Sans\",\n              fontWeight: 500\n            }}\n          >\n            {`${props.t(\"Limit p/Robot\")}:`}\n          </Typography>\n          <TextField\n            value={props.limit}\n            onChange={props.handleLimit}\n            className={classes.limitText}\n            id=\"outlined-number\"\n            // label=\"limit\"\n            placeholder={props.t(\"limit\")}\n            type=\"number\"\n            InputLabelProps={{\n              shrink: true\n            }}\n            // variant=\"outlined\"\n            size=\"small\"\n          />\n        </div>\n        <div className={classes.columnsFilter}>\n          {/* Limit Input */}\n          <Typography\n            component=\"div\"\n            style={{\n              fontSize: \"1rem\",\n              fontFamily: \"Open Sans\",\n              fontWeight: 500\n            }}\n          >\n            {`${props.t(\"Columns\")}:`}\n          </Typography>\n          <FormControl className={classes.formControl}>\n            <Select\n              labelId=\"demo-mutiple-checkbox-label\"\n              id=\"demo-mutiple-checkbox\"\n              multiple\n              value={props.columns}\n              onChange={props.handleColumns}\n              input={<Input />}\n              renderValue={selected =>\n                selected\n                  .map(elem => _get(props, `columnList[${elem}].label`, \"\"))\n                  .join(`, `)\n              }\n              MenuProps={MenuProps}\n            >\n              {Object.keys(props.columnList).map((column, index) => {\n                return (\n                  <MenuItem key={index} value={column}>\n                    <Checkbox checked={props.columns.indexOf(column) > -1} />\n                    <ListItemText primary={props.columnList[column].label} />\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n        </div>\n      </FiltersIcon>\n    );\n  };\n\n  return (\n    <div className={classes.filterBarContainer}>\n      {getRobotSelector()}\n      {/* Search Input */}\n      {getSearchInput()}\n      {/* Toggle: INFO, DEBUG, ERROR, CRITICAL */}\n      {getLevels()}\n      {/* Tags */}\n      {getTags(props.advancedMode)}\n      {getTimeFilters()}\n      <div style={{ flexGrow: 1 }}></div>\n      {getSettings()}\n    </div>\n  );\n};\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  },\n  getContentAnchorEl: null\n};\n\nLogsFilterBar.propTypes = {\n  levels: PropTypes.array,\n  levelsList: PropTypes.array,\n  handleLevels: PropTypes.func,\n  limit: PropTypes.number,\n  handleLimit: PropTypes.func,\n  columns: PropTypes.array,\n  columnList: PropTypes.object,\n  handleColumns: PropTypes.func,\n  handleDeleteTag: PropTypes.func,\n  messageRegex: PropTypes.string,\n  handleMessageRegex: PropTypes.func,\n  selectedFromDate: PropTypes.string,\n  selectToDate: PropTypes.string,\n  handleDateChange: PropTypes.func,\n  selectedRobots: PropTypes.array,\n  updateRobotSelection: PropTypes.func,\n  advancedMode: PropTypes.bool,\n  handleAdvancedMode: PropTypes.func,\n  t: PropTypes.func\n};\n\nLogsFilterBar.defaultProps = {\n  levels: [],\n  levelsList: [],\n  handleLevels: () => {},\n  limit: 1,\n  handleLimit: () => {},\n  columns: [],\n  columnList: {},\n  handleColumns: () => {},\n  handleDeleteTag: () => {},\n  messageRegex: \"\",\n  handleMessageRegex: () => {},\n  selectedFromDate: \"\",\n  selectToDate: \"\",\n  handleDateChange: () => {},\n  selectedRobots: [],\n  updateRobotSelection: () => {},\n  advancedMode: false,\n  handleAdvancedMode: () => {},\n  t: string => string\n};\n\n//The function returns true when the compared props equal, preventing the component from re-rendering\nfunction arePropsEqual(prevProps, nextProps) {\n  return _isEqual(prevProps, nextProps);\n}\n\nexport default memo(LogsFilterBar, arePropsEqual);\n","import React from \"react\";\nimport _isEmpty from \"lodash/isEmpty\";\n\n// export const levels = [\n//   { value: \"INFO\", label: i18n.t(\"Robot Status\") },\n//   // { value: \"WARNING\", label: \"Warnings\" },\n//   // { value: \"DEBUG\", label: \"Debug\" },\n//   { value: \"ERROR\", label: i18n.t(\"Alerts\") }\n//   // { value: \"CRITICAL\", label: \"Critical\" }\n// ];\n\nexport const colorCoding = {\n  INFO: {\n    backgroundColor: \"rgba(33, 150, 243, 0.1)\",\n    color: \"rgba(33, 150, 243, 1)\"\n  },\n  WARNING: {\n    backgroundColor: \"rgba(255, 152, 0, 0.1)\",\n    color: \"rgba(255, 152, 0, 1)\"\n  },\n  DEBUG: {\n    backgroundColor: \"rgba(76, 175, 80, 0.1)\",\n    color: \"rgba(76, 175, 80, 1)\"\n  },\n  ERROR: {\n    backgroundColor: \"rgba(244, 67, 54, 0.1)\",\n    color: \"rgba(244, 67, 54, 1)\"\n  },\n  CRITICAL: {\n    backgroundColor: \"rgba(255, 19, 1, 0.1)\",\n    color: \"rgba(255, 19, 1, 1)\"\n  }\n};\n\n// export const fixedColumns = {\n//   Date: {\n//     label: i18n.t(\"Date\"),\n//     dataKey: \"time\",\n//     width: 100,\n//     render: time => getJustDateFromServer(time)\n//   },\n//   Time: {\n//     label: i18n.t(\"Time\"),\n//     dataKey: \"time\",\n//     render: time => getJustTimeFromServer(time),\n//     width: 100\n//   },\n//   Level: {\n//     label: i18n.t(\"Level\"),\n//     dataKey: \"level\",\n//     width: 100\n//   },\n//   Module: {\n//     label: i18n.t(\"Module\"),\n//     dataKey: \"module\",\n//     width: 100\n//   },\n//   Function: {\n//     label: \"Function\",\n//     dataKey: \"funcName\",\n//     width: 100\n//   },\n//   Callback: {\n//     label: i18n.t(\"Callback\"),\n//     dataKey: \"callback\",\n//     width: 100\n//   },\n//   Node: {\n//     label: i18n.t(\"Node\"),\n//     dataKey: \"node\",\n//     width: 100\n//   },\n//   Fleet: {\n//     label: i18n.t(\"Fleet\"),\n//     dataKey: \"fleet\",\n//     width: 100\n//   },\n//   Robot: {\n//     label: i18n.t(\"Robot\"),\n//     dataKey: \"robot\",\n//     width: 100\n//   },\n//   Message: {\n//     label: i18n.t(\"Message\"),\n//     dataKey: \"message\",\n//     width: 100\n//   }\n// };\n\n// Makes sure to find unique \"i\" of chip array\n// Input: [{key: 0, label: \"Chip1\"}, {key: 2, label: \"Chip3\"}], keyName= \"key\"\n// Output: 1\nexport function findsUniqueKey(array, keyName) {\n  const length = array.length;\n  // If empty, return 0\n  if (length === 0 || array === undefined) {\n    return 0;\n  }\n  for (let k = 0; k < length; k++) {\n    for (let j = 0; j < length; j++) {\n      if (k === array[j][keyName]) {\n        break;\n      }\n      if (j === length - 1) {\n        return k;\n      }\n    }\n  }\n\n  return length;\n}\n\n// Converts the levels in the state for the string for the request\n//  Input: [\"INFO\", \"DEBUG\"]\n//  Output: \"level=info,debug\"\nexport function getRequestLevels(levelsArray, levelsList) {\n  let res = \"\";\n  if (Array.isArray(levelsArray) && levelsArray.length === levelsList.length) {\n    return res;\n  }\n\n  try {\n    levelsArray.forEach(level => {\n      if (res === \"\") {\n        res = `${level.toLowerCase()}`;\n      } else {\n        res = `${res},${level.toLowerCase()}`;\n      }\n    });\n    return `level=${res}`;\n  } catch (error) {\n    return \"\";\n  }\n}\n// Converts the levels in the state for the string for the request\n//  Input: [{ key: 0, label: \"UI\" }, { key: 1, label: \"TASKS\" }]\n//  Output: \"&tags=UI,TASKS\"\nexport function getRequestTags(tagsArray) {\n  let res = \"\";\n\n  if (_isEmpty(tagsArray)) {\n    return res;\n  }\n\n  tagsArray.forEach(tag => {\n    if (res === \"\") {\n      res = `${tag.label}`;\n    } else {\n      res = `${res},${tag.label}`;\n    }\n  });\n\n  return `&tags=${res}`;\n}\n// Converts the levels in the state for the string for the request\n//  Input: \"r'started\\.$\"\n//  Output: \"&message=r'started\\.$\"\nexport function getRequestMessage(message) {\n  if (!message || message === \"\") {\n    return \"\";\n  }\n\n  return `&message=${message}`;\n}\n\n// Convert Date format to a human readable format\n// Input: 1586370146\n// Output: \"08/04/2020 19:22:26\"\nexport const getTimeFromServer = serverTime => {\n  const time = new Date(serverTime * 1000);\n  return `${time.toLocaleString(\"pt\")}`;\n};\n// Convert Date format to a human readable format\n// Input: 1586370146\n// Output: \"08/04/2020\"\nexport const getJustDateFromServer = serverTime => {\n  const time = new Date(serverTime * 1000);\n  return `${time.toLocaleDateString(\"pt\")}`;\n};\n// Convert Date format to a human readable format\n// Input: 1586370146\n// Output: \"19:22:26\"\nexport const getJustTimeFromServer = serverTime => {\n  const time = new Date(serverTime * 1000);\n  return `${time.toLocaleTimeString(\"pt\")}`;\n};\n\n// Convert array of object to array of strings for LogList\n// Input:\n// [\n//   {\n//     time: 1586370146,\n//     level: \"INFO\",\n//     message: \"UI Tag Log Test: 12\"\n//   },\n//   {\n//     time: 1586370147,\n//     level: \"INFO\",\n//     message: \"UI Tag Log Test: 13\"\n//   }\n// ];\n// Output\n// [\n//   \"[08/04/2020 19:22:26] [INFO] : UI Tag Log Test: 12\",\n//   \"[08/04/2020 19:21:31] [INFO] : UI Tag Log Test: 56\"\n// ];\n\nexport const formatLogsData = data => {\n  return data.map(\n    elem => elem.stdout\n    // `[${getTimeFromServer(elem.time)}] [${elem.level}] : ${elem.message}`\n  );\n};\n\nfunction binaryIndexOf(data, criteria) {\n  var minIndex = 0;\n  var maxIndex = data.length - 1;\n  var currentIndex;\n  var currentElement;\n  var result = null;\n\n  while (minIndex <= maxIndex) {\n    currentIndex = ((minIndex + maxIndex) / 2) | 0;\n    currentElement = data[currentIndex];\n    var comparison = criteria(currentElement);\n\n    if (comparison[0] === \"right\") {\n      minIndex = currentIndex + 1;\n    } else {\n      maxIndex = currentIndex - 1;\n    }\n\n    if (comparison[1]) {\n      result = currentIndex;\n    }\n  }\n\n  return result;\n}\n\nexport const filterByFromToDates = (logsData, fromDate, toDate) => {\n  // If there is a problem fetching the logs, show nothing\n  if (!logsData) {\n    return [];\n  }\n\n  let lowerIndex = 0;\n  let upperIndex = logsData.length;\n\n  // If nothing is selected, do nothing\n  if (!fromDate && !toDate) {\n    return logsData;\n  }\n\n  // List of time format. Array is sorted in descending order (Newer -> Older)\n  const dateList = logsData.map(log => log.time);\n  if (toDate) {\n    // First log that is <= toDate (first index that fits criteria)\n    lowerIndex = binaryIndexOf(dateList, function (value) {\n      return value >= toDate.getTime() / 1000\n        ? [\"right\", false]\n        : [\"left\", true];\n    });\n  }\n  if (fromDate) {\n    // First log that is >= fromDate (last index that still fits criteria)\n    upperIndex = binaryIndexOf(dateList, function (value) {\n      return value <= fromDate.getTime() / 1000\n        ? [\"left\", false]\n        : [\"right\", true];\n    });\n  }\n  return logsData.slice(lowerIndex, upperIndex + 1);\n};\n\n// This function is to get the same string as the one you get in\n// Robot:Status nodes_lchd and persistent_nodes_lchd\nexport const addNestedName = (nestedName, newName) => {\n  if (nestedName === \"\") {\n    return newName;\n  } else {\n    return `${nestedName}__${newName}`;\n  }\n};\n\n// Will update according with the list of running nodes all the nodes to running or stopped\nexport const updateRunningNodes = (treeList, runningNodesList) => {\n  return treeList.map(elem => {\n    // Only update the status of nodes, not containers\n    if (elem.status) {\n      if (runningNodesList.includes(elem.nestedName)) {\n        return { ...elem, status: \"running\" };\n      } else {\n        return { ...elem, status: \"stopped\" };\n      }\n    } else {\n      return elem;\n    }\n  });\n};\n\n// This will remove the deleted container from the treeList and its respective children\nexport const removeDeleteContainer = (treeList, id) => {\n  // Get the id of the Container to remove\n  const deleteIndex = treeList.findIndex(elem => elem.id === id);\n  treeList.splice(deleteIndex, 1);\n  // Remove children: find all children with parentId that is the id\n  for (let i = 0; i < treeList.length; i++) {\n    if (treeList[i].parentId === id) {\n      removeDeleteContainer(treeList, treeList[i].id);\n    }\n  }\n};\n\n// Detects if there are loops within nested containers\n// Returns true if it finds a loop, false otherwise\nexport const detectContainerLoop = (treeList, parentId, flowId) => {\n  // If first level there are no loops\n  if (parentId === 0) {\n    return false;\n  }\n  // index of container to add\n  let flowIndex = treeList.findIndex(elem => elem.id === parentId);\n  let currentFlow = treeList[flowIndex];\n  // Stop when reaches the root of the tree\n  while (currentFlow.parentId) {\n    // get the parentId of the current container\n    const parentId = currentFlow.parentId;\n    // get the index of that parent in the array\n    flowIndex = treeList.findIndex(elem => elem.id === parentId);\n    currentFlow = treeList[flowIndex];\n    if (currentFlow.flowId === flowId) {\n      console.error(\"Found Flow Loop :0\");\n      return true;\n    }\n  }\n  return false;\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport { AutoSizer, Column, Table } from \"react-virtualized\";\nimport { colorCoding } from \"../utils/Utils\";\n\nconst styles = theme => ({\n  flexContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    boxSizing: \"border-box\"\n  },\n  table: {\n    // temporary right-to-left patch, waiting for\n    // // https://github.com/bvaughn/react-virtualized/issues/454\n    \"& .ReactVirtualized__Table__headerRow\": {\n      flip: false,\n      paddingRight: theme.direction === \"rtl\" ? \"0 !important\" : undefined\n    }\n  },\n  tableRow: {\n    cursor: \"pointer\"\n  },\n  tableRowHover: {\n    \"&:hover\": {\n      backgroundColor: \"rgba(0, 5, 58, 0.3)\"\n    }\n  },\n  tableCell: {\n    flexGrow: 1,\n    whiteSpace: \"nowrap\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    display: \"inline-block\",\n    color: \"white\"\n  },\n  flexColumn: {\n    flex: 1,\n    alignItems: \"center\"\n  },\n  noClick: {\n    cursor: \"initial\"\n  },\n  ...colorCoding\n});\n\nclass MuiVirtualizedTable extends React.PureComponent {\n  static defaultProps = {\n    headerHeight: 48,\n    rowHeight: 48\n  };\n\n  getRowClassName = ({ index }) => {\n    const { classes, onRowClick, data } = this.props;\n    const rowData = data[index];\n    return clsx(\n      classes.tableRow,\n      classes.flexContainer,\n      index !== -1 && classes[rowData.level],\n      {\n        [classes.tableRowHover]: index !== -1 && onRowClick != null\n      }\n    );\n  };\n\n  cellRenderer = render => ({ cellData, columnIndex }) => {\n    const { columns, classes, rowHeight, onRowClick } = this.props;\n    return (\n      <TableCell\n        component=\"div\"\n        className={clsx(classes.tableCell, classes.flexContainer, {\n          [classes.noClick]: onRowClick == null\n        })}\n        variant=\"body\"\n        style={{ height: rowHeight }}\n        align={\n          (columnIndex != null && columns[columnIndex].numeric) || false\n            ? \"right\"\n            : \"left\"\n        }\n      >\n        {render ? render(cellData) : cellData}\n      </TableCell>\n    );\n  };\n\n  headerRenderer = ({ label, columnIndex }) => {\n    const { headerHeight, columns, classes } = this.props;\n\n    return (\n      <TableCell\n        component=\"div\"\n        className={clsx(\n          classes.tableCell,\n          classes.flexContainer,\n          classes.noClick\n        )}\n        variant=\"head\"\n        style={{ height: headerHeight }}\n        align={columns[columnIndex].numeric || false ? \"right\" : \"left\"}\n      >\n        <span>{label}</span>\n      </TableCell>\n    );\n  };\n\n  render() {\n    const {\n      classes,\n      columns,\n      rowHeight,\n      headerHeight,\n      onRowClick,\n      ...tableProps\n    } = this.props;\n    return (\n      <AutoSizer>\n        {({ height, width }) => (\n          <Table\n            height={height}\n            width={width}\n            onRowClick={onRowClick}\n            rowHeight={rowHeight}\n            gridStyle={{\n              direction: \"inherit\"\n            }}\n            headerHeight={headerHeight}\n            className={classes.table}\n            {...tableProps}\n            rowClassName={this.getRowClassName}\n          >\n            {columns.map(({ dataKey, render, ...other }, index) => {\n              return (\n                <Column\n                  key={dataKey}\n                  headerRenderer={headerProps => {\n                    return this.headerRenderer({\n                      ...headerProps,\n                      columnIndex: index\n                    });\n                  }}\n                  flexGrow={dataKey === \"message\" ? 1 : undefined}\n                  className={classes.flexContainer}\n                  cellRenderer={this.cellRenderer(render)}\n                  dataKey={dataKey}\n                  {...other}\n                />\n              );\n            })}\n          </Table>\n        )}\n      </AutoSizer>\n    );\n  }\n}\n\nMuiVirtualizedTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n  columns: PropTypes.arrayOf(\n    PropTypes.shape({\n      dataKey: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      numeric: PropTypes.bool,\n      width: PropTypes.number.isRequired\n    })\n  ).isRequired,\n  headerHeight: PropTypes.number,\n  onRowClick: PropTypes.func,\n  rowHeight: PropTypes.number\n};\n\nconst VirtualizedTable = withStyles(styles)(MuiVirtualizedTable);\n\nexport default function LogsTable(props) {\n  return (\n    <VirtualizedTable\n      rowCount={props.logsData.length}\n      rowGetter={({ index }) => props.logsData[index]}\n      data={props.logsData}\n      columns={props.columns.map(elem => props.columnList[elem])}\n      onRowClick={props.onRowClick}\n    />\n  );\n}\n\nLogsTable.propTypes = {\n  columns: PropTypes.array,\n  columnList: PropTypes.object,\n  logsData: PropTypes.array,\n  height: PropTypes.number,\n  onRowClick: PropTypes.func\n};\n\nLogsTable.defaultProps = {\n  columns: [],\n  columnList: {},\n  logsData: [],\n  height: 10\n};\n","import React, { Component, createRef } from \"react\";\nimport LogsFilterBar from \"./LogsFilterBar/LogsFilterBar\";\nimport \"./Logs.css\";\nimport { MasterDB } from \"mov-fe-lib-core\";\nimport RobotLogModal from \"../Modal/RobotLogModal\";\nimport {\n  getRequestLevels,\n  getRequestTags,\n  getRequestMessage,\n  filterByFromToDates,\n  findsUniqueKey,\n  getJustDateFromServer,\n  getJustTimeFromServer\n} from \"./utils/Utils\";\nimport LogsTable from \"./LogsTable/LogsTable\";\nimport _isEqual from \"lodash/isEqual\";\nimport PropTypes from \"prop-types\";\n\nconst UI_TAG = { key: 0, label: \"ui\" };\n\nclass Logs extends Component {\n  state = {\n    selectedRobots: [],\n    levels: [\"INFO\", \"ERROR\"],\n    limit: 50,\n    logsData: [],\n    messageRegex: \"\",\n    selectedFromDate: null,\n    selectedToDate: null,\n    columns: [\"Time\", \"Robot\", \"Message\"],\n    tags: this.props.advancedMode ? [] : [UI_TAG],\n    height: 0, //LogsTable height\n    levelsList: this.props.advancedMode\n      ? [\n          { value: \"INFO\", label: \"Info\" },\n          { value: \"WARNING\", label: \"Warnings\" },\n          { value: \"DEBUG\", label: \"Debug\" },\n          { value: \"ERROR\", label: \"Error\" },\n          { value: \"CRITICAL\", label: \"Critical\" }\n        ]\n      : [\n          { value: \"INFO\", label: \"Robot Status\" },\n          { value: \"ERROR\", label: \"Alerts\" }\n        ],\n    advancedMode: this.props.advancedMode\n  };\n  logsTimeout = undefined;\n  logModal = createRef();\n\n  simpleLevelsList = [\n    { value: \"INFO\", label: \"Robot Status\" },\n    { value: \"ERROR\", label: \"Alerts\" }\n  ];\n\n  advancedLevelsList = [\n    { value: \"INFO\", label: \"Info\" },\n    { value: \"WARNING\", label: \"Warnings\" },\n    { value: \"DEBUG\", label: \"Debug\" },\n    { value: \"ERROR\", label: \"Error\" },\n    { value: \"CRITICAL\", label: \"Critical\" }\n  ];\n\n  resizeHandler() {\n    const height = this.divElement.clientHeight;\n    this.setState({ height });\n  }\n\n  componentDidMount() {\n    this.updateSelectedRobots();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (_isEqual(prevProps.robotsData, this.props.robotsData)) return;\n    this.updateSelectedRobots();\n  }\n\n  updateSelectedRobots = () => {\n    if (\n      this.props.robotsData.length &&\n      this.props.robotsData.filter(robot => robot.ip).length\n    )\n      this.setSelectedRobots(\n        this.props.robotsData.map(elem => ({ ...elem, isSelected: true }))\n      );\n  };\n\n  componentWillUnmount() {\n    if (this.logsTimeout) {\n      clearTimeout(this.logsTimeout);\n    }\n  }\n\n  // This function is responsible to check/unckeck the list of robots\n  updateRobotSelection = robotId => {\n    const selectedRobots = [...this.state.selectedRobots];\n    const updateRobot =\n      selectedRobots[selectedRobots.findIndex(elem => elem.id === robotId)];\n    updateRobot.isSelected = !updateRobot.isSelected;\n    this.setState({ selectedRobots });\n  };\n\n  setSelectedRobots = selectedRobots => {\n    clearTimeout(this.logsTimeout);\n    this.setState({ selectedRobots });\n    this.getLogs(selectedRobots);\n  };\n\n  getLogs = async robots => {\n    await Promise.all(\n      robots\n        .filter(robot => robot.robotState !== this.props.robotStates.off) // If robot is offline doesn't bother making the request\n        .filter(robot => robot.isSelected)\n        .map(robot => this.getRobotLogData(robot))\n    ).then(dataArrays => {\n      this.setState(prevState => {\n        const finalArray = dataArrays.reduce((all, dataArray) => {\n          dataArray && dataArray.forEach(data => all.push(data));\n          return all;\n        }, []);\n        this.logsTimeout = setTimeout(\n          this.getLogs,\n          3000,\n          prevState.selectedRobots\n        );\n        return { logsData: finalArray.sort((a, b) => b.time - a.time) };\n      });\n    });\n  };\n\n  getRobotLogData = robotSelected => {\n    return new Promise((re, rej) => {\n      // Failsafe timer to prevent the promise all from hanging\n      const timeoutHandle = setTimeout(() => {\n        console.error(\"MOV.AI: One of the promises reached timeout\");\n        re([]);\n      }, 2000);\n\n      if (robotSelected.ip) {\n        const dynamicURL = `http://${\n          robotSelected.ip\n        }/api/v1/logs/?${getRequestLevels(\n          this.state.levels,\n          this.state.levelsList\n        )}&limit=${this.state.limit}${getRequestTags(\n          this.state.tags\n        )}${getRequestMessage(this.state.messageRegex)}`;\n\n        MasterDB.get(dynamicURL, (res, e) => {\n          re(res?.data || []);\n          clearTimeout(timeoutHandle);\n        });\n      } else {\n        re([]);\n      }\n    }).catch(() => console.log(\"Failed getRobotLogData\"));\n  };\n\n  onRowClick = log => {\n    this.logModal.current.open(log.rowData);\n  };\n\n  render() {\n    return (\n      <div\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          display: \"flex\",\n          flexDirection: \"column\"\n        }}\n      >\n        <div\n          style={{\n            flexGrow: \"1\",\n            height: \"100%\",\n            display: \"flex\",\n            flexDirection: \"column\"\n          }}\n        >\n          <LogsFilterBar\n            selectedRobots={this.state.selectedRobots}\n            updateRobotSelection={this.updateRobotSelection}\n            levels={this.state.levels}\n            levelsList={this.state.levelsList}\n            handleLevels={event => {\n              this.setState({ levels: event.target.value });\n            }}\n            limit={this.state.limit}\n            handleLimit={evt => {\n              if (evt.target.value === \"\") {\n                this.setState({ limit: 0 });\n              } else {\n                this.setState({ limit: evt.target.value });\n              }\n            }}\n            columns={this.state.columns}\n            columnList={this.props.columnList}\n            handleColumns={event => {\n              // make sure columns are always with the same order\n              const columns = Object.keys(this.props.columnList).filter(elem =>\n                event.target.value.includes(elem)\n              );\n              this.setState({ columns });\n            }}\n            tags={this.state.tags}\n            handleAddTag={tagText => {\n              const { tags } = this.state;\n              // Don't add tag if it's empty or duplicate\n              if (\n                tagText !== \"\" &&\n                tags.findIndex(elem => elem.label === tagText) < 0\n              ) {\n                tags.push({\n                  key: findsUniqueKey(tags, \"key\"),\n                  label: tagText\n                });\n                this.setState({ tags });\n              }\n            }}\n            handleDeleteTag={tagToDelete => {\n              const { tags } = this.state;\n              const filteredTags = tags.filter(\n                tag => tag.key !== tagToDelete.key\n              );\n              this.setState({ tags: filteredTags });\n            }}\n            messageRegex={this.state.messageRegex}\n            handleMessageRegex={text => this.setState({ messageRegex: text })}\n            selectedFromDate={this.state.selectedFromDate}\n            selectedToDate={this.state.selectedToDate}\n            handleDateChange={(newDate, keyToChange) => {\n              this.setState({ [keyToChange]: newDate });\n            }}\n            advancedMode={this.state.advancedMode}\n            handleAdvancedMode={evt => {\n              // Toggle advanced mode: change the levels\n              const advancedMode = !this.state.advancedMode;\n              this.setState({\n                advancedMode: advancedMode,\n                levelsList: this.state.advancedMode\n                  ? this.simpleLevelsList\n                  : this.advancedLevelsList,\n                tags: advancedMode ? [] : [UI_TAG]\n              });\n            }}\n          ></LogsFilterBar>\n          <div\n            ref={divElement => {\n              this.divElement = divElement;\n            }}\n            style={{\n              flexGrow: 1,\n              overflowY: \"auto\",\n              minHeight: 0,\n              height: \"1px\"\n            }}\n          >\n            <LogsTable\n              columns={this.state.columns}\n              columnList={this.props.columnList}\n              logsData={filterByFromToDates(\n                this.state.logsData,\n                this.state.selectedFromDate,\n                this.state.selectedToDate\n              )}\n              height={this.state.height}\n              levelsList={this.state.levelsList}\n              onRowClick={this.onRowClick}\n            ></LogsTable>\n          </div>\n        </div>\n        <RobotLogModal\n          ref={this.logModal}\n          props={[\"module\", \"service\"]}\n        ></RobotLogModal>\n      </div>\n    );\n  }\n}\n\nLogs.propTypes = {\n  robotsData: PropTypes.array,\n  robotStates: PropTypes.object,\n  columnList: PropTypes.object,\n  advancedMode: PropTypes.bool\n};\nLogs.defaultProps = {\n  robotsData: [\n    {\n      name: \"robot\",\n      id: \"032cf6207ff34ad0a68cc45034f61b41\",\n      timestamp: 1604334778.6494586,\n      robotState: \"okay\",\n      battery: 78,\n      ip: \"127.0.0.1\"\n    },\n    {\n      name: \"robot_test\",\n      id: \"4df900e30cb44adba33ae74bb2596d88\",\n      timestamp: 1603969723.997914,\n      robotState: \"off\",\n      battery: 22,\n      ip: \"127.0.0.1\"\n    }\n  ],\n  robotStates: {\n    error: \"error\",\n    temp: \"temp\",\n    okay: \"okay\",\n    off: \"off\"\n  },\n  columnList: {\n    Date: {\n      label: \"Date\",\n      dataKey: \"time\",\n      width: 100,\n      render: time => getJustDateFromServer(time)\n    },\n    Time: {\n      label: \"Time\",\n      dataKey: \"time\",\n      width: 100,\n      render: time => getJustTimeFromServer(time)\n    },\n    Level: {\n      label: \"Level\",\n      dataKey: \"level\",\n      width: 100\n    },\n    Module: {\n      label: \"Module\",\n      dataKey: \"module\",\n      width: 100\n    },\n    Robot: {\n      label: \"Robot\",\n      dataKey: \"robot\",\n      width: 100\n    },\n    Message: {\n      label: \"Message\",\n      dataKey: \"message\",\n      width: 100\n    }\n  },\n  advancedMode: false\n};\n\nexport default Logs;\n","import React, { Component } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport defaultLogo from \"./movai_red.svg\";\nimport Paper from \"@material-ui/core/Paper\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Authentication } from \"mov-fe-lib-core\";\nimport PropTypes from \"prop-types\";\n\nconst styles = theme => ({\n  root: {\n    padding: theme.spacing(4, 4),\n    borderRadius: 10\n  }\n});\n\nclass LoginForm extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    remember: false,\n    error: false,\n    errorMessage: \"\",\n    capsLockOn: false\n  };\n\n  sendCreds = async () => {\n    try {\n      const apiResponse = await Authentication.login(\n        this.state.username,\n        this.state.password,\n        this.state.remember\n      );\n      // If successfully logged in\n      if (!apiResponse.error) {\n        this.props.setLoggedIn(true);\n      } else {\n        // Show the error in red\n        this.setState({\n          error: true,\n          errorMessage: apiResponse.error\n        });\n      }\n    } catch (e) {\n      this.setState({\n        error: true,\n        errorMessage: e\n      });\n    }\n  };\n\n  checkCapsLock = event => {\n    if (event.key === \"CapsLock\" && this.state.capsLockOn)\n      this.setState({ capsLockOn: false });\n    else {\n      const capsLock = event.getModifierState(\"CapsLock\");\n      this.setState({ capsLockOn: capsLock });\n    }\n  };\n\n  render() {\n    const { classes, logo } = this.props;\n\n    return (\n      <Grid\n        style={{ paddingTop: \"5%\" }}\n        container\n        direction=\"column\"\n        alignItems=\"center\"\n        justify=\"space-evenly\"\n      >\n        <Paper elevation={10} className={classes.root}>\n          <Grid item>\n            <img\n              src={logo ? logo : defaultLogo}\n              className=\"center\"\n              alt=\"logo\"\n              style={{\n                display: \"block\",\n                marginLeft: \"auto\",\n                marginRight: \"auto\",\n                width: \"50%\"\n              }}\n            />\n          </Grid>\n          <Grid>\n            <Typography align=\"center\" variant=\"subtitle1\" gutterBottom>\n              <FormControl\n                className={classes.formControl}\n                error={this.state.error}\n              >\n                <InputLabel htmlFor=\"component-username-error\">\n                  Username\n                </InputLabel>\n                <Input\n                  id=\"component-username-error\"\n                  value={this.state.username}\n                  aria-describedby=\"component-username-error-text\"\n                  onChange={event =>\n                    this.setState({ username: event.target.value })\n                  }\n                />\n              </FormControl>\n            </Typography>\n          </Grid>\n          <Grid>\n            <Typography align=\"center\" variant=\"subtitle1\" gutterBottom>\n              <FormControl\n                className={classes.formControl}\n                error={this.state.error}\n              >\n                <InputLabel htmlFor=\"component-password-error\">\n                  Password\n                </InputLabel>\n                <Input\n                  id=\"component-password-error\"\n                  type=\"password\"\n                  value={this.state.password}\n                  aria-describedby=\"component-password-error-text\"\n                  onChange={event =>\n                    this.setState({ password: event.target.value })\n                  }\n                  onKeyUp={event => {\n                    this.checkCapsLock(event);\n                    if (event.key === \"Enter\") {\n                      this.sendCreds();\n                    }\n                  }}\n                />\n                {this.state.error && (\n                  <FormHelperText id=\"component-error-text\">\n                    {this.state.errorMessage}\n                  </FormHelperText>\n                )}\n                {this.state.capsLockOn && (\n                  <FormHelperText id=\"component-warning-text\">\n                    Warning: Caps lock is ON!\n                  </FormHelperText>\n                )}\n              </FormControl>\n            </Typography>\n          </Grid>\n          <Grid>\n            <Typography align=\"center\" gutterBottom>\n              <Button onClick={() => this.sendCreds()}>Login</Button>\n            </Typography>\n          </Grid>\n        </Paper>\n      </Grid>\n    );\n  }\n}\n\nLoginForm.propTypes = {\n  logs: PropTypes.any, // expects a svg element\n  setLoggedIn: PropTypes.func\n};\n\nLoginForm.defaultProps = {\n  setLoggedIn: loggedIn => console.log(loggedIn)\n};\n\nexport default withStyles(styles, { withTheme: true })(LoginForm);\n","import React from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport PropTypes from \"prop-types\";\nimport Toggle from \"./Toggle\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => {\n  return {\n    menuItemSpacing: {\n      fontSize: \"18px\",\n      minHeight: \"18px\",\n      padding: theme.spacing(1.25, 2),\n      ...theme.cursorDefault\n    },\n    profileMenuFooter: {\n      fontSize: \"14px\",\n      textAlign: \"end\"\n    }\n  };\n});\n\nconst ProfileMenu = props => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <IconButton\n        aria-controls=\"simple-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n      >\n        <SettingsIcon />\n      </IconButton>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <Typography component=\"div\" variant=\"body1\">\n          <div className={classes.menuItemSpacing}>\n            {props.welcomeLabel}, {props.userName}\n          </div>\n          <Divider variant=\"middle\" />\n          {props.extraItems?.map(item => (\n            <MenuItem\n              className={classes.menuItemSpacing}\n              onClick={() => item.func}\n            >\n              {item.label}\n            </MenuItem>\n          ))}\n          <div className={classes.menuItemSpacing}>\n            {props.darkThemeLabel}\n            <Toggle\n              onToggle={() => props.handleToggleTheme()}\n              toggle={props.isDarkTheme}\n            ></Toggle>\n          </div>\n          <MenuItem\n            className={(classes.menuItemSpacing, classes.cursorPointer)}\n            onClick={props.handleLogout}\n          >\n            {props.logoutLabel}\n          </MenuItem>\n          <Divider variant=\"middle\" />\n          <div\n            className={\n              classes.menuItemSpacing + \" \" + classes.profileMenuFooter\n            }\n          >\n            {props.version}\n          </div>\n        </Typography>\n      </Menu>\n    </div>\n  );\n};\nProfileMenu.propTypes = {\n  welcomeLabel: PropTypes.string,\n  userName: PropTypes.string,\n  darkThemeLabel: PropTypes.string,\n  logoutLabel: PropTypes.string,\n  version: PropTypes.string,\n  extraItems: PropTypes.array,\n  isDarkTheme: PropTypes.bool,\n  handleLogout: PropTypes.func,\n  handleToggleTheme: PropTypes.func\n};\n\nProfileMenu.defaultProps = {\n  welcomeLabel: \"Hello\",\n  userName: \"User\",\n  darkThemeLabel: \"Dark Theme\",\n  logoutLabel: \"Logout\",\n  version: \"\",\n  extraItems: [],\n  isDarkTheme: true,\n  handleLogout: () => console.log(\"logout\"),\n  handleToggleTheme: () => console.log(\"toggle\")\n};\n\nexport default ProfileMenu;\n","import React, { Component } from \"react\";\nimport {\n  List,\n  InputBase,\n  IconButton,\n  Typography,\n  Divider,\n  ListItem\n} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\n\nclass TreeSearch extends Component {\n  searchInput = null;\n  timer = null;\n  inputRef = React.createRef();\n\n  handleChange = evt => {\n    this.searchInput = evt.target.value;\n    if (this.timer) {\n      clearTimeout(this.timer);\n    }\n    this.timer = setTimeout(this.handleSearch, 250);\n  };\n\n  handleSearch = () => {\n    if (this.searchInput !== null) this.props.search(this.searchInput);\n  };\n\n  resetValue() {\n    const input = this.inputRef.current.children[0];\n    input.value = \"\";\n    input.focus();\n    this.searchInput = \"\";\n    this.handleSearch();\n    this.forceUpdate();\n  }\n\n  isEmpty() {\n    return this.searchInput === null || this.searchInput.trim() === \"\";\n  }\n\n  render() {\n    return (\n      <Typography\n        component=\"div\"\n        style={{\n          padding: \"2px 4px\",\n          display: \"flex\",\n          alignItems: \"center\",\n          width: \"100%\"\n        }}\n      >\n        <InputBase\n          ref={this.inputRef}\n          style={{\n            marginLeft: 10,\n            flex: 1\n          }}\n          placeholder=\"Search\"\n          onChange={this.handleChange}\n        />\n        <IconButton\n          style={{ padding: 10 }}\n          onClick={() => {\n            if (!this.isEmpty()) {\n              this.resetValue();\n            }\n          }}\n        >\n          {this.isEmpty() ? <SearchIcon /> : <ClearIcon />}\n        </IconButton>\n      </Typography>\n    );\n  }\n}\n\n/**\n *\n * @param {*} props: contains children which are Items\n */\nconst ListItemsTree = props => {\n  return (\n    <List\n      style={{ paddingLeft: \"0px\", paddingRight: \"0px\", ...props.style }}\n      dense={true}\n      component=\"div\"\n      onKeyUp={props.onKeyUp}\n    >\n      {props.children}\n    </List>\n  );\n};\n\nconst ListItemsTreeWithTitle = props => {\n  return (\n    <ListItemsTree>\n      <ListItem>\n        <Typography component={props.variant}>{props.title}</Typography>\n      </ListItem>\n      <Divider />\n      {props.children}\n    </ListItemsTree>\n  );\n};\n/* \n  TODO: think about how to generalize the search\n\n  Using either the _shared/Search method or using a predicate \n*/\nconst ListItemsTreeWithSearch = props => {\n  return (\n    <ListItemsTree\n      style={{ flexGrow: 1, paddingBottom: \"0px\", paddingTop: \"0px\" }}\n      onKeyUp={props.onKeyUp}\n    >\n      <ListItem>\n        <TreeSearch search={input => props.onSearch(input)} />\n      </ListItem>\n      <Divider />\n      <Typography style={props.style} component=\"div\">\n        {React.Children.map(props.children, x => {\n          return x;\n        })}\n      </Typography>\n    </ListItemsTree>\n  );\n};\n\nListItemsTreeWithSearch.propTypes = {\n  onSearch: PropTypes.func\n};\n\nListItemsTreeWithSearch.defaultProps = {\n  onSearch: input => console.log(input)\n};\n\nexport { ListItemsTree, ListItemsTreeWithSearch, ListItemsTreeWithTitle };\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Tree from \"react-virtualized-tree\";\nimport \"material-icons/css/material-icons.css\";\nimport \"react-virtualized/styles.css\";\nimport \"react-virtualized-tree/lib/main.css\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport _get from \"lodash/get\";\nimport { ListItemsTreeWithSearch } from \"./TreeSearch\";\n\n//========================================================================================\n/*                                                                                      *\n *                                     TODO REFACTOR                                    *\n *                                                                                      */\n//========================================================================================\n\nconst styles = theme => ({\n  horizFlex: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  spaceBetween: {\n    display: \"flex\",\n    width: \"100%\",\n    justifyContent: \"space-between\"\n  },\n  preContainer: {\n    justifyContent: \"space-between\",\n    \"& button\": {\n      display: \"none\"\n    },\n    \"&:hover\": {\n      backgroundColor: \"rgba(54,181,230, 0.15)\",\n      \"& button\": {\n        display: \"inline-flex\"\n      }\n    }\n  },\n  ellipsis: {\n    whiteSpace: \"nowrap\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    flex: 2\n  },\n  iconSpace: {\n    flex: 1,\n    textAlign: \"right\",\n    minWidth: \"45px\",\n    \"& button\": {\n      position: \"relative\",\n      bottom: \"7px\",\n      padding: \"7px\"\n    }\n  }\n});\n\n// const {Deletable, Expandable, Favorite} = Renderers;\n\nconst testArray = [];\n\nfor (let index = 0; index < 100; index++) {\n  testArray.push({\n    id: index,\n    name: `1.0.${index}`\n  });\n}\n\nconst EXPANDED = \"EXPANDED\";\n\nclass BasicVirtualizedTree extends Component {\n  state = {\n    selectedGroup: EXPANDED,\n    groupsEnabled: true,\n    searchValue: \"\"\n  };\n\n  searchFilter = (nodes, searchValue) => {\n    const searchValueLower = searchValue.toLowerCase();\n    const filteredNodes = nodes\n      .filter(\n        node =>\n          (!node.name.includes(\"@SM\") &&\n            node.name.toLowerCase().includes(searchValueLower)) ||\n          node.children.findIndex(ch =>\n            ch.name.toLowerCase().includes(searchValueLower)\n          ) >= 0\n      )\n      .map(node => {\n        return {\n          ...node,\n          children: (node?.children || []).filter(\n            ch =>\n              ch.name &&\n              !ch.name.includes(\"@SM\") &&\n              (node.name.toLowerCase().includes(searchValueLower) ||\n                ch.name.toLowerCase().includes(searchValueLower))\n          )\n        };\n      });\n\n    // Add children id if missing\n    filteredNodes.forEach(node => {\n      node.children.forEach((child, i) => {\n        child.id = child.id ? child.id : i;\n        if (child.children) {\n          child.children.forEach((grandChild, j) => {\n            grandChild.id = grandChild.id ? grandChild.id : j;\n          });\n        }\n      });\n    });\n\n    return filteredNodes;\n  };\n\n  handleSelectedGroupChange = selectedGroup => {\n    this.setState({ selectedGroup });\n  };\n\n  // open: true -> expand\n  //       false -> collapse\n  handleExpansion = (evt, nodes, node, open) => {\n    // const treeData = _cloneDeep(nodes);\n    // _set(treeData, [node.id, \"state\"], {\n    //   expanded: open\n    // });\n    // evt.stopPropagation();\n    // this.props.handleChange(treeData);\n  };\n\n  render() {\n    const { classes } = this.props;\n    const iconStyle = <i className=\"fas fa-home\" />;\n    const nodes = this.props.data;\n    return (\n      <div>\n        <ListItemsTreeWithSearch\n          style={{\n            overflow: \"auto\"\n          }}\n          icon={iconStyle}\n          onSearch={input => {\n            this.setState({\n              searchValue: input\n            });\n          }}\n        >\n          <div style={{ height: this.props.height }}>\n            <Tree\n              nodes={this.searchFilter(nodes, this.state.searchValue)}\n              onChange={this.props.handleChange}\n            >\n              {({ style, node, ...rest }) => {\n                // Adjust tree indentation\n                style.paddingLeft = style.marginLeft / 1.5;\n                style.marginLeft = 0;\n                // Render tree element\n                return (\n                  <div\n                    style={style}\n                    onClick={() => this.props.onClickNode(node)}\n                    onDoubleClick={() => this.props.onDoubleClickNode(node)}\n                    p={2}\n                    className={\n                      !_get(node, `children`, false) ? classes.preContainer : \"\"\n                    }\n                  >\n                    <Box p={1} className={classes.inlineFlex}>\n                      <Grid alignContent={\"space-between\"} container>\n                        {_get(node, `children`, false) &&\n                          node.state?.expanded && (\n                            <ExpandMoreIcon\n                              onClick={evt =>\n                                this.handleExpansion(evt, nodes, node, false)\n                              }\n                            />\n                          )}\n                        {_get(node, `children`, false) &&\n                          !node.state?.expanded && (\n                            <ChevronRightIcon\n                              onClick={evt =>\n                                this.handleExpansion(evt, nodes, node, true)\n                              }\n                            />\n                          )}\n\n                        <div\n                          className={\n                            !_get(node, `children`, false)\n                              ? classes.spaceBetween\n                              : \"\"\n                          }\n                        >\n                          <div className={classes.ellipsis}>{node.name}</div>\n                        </div>\n                      </Grid>\n                    </Box>\n                  </div>\n                );\n              }}\n            </Tree>\n          </div>\n        </ListItemsTreeWithSearch>\n      </div>\n    );\n  }\n}\n\nBasicVirtualizedTree.propTypes = {\n  data: PropTypes.array,\n  onClickNode: PropTypes.func,\n  onDoubleClickNode: PropTypes.func,\n  handleChange: PropTypes.func,\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\n\nBasicVirtualizedTree.defaultProps = {\n  data: [],\n  onClickNode: () => {},\n  onDoubleClickNode: () => {},\n  handleChange: () => {},\n  height: 700\n};\n\nexport default withStyles(styles, { withTheme: true })(BasicVirtualizedTree);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _set from \"lodash/set\";\nimport _get from \"lodash/get\";\nimport _cloneDeep from \"lodash/cloneDeep\";\nimport {\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Select,\n  Typography\n} from \"@material-ui/core\";\nimport { Workspace } from \"mov-fe-lib-core\";\nimport BasicVirtualizedTree from \"../Tree/BasicVirtualizedTree\";\nimport AbstractModal from \"./AbstractModal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\n//========================================================================================\n/*                                                                                      *\n *                                    TEMPORARY CODE                                    *\n *                                                                                      */\n//========================================================================================\n\nconst SelectScopeModal = props => {\n  const initialData = [\n    {\n      id: 0,\n      name: \"Annotations\",\n      scope: \"Annotation\",\n      children: []\n    },\n    {\n      id: 1,\n      name: \"Callback\",\n      scope: \"Callback\",\n      children: []\n    },\n    {\n      id: 2,\n      name: \"Configuration\",\n      scope: \"Configuration\",\n      children: []\n    },\n    {\n      id: 3,\n      name: \"Flow\",\n      scope: \"Flow\",\n      children: []\n    },\n    {\n      id: 4,\n      name: \"Nodes\",\n      scope: \"Node\",\n      children: []\n    },\n    {\n      id: 5,\n      name: \"Layouts\",\n      scope: \"Layout\",\n      children: []\n    },\n    {\n      id: 6,\n      name: \"Scenes\",\n      scope: \"GraphicScene\",\n      children: []\n    }\n  ];\n\n  const [data, setData] = React.useState(initialData);\n  const [selectedWorkspace, setSelectedWorkspace] = React.useState(\"global\");\n  const [selectedScopeItem, setSelectedScopeItem] = React.useState(\n    props.selected\n  );\n  const [workSpaceList, setWorkSpaceList] = React.useState({});\n  const [isLoading, setIsLoading] = React.useState(true);\n  let firstTime = true; // this is to avoid repeating getAllData() which is a costly operation\n\n  const scopeFilteredData = initialData.filter(elem =>\n    props.scopeList.includes(elem.scope)\n  );\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  React.useEffect(() => {\n    // Only fetch information the first time the modal is opened\n    if (firstTime) {\n      //get list of workspace\n      Workspace.getAll()\n        .then(response => setWorkSpaceList(response))\n        .catch(error => console.log(error));\n\n      // get all information in the scopes (not filtered by message)\n      getAllData(selectedWorkspace);\n      firstTime = false;\n    }\n\n    //Unmount\n    return () => {};\n  }, [props.scopeList]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  const changeWorkspace = evt => {\n    // Update the selector\n    setSelectedWorkspace(evt.target.value);\n\n    // When you switch workspaces reset Data\n    getAllData(evt.target.value);\n    setIsLoading(true);\n  };\n\n  const getAllData = workspace => {\n    const dataToSet = _cloneDeep(scopeFilteredData);\n\n    dataToSet.forEach((element, index) => {\n      // Get all scope items\n      Workspace.getDocs({ workspace: workspace, scope: element.scope })\n        .then(response => {\n          let sortedScopeItems = response.scopes\n            .sort((a, b) => a.ref.toLowerCase() > b.ref.toLowerCase())\n            .map((elem, i) => {\n              return {\n                id: i,\n                url: elem.url,\n                name: elem.ref,\n                children: [{ name: \"\" }]\n              };\n            });\n\n          if (workspace === \"global\") {\n            sortedScopeItems = sortedScopeItems.filter((elem, index) => {\n              return props.filter(elem, index);\n            });\n          }\n\n          dataToSet[index].children = sortedScopeItems;\n          setData(dataToSet);\n          setIsLoading(false);\n        })\n        .catch(error => console.error(error));\n    });\n  };\n\n  const requestScopeVersions = node => {\n    const dataToSet = _cloneDeep(data);\n    const mapObj = {\n      0: () => {\n        const indexToSet = dataToSet.findIndex(elem => elem.id === node.id);\n\n        // Toggle the expansion of the panel\n        const isExpanded = _get(\n          dataToSet,\n          [indexToSet, \"state\", \"expanded\"],\n          false\n        );\n        _set(dataToSet, [indexToSet, \"state\"], {\n          expanded: !isExpanded\n        });\n\n        setData(dataToSet);\n      },\n      1: () => {\n        // second level, ask for versions (versions of scope items)\n\n        // find index of selected node in first level\n        const indexToSet = dataToSet.findIndex(\n          elem => elem.id === node.parents[0]\n        );\n\n        Workspace.getDocs({\n          workspace: selectedWorkspace,\n          scope: dataToSet[indexToSet].scope,\n          id: node.name\n        })\n          .then(response => {\n            // Tailor data Data comes with \"ref\" key but we want \"name\"\n            const versionList = response.versions.map((elem, index) => {\n              return {\n                url: elem.url,\n                name: elem.tag,\n                id: index\n              };\n            });\n\n            // find index of selected node in the second level\n            const index2ndLevel = dataToSet[indexToSet].children.findIndex(\n              elem => elem.id === node.id\n            );\n\n            // Toggle the expansion of the panel\n            const isExpanded = _get(\n              dataToSet,\n              [indexToSet, \"children\", index2ndLevel, \"state\", \"expanded\"],\n              false\n            );\n            _set(dataToSet, [indexToSet, \"children\", index2ndLevel, \"state\"], {\n              expanded: !isExpanded\n            });\n\n            // Set version list into the Tree\n            _set(\n              dataToSet,\n              [indexToSet, \"children\", index2ndLevel, \"children\"],\n              versionList\n            );\n            setData(dataToSet);\n          })\n          .catch(error => console.error(error));\n      },\n      2: () => {\n        // Display the selected option\n        setSelectedScopeItem(`${node.url}`);\n      }\n    };\n    _get(mapObj, node.deepness, () => {})();\n  };\n\n  const confirmNodeSelection = node => {\n    // Display the selected option and confirm selection\n    if (selectedWorkspace !== \"global\" && node.deepness <= 1) return;\n    setSelectedScopeItem(node.url);\n    props.onSubmit(node.url);\n  };\n\n  const getModalTitle = scope => {\n    const vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    const pronoun = vowels.includes(scope[0].toLowerCase()) ? \"an\" : \"a\";\n    return `Select ${pronoun} ${scope}`;\n  };\n\n  return (\n    <AbstractModal\n      onSubmit={() => props.onSubmit(selectedScopeItem)}\n      onCancel={props.onCancel}\n      open={props.open}\n      title={getModalTitle(props.scopeList[0])}\n      width=\"50%\"\n      // ioports\n      // height=\"70%\"\n    >\n      <Grid container>\n        <Grid\n          item\n          xs={12}\n          style={{\n            textAlign: \"center\",\n            paddingBottom: \"6px\",\n            paddingTop: \"10px\"\n          }}\n        >\n          <FormControl style={{ width: \"50%\" }}>\n            <InputLabel>Workspace</InputLabel>\n            <Select\n              value={selectedWorkspace}\n              // shared\n              // defaultValue=\"\"\n              onChange={changeWorkspace}\n            >\n              {/* shared  */}\n              {Object.keys(workSpaceList).map((key, index) => (\n                <MenuItem key={index} value={key}>\n                  {workSpaceList[key].label}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Typography\n          component=\"div\"\n          style={{\n            overflowY: \"auto\",\n            overflowX: \"hidden\",\n            justifyContent: \"center\",\n            width: \"100%\"\n          }}\n        >\n          {isLoading ? (\n            <Backdrop\n              style={{\n                position: \"relative\",\n                height: \"50vh\",\n                width: \"inherit\",\n                color: \"#fff\",\n                zIndex: 99999\n              }}\n              open={isLoading}\n            >\n              <CircularProgress color=\"inherit\" />\n            </Backdrop>\n          ) : (\n            <BasicVirtualizedTree\n              onClickNode={node => requestScopeVersions(node)}\n              // shared\n              onDoubleClickNode={data => confirmNodeSelection(data)}\n              data={data}\n              handleChange={nodes => setData(nodes)}\n              showIcons={false}\n              height=\"400px\"\n            ></BasicVirtualizedTree>\n          )}\n        </Typography>\n        <Grid item xs={12} style={{ textAlign: \"center\" }}>\n          <Typography label=\"Message\" value={\"selected\"} margin=\"normal\">\n            {selectedScopeItem === \"\" ? \"Nothing selected\" : selectedScopeItem}\n          </Typography>\n        </Grid>\n      </Grid>\n    </AbstractModal>\n  );\n};\n\nSelectScopeModal.propTypes = {\n  onSubmit: PropTypes.func,\n  onCancel: PropTypes.func,\n  open: PropTypes.bool,\n  scopeList: PropTypes.array,\n  message: PropTypes.string,\n  selected: PropTypes.string,\n  filter: PropTypes.func\n};\n\nSelectScopeModal.defaultProps = {\n  title: \"Insert Text here\",\n  message: \"Are you sure?\",\n  onSubmit: () => {},\n  onCancel: () => {},\n  open: false,\n  scopeList: [\"Callback\"],\n  selected: \"\",\n  filter: () => true\n};\n\nexport default SelectScopeModal;\n","import React, { useEffect } from \"react\";\nimport { MasterDB } from \"mov-fe-lib-core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Button } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n  alert: { position: \"absolute\", bottom: 0, width: \"100%\" }\n}));\n\nexport default function withOfflineValidation(Component) {\n  return function (props) {\n    const [isConnected, setConnected] = React.useState(true);\n    const [showSuccessAlert, setSuccessAlert] = React.useState(false);\n    const [validator, setValidator] = React.useState(null);\n    const [loading, setLoading] = React.useState(false);\n    const classes = useStyles();\n\n    /**\n     * Start offline validation\n     */\n    useEffect(() => {\n      const _validator = MasterDB.offlineValidation({ onOnline, onOffline });\n      setValidator(_validator);\n    }, []);\n\n    const onOnline = () => {\n      setConnected(true);\n      setSuccessAlert(true);\n      setTimeout(() => setSuccessAlert(false), 2000);\n    };\n\n    const onOffline = () => {\n      setConnected(false);\n    };\n\n    const retryConnection = () => {\n      setLoading(true);\n      validator.retryConnection().then(() => setLoading(false));\n    };\n\n    /**\n     * renders the Login form if the user is not logged in\n     */\n    return (\n      <React.Fragment>\n        <React.Fragment>\n          <Component {...props} />\n          {!isConnected && (\n            <Alert\n              className={classes.alert}\n              variant=\"filled\"\n              severity=\"error\"\n              action={\n                <Button color=\"inherit\" size=\"small\" onClick={retryConnection}>\n                  {loading ? (\n                    <CircularProgress\n                      size={20}\n                      color=\"inherit\"\n                    ></CircularProgress>\n                  ) : (\n                    \"RETRY\"\n                  )}\n                </Button>\n              }\n            >\n              Connection failed... You're now in offline mode, please wait to\n              reconnect.\n            </Alert>\n          )}\n          {isConnected && showSuccessAlert && (\n            <Alert\n              className={classes.alert}\n              variant=\"filled\"\n              severity=\"success\"\n            >\n              You're now online!\n            </Alert>\n          )}\n        </React.Fragment>\n      </React.Fragment>\n    );\n  };\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { Modal } from \"@material-ui/core\";\nimport { Authentication } from \"mov-fe-lib-core\";\nimport { LoginForm } from \"../LoginForm/LoginForm\";\nimport jwtDecode from \"jwt-decode\";\n\nexport default function withAuthentication(Component) {\n  return function (props) {\n    const RECHECK_VALID_DELAY = 2000; // milliseconds\n\n    const firstRender = useRef(true);\n\n    const [loggedIn, setLoggedIn] = useState(false);\n    const [checkLogin, setCheckLogin] = useState(0);\n\n    /**\n     * check if the user is authenticated\n     */\n    useEffect(() => {\n      async function checkLogin() {\n        return await Authentication.checkLogin();\n      }\n\n      setLoggedIn(checkLogin());\n    }, []);\n\n    /**\n     * Checks if the refresh token is still valid\n     * sets loggedIn accordingly.\n     * Setting checkLogin or loggedIn will trigger execution\n     */\n    useEffect(() => {\n      const now = Math.floor(Date.now() * 0.001);\n      const token = window.localStorage.getItem(\"movai.refreshToken\");\n\n      try {\n        // decode the token and get exp value\n        const exp = jwtDecode(token).exp || now;\n\n        // check if token expiration time is still valid\n        const expDelta = exp - now;\n        if (expDelta <= 0) {\n          throw new Error(\"Token expired\");\n        }\n\n        // check again in expire time + RECHECK_VALID_DELAY\n        setTimeout(\n          () => setCheckLogin(now),\n          expDelta * 1000 + RECHECK_VALID_DELAY\n        );\n\n        setLoggedIn(true);\n      } catch (error) {\n        // token expired or no token\n        setLoggedIn(false);\n      }\n    }, [checkLogin, loggedIn]);\n\n    /**\n     * handleLogOut - log out the user\n     */\n    const handleLogOut = () => {\n      Authentication.logout();\n    };\n\n    /**\n     * handleFirstRender - If the user is not logged in and it is the first render\n     * then show the login form without the application on the background.\n     * After the first login, the login form can be showned as a modal instead.\n     */\n    const handleFirstRender = () => {\n      firstRender.current = false;\n      return <LoginForm setLoggedIn={state => setLoggedIn(state)} />;\n    };\n\n    /**\n     * renders the Login form if the user is not logged in\n     */\n    return (\n      <React.Fragment>\n        {!loggedIn && firstRender.current ? (\n          handleFirstRender()\n        ) : (\n          <React.Fragment>\n            <Component\n              handleLogOut={handleLogOut}\n              loggedIn={loggedIn}\n              {...props}\n            />\n            <Modal open={!loggedIn}>\n              <LoginForm setLoggedIn={state => setLoggedIn(state)} />\n            </Modal>\n          </React.Fragment>\n        )}\n      </React.Fragment>\n    );\n  };\n}\n"],"sourceRoot":""}